// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: dota_usermessages.proto

package skadistats.clarity.wire.common.proto;

public final class DotaUserMessages {
  private DotaUserMessages() {}
  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistry registry) {
  }
  /**
   * Protobuf enum {@code DOTA_COMBATLOG_TYPES}
   */
  public enum DOTA_COMBATLOG_TYPES
      implements com.google.protobuf.ProtocolMessageEnum {
    /**
     * <code>DOTA_COMBATLOG_DAMAGE = 0;</code>
     */
    DOTA_COMBATLOG_DAMAGE(0, 0),
    /**
     * <code>DOTA_COMBATLOG_HEAL = 1;</code>
     */
    DOTA_COMBATLOG_HEAL(1, 1),
    /**
     * <code>DOTA_COMBATLOG_MODIFIER_ADD = 2;</code>
     */
    DOTA_COMBATLOG_MODIFIER_ADD(2, 2),
    /**
     * <code>DOTA_COMBATLOG_MODIFIER_REMOVE = 3;</code>
     */
    DOTA_COMBATLOG_MODIFIER_REMOVE(3, 3),
    /**
     * <code>DOTA_COMBATLOG_DEATH = 4;</code>
     */
    DOTA_COMBATLOG_DEATH(4, 4),
    /**
     * <code>DOTA_COMBATLOG_ABILITY = 5;</code>
     */
    DOTA_COMBATLOG_ABILITY(5, 5),
    /**
     * <code>DOTA_COMBATLOG_ITEM = 6;</code>
     */
    DOTA_COMBATLOG_ITEM(6, 6),
    /**
     * <code>DOTA_COMBATLOG_LOCATION = 7;</code>
     */
    DOTA_COMBATLOG_LOCATION(7, 7),
    /**
     * <code>DOTA_COMBATLOG_GOLD = 8;</code>
     */
    DOTA_COMBATLOG_GOLD(8, 8),
    /**
     * <code>DOTA_COMBATLOG_GAME_STATE = 9;</code>
     */
    DOTA_COMBATLOG_GAME_STATE(9, 9),
    /**
     * <code>DOTA_COMBATLOG_XP = 10;</code>
     */
    DOTA_COMBATLOG_XP(10, 10),
    /**
     * <code>DOTA_COMBATLOG_PURCHASE = 11;</code>
     */
    DOTA_COMBATLOG_PURCHASE(11, 11),
    /**
     * <code>DOTA_COMBATLOG_BUYBACK = 12;</code>
     */
    DOTA_COMBATLOG_BUYBACK(12, 12),
    /**
     * <code>DOTA_COMBATLOG_ABILITY_TRIGGER = 13;</code>
     */
    DOTA_COMBATLOG_ABILITY_TRIGGER(13, 13),
    /**
     * <code>DOTA_COMBATLOG_PLAYERSTATS = 14;</code>
     */
    DOTA_COMBATLOG_PLAYERSTATS(14, 14),
    /**
     * <code>DOTA_COMBATLOG_MULTIKILL = 15;</code>
     */
    DOTA_COMBATLOG_MULTIKILL(15, 15),
    /**
     * <code>DOTA_COMBATLOG_KILLSTREAK = 16;</code>
     */
    DOTA_COMBATLOG_KILLSTREAK(16, 16),
    /**
     * <code>DOTA_COMBATLOG_TEAM_BUILDING_KILL = 17;</code>
     */
    DOTA_COMBATLOG_TEAM_BUILDING_KILL(17, 17),
    /**
     * <code>DOTA_COMBATLOG_FIRST_BLOOD = 18;</code>
     */
    DOTA_COMBATLOG_FIRST_BLOOD(18, 18),
    /**
     * <code>DOTA_COMBATLOG_MODIFIER_REFRESH = 19;</code>
     */
    DOTA_COMBATLOG_MODIFIER_REFRESH(19, 19),
    /**
     * <code>DOTA_COMBATLOG_NEUTRAL_CAMP_STACK = 20;</code>
     */
    DOTA_COMBATLOG_NEUTRAL_CAMP_STACK(20, 20),
    /**
     * <code>DOTA_COMBATLOG_PICKUP_RUNE = 21;</code>
     */
    DOTA_COMBATLOG_PICKUP_RUNE(21, 21),
    /**
     * <code>DOTA_COMBATLOG_REVEALED_INVISIBLE = 22;</code>
     */
    DOTA_COMBATLOG_REVEALED_INVISIBLE(22, 22),
    /**
     * <code>DOTA_COMBATLOG_HERO_SAVED = 23;</code>
     */
    DOTA_COMBATLOG_HERO_SAVED(23, 23),
    /**
     * <code>DOTA_COMBATLOG_MANA_RESTORED = 24;</code>
     */
    DOTA_COMBATLOG_MANA_RESTORED(24, 24),
    /**
     * <code>DOTA_COMBATLOG_HERO_LEVELUP = 25;</code>
     */
    DOTA_COMBATLOG_HERO_LEVELUP(25, 25),
    /**
     * <code>DOTA_COMBATLOG_BOTTLE_HEAL_ALLY = 26;</code>
     */
    DOTA_COMBATLOG_BOTTLE_HEAL_ALLY(26, 26),
    /**
     * <code>DOTA_COMBATLOG_ENDGAME_STATS = 27;</code>
     */
    DOTA_COMBATLOG_ENDGAME_STATS(27, 27),
    /**
     * <code>DOTA_COMBATLOG_INTERRUPT_CHANNEL = 28;</code>
     */
    DOTA_COMBATLOG_INTERRUPT_CHANNEL(28, 28),
    /**
     * <code>DOTA_COMBATLOG_ALLIED_GOLD = 29;</code>
     */
    DOTA_COMBATLOG_ALLIED_GOLD(29, 29),
    /**
     * <code>DOTA_COMBATLOG_AEGIS_TAKEN = 30;</code>
     */
    DOTA_COMBATLOG_AEGIS_TAKEN(30, 30),
    ;

    /**
     * <code>DOTA_COMBATLOG_DAMAGE = 0;</code>
     */
    public static final int DOTA_COMBATLOG_DAMAGE_VALUE = 0;
    /**
     * <code>DOTA_COMBATLOG_HEAL = 1;</code>
     */
    public static final int DOTA_COMBATLOG_HEAL_VALUE = 1;
    /**
     * <code>DOTA_COMBATLOG_MODIFIER_ADD = 2;</code>
     */
    public static final int DOTA_COMBATLOG_MODIFIER_ADD_VALUE = 2;
    /**
     * <code>DOTA_COMBATLOG_MODIFIER_REMOVE = 3;</code>
     */
    public static final int DOTA_COMBATLOG_MODIFIER_REMOVE_VALUE = 3;
    /**
     * <code>DOTA_COMBATLOG_DEATH = 4;</code>
     */
    public static final int DOTA_COMBATLOG_DEATH_VALUE = 4;
    /**
     * <code>DOTA_COMBATLOG_ABILITY = 5;</code>
     */
    public static final int DOTA_COMBATLOG_ABILITY_VALUE = 5;
    /**
     * <code>DOTA_COMBATLOG_ITEM = 6;</code>
     */
    public static final int DOTA_COMBATLOG_ITEM_VALUE = 6;
    /**
     * <code>DOTA_COMBATLOG_LOCATION = 7;</code>
     */
    public static final int DOTA_COMBATLOG_LOCATION_VALUE = 7;
    /**
     * <code>DOTA_COMBATLOG_GOLD = 8;</code>
     */
    public static final int DOTA_COMBATLOG_GOLD_VALUE = 8;
    /**
     * <code>DOTA_COMBATLOG_GAME_STATE = 9;</code>
     */
    public static final int DOTA_COMBATLOG_GAME_STATE_VALUE = 9;
    /**
     * <code>DOTA_COMBATLOG_XP = 10;</code>
     */
    public static final int DOTA_COMBATLOG_XP_VALUE = 10;
    /**
     * <code>DOTA_COMBATLOG_PURCHASE = 11;</code>
     */
    public static final int DOTA_COMBATLOG_PURCHASE_VALUE = 11;
    /**
     * <code>DOTA_COMBATLOG_BUYBACK = 12;</code>
     */
    public static final int DOTA_COMBATLOG_BUYBACK_VALUE = 12;
    /**
     * <code>DOTA_COMBATLOG_ABILITY_TRIGGER = 13;</code>
     */
    public static final int DOTA_COMBATLOG_ABILITY_TRIGGER_VALUE = 13;
    /**
     * <code>DOTA_COMBATLOG_PLAYERSTATS = 14;</code>
     */
    public static final int DOTA_COMBATLOG_PLAYERSTATS_VALUE = 14;
    /**
     * <code>DOTA_COMBATLOG_MULTIKILL = 15;</code>
     */
    public static final int DOTA_COMBATLOG_MULTIKILL_VALUE = 15;
    /**
     * <code>DOTA_COMBATLOG_KILLSTREAK = 16;</code>
     */
    public static final int DOTA_COMBATLOG_KILLSTREAK_VALUE = 16;
    /**
     * <code>DOTA_COMBATLOG_TEAM_BUILDING_KILL = 17;</code>
     */
    public static final int DOTA_COMBATLOG_TEAM_BUILDING_KILL_VALUE = 17;
    /**
     * <code>DOTA_COMBATLOG_FIRST_BLOOD = 18;</code>
     */
    public static final int DOTA_COMBATLOG_FIRST_BLOOD_VALUE = 18;
    /**
     * <code>DOTA_COMBATLOG_MODIFIER_REFRESH = 19;</code>
     */
    public static final int DOTA_COMBATLOG_MODIFIER_REFRESH_VALUE = 19;
    /**
     * <code>DOTA_COMBATLOG_NEUTRAL_CAMP_STACK = 20;</code>
     */
    public static final int DOTA_COMBATLOG_NEUTRAL_CAMP_STACK_VALUE = 20;
    /**
     * <code>DOTA_COMBATLOG_PICKUP_RUNE = 21;</code>
     */
    public static final int DOTA_COMBATLOG_PICKUP_RUNE_VALUE = 21;
    /**
     * <code>DOTA_COMBATLOG_REVEALED_INVISIBLE = 22;</code>
     */
    public static final int DOTA_COMBATLOG_REVEALED_INVISIBLE_VALUE = 22;
    /**
     * <code>DOTA_COMBATLOG_HERO_SAVED = 23;</code>
     */
    public static final int DOTA_COMBATLOG_HERO_SAVED_VALUE = 23;
    /**
     * <code>DOTA_COMBATLOG_MANA_RESTORED = 24;</code>
     */
    public static final int DOTA_COMBATLOG_MANA_RESTORED_VALUE = 24;
    /**
     * <code>DOTA_COMBATLOG_HERO_LEVELUP = 25;</code>
     */
    public static final int DOTA_COMBATLOG_HERO_LEVELUP_VALUE = 25;
    /**
     * <code>DOTA_COMBATLOG_BOTTLE_HEAL_ALLY = 26;</code>
     */
    public static final int DOTA_COMBATLOG_BOTTLE_HEAL_ALLY_VALUE = 26;
    /**
     * <code>DOTA_COMBATLOG_ENDGAME_STATS = 27;</code>
     */
    public static final int DOTA_COMBATLOG_ENDGAME_STATS_VALUE = 27;
    /**
     * <code>DOTA_COMBATLOG_INTERRUPT_CHANNEL = 28;</code>
     */
    public static final int DOTA_COMBATLOG_INTERRUPT_CHANNEL_VALUE = 28;
    /**
     * <code>DOTA_COMBATLOG_ALLIED_GOLD = 29;</code>
     */
    public static final int DOTA_COMBATLOG_ALLIED_GOLD_VALUE = 29;
    /**
     * <code>DOTA_COMBATLOG_AEGIS_TAKEN = 30;</code>
     */
    public static final int DOTA_COMBATLOG_AEGIS_TAKEN_VALUE = 30;


    public final int getNumber() { return value; }

    public static DOTA_COMBATLOG_TYPES valueOf(int value) {
      switch (value) {
        case 0: return DOTA_COMBATLOG_DAMAGE;
        case 1: return DOTA_COMBATLOG_HEAL;
        case 2: return DOTA_COMBATLOG_MODIFIER_ADD;
        case 3: return DOTA_COMBATLOG_MODIFIER_REMOVE;
        case 4: return DOTA_COMBATLOG_DEATH;
        case 5: return DOTA_COMBATLOG_ABILITY;
        case 6: return DOTA_COMBATLOG_ITEM;
        case 7: return DOTA_COMBATLOG_LOCATION;
        case 8: return DOTA_COMBATLOG_GOLD;
        case 9: return DOTA_COMBATLOG_GAME_STATE;
        case 10: return DOTA_COMBATLOG_XP;
        case 11: return DOTA_COMBATLOG_PURCHASE;
        case 12: return DOTA_COMBATLOG_BUYBACK;
        case 13: return DOTA_COMBATLOG_ABILITY_TRIGGER;
        case 14: return DOTA_COMBATLOG_PLAYERSTATS;
        case 15: return DOTA_COMBATLOG_MULTIKILL;
        case 16: return DOTA_COMBATLOG_KILLSTREAK;
        case 17: return DOTA_COMBATLOG_TEAM_BUILDING_KILL;
        case 18: return DOTA_COMBATLOG_FIRST_BLOOD;
        case 19: return DOTA_COMBATLOG_MODIFIER_REFRESH;
        case 20: return DOTA_COMBATLOG_NEUTRAL_CAMP_STACK;
        case 21: return DOTA_COMBATLOG_PICKUP_RUNE;
        case 22: return DOTA_COMBATLOG_REVEALED_INVISIBLE;
        case 23: return DOTA_COMBATLOG_HERO_SAVED;
        case 24: return DOTA_COMBATLOG_MANA_RESTORED;
        case 25: return DOTA_COMBATLOG_HERO_LEVELUP;
        case 26: return DOTA_COMBATLOG_BOTTLE_HEAL_ALLY;
        case 27: return DOTA_COMBATLOG_ENDGAME_STATS;
        case 28: return DOTA_COMBATLOG_INTERRUPT_CHANNEL;
        case 29: return DOTA_COMBATLOG_ALLIED_GOLD;
        case 30: return DOTA_COMBATLOG_AEGIS_TAKEN;
        default: return null;
      }
    }

    public static com.google.protobuf.Internal.EnumLiteMap<DOTA_COMBATLOG_TYPES>
        internalGetValueMap() {
      return internalValueMap;
    }
    private static com.google.protobuf.Internal.EnumLiteMap<DOTA_COMBATLOG_TYPES>
        internalValueMap =
          new com.google.protobuf.Internal.EnumLiteMap<DOTA_COMBATLOG_TYPES>() {
            public DOTA_COMBATLOG_TYPES findValueByNumber(int number) {
              return DOTA_COMBATLOG_TYPES.valueOf(number);
            }
          };

    public final com.google.protobuf.Descriptors.EnumValueDescriptor
        getValueDescriptor() {
      return getDescriptor().getValues().get(index);
    }
    public final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptorForType() {
      return getDescriptor();
    }
    public static final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptor() {
      return skadistats.clarity.wire.common.proto.DotaUserMessages.getDescriptor().getEnumTypes().get(0);
    }

    private static final DOTA_COMBATLOG_TYPES[] VALUES = values();

    public static DOTA_COMBATLOG_TYPES valueOf(
        com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
      if (desc.getType() != getDescriptor()) {
        throw new java.lang.IllegalArgumentException(
          "EnumValueDescriptor is not for this type.");
      }
      return VALUES[desc.getIndex()];
    }

    private final int index;
    private final int value;

    private DOTA_COMBATLOG_TYPES(int index, int value) {
      this.index = index;
      this.value = value;
    }

    // @@protoc_insertion_point(enum_scope:DOTA_COMBATLOG_TYPES)
  }

  /**
   * Protobuf enum {@code DOTA_CHAT_MESSAGE}
   */
  public enum DOTA_CHAT_MESSAGE
      implements com.google.protobuf.ProtocolMessageEnum {
    /**
     * <code>CHAT_MESSAGE_INVALID = -1;</code>
     */
    CHAT_MESSAGE_INVALID(0, -1),
    /**
     * <code>CHAT_MESSAGE_HERO_KILL = 0;</code>
     */
    CHAT_MESSAGE_HERO_KILL(1, 0),
    /**
     * <code>CHAT_MESSAGE_HERO_DENY = 1;</code>
     */
    CHAT_MESSAGE_HERO_DENY(2, 1),
    /**
     * <code>CHAT_MESSAGE_BARRACKS_KILL = 2;</code>
     */
    CHAT_MESSAGE_BARRACKS_KILL(3, 2),
    /**
     * <code>CHAT_MESSAGE_TOWER_KILL = 3;</code>
     */
    CHAT_MESSAGE_TOWER_KILL(4, 3),
    /**
     * <code>CHAT_MESSAGE_TOWER_DENY = 4;</code>
     */
    CHAT_MESSAGE_TOWER_DENY(5, 4),
    /**
     * <code>CHAT_MESSAGE_FIRSTBLOOD = 5;</code>
     */
    CHAT_MESSAGE_FIRSTBLOOD(6, 5),
    /**
     * <code>CHAT_MESSAGE_STREAK_KILL = 6;</code>
     */
    CHAT_MESSAGE_STREAK_KILL(7, 6),
    /**
     * <code>CHAT_MESSAGE_BUYBACK = 7;</code>
     */
    CHAT_MESSAGE_BUYBACK(8, 7),
    /**
     * <code>CHAT_MESSAGE_AEGIS = 8;</code>
     */
    CHAT_MESSAGE_AEGIS(9, 8),
    /**
     * <code>CHAT_MESSAGE_ROSHAN_KILL = 9;</code>
     */
    CHAT_MESSAGE_ROSHAN_KILL(10, 9),
    /**
     * <code>CHAT_MESSAGE_COURIER_LOST = 10;</code>
     */
    CHAT_MESSAGE_COURIER_LOST(11, 10),
    /**
     * <code>CHAT_MESSAGE_COURIER_RESPAWNED = 11;</code>
     */
    CHAT_MESSAGE_COURIER_RESPAWNED(12, 11),
    /**
     * <code>CHAT_MESSAGE_GLYPH_USED = 12;</code>
     */
    CHAT_MESSAGE_GLYPH_USED(13, 12),
    /**
     * <code>CHAT_MESSAGE_ITEM_PURCHASE = 13;</code>
     */
    CHAT_MESSAGE_ITEM_PURCHASE(14, 13),
    /**
     * <code>CHAT_MESSAGE_CONNECT = 14;</code>
     */
    CHAT_MESSAGE_CONNECT(15, 14),
    /**
     * <code>CHAT_MESSAGE_DISCONNECT = 15;</code>
     */
    CHAT_MESSAGE_DISCONNECT(16, 15),
    /**
     * <code>CHAT_MESSAGE_DISCONNECT_WAIT_FOR_RECONNECT = 16;</code>
     */
    CHAT_MESSAGE_DISCONNECT_WAIT_FOR_RECONNECT(17, 16),
    /**
     * <code>CHAT_MESSAGE_DISCONNECT_TIME_REMAINING = 17;</code>
     */
    CHAT_MESSAGE_DISCONNECT_TIME_REMAINING(18, 17),
    /**
     * <code>CHAT_MESSAGE_DISCONNECT_TIME_REMAINING_PLURAL = 18;</code>
     */
    CHAT_MESSAGE_DISCONNECT_TIME_REMAINING_PLURAL(19, 18),
    /**
     * <code>CHAT_MESSAGE_RECONNECT = 19;</code>
     */
    CHAT_MESSAGE_RECONNECT(20, 19),
    /**
     * <code>CHAT_MESSAGE_PLAYER_LEFT = 20;</code>
     */
    CHAT_MESSAGE_PLAYER_LEFT(21, 20),
    /**
     * <code>CHAT_MESSAGE_SAFE_TO_LEAVE = 21;</code>
     */
    CHAT_MESSAGE_SAFE_TO_LEAVE(22, 21),
    /**
     * <code>CHAT_MESSAGE_RUNE_PICKUP = 22;</code>
     */
    CHAT_MESSAGE_RUNE_PICKUP(23, 22),
    /**
     * <code>CHAT_MESSAGE_RUNE_BOTTLE = 23;</code>
     */
    CHAT_MESSAGE_RUNE_BOTTLE(24, 23),
    /**
     * <code>CHAT_MESSAGE_INTHEBAG = 24;</code>
     */
    CHAT_MESSAGE_INTHEBAG(25, 24),
    /**
     * <code>CHAT_MESSAGE_SECRETSHOP = 25;</code>
     */
    CHAT_MESSAGE_SECRETSHOP(26, 25),
    /**
     * <code>CHAT_MESSAGE_ITEM_AUTOPURCHASED = 26;</code>
     */
    CHAT_MESSAGE_ITEM_AUTOPURCHASED(27, 26),
    /**
     * <code>CHAT_MESSAGE_ITEMS_COMBINED = 27;</code>
     */
    CHAT_MESSAGE_ITEMS_COMBINED(28, 27),
    /**
     * <code>CHAT_MESSAGE_SUPER_CREEPS = 28;</code>
     */
    CHAT_MESSAGE_SUPER_CREEPS(29, 28),
    /**
     * <code>CHAT_MESSAGE_CANT_USE_ACTION_ITEM = 29;</code>
     */
    CHAT_MESSAGE_CANT_USE_ACTION_ITEM(30, 29),
    /**
     * <code>CHAT_MESSAGE_CHARGES_EXHAUSTED = 30;</code>
     */
    CHAT_MESSAGE_CHARGES_EXHAUSTED(31, 30),
    /**
     * <code>CHAT_MESSAGE_CANTPAUSE = 31;</code>
     */
    CHAT_MESSAGE_CANTPAUSE(32, 31),
    /**
     * <code>CHAT_MESSAGE_NOPAUSESLEFT = 32;</code>
     */
    CHAT_MESSAGE_NOPAUSESLEFT(33, 32),
    /**
     * <code>CHAT_MESSAGE_CANTPAUSEYET = 33;</code>
     */
    CHAT_MESSAGE_CANTPAUSEYET(34, 33),
    /**
     * <code>CHAT_MESSAGE_PAUSED = 34;</code>
     */
    CHAT_MESSAGE_PAUSED(35, 34),
    /**
     * <code>CHAT_MESSAGE_UNPAUSE_COUNTDOWN = 35;</code>
     */
    CHAT_MESSAGE_UNPAUSE_COUNTDOWN(36, 35),
    /**
     * <code>CHAT_MESSAGE_UNPAUSED = 36;</code>
     */
    CHAT_MESSAGE_UNPAUSED(37, 36),
    /**
     * <code>CHAT_MESSAGE_AUTO_UNPAUSED = 37;</code>
     */
    CHAT_MESSAGE_AUTO_UNPAUSED(38, 37),
    /**
     * <code>CHAT_MESSAGE_YOUPAUSED = 38;</code>
     */
    CHAT_MESSAGE_YOUPAUSED(39, 38),
    /**
     * <code>CHAT_MESSAGE_CANTUNPAUSETEAM = 39;</code>
     */
    CHAT_MESSAGE_CANTUNPAUSETEAM(40, 39),
    /**
     * <code>CHAT_MESSAGE_VOICE_TEXT_BANNED = 41;</code>
     */
    CHAT_MESSAGE_VOICE_TEXT_BANNED(41, 41),
    /**
     * <code>CHAT_MESSAGE_SPECTATORS_WATCHING_THIS_GAME = 42;</code>
     */
    CHAT_MESSAGE_SPECTATORS_WATCHING_THIS_GAME(42, 42),
    /**
     * <code>CHAT_MESSAGE_REPORT_REMINDER = 43;</code>
     */
    CHAT_MESSAGE_REPORT_REMINDER(43, 43),
    /**
     * <code>CHAT_MESSAGE_ECON_ITEM = 44;</code>
     */
    CHAT_MESSAGE_ECON_ITEM(44, 44),
    /**
     * <code>CHAT_MESSAGE_TAUNT = 45;</code>
     */
    CHAT_MESSAGE_TAUNT(45, 45),
    /**
     * <code>CHAT_MESSAGE_RANDOM = 46;</code>
     */
    CHAT_MESSAGE_RANDOM(46, 46),
    /**
     * <code>CHAT_MESSAGE_RD_TURN = 47;</code>
     */
    CHAT_MESSAGE_RD_TURN(47, 47),
    /**
     * <code>CHAT_MESSAGE_DROP_RATE_BONUS = 49;</code>
     */
    CHAT_MESSAGE_DROP_RATE_BONUS(48, 49),
    /**
     * <code>CHAT_MESSAGE_NO_BATTLE_POINTS = 50;</code>
     */
    CHAT_MESSAGE_NO_BATTLE_POINTS(49, 50),
    /**
     * <code>CHAT_MESSAGE_DENIED_AEGIS = 51;</code>
     */
    CHAT_MESSAGE_DENIED_AEGIS(50, 51),
    /**
     * <code>CHAT_MESSAGE_INFORMATIONAL = 52;</code>
     */
    CHAT_MESSAGE_INFORMATIONAL(51, 52),
    /**
     * <code>CHAT_MESSAGE_AEGIS_STOLEN = 53;</code>
     */
    CHAT_MESSAGE_AEGIS_STOLEN(52, 53),
    /**
     * <code>CHAT_MESSAGE_ROSHAN_CANDY = 54;</code>
     */
    CHAT_MESSAGE_ROSHAN_CANDY(53, 54),
    /**
     * <code>CHAT_MESSAGE_ITEM_GIFTED = 55;</code>
     */
    CHAT_MESSAGE_ITEM_GIFTED(54, 55),
    /**
     * <code>CHAT_MESSAGE_HERO_KILL_WITH_GREEVIL = 56;</code>
     */
    CHAT_MESSAGE_HERO_KILL_WITH_GREEVIL(55, 56),
    /**
     * <code>CHAT_MESSAGE_HOLDOUT_TOWER_DESTROYED = 57;</code>
     */
    CHAT_MESSAGE_HOLDOUT_TOWER_DESTROYED(56, 57),
    /**
     * <code>CHAT_MESSAGE_HOLDOUT_WALL_DESTROYED = 58;</code>
     */
    CHAT_MESSAGE_HOLDOUT_WALL_DESTROYED(57, 58),
    /**
     * <code>CHAT_MESSAGE_HOLDOUT_WALL_FINISHED = 59;</code>
     */
    CHAT_MESSAGE_HOLDOUT_WALL_FINISHED(58, 59),
    /**
     * <code>CHAT_MESSAGE_PLAYER_LEFT_LIMITED_HERO = 62;</code>
     */
    CHAT_MESSAGE_PLAYER_LEFT_LIMITED_HERO(59, 62),
    /**
     * <code>CHAT_MESSAGE_ABANDON_LIMITED_HERO_EXPLANATION = 63;</code>
     */
    CHAT_MESSAGE_ABANDON_LIMITED_HERO_EXPLANATION(60, 63),
    /**
     * <code>CHAT_MESSAGE_DISCONNECT_LIMITED_HERO = 64;</code>
     */
    CHAT_MESSAGE_DISCONNECT_LIMITED_HERO(61, 64),
    /**
     * <code>CHAT_MESSAGE_LOW_PRIORITY_COMPLETED_EXPLANATION = 65;</code>
     */
    CHAT_MESSAGE_LOW_PRIORITY_COMPLETED_EXPLANATION(62, 65),
    /**
     * <code>CHAT_MESSAGE_RECRUITMENT_DROP_RATE_BONUS = 66;</code>
     */
    CHAT_MESSAGE_RECRUITMENT_DROP_RATE_BONUS(63, 66),
    /**
     * <code>CHAT_MESSAGE_FROSTIVUS_SHINING_BOOSTER_ACTIVE = 67;</code>
     */
    CHAT_MESSAGE_FROSTIVUS_SHINING_BOOSTER_ACTIVE(64, 67),
    /**
     * <code>CHAT_MESSAGE_PLAYER_LEFT_AFK = 73;</code>
     */
    CHAT_MESSAGE_PLAYER_LEFT_AFK(65, 73),
    /**
     * <code>CHAT_MESSAGE_PLAYER_LEFT_DISCONNECTED_TOO_LONG = 74;</code>
     */
    CHAT_MESSAGE_PLAYER_LEFT_DISCONNECTED_TOO_LONG(66, 74),
    /**
     * <code>CHAT_MESSAGE_PLAYER_ABANDONED = 75;</code>
     */
    CHAT_MESSAGE_PLAYER_ABANDONED(67, 75),
    /**
     * <code>CHAT_MESSAGE_PLAYER_ABANDONED_AFK = 76;</code>
     */
    CHAT_MESSAGE_PLAYER_ABANDONED_AFK(68, 76),
    /**
     * <code>CHAT_MESSAGE_PLAYER_ABANDONED_DISCONNECTED_TOO_LONG = 77;</code>
     */
    CHAT_MESSAGE_PLAYER_ABANDONED_DISCONNECTED_TOO_LONG(69, 77),
    /**
     * <code>CHAT_MESSAGE_WILL_NOT_BE_SCORED = 78;</code>
     */
    CHAT_MESSAGE_WILL_NOT_BE_SCORED(70, 78),
    /**
     * <code>CHAT_MESSAGE_WILL_NOT_BE_SCORED_RANKED = 79;</code>
     */
    CHAT_MESSAGE_WILL_NOT_BE_SCORED_RANKED(71, 79),
    /**
     * <code>CHAT_MESSAGE_WILL_NOT_BE_SCORED_NETWORK = 80;</code>
     */
    CHAT_MESSAGE_WILL_NOT_BE_SCORED_NETWORK(72, 80),
    /**
     * <code>CHAT_MESSAGE_WILL_NOT_BE_SCORED_NETWORK_RANKED = 81;</code>
     */
    CHAT_MESSAGE_WILL_NOT_BE_SCORED_NETWORK_RANKED(73, 81),
    /**
     * <code>CHAT_MESSAGE_CAN_QUIT_WITHOUT_ABANDON = 82;</code>
     */
    CHAT_MESSAGE_CAN_QUIT_WITHOUT_ABANDON(74, 82),
    /**
     * <code>CHAT_MESSAGE_RANKED_GAME_STILL_SCORED_LEAVERS_GET_LOSS = 83;</code>
     */
    CHAT_MESSAGE_RANKED_GAME_STILL_SCORED_LEAVERS_GET_LOSS(75, 83),
    /**
     * <code>CHAT_MESSAGE_ABANDON_RANKED_BEFORE_FIRST_BLOOD_PARTY = 84;</code>
     */
    CHAT_MESSAGE_ABANDON_RANKED_BEFORE_FIRST_BLOOD_PARTY(76, 84),
    /**
     * <code>CHAT_MESSAGE_COMPENDIUM_LEVEL = 85;</code>
     */
    CHAT_MESSAGE_COMPENDIUM_LEVEL(77, 85),
    /**
     * <code>CHAT_MESSAGE_VICTORY_PREDICTION_STREAK = 86;</code>
     */
    CHAT_MESSAGE_VICTORY_PREDICTION_STREAK(78, 86),
    /**
     * <code>CHAT_MESSAGE_ASSASSIN_ANNOUNCE = 87;</code>
     */
    CHAT_MESSAGE_ASSASSIN_ANNOUNCE(79, 87),
    /**
     * <code>CHAT_MESSAGE_ASSASSIN_SUCCESS = 88;</code>
     */
    CHAT_MESSAGE_ASSASSIN_SUCCESS(80, 88),
    /**
     * <code>CHAT_MESSAGE_ASSASSIN_DENIED = 89;</code>
     */
    CHAT_MESSAGE_ASSASSIN_DENIED(81, 89),
    /**
     * <code>CHAT_MESSAGE_VICTORY_PREDICTION_SINGLE_USER_CONFIRM = 90;</code>
     */
    CHAT_MESSAGE_VICTORY_PREDICTION_SINGLE_USER_CONFIRM(82, 90),
    /**
     * <code>CHAT_MESSAGE_EFFIGY_KILL = 91;</code>
     */
    CHAT_MESSAGE_EFFIGY_KILL(83, 91),
    /**
     * <code>CHAT_MESSAGE_VOICE_TEXT_BANNED_OVERFLOW = 92;</code>
     */
    CHAT_MESSAGE_VOICE_TEXT_BANNED_OVERFLOW(84, 92),
    /**
     * <code>CHAT_MESSAGE_YEAR_BEAST_KILLED = 93;</code>
     */
    CHAT_MESSAGE_YEAR_BEAST_KILLED(85, 93),
    /**
     * <code>CHAT_MESSAGE_PAUSE_COUNTDOWN = 94;</code>
     */
    CHAT_MESSAGE_PAUSE_COUNTDOWN(86, 94),
    /**
     * <code>CHAT_MESSAGE_COINS_WAGERED = 95;</code>
     */
    CHAT_MESSAGE_COINS_WAGERED(87, 95),
    /**
     * <code>CHAT_MESSAGE_HERO_NOMINATED_BAN = 96;</code>
     */
    CHAT_MESSAGE_HERO_NOMINATED_BAN(88, 96),
    /**
     * <code>CHAT_MESSAGE_HERO_BANNED = 97;</code>
     */
    CHAT_MESSAGE_HERO_BANNED(89, 97),
    /**
     * <code>CHAT_MESSAGE_HERO_BAN_COUNT = 98;</code>
     */
    CHAT_MESSAGE_HERO_BAN_COUNT(90, 98),
    /**
     * <code>CHAT_MESSAGE_RIVER_PAINTED = 99;</code>
     */
    CHAT_MESSAGE_RIVER_PAINTED(91, 99),
    /**
     * <code>CHAT_MESSAGE_SCAN_USED = 100;</code>
     */
    CHAT_MESSAGE_SCAN_USED(92, 100),
    ;

    /**
     * <code>CHAT_MESSAGE_INVALID = -1;</code>
     */
    public static final int CHAT_MESSAGE_INVALID_VALUE = -1;
    /**
     * <code>CHAT_MESSAGE_HERO_KILL = 0;</code>
     */
    public static final int CHAT_MESSAGE_HERO_KILL_VALUE = 0;
    /**
     * <code>CHAT_MESSAGE_HERO_DENY = 1;</code>
     */
    public static final int CHAT_MESSAGE_HERO_DENY_VALUE = 1;
    /**
     * <code>CHAT_MESSAGE_BARRACKS_KILL = 2;</code>
     */
    public static final int CHAT_MESSAGE_BARRACKS_KILL_VALUE = 2;
    /**
     * <code>CHAT_MESSAGE_TOWER_KILL = 3;</code>
     */
    public static final int CHAT_MESSAGE_TOWER_KILL_VALUE = 3;
    /**
     * <code>CHAT_MESSAGE_TOWER_DENY = 4;</code>
     */
    public static final int CHAT_MESSAGE_TOWER_DENY_VALUE = 4;
    /**
     * <code>CHAT_MESSAGE_FIRSTBLOOD = 5;</code>
     */
    public static final int CHAT_MESSAGE_FIRSTBLOOD_VALUE = 5;
    /**
     * <code>CHAT_MESSAGE_STREAK_KILL = 6;</code>
     */
    public static final int CHAT_MESSAGE_STREAK_KILL_VALUE = 6;
    /**
     * <code>CHAT_MESSAGE_BUYBACK = 7;</code>
     */
    public static final int CHAT_MESSAGE_BUYBACK_VALUE = 7;
    /**
     * <code>CHAT_MESSAGE_AEGIS = 8;</code>
     */
    public static final int CHAT_MESSAGE_AEGIS_VALUE = 8;
    /**
     * <code>CHAT_MESSAGE_ROSHAN_KILL = 9;</code>
     */
    public static final int CHAT_MESSAGE_ROSHAN_KILL_VALUE = 9;
    /**
     * <code>CHAT_MESSAGE_COURIER_LOST = 10;</code>
     */
    public static final int CHAT_MESSAGE_COURIER_LOST_VALUE = 10;
    /**
     * <code>CHAT_MESSAGE_COURIER_RESPAWNED = 11;</code>
     */
    public static final int CHAT_MESSAGE_COURIER_RESPAWNED_VALUE = 11;
    /**
     * <code>CHAT_MESSAGE_GLYPH_USED = 12;</code>
     */
    public static final int CHAT_MESSAGE_GLYPH_USED_VALUE = 12;
    /**
     * <code>CHAT_MESSAGE_ITEM_PURCHASE = 13;</code>
     */
    public static final int CHAT_MESSAGE_ITEM_PURCHASE_VALUE = 13;
    /**
     * <code>CHAT_MESSAGE_CONNECT = 14;</code>
     */
    public static final int CHAT_MESSAGE_CONNECT_VALUE = 14;
    /**
     * <code>CHAT_MESSAGE_DISCONNECT = 15;</code>
     */
    public static final int CHAT_MESSAGE_DISCONNECT_VALUE = 15;
    /**
     * <code>CHAT_MESSAGE_DISCONNECT_WAIT_FOR_RECONNECT = 16;</code>
     */
    public static final int CHAT_MESSAGE_DISCONNECT_WAIT_FOR_RECONNECT_VALUE = 16;
    /**
     * <code>CHAT_MESSAGE_DISCONNECT_TIME_REMAINING = 17;</code>
     */
    public static final int CHAT_MESSAGE_DISCONNECT_TIME_REMAINING_VALUE = 17;
    /**
     * <code>CHAT_MESSAGE_DISCONNECT_TIME_REMAINING_PLURAL = 18;</code>
     */
    public static final int CHAT_MESSAGE_DISCONNECT_TIME_REMAINING_PLURAL_VALUE = 18;
    /**
     * <code>CHAT_MESSAGE_RECONNECT = 19;</code>
     */
    public static final int CHAT_MESSAGE_RECONNECT_VALUE = 19;
    /**
     * <code>CHAT_MESSAGE_PLAYER_LEFT = 20;</code>
     */
    public static final int CHAT_MESSAGE_PLAYER_LEFT_VALUE = 20;
    /**
     * <code>CHAT_MESSAGE_SAFE_TO_LEAVE = 21;</code>
     */
    public static final int CHAT_MESSAGE_SAFE_TO_LEAVE_VALUE = 21;
    /**
     * <code>CHAT_MESSAGE_RUNE_PICKUP = 22;</code>
     */
    public static final int CHAT_MESSAGE_RUNE_PICKUP_VALUE = 22;
    /**
     * <code>CHAT_MESSAGE_RUNE_BOTTLE = 23;</code>
     */
    public static final int CHAT_MESSAGE_RUNE_BOTTLE_VALUE = 23;
    /**
     * <code>CHAT_MESSAGE_INTHEBAG = 24;</code>
     */
    public static final int CHAT_MESSAGE_INTHEBAG_VALUE = 24;
    /**
     * <code>CHAT_MESSAGE_SECRETSHOP = 25;</code>
     */
    public static final int CHAT_MESSAGE_SECRETSHOP_VALUE = 25;
    /**
     * <code>CHAT_MESSAGE_ITEM_AUTOPURCHASED = 26;</code>
     */
    public static final int CHAT_MESSAGE_ITEM_AUTOPURCHASED_VALUE = 26;
    /**
     * <code>CHAT_MESSAGE_ITEMS_COMBINED = 27;</code>
     */
    public static final int CHAT_MESSAGE_ITEMS_COMBINED_VALUE = 27;
    /**
     * <code>CHAT_MESSAGE_SUPER_CREEPS = 28;</code>
     */
    public static final int CHAT_MESSAGE_SUPER_CREEPS_VALUE = 28;
    /**
     * <code>CHAT_MESSAGE_CANT_USE_ACTION_ITEM = 29;</code>
     */
    public static final int CHAT_MESSAGE_CANT_USE_ACTION_ITEM_VALUE = 29;
    /**
     * <code>CHAT_MESSAGE_CHARGES_EXHAUSTED = 30;</code>
     */
    public static final int CHAT_MESSAGE_CHARGES_EXHAUSTED_VALUE = 30;
    /**
     * <code>CHAT_MESSAGE_CANTPAUSE = 31;</code>
     */
    public static final int CHAT_MESSAGE_CANTPAUSE_VALUE = 31;
    /**
     * <code>CHAT_MESSAGE_NOPAUSESLEFT = 32;</code>
     */
    public static final int CHAT_MESSAGE_NOPAUSESLEFT_VALUE = 32;
    /**
     * <code>CHAT_MESSAGE_CANTPAUSEYET = 33;</code>
     */
    public static final int CHAT_MESSAGE_CANTPAUSEYET_VALUE = 33;
    /**
     * <code>CHAT_MESSAGE_PAUSED = 34;</code>
     */
    public static final int CHAT_MESSAGE_PAUSED_VALUE = 34;
    /**
     * <code>CHAT_MESSAGE_UNPAUSE_COUNTDOWN = 35;</code>
     */
    public static final int CHAT_MESSAGE_UNPAUSE_COUNTDOWN_VALUE = 35;
    /**
     * <code>CHAT_MESSAGE_UNPAUSED = 36;</code>
     */
    public static final int CHAT_MESSAGE_UNPAUSED_VALUE = 36;
    /**
     * <code>CHAT_MESSAGE_AUTO_UNPAUSED = 37;</code>
     */
    public static final int CHAT_MESSAGE_AUTO_UNPAUSED_VALUE = 37;
    /**
     * <code>CHAT_MESSAGE_YOUPAUSED = 38;</code>
     */
    public static final int CHAT_MESSAGE_YOUPAUSED_VALUE = 38;
    /**
     * <code>CHAT_MESSAGE_CANTUNPAUSETEAM = 39;</code>
     */
    public static final int CHAT_MESSAGE_CANTUNPAUSETEAM_VALUE = 39;
    /**
     * <code>CHAT_MESSAGE_VOICE_TEXT_BANNED = 41;</code>
     */
    public static final int CHAT_MESSAGE_VOICE_TEXT_BANNED_VALUE = 41;
    /**
     * <code>CHAT_MESSAGE_SPECTATORS_WATCHING_THIS_GAME = 42;</code>
     */
    public static final int CHAT_MESSAGE_SPECTATORS_WATCHING_THIS_GAME_VALUE = 42;
    /**
     * <code>CHAT_MESSAGE_REPORT_REMINDER = 43;</code>
     */
    public static final int CHAT_MESSAGE_REPORT_REMINDER_VALUE = 43;
    /**
     * <code>CHAT_MESSAGE_ECON_ITEM = 44;</code>
     */
    public static final int CHAT_MESSAGE_ECON_ITEM_VALUE = 44;
    /**
     * <code>CHAT_MESSAGE_TAUNT = 45;</code>
     */
    public static final int CHAT_MESSAGE_TAUNT_VALUE = 45;
    /**
     * <code>CHAT_MESSAGE_RANDOM = 46;</code>
     */
    public static final int CHAT_MESSAGE_RANDOM_VALUE = 46;
    /**
     * <code>CHAT_MESSAGE_RD_TURN = 47;</code>
     */
    public static final int CHAT_MESSAGE_RD_TURN_VALUE = 47;
    /**
     * <code>CHAT_MESSAGE_DROP_RATE_BONUS = 49;</code>
     */
    public static final int CHAT_MESSAGE_DROP_RATE_BONUS_VALUE = 49;
    /**
     * <code>CHAT_MESSAGE_NO_BATTLE_POINTS = 50;</code>
     */
    public static final int CHAT_MESSAGE_NO_BATTLE_POINTS_VALUE = 50;
    /**
     * <code>CHAT_MESSAGE_DENIED_AEGIS = 51;</code>
     */
    public static final int CHAT_MESSAGE_DENIED_AEGIS_VALUE = 51;
    /**
     * <code>CHAT_MESSAGE_INFORMATIONAL = 52;</code>
     */
    public static final int CHAT_MESSAGE_INFORMATIONAL_VALUE = 52;
    /**
     * <code>CHAT_MESSAGE_AEGIS_STOLEN = 53;</code>
     */
    public static final int CHAT_MESSAGE_AEGIS_STOLEN_VALUE = 53;
    /**
     * <code>CHAT_MESSAGE_ROSHAN_CANDY = 54;</code>
     */
    public static final int CHAT_MESSAGE_ROSHAN_CANDY_VALUE = 54;
    /**
     * <code>CHAT_MESSAGE_ITEM_GIFTED = 55;</code>
     */
    public static final int CHAT_MESSAGE_ITEM_GIFTED_VALUE = 55;
    /**
     * <code>CHAT_MESSAGE_HERO_KILL_WITH_GREEVIL = 56;</code>
     */
    public static final int CHAT_MESSAGE_HERO_KILL_WITH_GREEVIL_VALUE = 56;
    /**
     * <code>CHAT_MESSAGE_HOLDOUT_TOWER_DESTROYED = 57;</code>
     */
    public static final int CHAT_MESSAGE_HOLDOUT_TOWER_DESTROYED_VALUE = 57;
    /**
     * <code>CHAT_MESSAGE_HOLDOUT_WALL_DESTROYED = 58;</code>
     */
    public static final int CHAT_MESSAGE_HOLDOUT_WALL_DESTROYED_VALUE = 58;
    /**
     * <code>CHAT_MESSAGE_HOLDOUT_WALL_FINISHED = 59;</code>
     */
    public static final int CHAT_MESSAGE_HOLDOUT_WALL_FINISHED_VALUE = 59;
    /**
     * <code>CHAT_MESSAGE_PLAYER_LEFT_LIMITED_HERO = 62;</code>
     */
    public static final int CHAT_MESSAGE_PLAYER_LEFT_LIMITED_HERO_VALUE = 62;
    /**
     * <code>CHAT_MESSAGE_ABANDON_LIMITED_HERO_EXPLANATION = 63;</code>
     */
    public static final int CHAT_MESSAGE_ABANDON_LIMITED_HERO_EXPLANATION_VALUE = 63;
    /**
     * <code>CHAT_MESSAGE_DISCONNECT_LIMITED_HERO = 64;</code>
     */
    public static final int CHAT_MESSAGE_DISCONNECT_LIMITED_HERO_VALUE = 64;
    /**
     * <code>CHAT_MESSAGE_LOW_PRIORITY_COMPLETED_EXPLANATION = 65;</code>
     */
    public static final int CHAT_MESSAGE_LOW_PRIORITY_COMPLETED_EXPLANATION_VALUE = 65;
    /**
     * <code>CHAT_MESSAGE_RECRUITMENT_DROP_RATE_BONUS = 66;</code>
     */
    public static final int CHAT_MESSAGE_RECRUITMENT_DROP_RATE_BONUS_VALUE = 66;
    /**
     * <code>CHAT_MESSAGE_FROSTIVUS_SHINING_BOOSTER_ACTIVE = 67;</code>
     */
    public static final int CHAT_MESSAGE_FROSTIVUS_SHINING_BOOSTER_ACTIVE_VALUE = 67;
    /**
     * <code>CHAT_MESSAGE_PLAYER_LEFT_AFK = 73;</code>
     */
    public static final int CHAT_MESSAGE_PLAYER_LEFT_AFK_VALUE = 73;
    /**
     * <code>CHAT_MESSAGE_PLAYER_LEFT_DISCONNECTED_TOO_LONG = 74;</code>
     */
    public static final int CHAT_MESSAGE_PLAYER_LEFT_DISCONNECTED_TOO_LONG_VALUE = 74;
    /**
     * <code>CHAT_MESSAGE_PLAYER_ABANDONED = 75;</code>
     */
    public static final int CHAT_MESSAGE_PLAYER_ABANDONED_VALUE = 75;
    /**
     * <code>CHAT_MESSAGE_PLAYER_ABANDONED_AFK = 76;</code>
     */
    public static final int CHAT_MESSAGE_PLAYER_ABANDONED_AFK_VALUE = 76;
    /**
     * <code>CHAT_MESSAGE_PLAYER_ABANDONED_DISCONNECTED_TOO_LONG = 77;</code>
     */
    public static final int CHAT_MESSAGE_PLAYER_ABANDONED_DISCONNECTED_TOO_LONG_VALUE = 77;
    /**
     * <code>CHAT_MESSAGE_WILL_NOT_BE_SCORED = 78;</code>
     */
    public static final int CHAT_MESSAGE_WILL_NOT_BE_SCORED_VALUE = 78;
    /**
     * <code>CHAT_MESSAGE_WILL_NOT_BE_SCORED_RANKED = 79;</code>
     */
    public static final int CHAT_MESSAGE_WILL_NOT_BE_SCORED_RANKED_VALUE = 79;
    /**
     * <code>CHAT_MESSAGE_WILL_NOT_BE_SCORED_NETWORK = 80;</code>
     */
    public static final int CHAT_MESSAGE_WILL_NOT_BE_SCORED_NETWORK_VALUE = 80;
    /**
     * <code>CHAT_MESSAGE_WILL_NOT_BE_SCORED_NETWORK_RANKED = 81;</code>
     */
    public static final int CHAT_MESSAGE_WILL_NOT_BE_SCORED_NETWORK_RANKED_VALUE = 81;
    /**
     * <code>CHAT_MESSAGE_CAN_QUIT_WITHOUT_ABANDON = 82;</code>
     */
    public static final int CHAT_MESSAGE_CAN_QUIT_WITHOUT_ABANDON_VALUE = 82;
    /**
     * <code>CHAT_MESSAGE_RANKED_GAME_STILL_SCORED_LEAVERS_GET_LOSS = 83;</code>
     */
    public static final int CHAT_MESSAGE_RANKED_GAME_STILL_SCORED_LEAVERS_GET_LOSS_VALUE = 83;
    /**
     * <code>CHAT_MESSAGE_ABANDON_RANKED_BEFORE_FIRST_BLOOD_PARTY = 84;</code>
     */
    public static final int CHAT_MESSAGE_ABANDON_RANKED_BEFORE_FIRST_BLOOD_PARTY_VALUE = 84;
    /**
     * <code>CHAT_MESSAGE_COMPENDIUM_LEVEL = 85;</code>
     */
    public static final int CHAT_MESSAGE_COMPENDIUM_LEVEL_VALUE = 85;
    /**
     * <code>CHAT_MESSAGE_VICTORY_PREDICTION_STREAK = 86;</code>
     */
    public static final int CHAT_MESSAGE_VICTORY_PREDICTION_STREAK_VALUE = 86;
    /**
     * <code>CHAT_MESSAGE_ASSASSIN_ANNOUNCE = 87;</code>
     */
    public static final int CHAT_MESSAGE_ASSASSIN_ANNOUNCE_VALUE = 87;
    /**
     * <code>CHAT_MESSAGE_ASSASSIN_SUCCESS = 88;</code>
     */
    public static final int CHAT_MESSAGE_ASSASSIN_SUCCESS_VALUE = 88;
    /**
     * <code>CHAT_MESSAGE_ASSASSIN_DENIED = 89;</code>
     */
    public static final int CHAT_MESSAGE_ASSASSIN_DENIED_VALUE = 89;
    /**
     * <code>CHAT_MESSAGE_VICTORY_PREDICTION_SINGLE_USER_CONFIRM = 90;</code>
     */
    public static final int CHAT_MESSAGE_VICTORY_PREDICTION_SINGLE_USER_CONFIRM_VALUE = 90;
    /**
     * <code>CHAT_MESSAGE_EFFIGY_KILL = 91;</code>
     */
    public static final int CHAT_MESSAGE_EFFIGY_KILL_VALUE = 91;
    /**
     * <code>CHAT_MESSAGE_VOICE_TEXT_BANNED_OVERFLOW = 92;</code>
     */
    public static final int CHAT_MESSAGE_VOICE_TEXT_BANNED_OVERFLOW_VALUE = 92;
    /**
     * <code>CHAT_MESSAGE_YEAR_BEAST_KILLED = 93;</code>
     */
    public static final int CHAT_MESSAGE_YEAR_BEAST_KILLED_VALUE = 93;
    /**
     * <code>CHAT_MESSAGE_PAUSE_COUNTDOWN = 94;</code>
     */
    public static final int CHAT_MESSAGE_PAUSE_COUNTDOWN_VALUE = 94;
    /**
     * <code>CHAT_MESSAGE_COINS_WAGERED = 95;</code>
     */
    public static final int CHAT_MESSAGE_COINS_WAGERED_VALUE = 95;
    /**
     * <code>CHAT_MESSAGE_HERO_NOMINATED_BAN = 96;</code>
     */
    public static final int CHAT_MESSAGE_HERO_NOMINATED_BAN_VALUE = 96;
    /**
     * <code>CHAT_MESSAGE_HERO_BANNED = 97;</code>
     */
    public static final int CHAT_MESSAGE_HERO_BANNED_VALUE = 97;
    /**
     * <code>CHAT_MESSAGE_HERO_BAN_COUNT = 98;</code>
     */
    public static final int CHAT_MESSAGE_HERO_BAN_COUNT_VALUE = 98;
    /**
     * <code>CHAT_MESSAGE_RIVER_PAINTED = 99;</code>
     */
    public static final int CHAT_MESSAGE_RIVER_PAINTED_VALUE = 99;
    /**
     * <code>CHAT_MESSAGE_SCAN_USED = 100;</code>
     */
    public static final int CHAT_MESSAGE_SCAN_USED_VALUE = 100;


    public final int getNumber() { return value; }

    public static DOTA_CHAT_MESSAGE valueOf(int value) {
      switch (value) {
        case -1: return CHAT_MESSAGE_INVALID;
        case 0: return CHAT_MESSAGE_HERO_KILL;
        case 1: return CHAT_MESSAGE_HERO_DENY;
        case 2: return CHAT_MESSAGE_BARRACKS_KILL;
        case 3: return CHAT_MESSAGE_TOWER_KILL;
        case 4: return CHAT_MESSAGE_TOWER_DENY;
        case 5: return CHAT_MESSAGE_FIRSTBLOOD;
        case 6: return CHAT_MESSAGE_STREAK_KILL;
        case 7: return CHAT_MESSAGE_BUYBACK;
        case 8: return CHAT_MESSAGE_AEGIS;
        case 9: return CHAT_MESSAGE_ROSHAN_KILL;
        case 10: return CHAT_MESSAGE_COURIER_LOST;
        case 11: return CHAT_MESSAGE_COURIER_RESPAWNED;
        case 12: return CHAT_MESSAGE_GLYPH_USED;
        case 13: return CHAT_MESSAGE_ITEM_PURCHASE;
        case 14: return CHAT_MESSAGE_CONNECT;
        case 15: return CHAT_MESSAGE_DISCONNECT;
        case 16: return CHAT_MESSAGE_DISCONNECT_WAIT_FOR_RECONNECT;
        case 17: return CHAT_MESSAGE_DISCONNECT_TIME_REMAINING;
        case 18: return CHAT_MESSAGE_DISCONNECT_TIME_REMAINING_PLURAL;
        case 19: return CHAT_MESSAGE_RECONNECT;
        case 20: return CHAT_MESSAGE_PLAYER_LEFT;
        case 21: return CHAT_MESSAGE_SAFE_TO_LEAVE;
        case 22: return CHAT_MESSAGE_RUNE_PICKUP;
        case 23: return CHAT_MESSAGE_RUNE_BOTTLE;
        case 24: return CHAT_MESSAGE_INTHEBAG;
        case 25: return CHAT_MESSAGE_SECRETSHOP;
        case 26: return CHAT_MESSAGE_ITEM_AUTOPURCHASED;
        case 27: return CHAT_MESSAGE_ITEMS_COMBINED;
        case 28: return CHAT_MESSAGE_SUPER_CREEPS;
        case 29: return CHAT_MESSAGE_CANT_USE_ACTION_ITEM;
        case 30: return CHAT_MESSAGE_CHARGES_EXHAUSTED;
        case 31: return CHAT_MESSAGE_CANTPAUSE;
        case 32: return CHAT_MESSAGE_NOPAUSESLEFT;
        case 33: return CHAT_MESSAGE_CANTPAUSEYET;
        case 34: return CHAT_MESSAGE_PAUSED;
        case 35: return CHAT_MESSAGE_UNPAUSE_COUNTDOWN;
        case 36: return CHAT_MESSAGE_UNPAUSED;
        case 37: return CHAT_MESSAGE_AUTO_UNPAUSED;
        case 38: return CHAT_MESSAGE_YOUPAUSED;
        case 39: return CHAT_MESSAGE_CANTUNPAUSETEAM;
        case 41: return CHAT_MESSAGE_VOICE_TEXT_BANNED;
        case 42: return CHAT_MESSAGE_SPECTATORS_WATCHING_THIS_GAME;
        case 43: return CHAT_MESSAGE_REPORT_REMINDER;
        case 44: return CHAT_MESSAGE_ECON_ITEM;
        case 45: return CHAT_MESSAGE_TAUNT;
        case 46: return CHAT_MESSAGE_RANDOM;
        case 47: return CHAT_MESSAGE_RD_TURN;
        case 49: return CHAT_MESSAGE_DROP_RATE_BONUS;
        case 50: return CHAT_MESSAGE_NO_BATTLE_POINTS;
        case 51: return CHAT_MESSAGE_DENIED_AEGIS;
        case 52: return CHAT_MESSAGE_INFORMATIONAL;
        case 53: return CHAT_MESSAGE_AEGIS_STOLEN;
        case 54: return CHAT_MESSAGE_ROSHAN_CANDY;
        case 55: return CHAT_MESSAGE_ITEM_GIFTED;
        case 56: return CHAT_MESSAGE_HERO_KILL_WITH_GREEVIL;
        case 57: return CHAT_MESSAGE_HOLDOUT_TOWER_DESTROYED;
        case 58: return CHAT_MESSAGE_HOLDOUT_WALL_DESTROYED;
        case 59: return CHAT_MESSAGE_HOLDOUT_WALL_FINISHED;
        case 62: return CHAT_MESSAGE_PLAYER_LEFT_LIMITED_HERO;
        case 63: return CHAT_MESSAGE_ABANDON_LIMITED_HERO_EXPLANATION;
        case 64: return CHAT_MESSAGE_DISCONNECT_LIMITED_HERO;
        case 65: return CHAT_MESSAGE_LOW_PRIORITY_COMPLETED_EXPLANATION;
        case 66: return CHAT_MESSAGE_RECRUITMENT_DROP_RATE_BONUS;
        case 67: return CHAT_MESSAGE_FROSTIVUS_SHINING_BOOSTER_ACTIVE;
        case 73: return CHAT_MESSAGE_PLAYER_LEFT_AFK;
        case 74: return CHAT_MESSAGE_PLAYER_LEFT_DISCONNECTED_TOO_LONG;
        case 75: return CHAT_MESSAGE_PLAYER_ABANDONED;
        case 76: return CHAT_MESSAGE_PLAYER_ABANDONED_AFK;
        case 77: return CHAT_MESSAGE_PLAYER_ABANDONED_DISCONNECTED_TOO_LONG;
        case 78: return CHAT_MESSAGE_WILL_NOT_BE_SCORED;
        case 79: return CHAT_MESSAGE_WILL_NOT_BE_SCORED_RANKED;
        case 80: return CHAT_MESSAGE_WILL_NOT_BE_SCORED_NETWORK;
        case 81: return CHAT_MESSAGE_WILL_NOT_BE_SCORED_NETWORK_RANKED;
        case 82: return CHAT_MESSAGE_CAN_QUIT_WITHOUT_ABANDON;
        case 83: return CHAT_MESSAGE_RANKED_GAME_STILL_SCORED_LEAVERS_GET_LOSS;
        case 84: return CHAT_MESSAGE_ABANDON_RANKED_BEFORE_FIRST_BLOOD_PARTY;
        case 85: return CHAT_MESSAGE_COMPENDIUM_LEVEL;
        case 86: return CHAT_MESSAGE_VICTORY_PREDICTION_STREAK;
        case 87: return CHAT_MESSAGE_ASSASSIN_ANNOUNCE;
        case 88: return CHAT_MESSAGE_ASSASSIN_SUCCESS;
        case 89: return CHAT_MESSAGE_ASSASSIN_DENIED;
        case 90: return CHAT_MESSAGE_VICTORY_PREDICTION_SINGLE_USER_CONFIRM;
        case 91: return CHAT_MESSAGE_EFFIGY_KILL;
        case 92: return CHAT_MESSAGE_VOICE_TEXT_BANNED_OVERFLOW;
        case 93: return CHAT_MESSAGE_YEAR_BEAST_KILLED;
        case 94: return CHAT_MESSAGE_PAUSE_COUNTDOWN;
        case 95: return CHAT_MESSAGE_COINS_WAGERED;
        case 96: return CHAT_MESSAGE_HERO_NOMINATED_BAN;
        case 97: return CHAT_MESSAGE_HERO_BANNED;
        case 98: return CHAT_MESSAGE_HERO_BAN_COUNT;
        case 99: return CHAT_MESSAGE_RIVER_PAINTED;
        case 100: return CHAT_MESSAGE_SCAN_USED;
        default: return null;
      }
    }

    public static com.google.protobuf.Internal.EnumLiteMap<DOTA_CHAT_MESSAGE>
        internalGetValueMap() {
      return internalValueMap;
    }
    private static com.google.protobuf.Internal.EnumLiteMap<DOTA_CHAT_MESSAGE>
        internalValueMap =
          new com.google.protobuf.Internal.EnumLiteMap<DOTA_CHAT_MESSAGE>() {
            public DOTA_CHAT_MESSAGE findValueByNumber(int number) {
              return DOTA_CHAT_MESSAGE.valueOf(number);
            }
          };

    public final com.google.protobuf.Descriptors.EnumValueDescriptor
        getValueDescriptor() {
      return getDescriptor().getValues().get(index);
    }
    public final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptorForType() {
      return getDescriptor();
    }
    public static final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptor() {
      return skadistats.clarity.wire.common.proto.DotaUserMessages.getDescriptor().getEnumTypes().get(1);
    }

    private static final DOTA_CHAT_MESSAGE[] VALUES = values();

    public static DOTA_CHAT_MESSAGE valueOf(
        com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
      if (desc.getType() != getDescriptor()) {
        throw new java.lang.IllegalArgumentException(
          "EnumValueDescriptor is not for this type.");
      }
      return VALUES[desc.getIndex()];
    }

    private final int index;
    private final int value;

    private DOTA_CHAT_MESSAGE(int index, int value) {
      this.index = index;
      this.value = value;
    }

    // @@protoc_insertion_point(enum_scope:DOTA_CHAT_MESSAGE)
  }

  /**
   * Protobuf enum {@code DOTA_NO_BATTLE_POINTS_REASONS}
   */
  public enum DOTA_NO_BATTLE_POINTS_REASONS
      implements com.google.protobuf.ProtocolMessageEnum {
    /**
     * <code>NO_BATTLE_POINTS_WRONG_LOBBY_TYPE = 1;</code>
     */
    NO_BATTLE_POINTS_WRONG_LOBBY_TYPE(0, 1),
    /**
     * <code>NO_BATTLE_POINTS_PRACTICE_BOTS = 2;</code>
     */
    NO_BATTLE_POINTS_PRACTICE_BOTS(1, 2),
    /**
     * <code>NO_BATTLE_POINTS_CHEATS_ENABLED = 3;</code>
     */
    NO_BATTLE_POINTS_CHEATS_ENABLED(2, 3),
    /**
     * <code>NO_BATTLE_POINTS_LOW_PRIORITY = 4;</code>
     */
    NO_BATTLE_POINTS_LOW_PRIORITY(3, 4),
    ;

    /**
     * <code>NO_BATTLE_POINTS_WRONG_LOBBY_TYPE = 1;</code>
     */
    public static final int NO_BATTLE_POINTS_WRONG_LOBBY_TYPE_VALUE = 1;
    /**
     * <code>NO_BATTLE_POINTS_PRACTICE_BOTS = 2;</code>
     */
    public static final int NO_BATTLE_POINTS_PRACTICE_BOTS_VALUE = 2;
    /**
     * <code>NO_BATTLE_POINTS_CHEATS_ENABLED = 3;</code>
     */
    public static final int NO_BATTLE_POINTS_CHEATS_ENABLED_VALUE = 3;
    /**
     * <code>NO_BATTLE_POINTS_LOW_PRIORITY = 4;</code>
     */
    public static final int NO_BATTLE_POINTS_LOW_PRIORITY_VALUE = 4;


    public final int getNumber() { return value; }

    public static DOTA_NO_BATTLE_POINTS_REASONS valueOf(int value) {
      switch (value) {
        case 1: return NO_BATTLE_POINTS_WRONG_LOBBY_TYPE;
        case 2: return NO_BATTLE_POINTS_PRACTICE_BOTS;
        case 3: return NO_BATTLE_POINTS_CHEATS_ENABLED;
        case 4: return NO_BATTLE_POINTS_LOW_PRIORITY;
        default: return null;
      }
    }

    public static com.google.protobuf.Internal.EnumLiteMap<DOTA_NO_BATTLE_POINTS_REASONS>
        internalGetValueMap() {
      return internalValueMap;
    }
    private static com.google.protobuf.Internal.EnumLiteMap<DOTA_NO_BATTLE_POINTS_REASONS>
        internalValueMap =
          new com.google.protobuf.Internal.EnumLiteMap<DOTA_NO_BATTLE_POINTS_REASONS>() {
            public DOTA_NO_BATTLE_POINTS_REASONS findValueByNumber(int number) {
              return DOTA_NO_BATTLE_POINTS_REASONS.valueOf(number);
            }
          };

    public final com.google.protobuf.Descriptors.EnumValueDescriptor
        getValueDescriptor() {
      return getDescriptor().getValues().get(index);
    }
    public final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptorForType() {
      return getDescriptor();
    }
    public static final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptor() {
      return skadistats.clarity.wire.common.proto.DotaUserMessages.getDescriptor().getEnumTypes().get(2);
    }

    private static final DOTA_NO_BATTLE_POINTS_REASONS[] VALUES = values();

    public static DOTA_NO_BATTLE_POINTS_REASONS valueOf(
        com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
      if (desc.getType() != getDescriptor()) {
        throw new java.lang.IllegalArgumentException(
          "EnumValueDescriptor is not for this type.");
      }
      return VALUES[desc.getIndex()];
    }

    private final int index;
    private final int value;

    private DOTA_NO_BATTLE_POINTS_REASONS(int index, int value) {
      this.index = index;
      this.value = value;
    }

    // @@protoc_insertion_point(enum_scope:DOTA_NO_BATTLE_POINTS_REASONS)
  }

  /**
   * Protobuf enum {@code DOTA_REPLAY_STATE_EVENT}
   */
  public enum DOTA_REPLAY_STATE_EVENT
      implements com.google.protobuf.ProtocolMessageEnum {
    /**
     * <code>DOTA_REPLAY_STATE_EVENT_GAME_START = 1;</code>
     */
    DOTA_REPLAY_STATE_EVENT_GAME_START(0, 1),
    /**
     * <code>DOTA_REPLAY_STATE_EVENT_STARTING_HORN = 2;</code>
     */
    DOTA_REPLAY_STATE_EVENT_STARTING_HORN(1, 2),
    /**
     * <code>DOTA_REPLAY_STATE_EVENT_FIRST_BLOOD = 3;</code>
     */
    DOTA_REPLAY_STATE_EVENT_FIRST_BLOOD(2, 3),
    ;

    /**
     * <code>DOTA_REPLAY_STATE_EVENT_GAME_START = 1;</code>
     */
    public static final int DOTA_REPLAY_STATE_EVENT_GAME_START_VALUE = 1;
    /**
     * <code>DOTA_REPLAY_STATE_EVENT_STARTING_HORN = 2;</code>
     */
    public static final int DOTA_REPLAY_STATE_EVENT_STARTING_HORN_VALUE = 2;
    /**
     * <code>DOTA_REPLAY_STATE_EVENT_FIRST_BLOOD = 3;</code>
     */
    public static final int DOTA_REPLAY_STATE_EVENT_FIRST_BLOOD_VALUE = 3;


    public final int getNumber() { return value; }

    public static DOTA_REPLAY_STATE_EVENT valueOf(int value) {
      switch (value) {
        case 1: return DOTA_REPLAY_STATE_EVENT_GAME_START;
        case 2: return DOTA_REPLAY_STATE_EVENT_STARTING_HORN;
        case 3: return DOTA_REPLAY_STATE_EVENT_FIRST_BLOOD;
        default: return null;
      }
    }

    public static com.google.protobuf.Internal.EnumLiteMap<DOTA_REPLAY_STATE_EVENT>
        internalGetValueMap() {
      return internalValueMap;
    }
    private static com.google.protobuf.Internal.EnumLiteMap<DOTA_REPLAY_STATE_EVENT>
        internalValueMap =
          new com.google.protobuf.Internal.EnumLiteMap<DOTA_REPLAY_STATE_EVENT>() {
            public DOTA_REPLAY_STATE_EVENT findValueByNumber(int number) {
              return DOTA_REPLAY_STATE_EVENT.valueOf(number);
            }
          };

    public final com.google.protobuf.Descriptors.EnumValueDescriptor
        getValueDescriptor() {
      return getDescriptor().getValues().get(index);
    }
    public final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptorForType() {
      return getDescriptor();
    }
    public static final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptor() {
      return skadistats.clarity.wire.common.proto.DotaUserMessages.getDescriptor().getEnumTypes().get(3);
    }

    private static final DOTA_REPLAY_STATE_EVENT[] VALUES = values();

    public static DOTA_REPLAY_STATE_EVENT valueOf(
        com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
      if (desc.getType() != getDescriptor()) {
        throw new java.lang.IllegalArgumentException(
          "EnumValueDescriptor is not for this type.");
      }
      return VALUES[desc.getIndex()];
    }

    private final int index;
    private final int value;

    private DOTA_REPLAY_STATE_EVENT(int index, int value) {
      this.index = index;
      this.value = value;
    }

    // @@protoc_insertion_point(enum_scope:DOTA_REPLAY_STATE_EVENT)
  }

  /**
   * Protobuf enum {@code DOTA_CHAT_INFORMATIONAL}
   */
  public enum DOTA_CHAT_INFORMATIONAL
      implements com.google.protobuf.ProtocolMessageEnum {
    /**
     * <code>INFO_COOP_BATTLE_POINTS_RULES = 1;</code>
     */
    INFO_COOP_BATTLE_POINTS_RULES(0, 1),
    /**
     * <code>INFO_FROSTIVUS_ABANDON_REMINDER = 2;</code>
     */
    INFO_FROSTIVUS_ABANDON_REMINDER(1, 2),
    /**
     * <code>INFO_RANKED_REMINDER = 3;</code>
     */
    INFO_RANKED_REMINDER(2, 3),
    /**
     * <code>INFO_COOP_LOW_PRIORITY_PASSIVE_REMINDER = 4;</code>
     */
    INFO_COOP_LOW_PRIORITY_PASSIVE_REMINDER(3, 4),
    ;

    /**
     * <code>INFO_COOP_BATTLE_POINTS_RULES = 1;</code>
     */
    public static final int INFO_COOP_BATTLE_POINTS_RULES_VALUE = 1;
    /**
     * <code>INFO_FROSTIVUS_ABANDON_REMINDER = 2;</code>
     */
    public static final int INFO_FROSTIVUS_ABANDON_REMINDER_VALUE = 2;
    /**
     * <code>INFO_RANKED_REMINDER = 3;</code>
     */
    public static final int INFO_RANKED_REMINDER_VALUE = 3;
    /**
     * <code>INFO_COOP_LOW_PRIORITY_PASSIVE_REMINDER = 4;</code>
     */
    public static final int INFO_COOP_LOW_PRIORITY_PASSIVE_REMINDER_VALUE = 4;


    public final int getNumber() { return value; }

    public static DOTA_CHAT_INFORMATIONAL valueOf(int value) {
      switch (value) {
        case 1: return INFO_COOP_BATTLE_POINTS_RULES;
        case 2: return INFO_FROSTIVUS_ABANDON_REMINDER;
        case 3: return INFO_RANKED_REMINDER;
        case 4: return INFO_COOP_LOW_PRIORITY_PASSIVE_REMINDER;
        default: return null;
      }
    }

    public static com.google.protobuf.Internal.EnumLiteMap<DOTA_CHAT_INFORMATIONAL>
        internalGetValueMap() {
      return internalValueMap;
    }
    private static com.google.protobuf.Internal.EnumLiteMap<DOTA_CHAT_INFORMATIONAL>
        internalValueMap =
          new com.google.protobuf.Internal.EnumLiteMap<DOTA_CHAT_INFORMATIONAL>() {
            public DOTA_CHAT_INFORMATIONAL findValueByNumber(int number) {
              return DOTA_CHAT_INFORMATIONAL.valueOf(number);
            }
          };

    public final com.google.protobuf.Descriptors.EnumValueDescriptor
        getValueDescriptor() {
      return getDescriptor().getValues().get(index);
    }
    public final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptorForType() {
      return getDescriptor();
    }
    public static final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptor() {
      return skadistats.clarity.wire.common.proto.DotaUserMessages.getDescriptor().getEnumTypes().get(4);
    }

    private static final DOTA_CHAT_INFORMATIONAL[] VALUES = values();

    public static DOTA_CHAT_INFORMATIONAL valueOf(
        com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
      if (desc.getType() != getDescriptor()) {
        throw new java.lang.IllegalArgumentException(
          "EnumValueDescriptor is not for this type.");
      }
      return VALUES[desc.getIndex()];
    }

    private final int index;
    private final int value;

    private DOTA_CHAT_INFORMATIONAL(int index, int value) {
      this.index = index;
      this.value = value;
    }

    // @@protoc_insertion_point(enum_scope:DOTA_CHAT_INFORMATIONAL)
  }

  /**
   * Protobuf enum {@code DOTA_ABILITY_PING_TYPE}
   */
  public enum DOTA_ABILITY_PING_TYPE
      implements com.google.protobuf.ProtocolMessageEnum {
    /**
     * <code>ABILITY_PING_READY = 1;</code>
     */
    ABILITY_PING_READY(0, 1),
    /**
     * <code>ABILITY_PING_MANA = 2;</code>
     */
    ABILITY_PING_MANA(1, 2),
    /**
     * <code>ABILITY_PING_COOLDOWN = 3;</code>
     */
    ABILITY_PING_COOLDOWN(2, 3),
    /**
     * <code>ABILITY_PING_ENEMY = 4;</code>
     */
    ABILITY_PING_ENEMY(3, 4),
    /**
     * <code>ABILITY_PING_UNLEARNED = 5;</code>
     */
    ABILITY_PING_UNLEARNED(4, 5),
    ;

    /**
     * <code>ABILITY_PING_READY = 1;</code>
     */
    public static final int ABILITY_PING_READY_VALUE = 1;
    /**
     * <code>ABILITY_PING_MANA = 2;</code>
     */
    public static final int ABILITY_PING_MANA_VALUE = 2;
    /**
     * <code>ABILITY_PING_COOLDOWN = 3;</code>
     */
    public static final int ABILITY_PING_COOLDOWN_VALUE = 3;
    /**
     * <code>ABILITY_PING_ENEMY = 4;</code>
     */
    public static final int ABILITY_PING_ENEMY_VALUE = 4;
    /**
     * <code>ABILITY_PING_UNLEARNED = 5;</code>
     */
    public static final int ABILITY_PING_UNLEARNED_VALUE = 5;


    public final int getNumber() { return value; }

    public static DOTA_ABILITY_PING_TYPE valueOf(int value) {
      switch (value) {
        case 1: return ABILITY_PING_READY;
        case 2: return ABILITY_PING_MANA;
        case 3: return ABILITY_PING_COOLDOWN;
        case 4: return ABILITY_PING_ENEMY;
        case 5: return ABILITY_PING_UNLEARNED;
        default: return null;
      }
    }

    public static com.google.protobuf.Internal.EnumLiteMap<DOTA_ABILITY_PING_TYPE>
        internalGetValueMap() {
      return internalValueMap;
    }
    private static com.google.protobuf.Internal.EnumLiteMap<DOTA_ABILITY_PING_TYPE>
        internalValueMap =
          new com.google.protobuf.Internal.EnumLiteMap<DOTA_ABILITY_PING_TYPE>() {
            public DOTA_ABILITY_PING_TYPE findValueByNumber(int number) {
              return DOTA_ABILITY_PING_TYPE.valueOf(number);
            }
          };

    public final com.google.protobuf.Descriptors.EnumValueDescriptor
        getValueDescriptor() {
      return getDescriptor().getValues().get(index);
    }
    public final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptorForType() {
      return getDescriptor();
    }
    public static final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptor() {
      return skadistats.clarity.wire.common.proto.DotaUserMessages.getDescriptor().getEnumTypes().get(5);
    }

    private static final DOTA_ABILITY_PING_TYPE[] VALUES = values();

    public static DOTA_ABILITY_PING_TYPE valueOf(
        com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
      if (desc.getType() != getDescriptor()) {
        throw new java.lang.IllegalArgumentException(
          "EnumValueDescriptor is not for this type.");
      }
      return VALUES[desc.getIndex()];
    }

    private final int index;
    private final int value;

    private DOTA_ABILITY_PING_TYPE(int index, int value) {
      this.index = index;
      this.value = value;
    }

    // @@protoc_insertion_point(enum_scope:DOTA_ABILITY_PING_TYPE)
  }

  /**
   * Protobuf enum {@code EDotaEntityMessages}
   */
  public enum EDotaEntityMessages
      implements com.google.protobuf.ProtocolMessageEnum {
    /**
     * <code>DOTA_UNIT_SPEECH = 0;</code>
     */
    DOTA_UNIT_SPEECH(0, 0),
    /**
     * <code>DOTA_UNIT_SPEECH_MUTE = 1;</code>
     */
    DOTA_UNIT_SPEECH_MUTE(1, 1),
    /**
     * <code>DOTA_UNIT_ADD_GESTURE = 2;</code>
     */
    DOTA_UNIT_ADD_GESTURE(2, 2),
    /**
     * <code>DOTA_UNIT_REMOVE_GESTURE = 3;</code>
     */
    DOTA_UNIT_REMOVE_GESTURE(3, 3),
    /**
     * <code>DOTA_UNIT_REMOVE_ALL_GESTURES = 4;</code>
     */
    DOTA_UNIT_REMOVE_ALL_GESTURES(4, 4),
    /**
     * <code>DOTA_UNIT_FADE_GESTURE = 6;</code>
     */
    DOTA_UNIT_FADE_GESTURE(5, 6),
    /**
     * <code>DOTA_UNIT_SPEECH_CLIENTSIDE_RULES = 7;</code>
     */
    DOTA_UNIT_SPEECH_CLIENTSIDE_RULES(6, 7),
    ;

    /**
     * <code>DOTA_UNIT_SPEECH = 0;</code>
     */
    public static final int DOTA_UNIT_SPEECH_VALUE = 0;
    /**
     * <code>DOTA_UNIT_SPEECH_MUTE = 1;</code>
     */
    public static final int DOTA_UNIT_SPEECH_MUTE_VALUE = 1;
    /**
     * <code>DOTA_UNIT_ADD_GESTURE = 2;</code>
     */
    public static final int DOTA_UNIT_ADD_GESTURE_VALUE = 2;
    /**
     * <code>DOTA_UNIT_REMOVE_GESTURE = 3;</code>
     */
    public static final int DOTA_UNIT_REMOVE_GESTURE_VALUE = 3;
    /**
     * <code>DOTA_UNIT_REMOVE_ALL_GESTURES = 4;</code>
     */
    public static final int DOTA_UNIT_REMOVE_ALL_GESTURES_VALUE = 4;
    /**
     * <code>DOTA_UNIT_FADE_GESTURE = 6;</code>
     */
    public static final int DOTA_UNIT_FADE_GESTURE_VALUE = 6;
    /**
     * <code>DOTA_UNIT_SPEECH_CLIENTSIDE_RULES = 7;</code>
     */
    public static final int DOTA_UNIT_SPEECH_CLIENTSIDE_RULES_VALUE = 7;


    public final int getNumber() { return value; }

    public static EDotaEntityMessages valueOf(int value) {
      switch (value) {
        case 0: return DOTA_UNIT_SPEECH;
        case 1: return DOTA_UNIT_SPEECH_MUTE;
        case 2: return DOTA_UNIT_ADD_GESTURE;
        case 3: return DOTA_UNIT_REMOVE_GESTURE;
        case 4: return DOTA_UNIT_REMOVE_ALL_GESTURES;
        case 6: return DOTA_UNIT_FADE_GESTURE;
        case 7: return DOTA_UNIT_SPEECH_CLIENTSIDE_RULES;
        default: return null;
      }
    }

    public static com.google.protobuf.Internal.EnumLiteMap<EDotaEntityMessages>
        internalGetValueMap() {
      return internalValueMap;
    }
    private static com.google.protobuf.Internal.EnumLiteMap<EDotaEntityMessages>
        internalValueMap =
          new com.google.protobuf.Internal.EnumLiteMap<EDotaEntityMessages>() {
            public EDotaEntityMessages findValueByNumber(int number) {
              return EDotaEntityMessages.valueOf(number);
            }
          };

    public final com.google.protobuf.Descriptors.EnumValueDescriptor
        getValueDescriptor() {
      return getDescriptor().getValues().get(index);
    }
    public final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptorForType() {
      return getDescriptor();
    }
    public static final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptor() {
      return skadistats.clarity.wire.common.proto.DotaUserMessages.getDescriptor().getEnumTypes().get(6);
    }

    private static final EDotaEntityMessages[] VALUES = values();

    public static EDotaEntityMessages valueOf(
        com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
      if (desc.getType() != getDescriptor()) {
        throw new java.lang.IllegalArgumentException(
          "EnumValueDescriptor is not for this type.");
      }
      return VALUES[desc.getIndex()];
    }

    private final int index;
    private final int value;

    private EDotaEntityMessages(int index, int value) {
      this.index = index;
      this.value = value;
    }

    // @@protoc_insertion_point(enum_scope:EDotaEntityMessages)
  }

  /**
   * Protobuf enum {@code DOTA_PARTICLE_MESSAGE}
   */
  public enum DOTA_PARTICLE_MESSAGE
      implements com.google.protobuf.ProtocolMessageEnum {
    /**
     * <code>DOTA_PARTICLE_MANAGER_EVENT_CREATE = 0;</code>
     */
    DOTA_PARTICLE_MANAGER_EVENT_CREATE(0, 0),
    /**
     * <code>DOTA_PARTICLE_MANAGER_EVENT_UPDATE = 1;</code>
     */
    DOTA_PARTICLE_MANAGER_EVENT_UPDATE(1, 1),
    /**
     * <code>DOTA_PARTICLE_MANAGER_EVENT_UPDATE_FORWARD = 2;</code>
     */
    DOTA_PARTICLE_MANAGER_EVENT_UPDATE_FORWARD(2, 2),
    /**
     * <code>DOTA_PARTICLE_MANAGER_EVENT_UPDATE_ORIENTATION = 3;</code>
     */
    DOTA_PARTICLE_MANAGER_EVENT_UPDATE_ORIENTATION(3, 3),
    /**
     * <code>DOTA_PARTICLE_MANAGER_EVENT_UPDATE_FALLBACK = 4;</code>
     */
    DOTA_PARTICLE_MANAGER_EVENT_UPDATE_FALLBACK(4, 4),
    /**
     * <code>DOTA_PARTICLE_MANAGER_EVENT_UPDATE_ENT = 5;</code>
     */
    DOTA_PARTICLE_MANAGER_EVENT_UPDATE_ENT(5, 5),
    /**
     * <code>DOTA_PARTICLE_MANAGER_EVENT_UPDATE_OFFSET = 6;</code>
     */
    DOTA_PARTICLE_MANAGER_EVENT_UPDATE_OFFSET(6, 6),
    /**
     * <code>DOTA_PARTICLE_MANAGER_EVENT_DESTROY = 7;</code>
     */
    DOTA_PARTICLE_MANAGER_EVENT_DESTROY(7, 7),
    /**
     * <code>DOTA_PARTICLE_MANAGER_EVENT_DESTROY_INVOLVING = 8;</code>
     */
    DOTA_PARTICLE_MANAGER_EVENT_DESTROY_INVOLVING(8, 8),
    /**
     * <code>DOTA_PARTICLE_MANAGER_EVENT_RELEASE = 9;</code>
     */
    DOTA_PARTICLE_MANAGER_EVENT_RELEASE(9, 9),
    /**
     * <code>DOTA_PARTICLE_MANAGER_EVENT_LATENCY = 10;</code>
     */
    DOTA_PARTICLE_MANAGER_EVENT_LATENCY(10, 10),
    /**
     * <code>DOTA_PARTICLE_MANAGER_EVENT_SHOULD_DRAW = 11;</code>
     */
    DOTA_PARTICLE_MANAGER_EVENT_SHOULD_DRAW(11, 11),
    /**
     * <code>DOTA_PARTICLE_MANAGER_EVENT_FROZEN = 12;</code>
     */
    DOTA_PARTICLE_MANAGER_EVENT_FROZEN(12, 12),
    /**
     * <code>DOTA_PARTICLE_MANAGER_EVENT_CHANGE_CONTROL_POINT_ATTACHMENT = 13;</code>
     */
    DOTA_PARTICLE_MANAGER_EVENT_CHANGE_CONTROL_POINT_ATTACHMENT(13, 13),
    /**
     * <code>DOTA_PARTICLE_MANAGER_EVENT_UPDATE_ENTITY_POSITION = 14;</code>
     */
    DOTA_PARTICLE_MANAGER_EVENT_UPDATE_ENTITY_POSITION(14, 14),
    ;

    /**
     * <code>DOTA_PARTICLE_MANAGER_EVENT_CREATE = 0;</code>
     */
    public static final int DOTA_PARTICLE_MANAGER_EVENT_CREATE_VALUE = 0;
    /**
     * <code>DOTA_PARTICLE_MANAGER_EVENT_UPDATE = 1;</code>
     */
    public static final int DOTA_PARTICLE_MANAGER_EVENT_UPDATE_VALUE = 1;
    /**
     * <code>DOTA_PARTICLE_MANAGER_EVENT_UPDATE_FORWARD = 2;</code>
     */
    public static final int DOTA_PARTICLE_MANAGER_EVENT_UPDATE_FORWARD_VALUE = 2;
    /**
     * <code>DOTA_PARTICLE_MANAGER_EVENT_UPDATE_ORIENTATION = 3;</code>
     */
    public static final int DOTA_PARTICLE_MANAGER_EVENT_UPDATE_ORIENTATION_VALUE = 3;
    /**
     * <code>DOTA_PARTICLE_MANAGER_EVENT_UPDATE_FALLBACK = 4;</code>
     */
    public static final int DOTA_PARTICLE_MANAGER_EVENT_UPDATE_FALLBACK_VALUE = 4;
    /**
     * <code>DOTA_PARTICLE_MANAGER_EVENT_UPDATE_ENT = 5;</code>
     */
    public static final int DOTA_PARTICLE_MANAGER_EVENT_UPDATE_ENT_VALUE = 5;
    /**
     * <code>DOTA_PARTICLE_MANAGER_EVENT_UPDATE_OFFSET = 6;</code>
     */
    public static final int DOTA_PARTICLE_MANAGER_EVENT_UPDATE_OFFSET_VALUE = 6;
    /**
     * <code>DOTA_PARTICLE_MANAGER_EVENT_DESTROY = 7;</code>
     */
    public static final int DOTA_PARTICLE_MANAGER_EVENT_DESTROY_VALUE = 7;
    /**
     * <code>DOTA_PARTICLE_MANAGER_EVENT_DESTROY_INVOLVING = 8;</code>
     */
    public static final int DOTA_PARTICLE_MANAGER_EVENT_DESTROY_INVOLVING_VALUE = 8;
    /**
     * <code>DOTA_PARTICLE_MANAGER_EVENT_RELEASE = 9;</code>
     */
    public static final int DOTA_PARTICLE_MANAGER_EVENT_RELEASE_VALUE = 9;
    /**
     * <code>DOTA_PARTICLE_MANAGER_EVENT_LATENCY = 10;</code>
     */
    public static final int DOTA_PARTICLE_MANAGER_EVENT_LATENCY_VALUE = 10;
    /**
     * <code>DOTA_PARTICLE_MANAGER_EVENT_SHOULD_DRAW = 11;</code>
     */
    public static final int DOTA_PARTICLE_MANAGER_EVENT_SHOULD_DRAW_VALUE = 11;
    /**
     * <code>DOTA_PARTICLE_MANAGER_EVENT_FROZEN = 12;</code>
     */
    public static final int DOTA_PARTICLE_MANAGER_EVENT_FROZEN_VALUE = 12;
    /**
     * <code>DOTA_PARTICLE_MANAGER_EVENT_CHANGE_CONTROL_POINT_ATTACHMENT = 13;</code>
     */
    public static final int DOTA_PARTICLE_MANAGER_EVENT_CHANGE_CONTROL_POINT_ATTACHMENT_VALUE = 13;
    /**
     * <code>DOTA_PARTICLE_MANAGER_EVENT_UPDATE_ENTITY_POSITION = 14;</code>
     */
    public static final int DOTA_PARTICLE_MANAGER_EVENT_UPDATE_ENTITY_POSITION_VALUE = 14;


    public final int getNumber() { return value; }

    public static DOTA_PARTICLE_MESSAGE valueOf(int value) {
      switch (value) {
        case 0: return DOTA_PARTICLE_MANAGER_EVENT_CREATE;
        case 1: return DOTA_PARTICLE_MANAGER_EVENT_UPDATE;
        case 2: return DOTA_PARTICLE_MANAGER_EVENT_UPDATE_FORWARD;
        case 3: return DOTA_PARTICLE_MANAGER_EVENT_UPDATE_ORIENTATION;
        case 4: return DOTA_PARTICLE_MANAGER_EVENT_UPDATE_FALLBACK;
        case 5: return DOTA_PARTICLE_MANAGER_EVENT_UPDATE_ENT;
        case 6: return DOTA_PARTICLE_MANAGER_EVENT_UPDATE_OFFSET;
        case 7: return DOTA_PARTICLE_MANAGER_EVENT_DESTROY;
        case 8: return DOTA_PARTICLE_MANAGER_EVENT_DESTROY_INVOLVING;
        case 9: return DOTA_PARTICLE_MANAGER_EVENT_RELEASE;
        case 10: return DOTA_PARTICLE_MANAGER_EVENT_LATENCY;
        case 11: return DOTA_PARTICLE_MANAGER_EVENT_SHOULD_DRAW;
        case 12: return DOTA_PARTICLE_MANAGER_EVENT_FROZEN;
        case 13: return DOTA_PARTICLE_MANAGER_EVENT_CHANGE_CONTROL_POINT_ATTACHMENT;
        case 14: return DOTA_PARTICLE_MANAGER_EVENT_UPDATE_ENTITY_POSITION;
        default: return null;
      }
    }

    public static com.google.protobuf.Internal.EnumLiteMap<DOTA_PARTICLE_MESSAGE>
        internalGetValueMap() {
      return internalValueMap;
    }
    private static com.google.protobuf.Internal.EnumLiteMap<DOTA_PARTICLE_MESSAGE>
        internalValueMap =
          new com.google.protobuf.Internal.EnumLiteMap<DOTA_PARTICLE_MESSAGE>() {
            public DOTA_PARTICLE_MESSAGE findValueByNumber(int number) {
              return DOTA_PARTICLE_MESSAGE.valueOf(number);
            }
          };

    public final com.google.protobuf.Descriptors.EnumValueDescriptor
        getValueDescriptor() {
      return getDescriptor().getValues().get(index);
    }
    public final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptorForType() {
      return getDescriptor();
    }
    public static final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptor() {
      return skadistats.clarity.wire.common.proto.DotaUserMessages.getDescriptor().getEnumTypes().get(7);
    }

    private static final DOTA_PARTICLE_MESSAGE[] VALUES = values();

    public static DOTA_PARTICLE_MESSAGE valueOf(
        com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
      if (desc.getType() != getDescriptor()) {
        throw new java.lang.IllegalArgumentException(
          "EnumValueDescriptor is not for this type.");
      }
      return VALUES[desc.getIndex()];
    }

    private final int index;
    private final int value;

    private DOTA_PARTICLE_MESSAGE(int index, int value) {
      this.index = index;
      this.value = value;
    }

    // @@protoc_insertion_point(enum_scope:DOTA_PARTICLE_MESSAGE)
  }

  /**
   * Protobuf enum {@code DOTA_OVERHEAD_ALERT}
   */
  public enum DOTA_OVERHEAD_ALERT
      implements com.google.protobuf.ProtocolMessageEnum {
    /**
     * <code>OVERHEAD_ALERT_GOLD = 0;</code>
     */
    OVERHEAD_ALERT_GOLD(0, 0),
    /**
     * <code>OVERHEAD_ALERT_DENY = 1;</code>
     */
    OVERHEAD_ALERT_DENY(1, 1),
    /**
     * <code>OVERHEAD_ALERT_CRITICAL = 2;</code>
     */
    OVERHEAD_ALERT_CRITICAL(2, 2),
    /**
     * <code>OVERHEAD_ALERT_XP = 3;</code>
     */
    OVERHEAD_ALERT_XP(3, 3),
    /**
     * <code>OVERHEAD_ALERT_BONUS_SPELL_DAMAGE = 4;</code>
     */
    OVERHEAD_ALERT_BONUS_SPELL_DAMAGE(4, 4),
    /**
     * <code>OVERHEAD_ALERT_MISS = 5;</code>
     */
    OVERHEAD_ALERT_MISS(5, 5),
    /**
     * <code>OVERHEAD_ALERT_DAMAGE = 6;</code>
     */
    OVERHEAD_ALERT_DAMAGE(6, 6),
    /**
     * <code>OVERHEAD_ALERT_EVADE = 7;</code>
     */
    OVERHEAD_ALERT_EVADE(7, 7),
    /**
     * <code>OVERHEAD_ALERT_BLOCK = 8;</code>
     */
    OVERHEAD_ALERT_BLOCK(8, 8),
    /**
     * <code>OVERHEAD_ALERT_BONUS_POISON_DAMAGE = 9;</code>
     */
    OVERHEAD_ALERT_BONUS_POISON_DAMAGE(9, 9),
    /**
     * <code>OVERHEAD_ALERT_HEAL = 10;</code>
     */
    OVERHEAD_ALERT_HEAL(10, 10),
    /**
     * <code>OVERHEAD_ALERT_MANA_ADD = 11;</code>
     */
    OVERHEAD_ALERT_MANA_ADD(11, 11),
    /**
     * <code>OVERHEAD_ALERT_MANA_LOSS = 12;</code>
     */
    OVERHEAD_ALERT_MANA_LOSS(12, 12),
    /**
     * <code>OVERHEAD_ALERT_LAST_HIT_EARLY = 13;</code>
     */
    OVERHEAD_ALERT_LAST_HIT_EARLY(13, 13),
    /**
     * <code>OVERHEAD_ALERT_LAST_HIT_CLOSE = 14;</code>
     */
    OVERHEAD_ALERT_LAST_HIT_CLOSE(14, 14),
    /**
     * <code>OVERHEAD_ALERT_LAST_HIT_MISS = 15;</code>
     */
    OVERHEAD_ALERT_LAST_HIT_MISS(15, 15),
    /**
     * <code>OVERHEAD_ALERT_MAGICAL_BLOCK = 16;</code>
     */
    OVERHEAD_ALERT_MAGICAL_BLOCK(16, 16),
    ;

    /**
     * <code>OVERHEAD_ALERT_GOLD = 0;</code>
     */
    public static final int OVERHEAD_ALERT_GOLD_VALUE = 0;
    /**
     * <code>OVERHEAD_ALERT_DENY = 1;</code>
     */
    public static final int OVERHEAD_ALERT_DENY_VALUE = 1;
    /**
     * <code>OVERHEAD_ALERT_CRITICAL = 2;</code>
     */
    public static final int OVERHEAD_ALERT_CRITICAL_VALUE = 2;
    /**
     * <code>OVERHEAD_ALERT_XP = 3;</code>
     */
    public static final int OVERHEAD_ALERT_XP_VALUE = 3;
    /**
     * <code>OVERHEAD_ALERT_BONUS_SPELL_DAMAGE = 4;</code>
     */
    public static final int OVERHEAD_ALERT_BONUS_SPELL_DAMAGE_VALUE = 4;
    /**
     * <code>OVERHEAD_ALERT_MISS = 5;</code>
     */
    public static final int OVERHEAD_ALERT_MISS_VALUE = 5;
    /**
     * <code>OVERHEAD_ALERT_DAMAGE = 6;</code>
     */
    public static final int OVERHEAD_ALERT_DAMAGE_VALUE = 6;
    /**
     * <code>OVERHEAD_ALERT_EVADE = 7;</code>
     */
    public static final int OVERHEAD_ALERT_EVADE_VALUE = 7;
    /**
     * <code>OVERHEAD_ALERT_BLOCK = 8;</code>
     */
    public static final int OVERHEAD_ALERT_BLOCK_VALUE = 8;
    /**
     * <code>OVERHEAD_ALERT_BONUS_POISON_DAMAGE = 9;</code>
     */
    public static final int OVERHEAD_ALERT_BONUS_POISON_DAMAGE_VALUE = 9;
    /**
     * <code>OVERHEAD_ALERT_HEAL = 10;</code>
     */
    public static final int OVERHEAD_ALERT_HEAL_VALUE = 10;
    /**
     * <code>OVERHEAD_ALERT_MANA_ADD = 11;</code>
     */
    public static final int OVERHEAD_ALERT_MANA_ADD_VALUE = 11;
    /**
     * <code>OVERHEAD_ALERT_MANA_LOSS = 12;</code>
     */
    public static final int OVERHEAD_ALERT_MANA_LOSS_VALUE = 12;
    /**
     * <code>OVERHEAD_ALERT_LAST_HIT_EARLY = 13;</code>
     */
    public static final int OVERHEAD_ALERT_LAST_HIT_EARLY_VALUE = 13;
    /**
     * <code>OVERHEAD_ALERT_LAST_HIT_CLOSE = 14;</code>
     */
    public static final int OVERHEAD_ALERT_LAST_HIT_CLOSE_VALUE = 14;
    /**
     * <code>OVERHEAD_ALERT_LAST_HIT_MISS = 15;</code>
     */
    public static final int OVERHEAD_ALERT_LAST_HIT_MISS_VALUE = 15;
    /**
     * <code>OVERHEAD_ALERT_MAGICAL_BLOCK = 16;</code>
     */
    public static final int OVERHEAD_ALERT_MAGICAL_BLOCK_VALUE = 16;


    public final int getNumber() { return value; }

    public static DOTA_OVERHEAD_ALERT valueOf(int value) {
      switch (value) {
        case 0: return OVERHEAD_ALERT_GOLD;
        case 1: return OVERHEAD_ALERT_DENY;
        case 2: return OVERHEAD_ALERT_CRITICAL;
        case 3: return OVERHEAD_ALERT_XP;
        case 4: return OVERHEAD_ALERT_BONUS_SPELL_DAMAGE;
        case 5: return OVERHEAD_ALERT_MISS;
        case 6: return OVERHEAD_ALERT_DAMAGE;
        case 7: return OVERHEAD_ALERT_EVADE;
        case 8: return OVERHEAD_ALERT_BLOCK;
        case 9: return OVERHEAD_ALERT_BONUS_POISON_DAMAGE;
        case 10: return OVERHEAD_ALERT_HEAL;
        case 11: return OVERHEAD_ALERT_MANA_ADD;
        case 12: return OVERHEAD_ALERT_MANA_LOSS;
        case 13: return OVERHEAD_ALERT_LAST_HIT_EARLY;
        case 14: return OVERHEAD_ALERT_LAST_HIT_CLOSE;
        case 15: return OVERHEAD_ALERT_LAST_HIT_MISS;
        case 16: return OVERHEAD_ALERT_MAGICAL_BLOCK;
        default: return null;
      }
    }

    public static com.google.protobuf.Internal.EnumLiteMap<DOTA_OVERHEAD_ALERT>
        internalGetValueMap() {
      return internalValueMap;
    }
    private static com.google.protobuf.Internal.EnumLiteMap<DOTA_OVERHEAD_ALERT>
        internalValueMap =
          new com.google.protobuf.Internal.EnumLiteMap<DOTA_OVERHEAD_ALERT>() {
            public DOTA_OVERHEAD_ALERT findValueByNumber(int number) {
              return DOTA_OVERHEAD_ALERT.valueOf(number);
            }
          };

    public final com.google.protobuf.Descriptors.EnumValueDescriptor
        getValueDescriptor() {
      return getDescriptor().getValues().get(index);
    }
    public final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptorForType() {
      return getDescriptor();
    }
    public static final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptor() {
      return skadistats.clarity.wire.common.proto.DotaUserMessages.getDescriptor().getEnumTypes().get(8);
    }

    private static final DOTA_OVERHEAD_ALERT[] VALUES = values();

    public static DOTA_OVERHEAD_ALERT valueOf(
        com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
      if (desc.getType() != getDescriptor()) {
        throw new java.lang.IllegalArgumentException(
          "EnumValueDescriptor is not for this type.");
      }
      return VALUES[desc.getIndex()];
    }

    private final int index;
    private final int value;

    private DOTA_OVERHEAD_ALERT(int index, int value) {
      this.index = index;
      this.value = value;
    }

    // @@protoc_insertion_point(enum_scope:DOTA_OVERHEAD_ALERT)
  }

  /**
   * Protobuf enum {@code DOTA_POSITION_CATEGORY}
   */
  public enum DOTA_POSITION_CATEGORY
      implements com.google.protobuf.ProtocolMessageEnum {
    /**
     * <code>DOTA_POSITION_NONE = 0;</code>
     */
    DOTA_POSITION_NONE(0, 0),
    /**
     * <code>DOTA_POSITION_BOTTOM_LANE = 1;</code>
     */
    DOTA_POSITION_BOTTOM_LANE(1, 1),
    /**
     * <code>DOTA_POSITION_MID_LANE = 2;</code>
     */
    DOTA_POSITION_MID_LANE(2, 2),
    /**
     * <code>DOTA_POSITION_TOP_LANE = 3;</code>
     */
    DOTA_POSITION_TOP_LANE(3, 3),
    /**
     * <code>DOTA_POSITION_RADIANT_JUNGLE = 4;</code>
     */
    DOTA_POSITION_RADIANT_JUNGLE(4, 4),
    /**
     * <code>DOTA_POSITION_DIRE_JUNGLE = 5;</code>
     */
    DOTA_POSITION_DIRE_JUNGLE(5, 5),
    /**
     * <code>DOTA_POSITION_RADIANT_ANCIENTS = 6;</code>
     */
    DOTA_POSITION_RADIANT_ANCIENTS(6, 6),
    /**
     * <code>DOTA_POSITION_DIRE_ANCIENTS = 7;</code>
     */
    DOTA_POSITION_DIRE_ANCIENTS(7, 7),
    /**
     * <code>DOTA_POSITION_RADIANT_SECRET_SHOP = 8;</code>
     */
    DOTA_POSITION_RADIANT_SECRET_SHOP(8, 8),
    /**
     * <code>DOTA_POSITION_DIRE_SECRET_SHOP = 9;</code>
     */
    DOTA_POSITION_DIRE_SECRET_SHOP(9, 9),
    /**
     * <code>DOTA_POSITION_RIVER = 10;</code>
     */
    DOTA_POSITION_RIVER(10, 10),
    /**
     * <code>DOTA_POSITION_ROSHAN_PIT = 11;</code>
     */
    DOTA_POSITION_ROSHAN_PIT(11, 11),
    /**
     * <code>DOTA_POSITION_RADIANT_BASE = 12;</code>
     */
    DOTA_POSITION_RADIANT_BASE(12, 12),
    /**
     * <code>DOTA_POSITION_DIRE_BASE = 13;</code>
     */
    DOTA_POSITION_DIRE_BASE(13, 13),
    /**
     * <code>DOTA_POSITION_FOUNTAIN = 14;</code>
     */
    DOTA_POSITION_FOUNTAIN(14, 14),
    /**
     * <code>DOTA_POSITION_OTHER = 15;</code>
     */
    DOTA_POSITION_OTHER(15, 15),
    ;

    /**
     * <code>DOTA_POSITION_NONE = 0;</code>
     */
    public static final int DOTA_POSITION_NONE_VALUE = 0;
    /**
     * <code>DOTA_POSITION_BOTTOM_LANE = 1;</code>
     */
    public static final int DOTA_POSITION_BOTTOM_LANE_VALUE = 1;
    /**
     * <code>DOTA_POSITION_MID_LANE = 2;</code>
     */
    public static final int DOTA_POSITION_MID_LANE_VALUE = 2;
    /**
     * <code>DOTA_POSITION_TOP_LANE = 3;</code>
     */
    public static final int DOTA_POSITION_TOP_LANE_VALUE = 3;
    /**
     * <code>DOTA_POSITION_RADIANT_JUNGLE = 4;</code>
     */
    public static final int DOTA_POSITION_RADIANT_JUNGLE_VALUE = 4;
    /**
     * <code>DOTA_POSITION_DIRE_JUNGLE = 5;</code>
     */
    public static final int DOTA_POSITION_DIRE_JUNGLE_VALUE = 5;
    /**
     * <code>DOTA_POSITION_RADIANT_ANCIENTS = 6;</code>
     */
    public static final int DOTA_POSITION_RADIANT_ANCIENTS_VALUE = 6;
    /**
     * <code>DOTA_POSITION_DIRE_ANCIENTS = 7;</code>
     */
    public static final int DOTA_POSITION_DIRE_ANCIENTS_VALUE = 7;
    /**
     * <code>DOTA_POSITION_RADIANT_SECRET_SHOP = 8;</code>
     */
    public static final int DOTA_POSITION_RADIANT_SECRET_SHOP_VALUE = 8;
    /**
     * <code>DOTA_POSITION_DIRE_SECRET_SHOP = 9;</code>
     */
    public static final int DOTA_POSITION_DIRE_SECRET_SHOP_VALUE = 9;
    /**
     * <code>DOTA_POSITION_RIVER = 10;</code>
     */
    public static final int DOTA_POSITION_RIVER_VALUE = 10;
    /**
     * <code>DOTA_POSITION_ROSHAN_PIT = 11;</code>
     */
    public static final int DOTA_POSITION_ROSHAN_PIT_VALUE = 11;
    /**
     * <code>DOTA_POSITION_RADIANT_BASE = 12;</code>
     */
    public static final int DOTA_POSITION_RADIANT_BASE_VALUE = 12;
    /**
     * <code>DOTA_POSITION_DIRE_BASE = 13;</code>
     */
    public static final int DOTA_POSITION_DIRE_BASE_VALUE = 13;
    /**
     * <code>DOTA_POSITION_FOUNTAIN = 14;</code>
     */
    public static final int DOTA_POSITION_FOUNTAIN_VALUE = 14;
    /**
     * <code>DOTA_POSITION_OTHER = 15;</code>
     */
    public static final int DOTA_POSITION_OTHER_VALUE = 15;


    public final int getNumber() { return value; }

    public static DOTA_POSITION_CATEGORY valueOf(int value) {
      switch (value) {
        case 0: return DOTA_POSITION_NONE;
        case 1: return DOTA_POSITION_BOTTOM_LANE;
        case 2: return DOTA_POSITION_MID_LANE;
        case 3: return DOTA_POSITION_TOP_LANE;
        case 4: return DOTA_POSITION_RADIANT_JUNGLE;
        case 5: return DOTA_POSITION_DIRE_JUNGLE;
        case 6: return DOTA_POSITION_RADIANT_ANCIENTS;
        case 7: return DOTA_POSITION_DIRE_ANCIENTS;
        case 8: return DOTA_POSITION_RADIANT_SECRET_SHOP;
        case 9: return DOTA_POSITION_DIRE_SECRET_SHOP;
        case 10: return DOTA_POSITION_RIVER;
        case 11: return DOTA_POSITION_ROSHAN_PIT;
        case 12: return DOTA_POSITION_RADIANT_BASE;
        case 13: return DOTA_POSITION_DIRE_BASE;
        case 14: return DOTA_POSITION_FOUNTAIN;
        case 15: return DOTA_POSITION_OTHER;
        default: return null;
      }
    }

    public static com.google.protobuf.Internal.EnumLiteMap<DOTA_POSITION_CATEGORY>
        internalGetValueMap() {
      return internalValueMap;
    }
    private static com.google.protobuf.Internal.EnumLiteMap<DOTA_POSITION_CATEGORY>
        internalValueMap =
          new com.google.protobuf.Internal.EnumLiteMap<DOTA_POSITION_CATEGORY>() {
            public DOTA_POSITION_CATEGORY findValueByNumber(int number) {
              return DOTA_POSITION_CATEGORY.valueOf(number);
            }
          };

    public final com.google.protobuf.Descriptors.EnumValueDescriptor
        getValueDescriptor() {
      return getDescriptor().getValues().get(index);
    }
    public final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptorForType() {
      return getDescriptor();
    }
    public static final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptor() {
      return skadistats.clarity.wire.common.proto.DotaUserMessages.getDescriptor().getEnumTypes().get(9);
    }

    private static final DOTA_POSITION_CATEGORY[] VALUES = values();

    public static DOTA_POSITION_CATEGORY valueOf(
        com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
      if (desc.getType() != getDescriptor()) {
        throw new java.lang.IllegalArgumentException(
          "EnumValueDescriptor is not for this type.");
      }
      return VALUES[desc.getIndex()];
    }

    private final int index;
    private final int value;

    private DOTA_POSITION_CATEGORY(int index, int value) {
      this.index = index;
      this.value = value;
    }

    // @@protoc_insertion_point(enum_scope:DOTA_POSITION_CATEGORY)
  }

  /**
   * Protobuf enum {@code DOTA_ABILITY_TARGET_TYPE}
   */
  public enum DOTA_ABILITY_TARGET_TYPE
      implements com.google.protobuf.ProtocolMessageEnum {
    /**
     * <code>DOTA_ABILITY_TARGET_NONE = 0;</code>
     */
    DOTA_ABILITY_TARGET_NONE(0, 0),
    /**
     * <code>DOTA_ABILITY_TARGET_SELF = 1;</code>
     */
    DOTA_ABILITY_TARGET_SELF(1, 1),
    /**
     * <code>DOTA_ABILITY_TARGET_ALLY_HERO = 2;</code>
     */
    DOTA_ABILITY_TARGET_ALLY_HERO(2, 2),
    /**
     * <code>DOTA_ABILITY_TARGET_ALLY_CREEP = 3;</code>
     */
    DOTA_ABILITY_TARGET_ALLY_CREEP(3, 3),
    /**
     * <code>DOTA_ABILITY_TARGET_ENEMY_HERO = 4;</code>
     */
    DOTA_ABILITY_TARGET_ENEMY_HERO(4, 4),
    /**
     * <code>DOTA_ABILITY_TARGET_ENEMY_CREEP = 5;</code>
     */
    DOTA_ABILITY_TARGET_ENEMY_CREEP(5, 5),
    ;

    /**
     * <code>DOTA_ABILITY_TARGET_NONE = 0;</code>
     */
    public static final int DOTA_ABILITY_TARGET_NONE_VALUE = 0;
    /**
     * <code>DOTA_ABILITY_TARGET_SELF = 1;</code>
     */
    public static final int DOTA_ABILITY_TARGET_SELF_VALUE = 1;
    /**
     * <code>DOTA_ABILITY_TARGET_ALLY_HERO = 2;</code>
     */
    public static final int DOTA_ABILITY_TARGET_ALLY_HERO_VALUE = 2;
    /**
     * <code>DOTA_ABILITY_TARGET_ALLY_CREEP = 3;</code>
     */
    public static final int DOTA_ABILITY_TARGET_ALLY_CREEP_VALUE = 3;
    /**
     * <code>DOTA_ABILITY_TARGET_ENEMY_HERO = 4;</code>
     */
    public static final int DOTA_ABILITY_TARGET_ENEMY_HERO_VALUE = 4;
    /**
     * <code>DOTA_ABILITY_TARGET_ENEMY_CREEP = 5;</code>
     */
    public static final int DOTA_ABILITY_TARGET_ENEMY_CREEP_VALUE = 5;


    public final int getNumber() { return value; }

    public static DOTA_ABILITY_TARGET_TYPE valueOf(int value) {
      switch (value) {
        case 0: return DOTA_ABILITY_TARGET_NONE;
        case 1: return DOTA_ABILITY_TARGET_SELF;
        case 2: return DOTA_ABILITY_TARGET_ALLY_HERO;
        case 3: return DOTA_ABILITY_TARGET_ALLY_CREEP;
        case 4: return DOTA_ABILITY_TARGET_ENEMY_HERO;
        case 5: return DOTA_ABILITY_TARGET_ENEMY_CREEP;
        default: return null;
      }
    }

    public static com.google.protobuf.Internal.EnumLiteMap<DOTA_ABILITY_TARGET_TYPE>
        internalGetValueMap() {
      return internalValueMap;
    }
    private static com.google.protobuf.Internal.EnumLiteMap<DOTA_ABILITY_TARGET_TYPE>
        internalValueMap =
          new com.google.protobuf.Internal.EnumLiteMap<DOTA_ABILITY_TARGET_TYPE>() {
            public DOTA_ABILITY_TARGET_TYPE findValueByNumber(int number) {
              return DOTA_ABILITY_TARGET_TYPE.valueOf(number);
            }
          };

    public final com.google.protobuf.Descriptors.EnumValueDescriptor
        getValueDescriptor() {
      return getDescriptor().getValues().get(index);
    }
    public final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptorForType() {
      return getDescriptor();
    }
    public static final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptor() {
      return skadistats.clarity.wire.common.proto.DotaUserMessages.getDescriptor().getEnumTypes().get(10);
    }

    private static final DOTA_ABILITY_TARGET_TYPE[] VALUES = values();

    public static DOTA_ABILITY_TARGET_TYPE valueOf(
        com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
      if (desc.getType() != getDescriptor()) {
        throw new java.lang.IllegalArgumentException(
          "EnumValueDescriptor is not for this type.");
      }
      return VALUES[desc.getIndex()];
    }

    private final int index;
    private final int value;

    private DOTA_ABILITY_TARGET_TYPE(int index, int value) {
      this.index = index;
      this.value = value;
    }

    // @@protoc_insertion_point(enum_scope:DOTA_ABILITY_TARGET_TYPE)
  }

  /**
   * Protobuf enum {@code EHeroStatType}
   */
  public enum EHeroStatType
      implements com.google.protobuf.ProtocolMessageEnum {
    /**
     * <code>k_EHeroStatType_None = 0;</code>
     */
    k_EHeroStatType_None(0, 0),
    /**
     * <code>k_EHeroStatType_AxeTotalDamage = 2000;</code>
     */
    k_EHeroStatType_AxeTotalDamage(1, 2000),
    /**
     * <code>k_EHeroStatType_BattleHungerDamage = 2001;</code>
     */
    k_EHeroStatType_BattleHungerDamage(2, 2001),
    /**
     * <code>k_EHeroStatType_CounterHelixDamage = 2002;</code>
     */
    k_EHeroStatType_CounterHelixDamage(3, 2002),
    /**
     * <code>k_EHeroStatType_CullingBladeDamage = 2003;</code>
     */
    k_EHeroStatType_CullingBladeDamage(4, 2003),
    /**
     * <code>k_EHeroStatType_BerserkersCallCastCount = 2004;</code>
     */
    k_EHeroStatType_BerserkersCallCastCount(5, 2004),
    /**
     * <code>k_EHeroStatType_BerserkersCallHeroesHitAverage = 2005;</code>
     */
    k_EHeroStatType_BerserkersCallHeroesHitAverage(6, 2005),
    /**
     * <code>k_EHeroStatType_BerserkersCallOtherUnitsHit = 2006;</code>
     */
    k_EHeroStatType_BerserkersCallOtherUnitsHit(7, 2006),
    /**
     * <code>k_EHeroStatType_BerserkersCallHeroAttacksTaken = 2007;</code>
     */
    k_EHeroStatType_BerserkersCallHeroAttacksTaken(8, 2007),
    /**
     * <code>k_EHeroStatType_BerserkersCallOtherAttacksTaken = 2008;</code>
     */
    k_EHeroStatType_BerserkersCallOtherAttacksTaken(9, 2008),
    /**
     * <code>k_EHeroStatType_BattleHungerCastCount = 2009;</code>
     */
    k_EHeroStatType_BattleHungerCastCount(10, 2009),
    /**
     * <code>k_EHeroStatType_BattleHungerPotentialDuration = 2010;</code>
     */
    k_EHeroStatType_BattleHungerPotentialDuration(11, 2010),
    /**
     * <code>k_EHeroStatType_BattleHungerAverageDuration = 2011;</code>
     */
    k_EHeroStatType_BattleHungerAverageDuration(12, 2011),
    /**
     * <code>k_EHeroStatType_CounterHelixProcCount = 2012;</code>
     */
    k_EHeroStatType_CounterHelixProcCount(13, 2012),
    /**
     * <code>k_EHeroStatType_CounterHelixHeroProcCount = 2013;</code>
     */
    k_EHeroStatType_CounterHelixHeroProcCount(14, 2013),
    /**
     * <code>k_EHeroStatType_CounterHelixHeroesHitAverage = 2014;</code>
     */
    k_EHeroStatType_CounterHelixHeroesHitAverage(15, 2014),
    /**
     * <code>k_EHeroStatType_CounterHelixOtherUnitsHitCount = 2015;</code>
     */
    k_EHeroStatType_CounterHelixOtherUnitsHitCount(16, 2015),
    /**
     * <code>k_EHeroStatType_CullingBladeCastCount = 2016;</code>
     */
    k_EHeroStatType_CullingBladeCastCount(17, 2016),
    /**
     * <code>k_EHeroStatType_CullingBladeKillCount = 2017;</code>
     */
    k_EHeroStatType_CullingBladeKillCount(18, 2017),
    /**
     * <code>k_EHeroStatType_CullingBladeAverageHealthCulled = 2018;</code>
     */
    k_EHeroStatType_CullingBladeAverageHealthCulled(19, 2018),
    /**
     * <code>k_EHeroStatType_CullingBladeAverageDamageAvailable = 2019;</code>
     */
    k_EHeroStatType_CullingBladeAverageDamageAvailable(20, 2019),
    /**
     * <code>k_EHeroStatType_CullingBladeHeroBuffAverage = 2020;</code>
     */
    k_EHeroStatType_CullingBladeHeroBuffAverage(21, 2020),
    ;

    /**
     * <code>k_EHeroStatType_None = 0;</code>
     */
    public static final int k_EHeroStatType_None_VALUE = 0;
    /**
     * <code>k_EHeroStatType_AxeTotalDamage = 2000;</code>
     */
    public static final int k_EHeroStatType_AxeTotalDamage_VALUE = 2000;
    /**
     * <code>k_EHeroStatType_BattleHungerDamage = 2001;</code>
     */
    public static final int k_EHeroStatType_BattleHungerDamage_VALUE = 2001;
    /**
     * <code>k_EHeroStatType_CounterHelixDamage = 2002;</code>
     */
    public static final int k_EHeroStatType_CounterHelixDamage_VALUE = 2002;
    /**
     * <code>k_EHeroStatType_CullingBladeDamage = 2003;</code>
     */
    public static final int k_EHeroStatType_CullingBladeDamage_VALUE = 2003;
    /**
     * <code>k_EHeroStatType_BerserkersCallCastCount = 2004;</code>
     */
    public static final int k_EHeroStatType_BerserkersCallCastCount_VALUE = 2004;
    /**
     * <code>k_EHeroStatType_BerserkersCallHeroesHitAverage = 2005;</code>
     */
    public static final int k_EHeroStatType_BerserkersCallHeroesHitAverage_VALUE = 2005;
    /**
     * <code>k_EHeroStatType_BerserkersCallOtherUnitsHit = 2006;</code>
     */
    public static final int k_EHeroStatType_BerserkersCallOtherUnitsHit_VALUE = 2006;
    /**
     * <code>k_EHeroStatType_BerserkersCallHeroAttacksTaken = 2007;</code>
     */
    public static final int k_EHeroStatType_BerserkersCallHeroAttacksTaken_VALUE = 2007;
    /**
     * <code>k_EHeroStatType_BerserkersCallOtherAttacksTaken = 2008;</code>
     */
    public static final int k_EHeroStatType_BerserkersCallOtherAttacksTaken_VALUE = 2008;
    /**
     * <code>k_EHeroStatType_BattleHungerCastCount = 2009;</code>
     */
    public static final int k_EHeroStatType_BattleHungerCastCount_VALUE = 2009;
    /**
     * <code>k_EHeroStatType_BattleHungerPotentialDuration = 2010;</code>
     */
    public static final int k_EHeroStatType_BattleHungerPotentialDuration_VALUE = 2010;
    /**
     * <code>k_EHeroStatType_BattleHungerAverageDuration = 2011;</code>
     */
    public static final int k_EHeroStatType_BattleHungerAverageDuration_VALUE = 2011;
    /**
     * <code>k_EHeroStatType_CounterHelixProcCount = 2012;</code>
     */
    public static final int k_EHeroStatType_CounterHelixProcCount_VALUE = 2012;
    /**
     * <code>k_EHeroStatType_CounterHelixHeroProcCount = 2013;</code>
     */
    public static final int k_EHeroStatType_CounterHelixHeroProcCount_VALUE = 2013;
    /**
     * <code>k_EHeroStatType_CounterHelixHeroesHitAverage = 2014;</code>
     */
    public static final int k_EHeroStatType_CounterHelixHeroesHitAverage_VALUE = 2014;
    /**
     * <code>k_EHeroStatType_CounterHelixOtherUnitsHitCount = 2015;</code>
     */
    public static final int k_EHeroStatType_CounterHelixOtherUnitsHitCount_VALUE = 2015;
    /**
     * <code>k_EHeroStatType_CullingBladeCastCount = 2016;</code>
     */
    public static final int k_EHeroStatType_CullingBladeCastCount_VALUE = 2016;
    /**
     * <code>k_EHeroStatType_CullingBladeKillCount = 2017;</code>
     */
    public static final int k_EHeroStatType_CullingBladeKillCount_VALUE = 2017;
    /**
     * <code>k_EHeroStatType_CullingBladeAverageHealthCulled = 2018;</code>
     */
    public static final int k_EHeroStatType_CullingBladeAverageHealthCulled_VALUE = 2018;
    /**
     * <code>k_EHeroStatType_CullingBladeAverageDamageAvailable = 2019;</code>
     */
    public static final int k_EHeroStatType_CullingBladeAverageDamageAvailable_VALUE = 2019;
    /**
     * <code>k_EHeroStatType_CullingBladeHeroBuffAverage = 2020;</code>
     */
    public static final int k_EHeroStatType_CullingBladeHeroBuffAverage_VALUE = 2020;


    public final int getNumber() { return value; }

    public static EHeroStatType valueOf(int value) {
      switch (value) {
        case 0: return k_EHeroStatType_None;
        case 2000: return k_EHeroStatType_AxeTotalDamage;
        case 2001: return k_EHeroStatType_BattleHungerDamage;
        case 2002: return k_EHeroStatType_CounterHelixDamage;
        case 2003: return k_EHeroStatType_CullingBladeDamage;
        case 2004: return k_EHeroStatType_BerserkersCallCastCount;
        case 2005: return k_EHeroStatType_BerserkersCallHeroesHitAverage;
        case 2006: return k_EHeroStatType_BerserkersCallOtherUnitsHit;
        case 2007: return k_EHeroStatType_BerserkersCallHeroAttacksTaken;
        case 2008: return k_EHeroStatType_BerserkersCallOtherAttacksTaken;
        case 2009: return k_EHeroStatType_BattleHungerCastCount;
        case 2010: return k_EHeroStatType_BattleHungerPotentialDuration;
        case 2011: return k_EHeroStatType_BattleHungerAverageDuration;
        case 2012: return k_EHeroStatType_CounterHelixProcCount;
        case 2013: return k_EHeroStatType_CounterHelixHeroProcCount;
        case 2014: return k_EHeroStatType_CounterHelixHeroesHitAverage;
        case 2015: return k_EHeroStatType_CounterHelixOtherUnitsHitCount;
        case 2016: return k_EHeroStatType_CullingBladeCastCount;
        case 2017: return k_EHeroStatType_CullingBladeKillCount;
        case 2018: return k_EHeroStatType_CullingBladeAverageHealthCulled;
        case 2019: return k_EHeroStatType_CullingBladeAverageDamageAvailable;
        case 2020: return k_EHeroStatType_CullingBladeHeroBuffAverage;
        default: return null;
      }
    }

    public static com.google.protobuf.Internal.EnumLiteMap<EHeroStatType>
        internalGetValueMap() {
      return internalValueMap;
    }
    private static com.google.protobuf.Internal.EnumLiteMap<EHeroStatType>
        internalValueMap =
          new com.google.protobuf.Internal.EnumLiteMap<EHeroStatType>() {
            public EHeroStatType findValueByNumber(int number) {
              return EHeroStatType.valueOf(number);
            }
          };

    public final com.google.protobuf.Descriptors.EnumValueDescriptor
        getValueDescriptor() {
      return getDescriptor().getValues().get(index);
    }
    public final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptorForType() {
      return getDescriptor();
    }
    public static final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptor() {
      return skadistats.clarity.wire.common.proto.DotaUserMessages.getDescriptor().getEnumTypes().get(11);
    }

    private static final EHeroStatType[] VALUES = values();

    public static EHeroStatType valueOf(
        com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
      if (desc.getType() != getDescriptor()) {
        throw new java.lang.IllegalArgumentException(
          "EnumValueDescriptor is not for this type.");
      }
      return VALUES[desc.getIndex()];
    }

    private final int index;
    private final int value;

    private EHeroStatType(int index, int value) {
      this.index = index;
      this.value = value;
    }

    // @@protoc_insertion_point(enum_scope:EHeroStatType)
  }

  /**
   * Protobuf enum {@code EPlayerVoiceListenState}
   */
  public enum EPlayerVoiceListenState
      implements com.google.protobuf.ProtocolMessageEnum {
    /**
     * <code>kPVLS_None = 0;</code>
     */
    kPVLS_None(0, 0),
    /**
     * <code>kPVLS_DeniedChatBanned = 1;</code>
     */
    kPVLS_DeniedChatBanned(1, 1),
    /**
     * <code>kPVLS_DeniedPartner = 2;</code>
     */
    kPVLS_DeniedPartner(2, 2),
    /**
     * <code>kPVLS_DeniedHLTVTalkerNotSpectator = 3;</code>
     */
    kPVLS_DeniedHLTVTalkerNotSpectator(3, 3),
    /**
     * <code>kPVLS_DeniedHLTVNoTalkerPlayerID = 4;</code>
     */
    kPVLS_DeniedHLTVNoTalkerPlayerID(4, 4),
    /**
     * <code>kPVLS_DeniedHLTVTalkerNotBroadcaster = 5;</code>
     */
    kPVLS_DeniedHLTVTalkerNotBroadcaster(5, 5),
    /**
     * <code>kPVLS_DeniedTeamSpectator = 6;</code>
     */
    kPVLS_DeniedTeamSpectator(6, 6),
    /**
     * <code>kPVLS_DeniedStudent = 8;</code>
     */
    kPVLS_DeniedStudent(7, 8),
    /**
     * <code>kPVLS_Denied = 64;</code>
     */
    kPVLS_Denied(8, 64),
    /**
     * <code>kPVLS_AllowHLTVTalkerIsBroadcaster = 65;</code>
     */
    kPVLS_AllowHLTVTalkerIsBroadcaster(9, 65),
    /**
     * <code>kPVLS_AllowCoBroadcaster = 66;</code>
     */
    kPVLS_AllowCoBroadcaster(10, 66),
    /**
     * <code>kPVLS_AllowAllChat = 67;</code>
     */
    kPVLS_AllowAllChat(11, 67),
    /**
     * <code>kPVLS_AllowStudentToCoach = 68;</code>
     */
    kPVLS_AllowStudentToCoach(12, 68),
    /**
     * <code>kPVLS_AllowFellowStudent = 69;</code>
     */
    kPVLS_AllowFellowStudent(13, 69),
    /**
     * <code>kPVLS_AllowTalkerIsCoach = 70;</code>
     */
    kPVLS_AllowTalkerIsCoach(14, 70),
    /**
     * <code>kPVLS_AllowCoachHearTeam = 71;</code>
     */
    kPVLS_AllowCoachHearTeam(15, 71),
    /**
     * <code>kPVLS_AllowSameTeam = 72;</code>
     */
    kPVLS_AllowSameTeam(16, 72),
    /**
     * <code>kPVLS_AllowShowcase = 73;</code>
     */
    kPVLS_AllowShowcase(17, 73),
    ;

    /**
     * <code>kPVLS_None = 0;</code>
     */
    public static final int kPVLS_None_VALUE = 0;
    /**
     * <code>kPVLS_DeniedChatBanned = 1;</code>
     */
    public static final int kPVLS_DeniedChatBanned_VALUE = 1;
    /**
     * <code>kPVLS_DeniedPartner = 2;</code>
     */
    public static final int kPVLS_DeniedPartner_VALUE = 2;
    /**
     * <code>kPVLS_DeniedHLTVTalkerNotSpectator = 3;</code>
     */
    public static final int kPVLS_DeniedHLTVTalkerNotSpectator_VALUE = 3;
    /**
     * <code>kPVLS_DeniedHLTVNoTalkerPlayerID = 4;</code>
     */
    public static final int kPVLS_DeniedHLTVNoTalkerPlayerID_VALUE = 4;
    /**
     * <code>kPVLS_DeniedHLTVTalkerNotBroadcaster = 5;</code>
     */
    public static final int kPVLS_DeniedHLTVTalkerNotBroadcaster_VALUE = 5;
    /**
     * <code>kPVLS_DeniedTeamSpectator = 6;</code>
     */
    public static final int kPVLS_DeniedTeamSpectator_VALUE = 6;
    /**
     * <code>kPVLS_DeniedStudent = 8;</code>
     */
    public static final int kPVLS_DeniedStudent_VALUE = 8;
    /**
     * <code>kPVLS_Denied = 64;</code>
     */
    public static final int kPVLS_Denied_VALUE = 64;
    /**
     * <code>kPVLS_AllowHLTVTalkerIsBroadcaster = 65;</code>
     */
    public static final int kPVLS_AllowHLTVTalkerIsBroadcaster_VALUE = 65;
    /**
     * <code>kPVLS_AllowCoBroadcaster = 66;</code>
     */
    public static final int kPVLS_AllowCoBroadcaster_VALUE = 66;
    /**
     * <code>kPVLS_AllowAllChat = 67;</code>
     */
    public static final int kPVLS_AllowAllChat_VALUE = 67;
    /**
     * <code>kPVLS_AllowStudentToCoach = 68;</code>
     */
    public static final int kPVLS_AllowStudentToCoach_VALUE = 68;
    /**
     * <code>kPVLS_AllowFellowStudent = 69;</code>
     */
    public static final int kPVLS_AllowFellowStudent_VALUE = 69;
    /**
     * <code>kPVLS_AllowTalkerIsCoach = 70;</code>
     */
    public static final int kPVLS_AllowTalkerIsCoach_VALUE = 70;
    /**
     * <code>kPVLS_AllowCoachHearTeam = 71;</code>
     */
    public static final int kPVLS_AllowCoachHearTeam_VALUE = 71;
    /**
     * <code>kPVLS_AllowSameTeam = 72;</code>
     */
    public static final int kPVLS_AllowSameTeam_VALUE = 72;
    /**
     * <code>kPVLS_AllowShowcase = 73;</code>
     */
    public static final int kPVLS_AllowShowcase_VALUE = 73;


    public final int getNumber() { return value; }

    public static EPlayerVoiceListenState valueOf(int value) {
      switch (value) {
        case 0: return kPVLS_None;
        case 1: return kPVLS_DeniedChatBanned;
        case 2: return kPVLS_DeniedPartner;
        case 3: return kPVLS_DeniedHLTVTalkerNotSpectator;
        case 4: return kPVLS_DeniedHLTVNoTalkerPlayerID;
        case 5: return kPVLS_DeniedHLTVTalkerNotBroadcaster;
        case 6: return kPVLS_DeniedTeamSpectator;
        case 8: return kPVLS_DeniedStudent;
        case 64: return kPVLS_Denied;
        case 65: return kPVLS_AllowHLTVTalkerIsBroadcaster;
        case 66: return kPVLS_AllowCoBroadcaster;
        case 67: return kPVLS_AllowAllChat;
        case 68: return kPVLS_AllowStudentToCoach;
        case 69: return kPVLS_AllowFellowStudent;
        case 70: return kPVLS_AllowTalkerIsCoach;
        case 71: return kPVLS_AllowCoachHearTeam;
        case 72: return kPVLS_AllowSameTeam;
        case 73: return kPVLS_AllowShowcase;
        default: return null;
      }
    }

    public static com.google.protobuf.Internal.EnumLiteMap<EPlayerVoiceListenState>
        internalGetValueMap() {
      return internalValueMap;
    }
    private static com.google.protobuf.Internal.EnumLiteMap<EPlayerVoiceListenState>
        internalValueMap =
          new com.google.protobuf.Internal.EnumLiteMap<EPlayerVoiceListenState>() {
            public EPlayerVoiceListenState findValueByNumber(int number) {
              return EPlayerVoiceListenState.valueOf(number);
            }
          };

    public final com.google.protobuf.Descriptors.EnumValueDescriptor
        getValueDescriptor() {
      return getDescriptor().getValues().get(index);
    }
    public final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptorForType() {
      return getDescriptor();
    }
    public static final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptor() {
      return skadistats.clarity.wire.common.proto.DotaUserMessages.getDescriptor().getEnumTypes().get(12);
    }

    private static final EPlayerVoiceListenState[] VALUES = values();

    public static EPlayerVoiceListenState valueOf(
        com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
      if (desc.getType() != getDescriptor()) {
        throw new java.lang.IllegalArgumentException(
          "EnumValueDescriptor is not for this type.");
      }
      return VALUES[desc.getIndex()];
    }

    private final int index;
    private final int value;

    private EPlayerVoiceListenState(int index, int value) {
      this.index = index;
      this.value = value;
    }

    // @@protoc_insertion_point(enum_scope:EPlayerVoiceListenState)
  }

  /**
   * Protobuf enum {@code EProjectionEvent}
   */
  public enum EProjectionEvent
      implements com.google.protobuf.ProtocolMessageEnum {
    /**
     * <code>ePE_FirstBlood = 0;</code>
     */
    ePE_FirstBlood(0, 0),
    ;

    /**
     * <code>ePE_FirstBlood = 0;</code>
     */
    public static final int ePE_FirstBlood_VALUE = 0;


    public final int getNumber() { return value; }

    public static EProjectionEvent valueOf(int value) {
      switch (value) {
        case 0: return ePE_FirstBlood;
        default: return null;
      }
    }

    public static com.google.protobuf.Internal.EnumLiteMap<EProjectionEvent>
        internalGetValueMap() {
      return internalValueMap;
    }
    private static com.google.protobuf.Internal.EnumLiteMap<EProjectionEvent>
        internalValueMap =
          new com.google.protobuf.Internal.EnumLiteMap<EProjectionEvent>() {
            public EProjectionEvent findValueByNumber(int number) {
              return EProjectionEvent.valueOf(number);
            }
          };

    public final com.google.protobuf.Descriptors.EnumValueDescriptor
        getValueDescriptor() {
      return getDescriptor().getValues().get(index);
    }
    public final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptorForType() {
      return getDescriptor();
    }
    public static final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptor() {
      return skadistats.clarity.wire.common.proto.DotaUserMessages.getDescriptor().getEnumTypes().get(13);
    }

    private static final EProjectionEvent[] VALUES = values();

    public static EProjectionEvent valueOf(
        com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
      if (desc.getType() != getDescriptor()) {
        throw new java.lang.IllegalArgumentException(
          "EnumValueDescriptor is not for this type.");
      }
      return VALUES[desc.getIndex()];
    }

    private final int index;
    private final int value;

    private EProjectionEvent(int index, int value) {
      this.index = index;
      this.value = value;
    }

    // @@protoc_insertion_point(enum_scope:EProjectionEvent)
  }

  public interface CDOTAUserMsg_AIDebugLineOrBuilder extends
      // @@protoc_insertion_point(interface_extends:CDOTAUserMsg_AIDebugLine)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>optional string message = 1;</code>
     */
    boolean hasMessage();
    /**
     * <code>optional string message = 1;</code>
     */
    java.lang.String getMessage();
    /**
     * <code>optional string message = 1;</code>
     */
    com.google.protobuf.ByteString
        getMessageBytes();

    /**
     * <code>optional uint32 ping = 2;</code>
     */
    boolean hasPing();
    /**
     * <code>optional uint32 ping = 2;</code>
     */
    int getPing();

    /**
     * <code>optional uint32 loss = 3;</code>
     */
    boolean hasLoss();
    /**
     * <code>optional uint32 loss = 3;</code>
     */
    int getLoss();
  }
  /**
   * Protobuf type {@code CDOTAUserMsg_AIDebugLine}
   */
  public static final class CDOTAUserMsg_AIDebugLine extends
      com.google.protobuf.GeneratedMessage implements
      // @@protoc_insertion_point(message_implements:CDOTAUserMsg_AIDebugLine)
      CDOTAUserMsg_AIDebugLineOrBuilder {
    // Use CDOTAUserMsg_AIDebugLine.newBuilder() to construct.
    private CDOTAUserMsg_AIDebugLine(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private CDOTAUserMsg_AIDebugLine(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final CDOTAUserMsg_AIDebugLine defaultInstance;
    public static CDOTAUserMsg_AIDebugLine getDefaultInstance() {
      return defaultInstance;
    }

    public CDOTAUserMsg_AIDebugLine getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private CDOTAUserMsg_AIDebugLine(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 10: {
              com.google.protobuf.ByteString bs = input.readBytes();
              bitField0_ |= 0x00000001;
              message_ = bs;
              break;
            }
            case 16: {
              bitField0_ |= 0x00000002;
              ping_ = input.readUInt32();
              break;
            }
            case 24: {
              bitField0_ |= 0x00000004;
              loss_ = input.readUInt32();
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return skadistats.clarity.wire.common.proto.DotaUserMessages.internal_static_CDOTAUserMsg_AIDebugLine_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return skadistats.clarity.wire.common.proto.DotaUserMessages.internal_static_CDOTAUserMsg_AIDebugLine_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_AIDebugLine.class, skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_AIDebugLine.Builder.class);
    }

    public static com.google.protobuf.Parser<CDOTAUserMsg_AIDebugLine> PARSER =
        new com.google.protobuf.AbstractParser<CDOTAUserMsg_AIDebugLine>() {
      public CDOTAUserMsg_AIDebugLine parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new CDOTAUserMsg_AIDebugLine(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<CDOTAUserMsg_AIDebugLine> getParserForType() {
      return PARSER;
    }

    private int bitField0_;
    public static final int MESSAGE_FIELD_NUMBER = 1;
    private java.lang.Object message_;
    /**
     * <code>optional string message = 1;</code>
     */
    public boolean hasMessage() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>optional string message = 1;</code>
     */
    public java.lang.String getMessage() {
      java.lang.Object ref = message_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          message_ = s;
        }
        return s;
      }
    }
    /**
     * <code>optional string message = 1;</code>
     */
    public com.google.protobuf.ByteString
        getMessageBytes() {
      java.lang.Object ref = message_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        message_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int PING_FIELD_NUMBER = 2;
    private int ping_;
    /**
     * <code>optional uint32 ping = 2;</code>
     */
    public boolean hasPing() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>optional uint32 ping = 2;</code>
     */
    public int getPing() {
      return ping_;
    }

    public static final int LOSS_FIELD_NUMBER = 3;
    private int loss_;
    /**
     * <code>optional uint32 loss = 3;</code>
     */
    public boolean hasLoss() {
      return ((bitField0_ & 0x00000004) == 0x00000004);
    }
    /**
     * <code>optional uint32 loss = 3;</code>
     */
    public int getLoss() {
      return loss_;
    }

    private void initFields() {
      message_ = "";
      ping_ = 0;
      loss_ = 0;
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeBytes(1, getMessageBytes());
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeUInt32(2, ping_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        output.writeUInt32(3, loss_);
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(1, getMessageBytes());
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(2, ping_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(3, loss_);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_AIDebugLine parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_AIDebugLine parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_AIDebugLine parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_AIDebugLine parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_AIDebugLine parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_AIDebugLine parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_AIDebugLine parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_AIDebugLine parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_AIDebugLine parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_AIDebugLine parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_AIDebugLine prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code CDOTAUserMsg_AIDebugLine}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:CDOTAUserMsg_AIDebugLine)
        skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_AIDebugLineOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return skadistats.clarity.wire.common.proto.DotaUserMessages.internal_static_CDOTAUserMsg_AIDebugLine_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return skadistats.clarity.wire.common.proto.DotaUserMessages.internal_static_CDOTAUserMsg_AIDebugLine_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_AIDebugLine.class, skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_AIDebugLine.Builder.class);
      }

      // Construct using skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_AIDebugLine.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        message_ = "";
        bitField0_ = (bitField0_ & ~0x00000001);
        ping_ = 0;
        bitField0_ = (bitField0_ & ~0x00000002);
        loss_ = 0;
        bitField0_ = (bitField0_ & ~0x00000004);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return skadistats.clarity.wire.common.proto.DotaUserMessages.internal_static_CDOTAUserMsg_AIDebugLine_descriptor;
      }

      public skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_AIDebugLine getDefaultInstanceForType() {
        return skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_AIDebugLine.getDefaultInstance();
      }

      public skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_AIDebugLine build() {
        skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_AIDebugLine result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_AIDebugLine buildPartial() {
        skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_AIDebugLine result = new skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_AIDebugLine(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.message_ = message_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.ping_ = ping_;
        if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
          to_bitField0_ |= 0x00000004;
        }
        result.loss_ = loss_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_AIDebugLine) {
          return mergeFrom((skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_AIDebugLine)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_AIDebugLine other) {
        if (other == skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_AIDebugLine.getDefaultInstance()) return this;
        if (other.hasMessage()) {
          bitField0_ |= 0x00000001;
          message_ = other.message_;
          onChanged();
        }
        if (other.hasPing()) {
          setPing(other.getPing());
        }
        if (other.hasLoss()) {
          setLoss(other.getLoss());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_AIDebugLine parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_AIDebugLine) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private java.lang.Object message_ = "";
      /**
       * <code>optional string message = 1;</code>
       */
      public boolean hasMessage() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>optional string message = 1;</code>
       */
      public java.lang.String getMessage() {
        java.lang.Object ref = message_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          if (bs.isValidUtf8()) {
            message_ = s;
          }
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>optional string message = 1;</code>
       */
      public com.google.protobuf.ByteString
          getMessageBytes() {
        java.lang.Object ref = message_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          message_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>optional string message = 1;</code>
       */
      public Builder setMessage(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000001;
        message_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional string message = 1;</code>
       */
      public Builder clearMessage() {
        bitField0_ = (bitField0_ & ~0x00000001);
        message_ = getDefaultInstance().getMessage();
        onChanged();
        return this;
      }
      /**
       * <code>optional string message = 1;</code>
       */
      public Builder setMessageBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000001;
        message_ = value;
        onChanged();
        return this;
      }

      private int ping_ ;
      /**
       * <code>optional uint32 ping = 2;</code>
       */
      public boolean hasPing() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>optional uint32 ping = 2;</code>
       */
      public int getPing() {
        return ping_;
      }
      /**
       * <code>optional uint32 ping = 2;</code>
       */
      public Builder setPing(int value) {
        bitField0_ |= 0x00000002;
        ping_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional uint32 ping = 2;</code>
       */
      public Builder clearPing() {
        bitField0_ = (bitField0_ & ~0x00000002);
        ping_ = 0;
        onChanged();
        return this;
      }

      private int loss_ ;
      /**
       * <code>optional uint32 loss = 3;</code>
       */
      public boolean hasLoss() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }
      /**
       * <code>optional uint32 loss = 3;</code>
       */
      public int getLoss() {
        return loss_;
      }
      /**
       * <code>optional uint32 loss = 3;</code>
       */
      public Builder setLoss(int value) {
        bitField0_ |= 0x00000004;
        loss_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional uint32 loss = 3;</code>
       */
      public Builder clearLoss() {
        bitField0_ = (bitField0_ & ~0x00000004);
        loss_ = 0;
        onChanged();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:CDOTAUserMsg_AIDebugLine)
    }

    static {
      defaultInstance = new CDOTAUserMsg_AIDebugLine(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:CDOTAUserMsg_AIDebugLine)
  }

  public interface CDOTAUserMsg_PingOrBuilder extends
      // @@protoc_insertion_point(interface_extends:CDOTAUserMsg_Ping)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>optional string message = 1;</code>
     */
    boolean hasMessage();
    /**
     * <code>optional string message = 1;</code>
     */
    java.lang.String getMessage();
    /**
     * <code>optional string message = 1;</code>
     */
    com.google.protobuf.ByteString
        getMessageBytes();
  }
  /**
   * Protobuf type {@code CDOTAUserMsg_Ping}
   */
  public static final class CDOTAUserMsg_Ping extends
      com.google.protobuf.GeneratedMessage implements
      // @@protoc_insertion_point(message_implements:CDOTAUserMsg_Ping)
      CDOTAUserMsg_PingOrBuilder {
    // Use CDOTAUserMsg_Ping.newBuilder() to construct.
    private CDOTAUserMsg_Ping(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private CDOTAUserMsg_Ping(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final CDOTAUserMsg_Ping defaultInstance;
    public static CDOTAUserMsg_Ping getDefaultInstance() {
      return defaultInstance;
    }

    public CDOTAUserMsg_Ping getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private CDOTAUserMsg_Ping(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 10: {
              com.google.protobuf.ByteString bs = input.readBytes();
              bitField0_ |= 0x00000001;
              message_ = bs;
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return skadistats.clarity.wire.common.proto.DotaUserMessages.internal_static_CDOTAUserMsg_Ping_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return skadistats.clarity.wire.common.proto.DotaUserMessages.internal_static_CDOTAUserMsg_Ping_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_Ping.class, skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_Ping.Builder.class);
    }

    public static com.google.protobuf.Parser<CDOTAUserMsg_Ping> PARSER =
        new com.google.protobuf.AbstractParser<CDOTAUserMsg_Ping>() {
      public CDOTAUserMsg_Ping parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new CDOTAUserMsg_Ping(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<CDOTAUserMsg_Ping> getParserForType() {
      return PARSER;
    }

    private int bitField0_;
    public static final int MESSAGE_FIELD_NUMBER = 1;
    private java.lang.Object message_;
    /**
     * <code>optional string message = 1;</code>
     */
    public boolean hasMessage() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>optional string message = 1;</code>
     */
    public java.lang.String getMessage() {
      java.lang.Object ref = message_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          message_ = s;
        }
        return s;
      }
    }
    /**
     * <code>optional string message = 1;</code>
     */
    public com.google.protobuf.ByteString
        getMessageBytes() {
      java.lang.Object ref = message_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        message_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    private void initFields() {
      message_ = "";
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeBytes(1, getMessageBytes());
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(1, getMessageBytes());
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_Ping parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_Ping parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_Ping parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_Ping parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_Ping parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_Ping parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_Ping parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_Ping parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_Ping parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_Ping parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_Ping prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code CDOTAUserMsg_Ping}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:CDOTAUserMsg_Ping)
        skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_PingOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return skadistats.clarity.wire.common.proto.DotaUserMessages.internal_static_CDOTAUserMsg_Ping_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return skadistats.clarity.wire.common.proto.DotaUserMessages.internal_static_CDOTAUserMsg_Ping_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_Ping.class, skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_Ping.Builder.class);
      }

      // Construct using skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_Ping.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        message_ = "";
        bitField0_ = (bitField0_ & ~0x00000001);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return skadistats.clarity.wire.common.proto.DotaUserMessages.internal_static_CDOTAUserMsg_Ping_descriptor;
      }

      public skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_Ping getDefaultInstanceForType() {
        return skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_Ping.getDefaultInstance();
      }

      public skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_Ping build() {
        skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_Ping result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_Ping buildPartial() {
        skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_Ping result = new skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_Ping(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.message_ = message_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_Ping) {
          return mergeFrom((skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_Ping)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_Ping other) {
        if (other == skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_Ping.getDefaultInstance()) return this;
        if (other.hasMessage()) {
          bitField0_ |= 0x00000001;
          message_ = other.message_;
          onChanged();
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_Ping parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_Ping) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private java.lang.Object message_ = "";
      /**
       * <code>optional string message = 1;</code>
       */
      public boolean hasMessage() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>optional string message = 1;</code>
       */
      public java.lang.String getMessage() {
        java.lang.Object ref = message_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          if (bs.isValidUtf8()) {
            message_ = s;
          }
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>optional string message = 1;</code>
       */
      public com.google.protobuf.ByteString
          getMessageBytes() {
        java.lang.Object ref = message_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          message_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>optional string message = 1;</code>
       */
      public Builder setMessage(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000001;
        message_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional string message = 1;</code>
       */
      public Builder clearMessage() {
        bitField0_ = (bitField0_ & ~0x00000001);
        message_ = getDefaultInstance().getMessage();
        onChanged();
        return this;
      }
      /**
       * <code>optional string message = 1;</code>
       */
      public Builder setMessageBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000001;
        message_ = value;
        onChanged();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:CDOTAUserMsg_Ping)
    }

    static {
      defaultInstance = new CDOTAUserMsg_Ping(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:CDOTAUserMsg_Ping)
  }

  public interface CDOTAUserMsg_SwapVerifyOrBuilder extends
      // @@protoc_insertion_point(interface_extends:CDOTAUserMsg_SwapVerify)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>optional uint32 player_id = 1;</code>
     */
    boolean hasPlayerId();
    /**
     * <code>optional uint32 player_id = 1;</code>
     */
    int getPlayerId();
  }
  /**
   * Protobuf type {@code CDOTAUserMsg_SwapVerify}
   */
  public static final class CDOTAUserMsg_SwapVerify extends
      com.google.protobuf.GeneratedMessage implements
      // @@protoc_insertion_point(message_implements:CDOTAUserMsg_SwapVerify)
      CDOTAUserMsg_SwapVerifyOrBuilder {
    // Use CDOTAUserMsg_SwapVerify.newBuilder() to construct.
    private CDOTAUserMsg_SwapVerify(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private CDOTAUserMsg_SwapVerify(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final CDOTAUserMsg_SwapVerify defaultInstance;
    public static CDOTAUserMsg_SwapVerify getDefaultInstance() {
      return defaultInstance;
    }

    public CDOTAUserMsg_SwapVerify getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private CDOTAUserMsg_SwapVerify(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 8: {
              bitField0_ |= 0x00000001;
              playerId_ = input.readUInt32();
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return skadistats.clarity.wire.common.proto.DotaUserMessages.internal_static_CDOTAUserMsg_SwapVerify_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return skadistats.clarity.wire.common.proto.DotaUserMessages.internal_static_CDOTAUserMsg_SwapVerify_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_SwapVerify.class, skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_SwapVerify.Builder.class);
    }

    public static com.google.protobuf.Parser<CDOTAUserMsg_SwapVerify> PARSER =
        new com.google.protobuf.AbstractParser<CDOTAUserMsg_SwapVerify>() {
      public CDOTAUserMsg_SwapVerify parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new CDOTAUserMsg_SwapVerify(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<CDOTAUserMsg_SwapVerify> getParserForType() {
      return PARSER;
    }

    private int bitField0_;
    public static final int PLAYER_ID_FIELD_NUMBER = 1;
    private int playerId_;
    /**
     * <code>optional uint32 player_id = 1;</code>
     */
    public boolean hasPlayerId() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>optional uint32 player_id = 1;</code>
     */
    public int getPlayerId() {
      return playerId_;
    }

    private void initFields() {
      playerId_ = 0;
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeUInt32(1, playerId_);
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(1, playerId_);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_SwapVerify parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_SwapVerify parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_SwapVerify parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_SwapVerify parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_SwapVerify parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_SwapVerify parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_SwapVerify parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_SwapVerify parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_SwapVerify parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_SwapVerify parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_SwapVerify prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code CDOTAUserMsg_SwapVerify}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:CDOTAUserMsg_SwapVerify)
        skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_SwapVerifyOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return skadistats.clarity.wire.common.proto.DotaUserMessages.internal_static_CDOTAUserMsg_SwapVerify_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return skadistats.clarity.wire.common.proto.DotaUserMessages.internal_static_CDOTAUserMsg_SwapVerify_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_SwapVerify.class, skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_SwapVerify.Builder.class);
      }

      // Construct using skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_SwapVerify.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        playerId_ = 0;
        bitField0_ = (bitField0_ & ~0x00000001);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return skadistats.clarity.wire.common.proto.DotaUserMessages.internal_static_CDOTAUserMsg_SwapVerify_descriptor;
      }

      public skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_SwapVerify getDefaultInstanceForType() {
        return skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_SwapVerify.getDefaultInstance();
      }

      public skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_SwapVerify build() {
        skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_SwapVerify result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_SwapVerify buildPartial() {
        skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_SwapVerify result = new skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_SwapVerify(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.playerId_ = playerId_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_SwapVerify) {
          return mergeFrom((skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_SwapVerify)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_SwapVerify other) {
        if (other == skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_SwapVerify.getDefaultInstance()) return this;
        if (other.hasPlayerId()) {
          setPlayerId(other.getPlayerId());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_SwapVerify parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_SwapVerify) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private int playerId_ ;
      /**
       * <code>optional uint32 player_id = 1;</code>
       */
      public boolean hasPlayerId() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>optional uint32 player_id = 1;</code>
       */
      public int getPlayerId() {
        return playerId_;
      }
      /**
       * <code>optional uint32 player_id = 1;</code>
       */
      public Builder setPlayerId(int value) {
        bitField0_ |= 0x00000001;
        playerId_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional uint32 player_id = 1;</code>
       */
      public Builder clearPlayerId() {
        bitField0_ = (bitField0_ & ~0x00000001);
        playerId_ = 0;
        onChanged();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:CDOTAUserMsg_SwapVerify)
    }

    static {
      defaultInstance = new CDOTAUserMsg_SwapVerify(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:CDOTAUserMsg_SwapVerify)
  }

  public interface CDOTAUserMsg_ChatEventOrBuilder extends
      // @@protoc_insertion_point(interface_extends:CDOTAUserMsg_ChatEvent)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>optional .DOTA_CHAT_MESSAGE type = 1 [default = CHAT_MESSAGE_INVALID];</code>
     */
    boolean hasType();
    /**
     * <code>optional .DOTA_CHAT_MESSAGE type = 1 [default = CHAT_MESSAGE_INVALID];</code>
     */
    skadistats.clarity.wire.common.proto.DotaUserMessages.DOTA_CHAT_MESSAGE getType();

    /**
     * <code>optional uint32 value = 2;</code>
     */
    boolean hasValue();
    /**
     * <code>optional uint32 value = 2;</code>
     */
    int getValue();

    /**
     * <code>optional sint32 playerid_1 = 3 [default = -1];</code>
     */
    boolean hasPlayerid1();
    /**
     * <code>optional sint32 playerid_1 = 3 [default = -1];</code>
     */
    int getPlayerid1();

    /**
     * <code>optional sint32 playerid_2 = 4 [default = -1];</code>
     */
    boolean hasPlayerid2();
    /**
     * <code>optional sint32 playerid_2 = 4 [default = -1];</code>
     */
    int getPlayerid2();

    /**
     * <code>optional sint32 playerid_3 = 5 [default = -1];</code>
     */
    boolean hasPlayerid3();
    /**
     * <code>optional sint32 playerid_3 = 5 [default = -1];</code>
     */
    int getPlayerid3();

    /**
     * <code>optional sint32 playerid_4 = 6 [default = -1];</code>
     */
    boolean hasPlayerid4();
    /**
     * <code>optional sint32 playerid_4 = 6 [default = -1];</code>
     */
    int getPlayerid4();

    /**
     * <code>optional sint32 playerid_5 = 7 [default = -1];</code>
     */
    boolean hasPlayerid5();
    /**
     * <code>optional sint32 playerid_5 = 7 [default = -1];</code>
     */
    int getPlayerid5();

    /**
     * <code>optional sint32 playerid_6 = 8 [default = -1];</code>
     */
    boolean hasPlayerid6();
    /**
     * <code>optional sint32 playerid_6 = 8 [default = -1];</code>
     */
    int getPlayerid6();

    /**
     * <code>optional uint32 value2 = 9;</code>
     */
    boolean hasValue2();
    /**
     * <code>optional uint32 value2 = 9;</code>
     */
    int getValue2();

    /**
     * <code>optional uint32 value3 = 10;</code>
     */
    boolean hasValue3();
    /**
     * <code>optional uint32 value3 = 10;</code>
     */
    int getValue3();
  }
  /**
   * Protobuf type {@code CDOTAUserMsg_ChatEvent}
   */
  public static final class CDOTAUserMsg_ChatEvent extends
      com.google.protobuf.GeneratedMessage implements
      // @@protoc_insertion_point(message_implements:CDOTAUserMsg_ChatEvent)
      CDOTAUserMsg_ChatEventOrBuilder {
    // Use CDOTAUserMsg_ChatEvent.newBuilder() to construct.
    private CDOTAUserMsg_ChatEvent(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private CDOTAUserMsg_ChatEvent(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final CDOTAUserMsg_ChatEvent defaultInstance;
    public static CDOTAUserMsg_ChatEvent getDefaultInstance() {
      return defaultInstance;
    }

    public CDOTAUserMsg_ChatEvent getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private CDOTAUserMsg_ChatEvent(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 8: {
              int rawValue = input.readEnum();
              skadistats.clarity.wire.common.proto.DotaUserMessages.DOTA_CHAT_MESSAGE value = skadistats.clarity.wire.common.proto.DotaUserMessages.DOTA_CHAT_MESSAGE.valueOf(rawValue);
              if (value == null) {
                unknownFields.mergeVarintField(1, rawValue);
              } else {
                bitField0_ |= 0x00000001;
                type_ = value;
              }
              break;
            }
            case 16: {
              bitField0_ |= 0x00000002;
              value_ = input.readUInt32();
              break;
            }
            case 24: {
              bitField0_ |= 0x00000004;
              playerid1_ = input.readSInt32();
              break;
            }
            case 32: {
              bitField0_ |= 0x00000008;
              playerid2_ = input.readSInt32();
              break;
            }
            case 40: {
              bitField0_ |= 0x00000010;
              playerid3_ = input.readSInt32();
              break;
            }
            case 48: {
              bitField0_ |= 0x00000020;
              playerid4_ = input.readSInt32();
              break;
            }
            case 56: {
              bitField0_ |= 0x00000040;
              playerid5_ = input.readSInt32();
              break;
            }
            case 64: {
              bitField0_ |= 0x00000080;
              playerid6_ = input.readSInt32();
              break;
            }
            case 72: {
              bitField0_ |= 0x00000100;
              value2_ = input.readUInt32();
              break;
            }
            case 80: {
              bitField0_ |= 0x00000200;
              value3_ = input.readUInt32();
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return skadistats.clarity.wire.common.proto.DotaUserMessages.internal_static_CDOTAUserMsg_ChatEvent_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return skadistats.clarity.wire.common.proto.DotaUserMessages.internal_static_CDOTAUserMsg_ChatEvent_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_ChatEvent.class, skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_ChatEvent.Builder.class);
    }

    public static com.google.protobuf.Parser<CDOTAUserMsg_ChatEvent> PARSER =
        new com.google.protobuf.AbstractParser<CDOTAUserMsg_ChatEvent>() {
      public CDOTAUserMsg_ChatEvent parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new CDOTAUserMsg_ChatEvent(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<CDOTAUserMsg_ChatEvent> getParserForType() {
      return PARSER;
    }

    private int bitField0_;
    public static final int TYPE_FIELD_NUMBER = 1;
    private skadistats.clarity.wire.common.proto.DotaUserMessages.DOTA_CHAT_MESSAGE type_;
    /**
     * <code>optional .DOTA_CHAT_MESSAGE type = 1 [default = CHAT_MESSAGE_INVALID];</code>
     */
    public boolean hasType() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>optional .DOTA_CHAT_MESSAGE type = 1 [default = CHAT_MESSAGE_INVALID];</code>
     */
    public skadistats.clarity.wire.common.proto.DotaUserMessages.DOTA_CHAT_MESSAGE getType() {
      return type_;
    }

    public static final int VALUE_FIELD_NUMBER = 2;
    private int value_;
    /**
     * <code>optional uint32 value = 2;</code>
     */
    public boolean hasValue() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>optional uint32 value = 2;</code>
     */
    public int getValue() {
      return value_;
    }

    public static final int PLAYERID_1_FIELD_NUMBER = 3;
    private int playerid1_;
    /**
     * <code>optional sint32 playerid_1 = 3 [default = -1];</code>
     */
    public boolean hasPlayerid1() {
      return ((bitField0_ & 0x00000004) == 0x00000004);
    }
    /**
     * <code>optional sint32 playerid_1 = 3 [default = -1];</code>
     */
    public int getPlayerid1() {
      return playerid1_;
    }

    public static final int PLAYERID_2_FIELD_NUMBER = 4;
    private int playerid2_;
    /**
     * <code>optional sint32 playerid_2 = 4 [default = -1];</code>
     */
    public boolean hasPlayerid2() {
      return ((bitField0_ & 0x00000008) == 0x00000008);
    }
    /**
     * <code>optional sint32 playerid_2 = 4 [default = -1];</code>
     */
    public int getPlayerid2() {
      return playerid2_;
    }

    public static final int PLAYERID_3_FIELD_NUMBER = 5;
    private int playerid3_;
    /**
     * <code>optional sint32 playerid_3 = 5 [default = -1];</code>
     */
    public boolean hasPlayerid3() {
      return ((bitField0_ & 0x00000010) == 0x00000010);
    }
    /**
     * <code>optional sint32 playerid_3 = 5 [default = -1];</code>
     */
    public int getPlayerid3() {
      return playerid3_;
    }

    public static final int PLAYERID_4_FIELD_NUMBER = 6;
    private int playerid4_;
    /**
     * <code>optional sint32 playerid_4 = 6 [default = -1];</code>
     */
    public boolean hasPlayerid4() {
      return ((bitField0_ & 0x00000020) == 0x00000020);
    }
    /**
     * <code>optional sint32 playerid_4 = 6 [default = -1];</code>
     */
    public int getPlayerid4() {
      return playerid4_;
    }

    public static final int PLAYERID_5_FIELD_NUMBER = 7;
    private int playerid5_;
    /**
     * <code>optional sint32 playerid_5 = 7 [default = -1];</code>
     */
    public boolean hasPlayerid5() {
      return ((bitField0_ & 0x00000040) == 0x00000040);
    }
    /**
     * <code>optional sint32 playerid_5 = 7 [default = -1];</code>
     */
    public int getPlayerid5() {
      return playerid5_;
    }

    public static final int PLAYERID_6_FIELD_NUMBER = 8;
    private int playerid6_;
    /**
     * <code>optional sint32 playerid_6 = 8 [default = -1];</code>
     */
    public boolean hasPlayerid6() {
      return ((bitField0_ & 0x00000080) == 0x00000080);
    }
    /**
     * <code>optional sint32 playerid_6 = 8 [default = -1];</code>
     */
    public int getPlayerid6() {
      return playerid6_;
    }

    public static final int VALUE2_FIELD_NUMBER = 9;
    private int value2_;
    /**
     * <code>optional uint32 value2 = 9;</code>
     */
    public boolean hasValue2() {
      return ((bitField0_ & 0x00000100) == 0x00000100);
    }
    /**
     * <code>optional uint32 value2 = 9;</code>
     */
    public int getValue2() {
      return value2_;
    }

    public static final int VALUE3_FIELD_NUMBER = 10;
    private int value3_;
    /**
     * <code>optional uint32 value3 = 10;</code>
     */
    public boolean hasValue3() {
      return ((bitField0_ & 0x00000200) == 0x00000200);
    }
    /**
     * <code>optional uint32 value3 = 10;</code>
     */
    public int getValue3() {
      return value3_;
    }

    private void initFields() {
      type_ = skadistats.clarity.wire.common.proto.DotaUserMessages.DOTA_CHAT_MESSAGE.CHAT_MESSAGE_INVALID;
      value_ = 0;
      playerid1_ = -1;
      playerid2_ = -1;
      playerid3_ = -1;
      playerid4_ = -1;
      playerid5_ = -1;
      playerid6_ = -1;
      value2_ = 0;
      value3_ = 0;
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeEnum(1, type_.getNumber());
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeUInt32(2, value_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        output.writeSInt32(3, playerid1_);
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        output.writeSInt32(4, playerid2_);
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        output.writeSInt32(5, playerid3_);
      }
      if (((bitField0_ & 0x00000020) == 0x00000020)) {
        output.writeSInt32(6, playerid4_);
      }
      if (((bitField0_ & 0x00000040) == 0x00000040)) {
        output.writeSInt32(7, playerid5_);
      }
      if (((bitField0_ & 0x00000080) == 0x00000080)) {
        output.writeSInt32(8, playerid6_);
      }
      if (((bitField0_ & 0x00000100) == 0x00000100)) {
        output.writeUInt32(9, value2_);
      }
      if (((bitField0_ & 0x00000200) == 0x00000200)) {
        output.writeUInt32(10, value3_);
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeEnumSize(1, type_.getNumber());
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(2, value_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        size += com.google.protobuf.CodedOutputStream
          .computeSInt32Size(3, playerid1_);
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        size += com.google.protobuf.CodedOutputStream
          .computeSInt32Size(4, playerid2_);
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        size += com.google.protobuf.CodedOutputStream
          .computeSInt32Size(5, playerid3_);
      }
      if (((bitField0_ & 0x00000020) == 0x00000020)) {
        size += com.google.protobuf.CodedOutputStream
          .computeSInt32Size(6, playerid4_);
      }
      if (((bitField0_ & 0x00000040) == 0x00000040)) {
        size += com.google.protobuf.CodedOutputStream
          .computeSInt32Size(7, playerid5_);
      }
      if (((bitField0_ & 0x00000080) == 0x00000080)) {
        size += com.google.protobuf.CodedOutputStream
          .computeSInt32Size(8, playerid6_);
      }
      if (((bitField0_ & 0x00000100) == 0x00000100)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(9, value2_);
      }
      if (((bitField0_ & 0x00000200) == 0x00000200)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(10, value3_);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_ChatEvent parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_ChatEvent parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_ChatEvent parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_ChatEvent parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_ChatEvent parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_ChatEvent parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_ChatEvent parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_ChatEvent parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_ChatEvent parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_ChatEvent parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_ChatEvent prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code CDOTAUserMsg_ChatEvent}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:CDOTAUserMsg_ChatEvent)
        skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_ChatEventOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return skadistats.clarity.wire.common.proto.DotaUserMessages.internal_static_CDOTAUserMsg_ChatEvent_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return skadistats.clarity.wire.common.proto.DotaUserMessages.internal_static_CDOTAUserMsg_ChatEvent_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_ChatEvent.class, skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_ChatEvent.Builder.class);
      }

      // Construct using skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_ChatEvent.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        type_ = skadistats.clarity.wire.common.proto.DotaUserMessages.DOTA_CHAT_MESSAGE.CHAT_MESSAGE_INVALID;
        bitField0_ = (bitField0_ & ~0x00000001);
        value_ = 0;
        bitField0_ = (bitField0_ & ~0x00000002);
        playerid1_ = -1;
        bitField0_ = (bitField0_ & ~0x00000004);
        playerid2_ = -1;
        bitField0_ = (bitField0_ & ~0x00000008);
        playerid3_ = -1;
        bitField0_ = (bitField0_ & ~0x00000010);
        playerid4_ = -1;
        bitField0_ = (bitField0_ & ~0x00000020);
        playerid5_ = -1;
        bitField0_ = (bitField0_ & ~0x00000040);
        playerid6_ = -1;
        bitField0_ = (bitField0_ & ~0x00000080);
        value2_ = 0;
        bitField0_ = (bitField0_ & ~0x00000100);
        value3_ = 0;
        bitField0_ = (bitField0_ & ~0x00000200);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return skadistats.clarity.wire.common.proto.DotaUserMessages.internal_static_CDOTAUserMsg_ChatEvent_descriptor;
      }

      public skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_ChatEvent getDefaultInstanceForType() {
        return skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_ChatEvent.getDefaultInstance();
      }

      public skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_ChatEvent build() {
        skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_ChatEvent result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_ChatEvent buildPartial() {
        skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_ChatEvent result = new skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_ChatEvent(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.type_ = type_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.value_ = value_;
        if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
          to_bitField0_ |= 0x00000004;
        }
        result.playerid1_ = playerid1_;
        if (((from_bitField0_ & 0x00000008) == 0x00000008)) {
          to_bitField0_ |= 0x00000008;
        }
        result.playerid2_ = playerid2_;
        if (((from_bitField0_ & 0x00000010) == 0x00000010)) {
          to_bitField0_ |= 0x00000010;
        }
        result.playerid3_ = playerid3_;
        if (((from_bitField0_ & 0x00000020) == 0x00000020)) {
          to_bitField0_ |= 0x00000020;
        }
        result.playerid4_ = playerid4_;
        if (((from_bitField0_ & 0x00000040) == 0x00000040)) {
          to_bitField0_ |= 0x00000040;
        }
        result.playerid5_ = playerid5_;
        if (((from_bitField0_ & 0x00000080) == 0x00000080)) {
          to_bitField0_ |= 0x00000080;
        }
        result.playerid6_ = playerid6_;
        if (((from_bitField0_ & 0x00000100) == 0x00000100)) {
          to_bitField0_ |= 0x00000100;
        }
        result.value2_ = value2_;
        if (((from_bitField0_ & 0x00000200) == 0x00000200)) {
          to_bitField0_ |= 0x00000200;
        }
        result.value3_ = value3_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_ChatEvent) {
          return mergeFrom((skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_ChatEvent)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_ChatEvent other) {
        if (other == skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_ChatEvent.getDefaultInstance()) return this;
        if (other.hasType()) {
          setType(other.getType());
        }
        if (other.hasValue()) {
          setValue(other.getValue());
        }
        if (other.hasPlayerid1()) {
          setPlayerid1(other.getPlayerid1());
        }
        if (other.hasPlayerid2()) {
          setPlayerid2(other.getPlayerid2());
        }
        if (other.hasPlayerid3()) {
          setPlayerid3(other.getPlayerid3());
        }
        if (other.hasPlayerid4()) {
          setPlayerid4(other.getPlayerid4());
        }
        if (other.hasPlayerid5()) {
          setPlayerid5(other.getPlayerid5());
        }
        if (other.hasPlayerid6()) {
          setPlayerid6(other.getPlayerid6());
        }
        if (other.hasValue2()) {
          setValue2(other.getValue2());
        }
        if (other.hasValue3()) {
          setValue3(other.getValue3());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_ChatEvent parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_ChatEvent) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private skadistats.clarity.wire.common.proto.DotaUserMessages.DOTA_CHAT_MESSAGE type_ = skadistats.clarity.wire.common.proto.DotaUserMessages.DOTA_CHAT_MESSAGE.CHAT_MESSAGE_INVALID;
      /**
       * <code>optional .DOTA_CHAT_MESSAGE type = 1 [default = CHAT_MESSAGE_INVALID];</code>
       */
      public boolean hasType() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>optional .DOTA_CHAT_MESSAGE type = 1 [default = CHAT_MESSAGE_INVALID];</code>
       */
      public skadistats.clarity.wire.common.proto.DotaUserMessages.DOTA_CHAT_MESSAGE getType() {
        return type_;
      }
      /**
       * <code>optional .DOTA_CHAT_MESSAGE type = 1 [default = CHAT_MESSAGE_INVALID];</code>
       */
      public Builder setType(skadistats.clarity.wire.common.proto.DotaUserMessages.DOTA_CHAT_MESSAGE value) {
        if (value == null) {
          throw new NullPointerException();
        }
        bitField0_ |= 0x00000001;
        type_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional .DOTA_CHAT_MESSAGE type = 1 [default = CHAT_MESSAGE_INVALID];</code>
       */
      public Builder clearType() {
        bitField0_ = (bitField0_ & ~0x00000001);
        type_ = skadistats.clarity.wire.common.proto.DotaUserMessages.DOTA_CHAT_MESSAGE.CHAT_MESSAGE_INVALID;
        onChanged();
        return this;
      }

      private int value_ ;
      /**
       * <code>optional uint32 value = 2;</code>
       */
      public boolean hasValue() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>optional uint32 value = 2;</code>
       */
      public int getValue() {
        return value_;
      }
      /**
       * <code>optional uint32 value = 2;</code>
       */
      public Builder setValue(int value) {
        bitField0_ |= 0x00000002;
        value_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional uint32 value = 2;</code>
       */
      public Builder clearValue() {
        bitField0_ = (bitField0_ & ~0x00000002);
        value_ = 0;
        onChanged();
        return this;
      }

      private int playerid1_ = -1;
      /**
       * <code>optional sint32 playerid_1 = 3 [default = -1];</code>
       */
      public boolean hasPlayerid1() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }
      /**
       * <code>optional sint32 playerid_1 = 3 [default = -1];</code>
       */
      public int getPlayerid1() {
        return playerid1_;
      }
      /**
       * <code>optional sint32 playerid_1 = 3 [default = -1];</code>
       */
      public Builder setPlayerid1(int value) {
        bitField0_ |= 0x00000004;
        playerid1_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional sint32 playerid_1 = 3 [default = -1];</code>
       */
      public Builder clearPlayerid1() {
        bitField0_ = (bitField0_ & ~0x00000004);
        playerid1_ = -1;
        onChanged();
        return this;
      }

      private int playerid2_ = -1;
      /**
       * <code>optional sint32 playerid_2 = 4 [default = -1];</code>
       */
      public boolean hasPlayerid2() {
        return ((bitField0_ & 0x00000008) == 0x00000008);
      }
      /**
       * <code>optional sint32 playerid_2 = 4 [default = -1];</code>
       */
      public int getPlayerid2() {
        return playerid2_;
      }
      /**
       * <code>optional sint32 playerid_2 = 4 [default = -1];</code>
       */
      public Builder setPlayerid2(int value) {
        bitField0_ |= 0x00000008;
        playerid2_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional sint32 playerid_2 = 4 [default = -1];</code>
       */
      public Builder clearPlayerid2() {
        bitField0_ = (bitField0_ & ~0x00000008);
        playerid2_ = -1;
        onChanged();
        return this;
      }

      private int playerid3_ = -1;
      /**
       * <code>optional sint32 playerid_3 = 5 [default = -1];</code>
       */
      public boolean hasPlayerid3() {
        return ((bitField0_ & 0x00000010) == 0x00000010);
      }
      /**
       * <code>optional sint32 playerid_3 = 5 [default = -1];</code>
       */
      public int getPlayerid3() {
        return playerid3_;
      }
      /**
       * <code>optional sint32 playerid_3 = 5 [default = -1];</code>
       */
      public Builder setPlayerid3(int value) {
        bitField0_ |= 0x00000010;
        playerid3_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional sint32 playerid_3 = 5 [default = -1];</code>
       */
      public Builder clearPlayerid3() {
        bitField0_ = (bitField0_ & ~0x00000010);
        playerid3_ = -1;
        onChanged();
        return this;
      }

      private int playerid4_ = -1;
      /**
       * <code>optional sint32 playerid_4 = 6 [default = -1];</code>
       */
      public boolean hasPlayerid4() {
        return ((bitField0_ & 0x00000020) == 0x00000020);
      }
      /**
       * <code>optional sint32 playerid_4 = 6 [default = -1];</code>
       */
      public int getPlayerid4() {
        return playerid4_;
      }
      /**
       * <code>optional sint32 playerid_4 = 6 [default = -1];</code>
       */
      public Builder setPlayerid4(int value) {
        bitField0_ |= 0x00000020;
        playerid4_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional sint32 playerid_4 = 6 [default = -1];</code>
       */
      public Builder clearPlayerid4() {
        bitField0_ = (bitField0_ & ~0x00000020);
        playerid4_ = -1;
        onChanged();
        return this;
      }

      private int playerid5_ = -1;
      /**
       * <code>optional sint32 playerid_5 = 7 [default = -1];</code>
       */
      public boolean hasPlayerid5() {
        return ((bitField0_ & 0x00000040) == 0x00000040);
      }
      /**
       * <code>optional sint32 playerid_5 = 7 [default = -1];</code>
       */
      public int getPlayerid5() {
        return playerid5_;
      }
      /**
       * <code>optional sint32 playerid_5 = 7 [default = -1];</code>
       */
      public Builder setPlayerid5(int value) {
        bitField0_ |= 0x00000040;
        playerid5_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional sint32 playerid_5 = 7 [default = -1];</code>
       */
      public Builder clearPlayerid5() {
        bitField0_ = (bitField0_ & ~0x00000040);
        playerid5_ = -1;
        onChanged();
        return this;
      }

      private int playerid6_ = -1;
      /**
       * <code>optional sint32 playerid_6 = 8 [default = -1];</code>
       */
      public boolean hasPlayerid6() {
        return ((bitField0_ & 0x00000080) == 0x00000080);
      }
      /**
       * <code>optional sint32 playerid_6 = 8 [default = -1];</code>
       */
      public int getPlayerid6() {
        return playerid6_;
      }
      /**
       * <code>optional sint32 playerid_6 = 8 [default = -1];</code>
       */
      public Builder setPlayerid6(int value) {
        bitField0_ |= 0x00000080;
        playerid6_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional sint32 playerid_6 = 8 [default = -1];</code>
       */
      public Builder clearPlayerid6() {
        bitField0_ = (bitField0_ & ~0x00000080);
        playerid6_ = -1;
        onChanged();
        return this;
      }

      private int value2_ ;
      /**
       * <code>optional uint32 value2 = 9;</code>
       */
      public boolean hasValue2() {
        return ((bitField0_ & 0x00000100) == 0x00000100);
      }
      /**
       * <code>optional uint32 value2 = 9;</code>
       */
      public int getValue2() {
        return value2_;
      }
      /**
       * <code>optional uint32 value2 = 9;</code>
       */
      public Builder setValue2(int value) {
        bitField0_ |= 0x00000100;
        value2_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional uint32 value2 = 9;</code>
       */
      public Builder clearValue2() {
        bitField0_ = (bitField0_ & ~0x00000100);
        value2_ = 0;
        onChanged();
        return this;
      }

      private int value3_ ;
      /**
       * <code>optional uint32 value3 = 10;</code>
       */
      public boolean hasValue3() {
        return ((bitField0_ & 0x00000200) == 0x00000200);
      }
      /**
       * <code>optional uint32 value3 = 10;</code>
       */
      public int getValue3() {
        return value3_;
      }
      /**
       * <code>optional uint32 value3 = 10;</code>
       */
      public Builder setValue3(int value) {
        bitField0_ |= 0x00000200;
        value3_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional uint32 value3 = 10;</code>
       */
      public Builder clearValue3() {
        bitField0_ = (bitField0_ & ~0x00000200);
        value3_ = 0;
        onChanged();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:CDOTAUserMsg_ChatEvent)
    }

    static {
      defaultInstance = new CDOTAUserMsg_ChatEvent(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:CDOTAUserMsg_ChatEvent)
  }

  public interface CDOTAUserMsg_CombatLogShowDeathOrBuilder extends
      // @@protoc_insertion_point(interface_extends:CDOTAUserMsg_CombatLogShowDeath)
      com.google.protobuf.MessageOrBuilder {
  }
  /**
   * Protobuf type {@code CDOTAUserMsg_CombatLogShowDeath}
   */
  public static final class CDOTAUserMsg_CombatLogShowDeath extends
      com.google.protobuf.GeneratedMessage implements
      // @@protoc_insertion_point(message_implements:CDOTAUserMsg_CombatLogShowDeath)
      CDOTAUserMsg_CombatLogShowDeathOrBuilder {
    // Use CDOTAUserMsg_CombatLogShowDeath.newBuilder() to construct.
    private CDOTAUserMsg_CombatLogShowDeath(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private CDOTAUserMsg_CombatLogShowDeath(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final CDOTAUserMsg_CombatLogShowDeath defaultInstance;
    public static CDOTAUserMsg_CombatLogShowDeath getDefaultInstance() {
      return defaultInstance;
    }

    public CDOTAUserMsg_CombatLogShowDeath getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private CDOTAUserMsg_CombatLogShowDeath(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return skadistats.clarity.wire.common.proto.DotaUserMessages.internal_static_CDOTAUserMsg_CombatLogShowDeath_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return skadistats.clarity.wire.common.proto.DotaUserMessages.internal_static_CDOTAUserMsg_CombatLogShowDeath_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_CombatLogShowDeath.class, skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_CombatLogShowDeath.Builder.class);
    }

    public static com.google.protobuf.Parser<CDOTAUserMsg_CombatLogShowDeath> PARSER =
        new com.google.protobuf.AbstractParser<CDOTAUserMsg_CombatLogShowDeath>() {
      public CDOTAUserMsg_CombatLogShowDeath parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new CDOTAUserMsg_CombatLogShowDeath(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<CDOTAUserMsg_CombatLogShowDeath> getParserForType() {
      return PARSER;
    }

    private void initFields() {
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_CombatLogShowDeath parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_CombatLogShowDeath parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_CombatLogShowDeath parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_CombatLogShowDeath parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_CombatLogShowDeath parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_CombatLogShowDeath parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_CombatLogShowDeath parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_CombatLogShowDeath parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_CombatLogShowDeath parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_CombatLogShowDeath parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_CombatLogShowDeath prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code CDOTAUserMsg_CombatLogShowDeath}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:CDOTAUserMsg_CombatLogShowDeath)
        skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_CombatLogShowDeathOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return skadistats.clarity.wire.common.proto.DotaUserMessages.internal_static_CDOTAUserMsg_CombatLogShowDeath_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return skadistats.clarity.wire.common.proto.DotaUserMessages.internal_static_CDOTAUserMsg_CombatLogShowDeath_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_CombatLogShowDeath.class, skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_CombatLogShowDeath.Builder.class);
      }

      // Construct using skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_CombatLogShowDeath.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return skadistats.clarity.wire.common.proto.DotaUserMessages.internal_static_CDOTAUserMsg_CombatLogShowDeath_descriptor;
      }

      public skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_CombatLogShowDeath getDefaultInstanceForType() {
        return skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_CombatLogShowDeath.getDefaultInstance();
      }

      public skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_CombatLogShowDeath build() {
        skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_CombatLogShowDeath result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_CombatLogShowDeath buildPartial() {
        skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_CombatLogShowDeath result = new skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_CombatLogShowDeath(this);
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_CombatLogShowDeath) {
          return mergeFrom((skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_CombatLogShowDeath)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_CombatLogShowDeath other) {
        if (other == skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_CombatLogShowDeath.getDefaultInstance()) return this;
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_CombatLogShowDeath parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_CombatLogShowDeath) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }

      // @@protoc_insertion_point(builder_scope:CDOTAUserMsg_CombatLogShowDeath)
    }

    static {
      defaultInstance = new CDOTAUserMsg_CombatLogShowDeath(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:CDOTAUserMsg_CombatLogShowDeath)
  }

  public interface CDOTAUserMsg_BotChatOrBuilder extends
      // @@protoc_insertion_point(interface_extends:CDOTAUserMsg_BotChat)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>optional uint32 player_id = 1;</code>
     */
    boolean hasPlayerId();
    /**
     * <code>optional uint32 player_id = 1;</code>
     */
    int getPlayerId();

    /**
     * <code>optional string format = 2;</code>
     */
    boolean hasFormat();
    /**
     * <code>optional string format = 2;</code>
     */
    java.lang.String getFormat();
    /**
     * <code>optional string format = 2;</code>
     */
    com.google.protobuf.ByteString
        getFormatBytes();

    /**
     * <code>optional string message = 3;</code>
     */
    boolean hasMessage();
    /**
     * <code>optional string message = 3;</code>
     */
    java.lang.String getMessage();
    /**
     * <code>optional string message = 3;</code>
     */
    com.google.protobuf.ByteString
        getMessageBytes();

    /**
     * <code>optional string target = 4;</code>
     */
    boolean hasTarget();
    /**
     * <code>optional string target = 4;</code>
     */
    java.lang.String getTarget();
    /**
     * <code>optional string target = 4;</code>
     */
    com.google.protobuf.ByteString
        getTargetBytes();
  }
  /**
   * Protobuf type {@code CDOTAUserMsg_BotChat}
   */
  public static final class CDOTAUserMsg_BotChat extends
      com.google.protobuf.GeneratedMessage implements
      // @@protoc_insertion_point(message_implements:CDOTAUserMsg_BotChat)
      CDOTAUserMsg_BotChatOrBuilder {
    // Use CDOTAUserMsg_BotChat.newBuilder() to construct.
    private CDOTAUserMsg_BotChat(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private CDOTAUserMsg_BotChat(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final CDOTAUserMsg_BotChat defaultInstance;
    public static CDOTAUserMsg_BotChat getDefaultInstance() {
      return defaultInstance;
    }

    public CDOTAUserMsg_BotChat getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private CDOTAUserMsg_BotChat(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 8: {
              bitField0_ |= 0x00000001;
              playerId_ = input.readUInt32();
              break;
            }
            case 18: {
              com.google.protobuf.ByteString bs = input.readBytes();
              bitField0_ |= 0x00000002;
              format_ = bs;
              break;
            }
            case 26: {
              com.google.protobuf.ByteString bs = input.readBytes();
              bitField0_ |= 0x00000004;
              message_ = bs;
              break;
            }
            case 34: {
              com.google.protobuf.ByteString bs = input.readBytes();
              bitField0_ |= 0x00000008;
              target_ = bs;
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return skadistats.clarity.wire.common.proto.DotaUserMessages.internal_static_CDOTAUserMsg_BotChat_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return skadistats.clarity.wire.common.proto.DotaUserMessages.internal_static_CDOTAUserMsg_BotChat_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_BotChat.class, skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_BotChat.Builder.class);
    }

    public static com.google.protobuf.Parser<CDOTAUserMsg_BotChat> PARSER =
        new com.google.protobuf.AbstractParser<CDOTAUserMsg_BotChat>() {
      public CDOTAUserMsg_BotChat parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new CDOTAUserMsg_BotChat(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<CDOTAUserMsg_BotChat> getParserForType() {
      return PARSER;
    }

    private int bitField0_;
    public static final int PLAYER_ID_FIELD_NUMBER = 1;
    private int playerId_;
    /**
     * <code>optional uint32 player_id = 1;</code>
     */
    public boolean hasPlayerId() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>optional uint32 player_id = 1;</code>
     */
    public int getPlayerId() {
      return playerId_;
    }

    public static final int FORMAT_FIELD_NUMBER = 2;
    private java.lang.Object format_;
    /**
     * <code>optional string format = 2;</code>
     */
    public boolean hasFormat() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>optional string format = 2;</code>
     */
    public java.lang.String getFormat() {
      java.lang.Object ref = format_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          format_ = s;
        }
        return s;
      }
    }
    /**
     * <code>optional string format = 2;</code>
     */
    public com.google.protobuf.ByteString
        getFormatBytes() {
      java.lang.Object ref = format_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        format_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int MESSAGE_FIELD_NUMBER = 3;
    private java.lang.Object message_;
    /**
     * <code>optional string message = 3;</code>
     */
    public boolean hasMessage() {
      return ((bitField0_ & 0x00000004) == 0x00000004);
    }
    /**
     * <code>optional string message = 3;</code>
     */
    public java.lang.String getMessage() {
      java.lang.Object ref = message_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          message_ = s;
        }
        return s;
      }
    }
    /**
     * <code>optional string message = 3;</code>
     */
    public com.google.protobuf.ByteString
        getMessageBytes() {
      java.lang.Object ref = message_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        message_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int TARGET_FIELD_NUMBER = 4;
    private java.lang.Object target_;
    /**
     * <code>optional string target = 4;</code>
     */
    public boolean hasTarget() {
      return ((bitField0_ & 0x00000008) == 0x00000008);
    }
    /**
     * <code>optional string target = 4;</code>
     */
    public java.lang.String getTarget() {
      java.lang.Object ref = target_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          target_ = s;
        }
        return s;
      }
    }
    /**
     * <code>optional string target = 4;</code>
     */
    public com.google.protobuf.ByteString
        getTargetBytes() {
      java.lang.Object ref = target_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        target_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    private void initFields() {
      playerId_ = 0;
      format_ = "";
      message_ = "";
      target_ = "";
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeUInt32(1, playerId_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeBytes(2, getFormatBytes());
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        output.writeBytes(3, getMessageBytes());
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        output.writeBytes(4, getTargetBytes());
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(1, playerId_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(2, getFormatBytes());
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(3, getMessageBytes());
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(4, getTargetBytes());
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_BotChat parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_BotChat parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_BotChat parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_BotChat parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_BotChat parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_BotChat parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_BotChat parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_BotChat parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_BotChat parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_BotChat parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_BotChat prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code CDOTAUserMsg_BotChat}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:CDOTAUserMsg_BotChat)
        skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_BotChatOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return skadistats.clarity.wire.common.proto.DotaUserMessages.internal_static_CDOTAUserMsg_BotChat_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return skadistats.clarity.wire.common.proto.DotaUserMessages.internal_static_CDOTAUserMsg_BotChat_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_BotChat.class, skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_BotChat.Builder.class);
      }

      // Construct using skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_BotChat.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        playerId_ = 0;
        bitField0_ = (bitField0_ & ~0x00000001);
        format_ = "";
        bitField0_ = (bitField0_ & ~0x00000002);
        message_ = "";
        bitField0_ = (bitField0_ & ~0x00000004);
        target_ = "";
        bitField0_ = (bitField0_ & ~0x00000008);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return skadistats.clarity.wire.common.proto.DotaUserMessages.internal_static_CDOTAUserMsg_BotChat_descriptor;
      }

      public skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_BotChat getDefaultInstanceForType() {
        return skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_BotChat.getDefaultInstance();
      }

      public skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_BotChat build() {
        skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_BotChat result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_BotChat buildPartial() {
        skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_BotChat result = new skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_BotChat(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.playerId_ = playerId_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.format_ = format_;
        if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
          to_bitField0_ |= 0x00000004;
        }
        result.message_ = message_;
        if (((from_bitField0_ & 0x00000008) == 0x00000008)) {
          to_bitField0_ |= 0x00000008;
        }
        result.target_ = target_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_BotChat) {
          return mergeFrom((skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_BotChat)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_BotChat other) {
        if (other == skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_BotChat.getDefaultInstance()) return this;
        if (other.hasPlayerId()) {
          setPlayerId(other.getPlayerId());
        }
        if (other.hasFormat()) {
          bitField0_ |= 0x00000002;
          format_ = other.format_;
          onChanged();
        }
        if (other.hasMessage()) {
          bitField0_ |= 0x00000004;
          message_ = other.message_;
          onChanged();
        }
        if (other.hasTarget()) {
          bitField0_ |= 0x00000008;
          target_ = other.target_;
          onChanged();
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_BotChat parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_BotChat) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private int playerId_ ;
      /**
       * <code>optional uint32 player_id = 1;</code>
       */
      public boolean hasPlayerId() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>optional uint32 player_id = 1;</code>
       */
      public int getPlayerId() {
        return playerId_;
      }
      /**
       * <code>optional uint32 player_id = 1;</code>
       */
      public Builder setPlayerId(int value) {
        bitField0_ |= 0x00000001;
        playerId_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional uint32 player_id = 1;</code>
       */
      public Builder clearPlayerId() {
        bitField0_ = (bitField0_ & ~0x00000001);
        playerId_ = 0;
        onChanged();
        return this;
      }

      private java.lang.Object format_ = "";
      /**
       * <code>optional string format = 2;</code>
       */
      public boolean hasFormat() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>optional string format = 2;</code>
       */
      public java.lang.String getFormat() {
        java.lang.Object ref = format_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          if (bs.isValidUtf8()) {
            format_ = s;
          }
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>optional string format = 2;</code>
       */
      public com.google.protobuf.ByteString
          getFormatBytes() {
        java.lang.Object ref = format_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          format_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>optional string format = 2;</code>
       */
      public Builder setFormat(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000002;
        format_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional string format = 2;</code>
       */
      public Builder clearFormat() {
        bitField0_ = (bitField0_ & ~0x00000002);
        format_ = getDefaultInstance().getFormat();
        onChanged();
        return this;
      }
      /**
       * <code>optional string format = 2;</code>
       */
      public Builder setFormatBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000002;
        format_ = value;
        onChanged();
        return this;
      }

      private java.lang.Object message_ = "";
      /**
       * <code>optional string message = 3;</code>
       */
      public boolean hasMessage() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }
      /**
       * <code>optional string message = 3;</code>
       */
      public java.lang.String getMessage() {
        java.lang.Object ref = message_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          if (bs.isValidUtf8()) {
            message_ = s;
          }
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>optional string message = 3;</code>
       */
      public com.google.protobuf.ByteString
          getMessageBytes() {
        java.lang.Object ref = message_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          message_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>optional string message = 3;</code>
       */
      public Builder setMessage(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000004;
        message_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional string message = 3;</code>
       */
      public Builder clearMessage() {
        bitField0_ = (bitField0_ & ~0x00000004);
        message_ = getDefaultInstance().getMessage();
        onChanged();
        return this;
      }
      /**
       * <code>optional string message = 3;</code>
       */
      public Builder setMessageBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000004;
        message_ = value;
        onChanged();
        return this;
      }

      private java.lang.Object target_ = "";
      /**
       * <code>optional string target = 4;</code>
       */
      public boolean hasTarget() {
        return ((bitField0_ & 0x00000008) == 0x00000008);
      }
      /**
       * <code>optional string target = 4;</code>
       */
      public java.lang.String getTarget() {
        java.lang.Object ref = target_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          if (bs.isValidUtf8()) {
            target_ = s;
          }
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>optional string target = 4;</code>
       */
      public com.google.protobuf.ByteString
          getTargetBytes() {
        java.lang.Object ref = target_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          target_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>optional string target = 4;</code>
       */
      public Builder setTarget(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000008;
        target_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional string target = 4;</code>
       */
      public Builder clearTarget() {
        bitField0_ = (bitField0_ & ~0x00000008);
        target_ = getDefaultInstance().getTarget();
        onChanged();
        return this;
      }
      /**
       * <code>optional string target = 4;</code>
       */
      public Builder setTargetBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000008;
        target_ = value;
        onChanged();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:CDOTAUserMsg_BotChat)
    }

    static {
      defaultInstance = new CDOTAUserMsg_BotChat(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:CDOTAUserMsg_BotChat)
  }

  public interface CDOTAUserMsg_CombatHeroPositionsOrBuilder extends
      // @@protoc_insertion_point(interface_extends:CDOTAUserMsg_CombatHeroPositions)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>optional uint32 index = 1;</code>
     */
    boolean hasIndex();
    /**
     * <code>optional uint32 index = 1;</code>
     */
    int getIndex();

    /**
     * <code>optional int32 time = 2;</code>
     */
    boolean hasTime();
    /**
     * <code>optional int32 time = 2;</code>
     */
    int getTime();

    /**
     * <code>optional .CMsgVector2D world_pos = 3;</code>
     */
    boolean hasWorldPos();
    /**
     * <code>optional .CMsgVector2D world_pos = 3;</code>
     */
    skadistats.clarity.wire.common.proto.NetworkBaseTypes.CMsgVector2D getWorldPos();
    /**
     * <code>optional .CMsgVector2D world_pos = 3;</code>
     */
    skadistats.clarity.wire.common.proto.NetworkBaseTypes.CMsgVector2DOrBuilder getWorldPosOrBuilder();

    /**
     * <code>optional int32 health = 4;</code>
     */
    boolean hasHealth();
    /**
     * <code>optional int32 health = 4;</code>
     */
    int getHealth();
  }
  /**
   * Protobuf type {@code CDOTAUserMsg_CombatHeroPositions}
   */
  public static final class CDOTAUserMsg_CombatHeroPositions extends
      com.google.protobuf.GeneratedMessage implements
      // @@protoc_insertion_point(message_implements:CDOTAUserMsg_CombatHeroPositions)
      CDOTAUserMsg_CombatHeroPositionsOrBuilder {
    // Use CDOTAUserMsg_CombatHeroPositions.newBuilder() to construct.
    private CDOTAUserMsg_CombatHeroPositions(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private CDOTAUserMsg_CombatHeroPositions(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final CDOTAUserMsg_CombatHeroPositions defaultInstance;
    public static CDOTAUserMsg_CombatHeroPositions getDefaultInstance() {
      return defaultInstance;
    }

    public CDOTAUserMsg_CombatHeroPositions getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private CDOTAUserMsg_CombatHeroPositions(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 8: {
              bitField0_ |= 0x00000001;
              index_ = input.readUInt32();
              break;
            }
            case 16: {
              bitField0_ |= 0x00000002;
              time_ = input.readInt32();
              break;
            }
            case 26: {
              skadistats.clarity.wire.common.proto.NetworkBaseTypes.CMsgVector2D.Builder subBuilder = null;
              if (((bitField0_ & 0x00000004) == 0x00000004)) {
                subBuilder = worldPos_.toBuilder();
              }
              worldPos_ = input.readMessage(skadistats.clarity.wire.common.proto.NetworkBaseTypes.CMsgVector2D.PARSER, extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(worldPos_);
                worldPos_ = subBuilder.buildPartial();
              }
              bitField0_ |= 0x00000004;
              break;
            }
            case 32: {
              bitField0_ |= 0x00000008;
              health_ = input.readInt32();
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return skadistats.clarity.wire.common.proto.DotaUserMessages.internal_static_CDOTAUserMsg_CombatHeroPositions_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return skadistats.clarity.wire.common.proto.DotaUserMessages.internal_static_CDOTAUserMsg_CombatHeroPositions_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_CombatHeroPositions.class, skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_CombatHeroPositions.Builder.class);
    }

    public static com.google.protobuf.Parser<CDOTAUserMsg_CombatHeroPositions> PARSER =
        new com.google.protobuf.AbstractParser<CDOTAUserMsg_CombatHeroPositions>() {
      public CDOTAUserMsg_CombatHeroPositions parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new CDOTAUserMsg_CombatHeroPositions(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<CDOTAUserMsg_CombatHeroPositions> getParserForType() {
      return PARSER;
    }

    private int bitField0_;
    public static final int INDEX_FIELD_NUMBER = 1;
    private int index_;
    /**
     * <code>optional uint32 index = 1;</code>
     */
    public boolean hasIndex() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>optional uint32 index = 1;</code>
     */
    public int getIndex() {
      return index_;
    }

    public static final int TIME_FIELD_NUMBER = 2;
    private int time_;
    /**
     * <code>optional int32 time = 2;</code>
     */
    public boolean hasTime() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>optional int32 time = 2;</code>
     */
    public int getTime() {
      return time_;
    }

    public static final int WORLD_POS_FIELD_NUMBER = 3;
    private skadistats.clarity.wire.common.proto.NetworkBaseTypes.CMsgVector2D worldPos_;
    /**
     * <code>optional .CMsgVector2D world_pos = 3;</code>
     */
    public boolean hasWorldPos() {
      return ((bitField0_ & 0x00000004) == 0x00000004);
    }
    /**
     * <code>optional .CMsgVector2D world_pos = 3;</code>
     */
    public skadistats.clarity.wire.common.proto.NetworkBaseTypes.CMsgVector2D getWorldPos() {
      return worldPos_;
    }
    /**
     * <code>optional .CMsgVector2D world_pos = 3;</code>
     */
    public skadistats.clarity.wire.common.proto.NetworkBaseTypes.CMsgVector2DOrBuilder getWorldPosOrBuilder() {
      return worldPos_;
    }

    public static final int HEALTH_FIELD_NUMBER = 4;
    private int health_;
    /**
     * <code>optional int32 health = 4;</code>
     */
    public boolean hasHealth() {
      return ((bitField0_ & 0x00000008) == 0x00000008);
    }
    /**
     * <code>optional int32 health = 4;</code>
     */
    public int getHealth() {
      return health_;
    }

    private void initFields() {
      index_ = 0;
      time_ = 0;
      worldPos_ = skadistats.clarity.wire.common.proto.NetworkBaseTypes.CMsgVector2D.getDefaultInstance();
      health_ = 0;
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeUInt32(1, index_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeInt32(2, time_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        output.writeMessage(3, worldPos_);
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        output.writeInt32(4, health_);
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(1, index_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(2, time_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(3, worldPos_);
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(4, health_);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_CombatHeroPositions parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_CombatHeroPositions parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_CombatHeroPositions parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_CombatHeroPositions parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_CombatHeroPositions parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_CombatHeroPositions parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_CombatHeroPositions parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_CombatHeroPositions parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_CombatHeroPositions parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_CombatHeroPositions parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_CombatHeroPositions prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code CDOTAUserMsg_CombatHeroPositions}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:CDOTAUserMsg_CombatHeroPositions)
        skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_CombatHeroPositionsOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return skadistats.clarity.wire.common.proto.DotaUserMessages.internal_static_CDOTAUserMsg_CombatHeroPositions_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return skadistats.clarity.wire.common.proto.DotaUserMessages.internal_static_CDOTAUserMsg_CombatHeroPositions_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_CombatHeroPositions.class, skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_CombatHeroPositions.Builder.class);
      }

      // Construct using skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_CombatHeroPositions.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
          getWorldPosFieldBuilder();
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        index_ = 0;
        bitField0_ = (bitField0_ & ~0x00000001);
        time_ = 0;
        bitField0_ = (bitField0_ & ~0x00000002);
        if (worldPosBuilder_ == null) {
          worldPos_ = skadistats.clarity.wire.common.proto.NetworkBaseTypes.CMsgVector2D.getDefaultInstance();
        } else {
          worldPosBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000004);
        health_ = 0;
        bitField0_ = (bitField0_ & ~0x00000008);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return skadistats.clarity.wire.common.proto.DotaUserMessages.internal_static_CDOTAUserMsg_CombatHeroPositions_descriptor;
      }

      public skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_CombatHeroPositions getDefaultInstanceForType() {
        return skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_CombatHeroPositions.getDefaultInstance();
      }

      public skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_CombatHeroPositions build() {
        skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_CombatHeroPositions result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_CombatHeroPositions buildPartial() {
        skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_CombatHeroPositions result = new skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_CombatHeroPositions(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.index_ = index_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.time_ = time_;
        if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
          to_bitField0_ |= 0x00000004;
        }
        if (worldPosBuilder_ == null) {
          result.worldPos_ = worldPos_;
        } else {
          result.worldPos_ = worldPosBuilder_.build();
        }
        if (((from_bitField0_ & 0x00000008) == 0x00000008)) {
          to_bitField0_ |= 0x00000008;
        }
        result.health_ = health_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_CombatHeroPositions) {
          return mergeFrom((skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_CombatHeroPositions)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_CombatHeroPositions other) {
        if (other == skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_CombatHeroPositions.getDefaultInstance()) return this;
        if (other.hasIndex()) {
          setIndex(other.getIndex());
        }
        if (other.hasTime()) {
          setTime(other.getTime());
        }
        if (other.hasWorldPos()) {
          mergeWorldPos(other.getWorldPos());
        }
        if (other.hasHealth()) {
          setHealth(other.getHealth());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_CombatHeroPositions parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_CombatHeroPositions) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private int index_ ;
      /**
       * <code>optional uint32 index = 1;</code>
       */
      public boolean hasIndex() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>optional uint32 index = 1;</code>
       */
      public int getIndex() {
        return index_;
      }
      /**
       * <code>optional uint32 index = 1;</code>
       */
      public Builder setIndex(int value) {
        bitField0_ |= 0x00000001;
        index_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional uint32 index = 1;</code>
       */
      public Builder clearIndex() {
        bitField0_ = (bitField0_ & ~0x00000001);
        index_ = 0;
        onChanged();
        return this;
      }

      private int time_ ;
      /**
       * <code>optional int32 time = 2;</code>
       */
      public boolean hasTime() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>optional int32 time = 2;</code>
       */
      public int getTime() {
        return time_;
      }
      /**
       * <code>optional int32 time = 2;</code>
       */
      public Builder setTime(int value) {
        bitField0_ |= 0x00000002;
        time_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 time = 2;</code>
       */
      public Builder clearTime() {
        bitField0_ = (bitField0_ & ~0x00000002);
        time_ = 0;
        onChanged();
        return this;
      }

      private skadistats.clarity.wire.common.proto.NetworkBaseTypes.CMsgVector2D worldPos_ = skadistats.clarity.wire.common.proto.NetworkBaseTypes.CMsgVector2D.getDefaultInstance();
      private com.google.protobuf.SingleFieldBuilder<
          skadistats.clarity.wire.common.proto.NetworkBaseTypes.CMsgVector2D, skadistats.clarity.wire.common.proto.NetworkBaseTypes.CMsgVector2D.Builder, skadistats.clarity.wire.common.proto.NetworkBaseTypes.CMsgVector2DOrBuilder> worldPosBuilder_;
      /**
       * <code>optional .CMsgVector2D world_pos = 3;</code>
       */
      public boolean hasWorldPos() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }
      /**
       * <code>optional .CMsgVector2D world_pos = 3;</code>
       */
      public skadistats.clarity.wire.common.proto.NetworkBaseTypes.CMsgVector2D getWorldPos() {
        if (worldPosBuilder_ == null) {
          return worldPos_;
        } else {
          return worldPosBuilder_.getMessage();
        }
      }
      /**
       * <code>optional .CMsgVector2D world_pos = 3;</code>
       */
      public Builder setWorldPos(skadistats.clarity.wire.common.proto.NetworkBaseTypes.CMsgVector2D value) {
        if (worldPosBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          worldPos_ = value;
          onChanged();
        } else {
          worldPosBuilder_.setMessage(value);
        }
        bitField0_ |= 0x00000004;
        return this;
      }
      /**
       * <code>optional .CMsgVector2D world_pos = 3;</code>
       */
      public Builder setWorldPos(
          skadistats.clarity.wire.common.proto.NetworkBaseTypes.CMsgVector2D.Builder builderForValue) {
        if (worldPosBuilder_ == null) {
          worldPos_ = builderForValue.build();
          onChanged();
        } else {
          worldPosBuilder_.setMessage(builderForValue.build());
        }
        bitField0_ |= 0x00000004;
        return this;
      }
      /**
       * <code>optional .CMsgVector2D world_pos = 3;</code>
       */
      public Builder mergeWorldPos(skadistats.clarity.wire.common.proto.NetworkBaseTypes.CMsgVector2D value) {
        if (worldPosBuilder_ == null) {
          if (((bitField0_ & 0x00000004) == 0x00000004) &&
              worldPos_ != skadistats.clarity.wire.common.proto.NetworkBaseTypes.CMsgVector2D.getDefaultInstance()) {
            worldPos_ =
              skadistats.clarity.wire.common.proto.NetworkBaseTypes.CMsgVector2D.newBuilder(worldPos_).mergeFrom(value).buildPartial();
          } else {
            worldPos_ = value;
          }
          onChanged();
        } else {
          worldPosBuilder_.mergeFrom(value);
        }
        bitField0_ |= 0x00000004;
        return this;
      }
      /**
       * <code>optional .CMsgVector2D world_pos = 3;</code>
       */
      public Builder clearWorldPos() {
        if (worldPosBuilder_ == null) {
          worldPos_ = skadistats.clarity.wire.common.proto.NetworkBaseTypes.CMsgVector2D.getDefaultInstance();
          onChanged();
        } else {
          worldPosBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000004);
        return this;
      }
      /**
       * <code>optional .CMsgVector2D world_pos = 3;</code>
       */
      public skadistats.clarity.wire.common.proto.NetworkBaseTypes.CMsgVector2D.Builder getWorldPosBuilder() {
        bitField0_ |= 0x00000004;
        onChanged();
        return getWorldPosFieldBuilder().getBuilder();
      }
      /**
       * <code>optional .CMsgVector2D world_pos = 3;</code>
       */
      public skadistats.clarity.wire.common.proto.NetworkBaseTypes.CMsgVector2DOrBuilder getWorldPosOrBuilder() {
        if (worldPosBuilder_ != null) {
          return worldPosBuilder_.getMessageOrBuilder();
        } else {
          return worldPos_;
        }
      }
      /**
       * <code>optional .CMsgVector2D world_pos = 3;</code>
       */
      private com.google.protobuf.SingleFieldBuilder<
          skadistats.clarity.wire.common.proto.NetworkBaseTypes.CMsgVector2D, skadistats.clarity.wire.common.proto.NetworkBaseTypes.CMsgVector2D.Builder, skadistats.clarity.wire.common.proto.NetworkBaseTypes.CMsgVector2DOrBuilder> 
          getWorldPosFieldBuilder() {
        if (worldPosBuilder_ == null) {
          worldPosBuilder_ = new com.google.protobuf.SingleFieldBuilder<
              skadistats.clarity.wire.common.proto.NetworkBaseTypes.CMsgVector2D, skadistats.clarity.wire.common.proto.NetworkBaseTypes.CMsgVector2D.Builder, skadistats.clarity.wire.common.proto.NetworkBaseTypes.CMsgVector2DOrBuilder>(
                  getWorldPos(),
                  getParentForChildren(),
                  isClean());
          worldPos_ = null;
        }
        return worldPosBuilder_;
      }

      private int health_ ;
      /**
       * <code>optional int32 health = 4;</code>
       */
      public boolean hasHealth() {
        return ((bitField0_ & 0x00000008) == 0x00000008);
      }
      /**
       * <code>optional int32 health = 4;</code>
       */
      public int getHealth() {
        return health_;
      }
      /**
       * <code>optional int32 health = 4;</code>
       */
      public Builder setHealth(int value) {
        bitField0_ |= 0x00000008;
        health_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 health = 4;</code>
       */
      public Builder clearHealth() {
        bitField0_ = (bitField0_ & ~0x00000008);
        health_ = 0;
        onChanged();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:CDOTAUserMsg_CombatHeroPositions)
    }

    static {
      defaultInstance = new CDOTAUserMsg_CombatHeroPositions(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:CDOTAUserMsg_CombatHeroPositions)
  }

  public interface CDOTAUserMsg_MiniKillCamInfoOrBuilder extends
      // @@protoc_insertion_point(interface_extends:CDOTAUserMsg_MiniKillCamInfo)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>repeated .CDOTAUserMsg_MiniKillCamInfo.Attacker attackers = 1;</code>
     */
    java.util.List<skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_MiniKillCamInfo.Attacker> 
        getAttackersList();
    /**
     * <code>repeated .CDOTAUserMsg_MiniKillCamInfo.Attacker attackers = 1;</code>
     */
    skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_MiniKillCamInfo.Attacker getAttackers(int index);
    /**
     * <code>repeated .CDOTAUserMsg_MiniKillCamInfo.Attacker attackers = 1;</code>
     */
    int getAttackersCount();
    /**
     * <code>repeated .CDOTAUserMsg_MiniKillCamInfo.Attacker attackers = 1;</code>
     */
    java.util.List<? extends skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_MiniKillCamInfo.AttackerOrBuilder> 
        getAttackersOrBuilderList();
    /**
     * <code>repeated .CDOTAUserMsg_MiniKillCamInfo.Attacker attackers = 1;</code>
     */
    skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_MiniKillCamInfo.AttackerOrBuilder getAttackersOrBuilder(
        int index);
  }
  /**
   * Protobuf type {@code CDOTAUserMsg_MiniKillCamInfo}
   */
  public static final class CDOTAUserMsg_MiniKillCamInfo extends
      com.google.protobuf.GeneratedMessage implements
      // @@protoc_insertion_point(message_implements:CDOTAUserMsg_MiniKillCamInfo)
      CDOTAUserMsg_MiniKillCamInfoOrBuilder {
    // Use CDOTAUserMsg_MiniKillCamInfo.newBuilder() to construct.
    private CDOTAUserMsg_MiniKillCamInfo(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private CDOTAUserMsg_MiniKillCamInfo(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final CDOTAUserMsg_MiniKillCamInfo defaultInstance;
    public static CDOTAUserMsg_MiniKillCamInfo getDefaultInstance() {
      return defaultInstance;
    }

    public CDOTAUserMsg_MiniKillCamInfo getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private CDOTAUserMsg_MiniKillCamInfo(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 10: {
              if (!((mutable_bitField0_ & 0x00000001) == 0x00000001)) {
                attackers_ = new java.util.ArrayList<skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_MiniKillCamInfo.Attacker>();
                mutable_bitField0_ |= 0x00000001;
              }
              attackers_.add(input.readMessage(skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_MiniKillCamInfo.Attacker.PARSER, extensionRegistry));
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        if (((mutable_bitField0_ & 0x00000001) == 0x00000001)) {
          attackers_ = java.util.Collections.unmodifiableList(attackers_);
        }
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return skadistats.clarity.wire.common.proto.DotaUserMessages.internal_static_CDOTAUserMsg_MiniKillCamInfo_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return skadistats.clarity.wire.common.proto.DotaUserMessages.internal_static_CDOTAUserMsg_MiniKillCamInfo_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_MiniKillCamInfo.class, skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_MiniKillCamInfo.Builder.class);
    }

    public static com.google.protobuf.Parser<CDOTAUserMsg_MiniKillCamInfo> PARSER =
        new com.google.protobuf.AbstractParser<CDOTAUserMsg_MiniKillCamInfo>() {
      public CDOTAUserMsg_MiniKillCamInfo parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new CDOTAUserMsg_MiniKillCamInfo(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<CDOTAUserMsg_MiniKillCamInfo> getParserForType() {
      return PARSER;
    }

    public interface AttackerOrBuilder extends
        // @@protoc_insertion_point(interface_extends:CDOTAUserMsg_MiniKillCamInfo.Attacker)
        com.google.protobuf.MessageOrBuilder {

      /**
       * <code>optional uint32 attacker = 1;</code>
       */
      boolean hasAttacker();
      /**
       * <code>optional uint32 attacker = 1;</code>
       */
      int getAttacker();

      /**
       * <code>optional int32 total_damage = 2;</code>
       */
      boolean hasTotalDamage();
      /**
       * <code>optional int32 total_damage = 2;</code>
       */
      int getTotalDamage();

      /**
       * <code>repeated .CDOTAUserMsg_MiniKillCamInfo.Attacker.Ability abilities = 3;</code>
       */
      java.util.List<skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_MiniKillCamInfo.Attacker.Ability> 
          getAbilitiesList();
      /**
       * <code>repeated .CDOTAUserMsg_MiniKillCamInfo.Attacker.Ability abilities = 3;</code>
       */
      skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_MiniKillCamInfo.Attacker.Ability getAbilities(int index);
      /**
       * <code>repeated .CDOTAUserMsg_MiniKillCamInfo.Attacker.Ability abilities = 3;</code>
       */
      int getAbilitiesCount();
      /**
       * <code>repeated .CDOTAUserMsg_MiniKillCamInfo.Attacker.Ability abilities = 3;</code>
       */
      java.util.List<? extends skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_MiniKillCamInfo.Attacker.AbilityOrBuilder> 
          getAbilitiesOrBuilderList();
      /**
       * <code>repeated .CDOTAUserMsg_MiniKillCamInfo.Attacker.Ability abilities = 3;</code>
       */
      skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_MiniKillCamInfo.Attacker.AbilityOrBuilder getAbilitiesOrBuilder(
          int index);
    }
    /**
     * Protobuf type {@code CDOTAUserMsg_MiniKillCamInfo.Attacker}
     */
    public static final class Attacker extends
        com.google.protobuf.GeneratedMessage implements
        // @@protoc_insertion_point(message_implements:CDOTAUserMsg_MiniKillCamInfo.Attacker)
        AttackerOrBuilder {
      // Use Attacker.newBuilder() to construct.
      private Attacker(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
        super(builder);
        this.unknownFields = builder.getUnknownFields();
      }
      private Attacker(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

      private static final Attacker defaultInstance;
      public static Attacker getDefaultInstance() {
        return defaultInstance;
      }

      public Attacker getDefaultInstanceForType() {
        return defaultInstance;
      }

      private final com.google.protobuf.UnknownFieldSet unknownFields;
      @java.lang.Override
      public final com.google.protobuf.UnknownFieldSet
          getUnknownFields() {
        return this.unknownFields;
      }
      private Attacker(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        initFields();
        int mutable_bitField0_ = 0;
        com.google.protobuf.UnknownFieldSet.Builder unknownFields =
            com.google.protobuf.UnknownFieldSet.newBuilder();
        try {
          boolean done = false;
          while (!done) {
            int tag = input.readTag();
            switch (tag) {
              case 0:
                done = true;
                break;
              default: {
                if (!parseUnknownField(input, unknownFields,
                                       extensionRegistry, tag)) {
                  done = true;
                }
                break;
              }
              case 8: {
                bitField0_ |= 0x00000001;
                attacker_ = input.readUInt32();
                break;
              }
              case 16: {
                bitField0_ |= 0x00000002;
                totalDamage_ = input.readInt32();
                break;
              }
              case 26: {
                if (!((mutable_bitField0_ & 0x00000004) == 0x00000004)) {
                  abilities_ = new java.util.ArrayList<skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_MiniKillCamInfo.Attacker.Ability>();
                  mutable_bitField0_ |= 0x00000004;
                }
                abilities_.add(input.readMessage(skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_MiniKillCamInfo.Attacker.Ability.PARSER, extensionRegistry));
                break;
              }
            }
          }
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.setUnfinishedMessage(this);
        } catch (java.io.IOException e) {
          throw new com.google.protobuf.InvalidProtocolBufferException(
              e.getMessage()).setUnfinishedMessage(this);
        } finally {
          if (((mutable_bitField0_ & 0x00000004) == 0x00000004)) {
            abilities_ = java.util.Collections.unmodifiableList(abilities_);
          }
          this.unknownFields = unknownFields.build();
          makeExtensionsImmutable();
        }
      }
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return skadistats.clarity.wire.common.proto.DotaUserMessages.internal_static_CDOTAUserMsg_MiniKillCamInfo_Attacker_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return skadistats.clarity.wire.common.proto.DotaUserMessages.internal_static_CDOTAUserMsg_MiniKillCamInfo_Attacker_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_MiniKillCamInfo.Attacker.class, skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_MiniKillCamInfo.Attacker.Builder.class);
      }

      public static com.google.protobuf.Parser<Attacker> PARSER =
          new com.google.protobuf.AbstractParser<Attacker>() {
        public Attacker parsePartialFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws com.google.protobuf.InvalidProtocolBufferException {
          return new Attacker(input, extensionRegistry);
        }
      };

      @java.lang.Override
      public com.google.protobuf.Parser<Attacker> getParserForType() {
        return PARSER;
      }

      public interface AbilityOrBuilder extends
          // @@protoc_insertion_point(interface_extends:CDOTAUserMsg_MiniKillCamInfo.Attacker.Ability)
          com.google.protobuf.MessageOrBuilder {

        /**
         * <code>optional uint32 ability = 1;</code>
         */
        boolean hasAbility();
        /**
         * <code>optional uint32 ability = 1;</code>
         */
        int getAbility();

        /**
         * <code>optional int32 damage = 2;</code>
         */
        boolean hasDamage();
        /**
         * <code>optional int32 damage = 2;</code>
         */
        int getDamage();
      }
      /**
       * Protobuf type {@code CDOTAUserMsg_MiniKillCamInfo.Attacker.Ability}
       */
      public static final class Ability extends
          com.google.protobuf.GeneratedMessage implements
          // @@protoc_insertion_point(message_implements:CDOTAUserMsg_MiniKillCamInfo.Attacker.Ability)
          AbilityOrBuilder {
        // Use Ability.newBuilder() to construct.
        private Ability(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
          super(builder);
          this.unknownFields = builder.getUnknownFields();
        }
        private Ability(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

        private static final Ability defaultInstance;
        public static Ability getDefaultInstance() {
          return defaultInstance;
        }

        public Ability getDefaultInstanceForType() {
          return defaultInstance;
        }

        private final com.google.protobuf.UnknownFieldSet unknownFields;
        @java.lang.Override
        public final com.google.protobuf.UnknownFieldSet
            getUnknownFields() {
          return this.unknownFields;
        }
        private Ability(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws com.google.protobuf.InvalidProtocolBufferException {
          initFields();
          int mutable_bitField0_ = 0;
          com.google.protobuf.UnknownFieldSet.Builder unknownFields =
              com.google.protobuf.UnknownFieldSet.newBuilder();
          try {
            boolean done = false;
            while (!done) {
              int tag = input.readTag();
              switch (tag) {
                case 0:
                  done = true;
                  break;
                default: {
                  if (!parseUnknownField(input, unknownFields,
                                         extensionRegistry, tag)) {
                    done = true;
                  }
                  break;
                }
                case 8: {
                  bitField0_ |= 0x00000001;
                  ability_ = input.readUInt32();
                  break;
                }
                case 16: {
                  bitField0_ |= 0x00000002;
                  damage_ = input.readInt32();
                  break;
                }
              }
            }
          } catch (com.google.protobuf.InvalidProtocolBufferException e) {
            throw e.setUnfinishedMessage(this);
          } catch (java.io.IOException e) {
            throw new com.google.protobuf.InvalidProtocolBufferException(
                e.getMessage()).setUnfinishedMessage(this);
          } finally {
            this.unknownFields = unknownFields.build();
            makeExtensionsImmutable();
          }
        }
        public static final com.google.protobuf.Descriptors.Descriptor
            getDescriptor() {
          return skadistats.clarity.wire.common.proto.DotaUserMessages.internal_static_CDOTAUserMsg_MiniKillCamInfo_Attacker_Ability_descriptor;
        }

        protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
            internalGetFieldAccessorTable() {
          return skadistats.clarity.wire.common.proto.DotaUserMessages.internal_static_CDOTAUserMsg_MiniKillCamInfo_Attacker_Ability_fieldAccessorTable
              .ensureFieldAccessorsInitialized(
                  skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_MiniKillCamInfo.Attacker.Ability.class, skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_MiniKillCamInfo.Attacker.Ability.Builder.class);
        }

        public static com.google.protobuf.Parser<Ability> PARSER =
            new com.google.protobuf.AbstractParser<Ability>() {
          public Ability parsePartialFrom(
              com.google.protobuf.CodedInputStream input,
              com.google.protobuf.ExtensionRegistryLite extensionRegistry)
              throws com.google.protobuf.InvalidProtocolBufferException {
            return new Ability(input, extensionRegistry);
          }
        };

        @java.lang.Override
        public com.google.protobuf.Parser<Ability> getParserForType() {
          return PARSER;
        }

        private int bitField0_;
        public static final int ABILITY_FIELD_NUMBER = 1;
        private int ability_;
        /**
         * <code>optional uint32 ability = 1;</code>
         */
        public boolean hasAbility() {
          return ((bitField0_ & 0x00000001) == 0x00000001);
        }
        /**
         * <code>optional uint32 ability = 1;</code>
         */
        public int getAbility() {
          return ability_;
        }

        public static final int DAMAGE_FIELD_NUMBER = 2;
        private int damage_;
        /**
         * <code>optional int32 damage = 2;</code>
         */
        public boolean hasDamage() {
          return ((bitField0_ & 0x00000002) == 0x00000002);
        }
        /**
         * <code>optional int32 damage = 2;</code>
         */
        public int getDamage() {
          return damage_;
        }

        private void initFields() {
          ability_ = 0;
          damage_ = 0;
        }
        private byte memoizedIsInitialized = -1;
        public final boolean isInitialized() {
          byte isInitialized = memoizedIsInitialized;
          if (isInitialized == 1) return true;
          if (isInitialized == 0) return false;

          memoizedIsInitialized = 1;
          return true;
        }

        public void writeTo(com.google.protobuf.CodedOutputStream output)
                            throws java.io.IOException {
          getSerializedSize();
          if (((bitField0_ & 0x00000001) == 0x00000001)) {
            output.writeUInt32(1, ability_);
          }
          if (((bitField0_ & 0x00000002) == 0x00000002)) {
            output.writeInt32(2, damage_);
          }
          getUnknownFields().writeTo(output);
        }

        private int memoizedSerializedSize = -1;
        public int getSerializedSize() {
          int size = memoizedSerializedSize;
          if (size != -1) return size;

          size = 0;
          if (((bitField0_ & 0x00000001) == 0x00000001)) {
            size += com.google.protobuf.CodedOutputStream
              .computeUInt32Size(1, ability_);
          }
          if (((bitField0_ & 0x00000002) == 0x00000002)) {
            size += com.google.protobuf.CodedOutputStream
              .computeInt32Size(2, damage_);
          }
          size += getUnknownFields().getSerializedSize();
          memoizedSerializedSize = size;
          return size;
        }

        private static final long serialVersionUID = 0L;
        @java.lang.Override
        protected java.lang.Object writeReplace()
            throws java.io.ObjectStreamException {
          return super.writeReplace();
        }

        public static skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_MiniKillCamInfo.Attacker.Ability parseFrom(
            com.google.protobuf.ByteString data)
            throws com.google.protobuf.InvalidProtocolBufferException {
          return PARSER.parseFrom(data);
        }
        public static skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_MiniKillCamInfo.Attacker.Ability parseFrom(
            com.google.protobuf.ByteString data,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws com.google.protobuf.InvalidProtocolBufferException {
          return PARSER.parseFrom(data, extensionRegistry);
        }
        public static skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_MiniKillCamInfo.Attacker.Ability parseFrom(byte[] data)
            throws com.google.protobuf.InvalidProtocolBufferException {
          return PARSER.parseFrom(data);
        }
        public static skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_MiniKillCamInfo.Attacker.Ability parseFrom(
            byte[] data,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws com.google.protobuf.InvalidProtocolBufferException {
          return PARSER.parseFrom(data, extensionRegistry);
        }
        public static skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_MiniKillCamInfo.Attacker.Ability parseFrom(java.io.InputStream input)
            throws java.io.IOException {
          return PARSER.parseFrom(input);
        }
        public static skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_MiniKillCamInfo.Attacker.Ability parseFrom(
            java.io.InputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws java.io.IOException {
          return PARSER.parseFrom(input, extensionRegistry);
        }
        public static skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_MiniKillCamInfo.Attacker.Ability parseDelimitedFrom(java.io.InputStream input)
            throws java.io.IOException {
          return PARSER.parseDelimitedFrom(input);
        }
        public static skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_MiniKillCamInfo.Attacker.Ability parseDelimitedFrom(
            java.io.InputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws java.io.IOException {
          return PARSER.parseDelimitedFrom(input, extensionRegistry);
        }
        public static skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_MiniKillCamInfo.Attacker.Ability parseFrom(
            com.google.protobuf.CodedInputStream input)
            throws java.io.IOException {
          return PARSER.parseFrom(input);
        }
        public static skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_MiniKillCamInfo.Attacker.Ability parseFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws java.io.IOException {
          return PARSER.parseFrom(input, extensionRegistry);
        }

        public static Builder newBuilder() { return Builder.create(); }
        public Builder newBuilderForType() { return newBuilder(); }
        public static Builder newBuilder(skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_MiniKillCamInfo.Attacker.Ability prototype) {
          return newBuilder().mergeFrom(prototype);
        }
        public Builder toBuilder() { return newBuilder(this); }

        @java.lang.Override
        protected Builder newBuilderForType(
            com.google.protobuf.GeneratedMessage.BuilderParent parent) {
          Builder builder = new Builder(parent);
          return builder;
        }
        /**
         * Protobuf type {@code CDOTAUserMsg_MiniKillCamInfo.Attacker.Ability}
         */
        public static final class Builder extends
            com.google.protobuf.GeneratedMessage.Builder<Builder> implements
            // @@protoc_insertion_point(builder_implements:CDOTAUserMsg_MiniKillCamInfo.Attacker.Ability)
            skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_MiniKillCamInfo.Attacker.AbilityOrBuilder {
          public static final com.google.protobuf.Descriptors.Descriptor
              getDescriptor() {
            return skadistats.clarity.wire.common.proto.DotaUserMessages.internal_static_CDOTAUserMsg_MiniKillCamInfo_Attacker_Ability_descriptor;
          }

          protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
              internalGetFieldAccessorTable() {
            return skadistats.clarity.wire.common.proto.DotaUserMessages.internal_static_CDOTAUserMsg_MiniKillCamInfo_Attacker_Ability_fieldAccessorTable
                .ensureFieldAccessorsInitialized(
                    skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_MiniKillCamInfo.Attacker.Ability.class, skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_MiniKillCamInfo.Attacker.Ability.Builder.class);
          }

          // Construct using skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_MiniKillCamInfo.Attacker.Ability.newBuilder()
          private Builder() {
            maybeForceBuilderInitialization();
          }

          private Builder(
              com.google.protobuf.GeneratedMessage.BuilderParent parent) {
            super(parent);
            maybeForceBuilderInitialization();
          }
          private void maybeForceBuilderInitialization() {
            if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
            }
          }
          private static Builder create() {
            return new Builder();
          }

          public Builder clear() {
            super.clear();
            ability_ = 0;
            bitField0_ = (bitField0_ & ~0x00000001);
            damage_ = 0;
            bitField0_ = (bitField0_ & ~0x00000002);
            return this;
          }

          public Builder clone() {
            return create().mergeFrom(buildPartial());
          }

          public com.google.protobuf.Descriptors.Descriptor
              getDescriptorForType() {
            return skadistats.clarity.wire.common.proto.DotaUserMessages.internal_static_CDOTAUserMsg_MiniKillCamInfo_Attacker_Ability_descriptor;
          }

          public skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_MiniKillCamInfo.Attacker.Ability getDefaultInstanceForType() {
            return skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_MiniKillCamInfo.Attacker.Ability.getDefaultInstance();
          }

          public skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_MiniKillCamInfo.Attacker.Ability build() {
            skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_MiniKillCamInfo.Attacker.Ability result = buildPartial();
            if (!result.isInitialized()) {
              throw newUninitializedMessageException(result);
            }
            return result;
          }

          public skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_MiniKillCamInfo.Attacker.Ability buildPartial() {
            skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_MiniKillCamInfo.Attacker.Ability result = new skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_MiniKillCamInfo.Attacker.Ability(this);
            int from_bitField0_ = bitField0_;
            int to_bitField0_ = 0;
            if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
              to_bitField0_ |= 0x00000001;
            }
            result.ability_ = ability_;
            if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
              to_bitField0_ |= 0x00000002;
            }
            result.damage_ = damage_;
            result.bitField0_ = to_bitField0_;
            onBuilt();
            return result;
          }

          public Builder mergeFrom(com.google.protobuf.Message other) {
            if (other instanceof skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_MiniKillCamInfo.Attacker.Ability) {
              return mergeFrom((skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_MiniKillCamInfo.Attacker.Ability)other);
            } else {
              super.mergeFrom(other);
              return this;
            }
          }

          public Builder mergeFrom(skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_MiniKillCamInfo.Attacker.Ability other) {
            if (other == skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_MiniKillCamInfo.Attacker.Ability.getDefaultInstance()) return this;
            if (other.hasAbility()) {
              setAbility(other.getAbility());
            }
            if (other.hasDamage()) {
              setDamage(other.getDamage());
            }
            this.mergeUnknownFields(other.getUnknownFields());
            return this;
          }

          public final boolean isInitialized() {
            return true;
          }

          public Builder mergeFrom(
              com.google.protobuf.CodedInputStream input,
              com.google.protobuf.ExtensionRegistryLite extensionRegistry)
              throws java.io.IOException {
            skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_MiniKillCamInfo.Attacker.Ability parsedMessage = null;
            try {
              parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
            } catch (com.google.protobuf.InvalidProtocolBufferException e) {
              parsedMessage = (skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_MiniKillCamInfo.Attacker.Ability) e.getUnfinishedMessage();
              throw e;
            } finally {
              if (parsedMessage != null) {
                mergeFrom(parsedMessage);
              }
            }
            return this;
          }
          private int bitField0_;

          private int ability_ ;
          /**
           * <code>optional uint32 ability = 1;</code>
           */
          public boolean hasAbility() {
            return ((bitField0_ & 0x00000001) == 0x00000001);
          }
          /**
           * <code>optional uint32 ability = 1;</code>
           */
          public int getAbility() {
            return ability_;
          }
          /**
           * <code>optional uint32 ability = 1;</code>
           */
          public Builder setAbility(int value) {
            bitField0_ |= 0x00000001;
            ability_ = value;
            onChanged();
            return this;
          }
          /**
           * <code>optional uint32 ability = 1;</code>
           */
          public Builder clearAbility() {
            bitField0_ = (bitField0_ & ~0x00000001);
            ability_ = 0;
            onChanged();
            return this;
          }

          private int damage_ ;
          /**
           * <code>optional int32 damage = 2;</code>
           */
          public boolean hasDamage() {
            return ((bitField0_ & 0x00000002) == 0x00000002);
          }
          /**
           * <code>optional int32 damage = 2;</code>
           */
          public int getDamage() {
            return damage_;
          }
          /**
           * <code>optional int32 damage = 2;</code>
           */
          public Builder setDamage(int value) {
            bitField0_ |= 0x00000002;
            damage_ = value;
            onChanged();
            return this;
          }
          /**
           * <code>optional int32 damage = 2;</code>
           */
          public Builder clearDamage() {
            bitField0_ = (bitField0_ & ~0x00000002);
            damage_ = 0;
            onChanged();
            return this;
          }

          // @@protoc_insertion_point(builder_scope:CDOTAUserMsg_MiniKillCamInfo.Attacker.Ability)
        }

        static {
          defaultInstance = new Ability(true);
          defaultInstance.initFields();
        }

        // @@protoc_insertion_point(class_scope:CDOTAUserMsg_MiniKillCamInfo.Attacker.Ability)
      }

      private int bitField0_;
      public static final int ATTACKER_FIELD_NUMBER = 1;
      private int attacker_;
      /**
       * <code>optional uint32 attacker = 1;</code>
       */
      public boolean hasAttacker() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>optional uint32 attacker = 1;</code>
       */
      public int getAttacker() {
        return attacker_;
      }

      public static final int TOTAL_DAMAGE_FIELD_NUMBER = 2;
      private int totalDamage_;
      /**
       * <code>optional int32 total_damage = 2;</code>
       */
      public boolean hasTotalDamage() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>optional int32 total_damage = 2;</code>
       */
      public int getTotalDamage() {
        return totalDamage_;
      }

      public static final int ABILITIES_FIELD_NUMBER = 3;
      private java.util.List<skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_MiniKillCamInfo.Attacker.Ability> abilities_;
      /**
       * <code>repeated .CDOTAUserMsg_MiniKillCamInfo.Attacker.Ability abilities = 3;</code>
       */
      public java.util.List<skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_MiniKillCamInfo.Attacker.Ability> getAbilitiesList() {
        return abilities_;
      }
      /**
       * <code>repeated .CDOTAUserMsg_MiniKillCamInfo.Attacker.Ability abilities = 3;</code>
       */
      public java.util.List<? extends skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_MiniKillCamInfo.Attacker.AbilityOrBuilder> 
          getAbilitiesOrBuilderList() {
        return abilities_;
      }
      /**
       * <code>repeated .CDOTAUserMsg_MiniKillCamInfo.Attacker.Ability abilities = 3;</code>
       */
      public int getAbilitiesCount() {
        return abilities_.size();
      }
      /**
       * <code>repeated .CDOTAUserMsg_MiniKillCamInfo.Attacker.Ability abilities = 3;</code>
       */
      public skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_MiniKillCamInfo.Attacker.Ability getAbilities(int index) {
        return abilities_.get(index);
      }
      /**
       * <code>repeated .CDOTAUserMsg_MiniKillCamInfo.Attacker.Ability abilities = 3;</code>
       */
      public skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_MiniKillCamInfo.Attacker.AbilityOrBuilder getAbilitiesOrBuilder(
          int index) {
        return abilities_.get(index);
      }

      private void initFields() {
        attacker_ = 0;
        totalDamage_ = 0;
        abilities_ = java.util.Collections.emptyList();
      }
      private byte memoizedIsInitialized = -1;
      public final boolean isInitialized() {
        byte isInitialized = memoizedIsInitialized;
        if (isInitialized == 1) return true;
        if (isInitialized == 0) return false;

        memoizedIsInitialized = 1;
        return true;
      }

      public void writeTo(com.google.protobuf.CodedOutputStream output)
                          throws java.io.IOException {
        getSerializedSize();
        if (((bitField0_ & 0x00000001) == 0x00000001)) {
          output.writeUInt32(1, attacker_);
        }
        if (((bitField0_ & 0x00000002) == 0x00000002)) {
          output.writeInt32(2, totalDamage_);
        }
        for (int i = 0; i < abilities_.size(); i++) {
          output.writeMessage(3, abilities_.get(i));
        }
        getUnknownFields().writeTo(output);
      }

      private int memoizedSerializedSize = -1;
      public int getSerializedSize() {
        int size = memoizedSerializedSize;
        if (size != -1) return size;

        size = 0;
        if (((bitField0_ & 0x00000001) == 0x00000001)) {
          size += com.google.protobuf.CodedOutputStream
            .computeUInt32Size(1, attacker_);
        }
        if (((bitField0_ & 0x00000002) == 0x00000002)) {
          size += com.google.protobuf.CodedOutputStream
            .computeInt32Size(2, totalDamage_);
        }
        for (int i = 0; i < abilities_.size(); i++) {
          size += com.google.protobuf.CodedOutputStream
            .computeMessageSize(3, abilities_.get(i));
        }
        size += getUnknownFields().getSerializedSize();
        memoizedSerializedSize = size;
        return size;
      }

      private static final long serialVersionUID = 0L;
      @java.lang.Override
      protected java.lang.Object writeReplace()
          throws java.io.ObjectStreamException {
        return super.writeReplace();
      }

      public static skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_MiniKillCamInfo.Attacker parseFrom(
          com.google.protobuf.ByteString data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_MiniKillCamInfo.Attacker parseFrom(
          com.google.protobuf.ByteString data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_MiniKillCamInfo.Attacker parseFrom(byte[] data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_MiniKillCamInfo.Attacker parseFrom(
          byte[] data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_MiniKillCamInfo.Attacker parseFrom(java.io.InputStream input)
          throws java.io.IOException {
        return PARSER.parseFrom(input);
      }
      public static skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_MiniKillCamInfo.Attacker parseFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return PARSER.parseFrom(input, extensionRegistry);
      }
      public static skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_MiniKillCamInfo.Attacker parseDelimitedFrom(java.io.InputStream input)
          throws java.io.IOException {
        return PARSER.parseDelimitedFrom(input);
      }
      public static skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_MiniKillCamInfo.Attacker parseDelimitedFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return PARSER.parseDelimitedFrom(input, extensionRegistry);
      }
      public static skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_MiniKillCamInfo.Attacker parseFrom(
          com.google.protobuf.CodedInputStream input)
          throws java.io.IOException {
        return PARSER.parseFrom(input);
      }
      public static skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_MiniKillCamInfo.Attacker parseFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return PARSER.parseFrom(input, extensionRegistry);
      }

      public static Builder newBuilder() { return Builder.create(); }
      public Builder newBuilderForType() { return newBuilder(); }
      public static Builder newBuilder(skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_MiniKillCamInfo.Attacker prototype) {
        return newBuilder().mergeFrom(prototype);
      }
      public Builder toBuilder() { return newBuilder(this); }

      @java.lang.Override
      protected Builder newBuilderForType(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        Builder builder = new Builder(parent);
        return builder;
      }
      /**
       * Protobuf type {@code CDOTAUserMsg_MiniKillCamInfo.Attacker}
       */
      public static final class Builder extends
          com.google.protobuf.GeneratedMessage.Builder<Builder> implements
          // @@protoc_insertion_point(builder_implements:CDOTAUserMsg_MiniKillCamInfo.Attacker)
          skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_MiniKillCamInfo.AttackerOrBuilder {
        public static final com.google.protobuf.Descriptors.Descriptor
            getDescriptor() {
          return skadistats.clarity.wire.common.proto.DotaUserMessages.internal_static_CDOTAUserMsg_MiniKillCamInfo_Attacker_descriptor;
        }

        protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
            internalGetFieldAccessorTable() {
          return skadistats.clarity.wire.common.proto.DotaUserMessages.internal_static_CDOTAUserMsg_MiniKillCamInfo_Attacker_fieldAccessorTable
              .ensureFieldAccessorsInitialized(
                  skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_MiniKillCamInfo.Attacker.class, skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_MiniKillCamInfo.Attacker.Builder.class);
        }

        // Construct using skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_MiniKillCamInfo.Attacker.newBuilder()
        private Builder() {
          maybeForceBuilderInitialization();
        }

        private Builder(
            com.google.protobuf.GeneratedMessage.BuilderParent parent) {
          super(parent);
          maybeForceBuilderInitialization();
        }
        private void maybeForceBuilderInitialization() {
          if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
            getAbilitiesFieldBuilder();
          }
        }
        private static Builder create() {
          return new Builder();
        }

        public Builder clear() {
          super.clear();
          attacker_ = 0;
          bitField0_ = (bitField0_ & ~0x00000001);
          totalDamage_ = 0;
          bitField0_ = (bitField0_ & ~0x00000002);
          if (abilitiesBuilder_ == null) {
            abilities_ = java.util.Collections.emptyList();
            bitField0_ = (bitField0_ & ~0x00000004);
          } else {
            abilitiesBuilder_.clear();
          }
          return this;
        }

        public Builder clone() {
          return create().mergeFrom(buildPartial());
        }

        public com.google.protobuf.Descriptors.Descriptor
            getDescriptorForType() {
          return skadistats.clarity.wire.common.proto.DotaUserMessages.internal_static_CDOTAUserMsg_MiniKillCamInfo_Attacker_descriptor;
        }

        public skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_MiniKillCamInfo.Attacker getDefaultInstanceForType() {
          return skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_MiniKillCamInfo.Attacker.getDefaultInstance();
        }

        public skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_MiniKillCamInfo.Attacker build() {
          skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_MiniKillCamInfo.Attacker result = buildPartial();
          if (!result.isInitialized()) {
            throw newUninitializedMessageException(result);
          }
          return result;
        }

        public skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_MiniKillCamInfo.Attacker buildPartial() {
          skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_MiniKillCamInfo.Attacker result = new skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_MiniKillCamInfo.Attacker(this);
          int from_bitField0_ = bitField0_;
          int to_bitField0_ = 0;
          if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
            to_bitField0_ |= 0x00000001;
          }
          result.attacker_ = attacker_;
          if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
            to_bitField0_ |= 0x00000002;
          }
          result.totalDamage_ = totalDamage_;
          if (abilitiesBuilder_ == null) {
            if (((bitField0_ & 0x00000004) == 0x00000004)) {
              abilities_ = java.util.Collections.unmodifiableList(abilities_);
              bitField0_ = (bitField0_ & ~0x00000004);
            }
            result.abilities_ = abilities_;
          } else {
            result.abilities_ = abilitiesBuilder_.build();
          }
          result.bitField0_ = to_bitField0_;
          onBuilt();
          return result;
        }

        public Builder mergeFrom(com.google.protobuf.Message other) {
          if (other instanceof skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_MiniKillCamInfo.Attacker) {
            return mergeFrom((skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_MiniKillCamInfo.Attacker)other);
          } else {
            super.mergeFrom(other);
            return this;
          }
        }

        public Builder mergeFrom(skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_MiniKillCamInfo.Attacker other) {
          if (other == skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_MiniKillCamInfo.Attacker.getDefaultInstance()) return this;
          if (other.hasAttacker()) {
            setAttacker(other.getAttacker());
          }
          if (other.hasTotalDamage()) {
            setTotalDamage(other.getTotalDamage());
          }
          if (abilitiesBuilder_ == null) {
            if (!other.abilities_.isEmpty()) {
              if (abilities_.isEmpty()) {
                abilities_ = other.abilities_;
                bitField0_ = (bitField0_ & ~0x00000004);
              } else {
                ensureAbilitiesIsMutable();
                abilities_.addAll(other.abilities_);
              }
              onChanged();
            }
          } else {
            if (!other.abilities_.isEmpty()) {
              if (abilitiesBuilder_.isEmpty()) {
                abilitiesBuilder_.dispose();
                abilitiesBuilder_ = null;
                abilities_ = other.abilities_;
                bitField0_ = (bitField0_ & ~0x00000004);
                abilitiesBuilder_ = 
                  com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders ?
                     getAbilitiesFieldBuilder() : null;
              } else {
                abilitiesBuilder_.addAllMessages(other.abilities_);
              }
            }
          }
          this.mergeUnknownFields(other.getUnknownFields());
          return this;
        }

        public final boolean isInitialized() {
          return true;
        }

        public Builder mergeFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws java.io.IOException {
          skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_MiniKillCamInfo.Attacker parsedMessage = null;
          try {
            parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
          } catch (com.google.protobuf.InvalidProtocolBufferException e) {
            parsedMessage = (skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_MiniKillCamInfo.Attacker) e.getUnfinishedMessage();
            throw e;
          } finally {
            if (parsedMessage != null) {
              mergeFrom(parsedMessage);
            }
          }
          return this;
        }
        private int bitField0_;

        private int attacker_ ;
        /**
         * <code>optional uint32 attacker = 1;</code>
         */
        public boolean hasAttacker() {
          return ((bitField0_ & 0x00000001) == 0x00000001);
        }
        /**
         * <code>optional uint32 attacker = 1;</code>
         */
        public int getAttacker() {
          return attacker_;
        }
        /**
         * <code>optional uint32 attacker = 1;</code>
         */
        public Builder setAttacker(int value) {
          bitField0_ |= 0x00000001;
          attacker_ = value;
          onChanged();
          return this;
        }
        /**
         * <code>optional uint32 attacker = 1;</code>
         */
        public Builder clearAttacker() {
          bitField0_ = (bitField0_ & ~0x00000001);
          attacker_ = 0;
          onChanged();
          return this;
        }

        private int totalDamage_ ;
        /**
         * <code>optional int32 total_damage = 2;</code>
         */
        public boolean hasTotalDamage() {
          return ((bitField0_ & 0x00000002) == 0x00000002);
        }
        /**
         * <code>optional int32 total_damage = 2;</code>
         */
        public int getTotalDamage() {
          return totalDamage_;
        }
        /**
         * <code>optional int32 total_damage = 2;</code>
         */
        public Builder setTotalDamage(int value) {
          bitField0_ |= 0x00000002;
          totalDamage_ = value;
          onChanged();
          return this;
        }
        /**
         * <code>optional int32 total_damage = 2;</code>
         */
        public Builder clearTotalDamage() {
          bitField0_ = (bitField0_ & ~0x00000002);
          totalDamage_ = 0;
          onChanged();
          return this;
        }

        private java.util.List<skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_MiniKillCamInfo.Attacker.Ability> abilities_ =
          java.util.Collections.emptyList();
        private void ensureAbilitiesIsMutable() {
          if (!((bitField0_ & 0x00000004) == 0x00000004)) {
            abilities_ = new java.util.ArrayList<skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_MiniKillCamInfo.Attacker.Ability>(abilities_);
            bitField0_ |= 0x00000004;
           }
        }

        private com.google.protobuf.RepeatedFieldBuilder<
            skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_MiniKillCamInfo.Attacker.Ability, skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_MiniKillCamInfo.Attacker.Ability.Builder, skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_MiniKillCamInfo.Attacker.AbilityOrBuilder> abilitiesBuilder_;

        /**
         * <code>repeated .CDOTAUserMsg_MiniKillCamInfo.Attacker.Ability abilities = 3;</code>
         */
        public java.util.List<skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_MiniKillCamInfo.Attacker.Ability> getAbilitiesList() {
          if (abilitiesBuilder_ == null) {
            return java.util.Collections.unmodifiableList(abilities_);
          } else {
            return abilitiesBuilder_.getMessageList();
          }
        }
        /**
         * <code>repeated .CDOTAUserMsg_MiniKillCamInfo.Attacker.Ability abilities = 3;</code>
         */
        public int getAbilitiesCount() {
          if (abilitiesBuilder_ == null) {
            return abilities_.size();
          } else {
            return abilitiesBuilder_.getCount();
          }
        }
        /**
         * <code>repeated .CDOTAUserMsg_MiniKillCamInfo.Attacker.Ability abilities = 3;</code>
         */
        public skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_MiniKillCamInfo.Attacker.Ability getAbilities(int index) {
          if (abilitiesBuilder_ == null) {
            return abilities_.get(index);
          } else {
            return abilitiesBuilder_.getMessage(index);
          }
        }
        /**
         * <code>repeated .CDOTAUserMsg_MiniKillCamInfo.Attacker.Ability abilities = 3;</code>
         */
        public Builder setAbilities(
            int index, skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_MiniKillCamInfo.Attacker.Ability value) {
          if (abilitiesBuilder_ == null) {
            if (value == null) {
              throw new NullPointerException();
            }
            ensureAbilitiesIsMutable();
            abilities_.set(index, value);
            onChanged();
          } else {
            abilitiesBuilder_.setMessage(index, value);
          }
          return this;
        }
        /**
         * <code>repeated .CDOTAUserMsg_MiniKillCamInfo.Attacker.Ability abilities = 3;</code>
         */
        public Builder setAbilities(
            int index, skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_MiniKillCamInfo.Attacker.Ability.Builder builderForValue) {
          if (abilitiesBuilder_ == null) {
            ensureAbilitiesIsMutable();
            abilities_.set(index, builderForValue.build());
            onChanged();
          } else {
            abilitiesBuilder_.setMessage(index, builderForValue.build());
          }
          return this;
        }
        /**
         * <code>repeated .CDOTAUserMsg_MiniKillCamInfo.Attacker.Ability abilities = 3;</code>
         */
        public Builder addAbilities(skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_MiniKillCamInfo.Attacker.Ability value) {
          if (abilitiesBuilder_ == null) {
            if (value == null) {
              throw new NullPointerException();
            }
            ensureAbilitiesIsMutable();
            abilities_.add(value);
            onChanged();
          } else {
            abilitiesBuilder_.addMessage(value);
          }
          return this;
        }
        /**
         * <code>repeated .CDOTAUserMsg_MiniKillCamInfo.Attacker.Ability abilities = 3;</code>
         */
        public Builder addAbilities(
            int index, skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_MiniKillCamInfo.Attacker.Ability value) {
          if (abilitiesBuilder_ == null) {
            if (value == null) {
              throw new NullPointerException();
            }
            ensureAbilitiesIsMutable();
            abilities_.add(index, value);
            onChanged();
          } else {
            abilitiesBuilder_.addMessage(index, value);
          }
          return this;
        }
        /**
         * <code>repeated .CDOTAUserMsg_MiniKillCamInfo.Attacker.Ability abilities = 3;</code>
         */
        public Builder addAbilities(
            skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_MiniKillCamInfo.Attacker.Ability.Builder builderForValue) {
          if (abilitiesBuilder_ == null) {
            ensureAbilitiesIsMutable();
            abilities_.add(builderForValue.build());
            onChanged();
          } else {
            abilitiesBuilder_.addMessage(builderForValue.build());
          }
          return this;
        }
        /**
         * <code>repeated .CDOTAUserMsg_MiniKillCamInfo.Attacker.Ability abilities = 3;</code>
         */
        public Builder addAbilities(
            int index, skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_MiniKillCamInfo.Attacker.Ability.Builder builderForValue) {
          if (abilitiesBuilder_ == null) {
            ensureAbilitiesIsMutable();
            abilities_.add(index, builderForValue.build());
            onChanged();
          } else {
            abilitiesBuilder_.addMessage(index, builderForValue.build());
          }
          return this;
        }
        /**
         * <code>repeated .CDOTAUserMsg_MiniKillCamInfo.Attacker.Ability abilities = 3;</code>
         */
        public Builder addAllAbilities(
            java.lang.Iterable<? extends skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_MiniKillCamInfo.Attacker.Ability> values) {
          if (abilitiesBuilder_ == null) {
            ensureAbilitiesIsMutable();
            com.google.protobuf.AbstractMessageLite.Builder.addAll(
                values, abilities_);
            onChanged();
          } else {
            abilitiesBuilder_.addAllMessages(values);
          }
          return this;
        }
        /**
         * <code>repeated .CDOTAUserMsg_MiniKillCamInfo.Attacker.Ability abilities = 3;</code>
         */
        public Builder clearAbilities() {
          if (abilitiesBuilder_ == null) {
            abilities_ = java.util.Collections.emptyList();
            bitField0_ = (bitField0_ & ~0x00000004);
            onChanged();
          } else {
            abilitiesBuilder_.clear();
          }
          return this;
        }
        /**
         * <code>repeated .CDOTAUserMsg_MiniKillCamInfo.Attacker.Ability abilities = 3;</code>
         */
        public Builder removeAbilities(int index) {
          if (abilitiesBuilder_ == null) {
            ensureAbilitiesIsMutable();
            abilities_.remove(index);
            onChanged();
          } else {
            abilitiesBuilder_.remove(index);
          }
          return this;
        }
        /**
         * <code>repeated .CDOTAUserMsg_MiniKillCamInfo.Attacker.Ability abilities = 3;</code>
         */
        public skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_MiniKillCamInfo.Attacker.Ability.Builder getAbilitiesBuilder(
            int index) {
          return getAbilitiesFieldBuilder().getBuilder(index);
        }
        /**
         * <code>repeated .CDOTAUserMsg_MiniKillCamInfo.Attacker.Ability abilities = 3;</code>
         */
        public skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_MiniKillCamInfo.Attacker.AbilityOrBuilder getAbilitiesOrBuilder(
            int index) {
          if (abilitiesBuilder_ == null) {
            return abilities_.get(index);  } else {
            return abilitiesBuilder_.getMessageOrBuilder(index);
          }
        }
        /**
         * <code>repeated .CDOTAUserMsg_MiniKillCamInfo.Attacker.Ability abilities = 3;</code>
         */
        public java.util.List<? extends skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_MiniKillCamInfo.Attacker.AbilityOrBuilder> 
             getAbilitiesOrBuilderList() {
          if (abilitiesBuilder_ != null) {
            return abilitiesBuilder_.getMessageOrBuilderList();
          } else {
            return java.util.Collections.unmodifiableList(abilities_);
          }
        }
        /**
         * <code>repeated .CDOTAUserMsg_MiniKillCamInfo.Attacker.Ability abilities = 3;</code>
         */
        public skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_MiniKillCamInfo.Attacker.Ability.Builder addAbilitiesBuilder() {
          return getAbilitiesFieldBuilder().addBuilder(
              skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_MiniKillCamInfo.Attacker.Ability.getDefaultInstance());
        }
        /**
         * <code>repeated .CDOTAUserMsg_MiniKillCamInfo.Attacker.Ability abilities = 3;</code>
         */
        public skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_MiniKillCamInfo.Attacker.Ability.Builder addAbilitiesBuilder(
            int index) {
          return getAbilitiesFieldBuilder().addBuilder(
              index, skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_MiniKillCamInfo.Attacker.Ability.getDefaultInstance());
        }
        /**
         * <code>repeated .CDOTAUserMsg_MiniKillCamInfo.Attacker.Ability abilities = 3;</code>
         */
        public java.util.List<skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_MiniKillCamInfo.Attacker.Ability.Builder> 
             getAbilitiesBuilderList() {
          return getAbilitiesFieldBuilder().getBuilderList();
        }
        private com.google.protobuf.RepeatedFieldBuilder<
            skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_MiniKillCamInfo.Attacker.Ability, skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_MiniKillCamInfo.Attacker.Ability.Builder, skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_MiniKillCamInfo.Attacker.AbilityOrBuilder> 
            getAbilitiesFieldBuilder() {
          if (abilitiesBuilder_ == null) {
            abilitiesBuilder_ = new com.google.protobuf.RepeatedFieldBuilder<
                skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_MiniKillCamInfo.Attacker.Ability, skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_MiniKillCamInfo.Attacker.Ability.Builder, skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_MiniKillCamInfo.Attacker.AbilityOrBuilder>(
                    abilities_,
                    ((bitField0_ & 0x00000004) == 0x00000004),
                    getParentForChildren(),
                    isClean());
            abilities_ = null;
          }
          return abilitiesBuilder_;
        }

        // @@protoc_insertion_point(builder_scope:CDOTAUserMsg_MiniKillCamInfo.Attacker)
      }

      static {
        defaultInstance = new Attacker(true);
        defaultInstance.initFields();
      }

      // @@protoc_insertion_point(class_scope:CDOTAUserMsg_MiniKillCamInfo.Attacker)
    }

    public static final int ATTACKERS_FIELD_NUMBER = 1;
    private java.util.List<skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_MiniKillCamInfo.Attacker> attackers_;
    /**
     * <code>repeated .CDOTAUserMsg_MiniKillCamInfo.Attacker attackers = 1;</code>
     */
    public java.util.List<skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_MiniKillCamInfo.Attacker> getAttackersList() {
      return attackers_;
    }
    /**
     * <code>repeated .CDOTAUserMsg_MiniKillCamInfo.Attacker attackers = 1;</code>
     */
    public java.util.List<? extends skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_MiniKillCamInfo.AttackerOrBuilder> 
        getAttackersOrBuilderList() {
      return attackers_;
    }
    /**
     * <code>repeated .CDOTAUserMsg_MiniKillCamInfo.Attacker attackers = 1;</code>
     */
    public int getAttackersCount() {
      return attackers_.size();
    }
    /**
     * <code>repeated .CDOTAUserMsg_MiniKillCamInfo.Attacker attackers = 1;</code>
     */
    public skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_MiniKillCamInfo.Attacker getAttackers(int index) {
      return attackers_.get(index);
    }
    /**
     * <code>repeated .CDOTAUserMsg_MiniKillCamInfo.Attacker attackers = 1;</code>
     */
    public skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_MiniKillCamInfo.AttackerOrBuilder getAttackersOrBuilder(
        int index) {
      return attackers_.get(index);
    }

    private void initFields() {
      attackers_ = java.util.Collections.emptyList();
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      for (int i = 0; i < attackers_.size(); i++) {
        output.writeMessage(1, attackers_.get(i));
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      for (int i = 0; i < attackers_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(1, attackers_.get(i));
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_MiniKillCamInfo parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_MiniKillCamInfo parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_MiniKillCamInfo parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_MiniKillCamInfo parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_MiniKillCamInfo parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_MiniKillCamInfo parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_MiniKillCamInfo parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_MiniKillCamInfo parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_MiniKillCamInfo parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_MiniKillCamInfo parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_MiniKillCamInfo prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code CDOTAUserMsg_MiniKillCamInfo}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:CDOTAUserMsg_MiniKillCamInfo)
        skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_MiniKillCamInfoOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return skadistats.clarity.wire.common.proto.DotaUserMessages.internal_static_CDOTAUserMsg_MiniKillCamInfo_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return skadistats.clarity.wire.common.proto.DotaUserMessages.internal_static_CDOTAUserMsg_MiniKillCamInfo_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_MiniKillCamInfo.class, skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_MiniKillCamInfo.Builder.class);
      }

      // Construct using skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_MiniKillCamInfo.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
          getAttackersFieldBuilder();
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        if (attackersBuilder_ == null) {
          attackers_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000001);
        } else {
          attackersBuilder_.clear();
        }
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return skadistats.clarity.wire.common.proto.DotaUserMessages.internal_static_CDOTAUserMsg_MiniKillCamInfo_descriptor;
      }

      public skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_MiniKillCamInfo getDefaultInstanceForType() {
        return skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_MiniKillCamInfo.getDefaultInstance();
      }

      public skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_MiniKillCamInfo build() {
        skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_MiniKillCamInfo result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_MiniKillCamInfo buildPartial() {
        skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_MiniKillCamInfo result = new skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_MiniKillCamInfo(this);
        int from_bitField0_ = bitField0_;
        if (attackersBuilder_ == null) {
          if (((bitField0_ & 0x00000001) == 0x00000001)) {
            attackers_ = java.util.Collections.unmodifiableList(attackers_);
            bitField0_ = (bitField0_ & ~0x00000001);
          }
          result.attackers_ = attackers_;
        } else {
          result.attackers_ = attackersBuilder_.build();
        }
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_MiniKillCamInfo) {
          return mergeFrom((skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_MiniKillCamInfo)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_MiniKillCamInfo other) {
        if (other == skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_MiniKillCamInfo.getDefaultInstance()) return this;
        if (attackersBuilder_ == null) {
          if (!other.attackers_.isEmpty()) {
            if (attackers_.isEmpty()) {
              attackers_ = other.attackers_;
              bitField0_ = (bitField0_ & ~0x00000001);
            } else {
              ensureAttackersIsMutable();
              attackers_.addAll(other.attackers_);
            }
            onChanged();
          }
        } else {
          if (!other.attackers_.isEmpty()) {
            if (attackersBuilder_.isEmpty()) {
              attackersBuilder_.dispose();
              attackersBuilder_ = null;
              attackers_ = other.attackers_;
              bitField0_ = (bitField0_ & ~0x00000001);
              attackersBuilder_ = 
                com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders ?
                   getAttackersFieldBuilder() : null;
            } else {
              attackersBuilder_.addAllMessages(other.attackers_);
            }
          }
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_MiniKillCamInfo parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_MiniKillCamInfo) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private java.util.List<skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_MiniKillCamInfo.Attacker> attackers_ =
        java.util.Collections.emptyList();
      private void ensureAttackersIsMutable() {
        if (!((bitField0_ & 0x00000001) == 0x00000001)) {
          attackers_ = new java.util.ArrayList<skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_MiniKillCamInfo.Attacker>(attackers_);
          bitField0_ |= 0x00000001;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilder<
          skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_MiniKillCamInfo.Attacker, skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_MiniKillCamInfo.Attacker.Builder, skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_MiniKillCamInfo.AttackerOrBuilder> attackersBuilder_;

      /**
       * <code>repeated .CDOTAUserMsg_MiniKillCamInfo.Attacker attackers = 1;</code>
       */
      public java.util.List<skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_MiniKillCamInfo.Attacker> getAttackersList() {
        if (attackersBuilder_ == null) {
          return java.util.Collections.unmodifiableList(attackers_);
        } else {
          return attackersBuilder_.getMessageList();
        }
      }
      /**
       * <code>repeated .CDOTAUserMsg_MiniKillCamInfo.Attacker attackers = 1;</code>
       */
      public int getAttackersCount() {
        if (attackersBuilder_ == null) {
          return attackers_.size();
        } else {
          return attackersBuilder_.getCount();
        }
      }
      /**
       * <code>repeated .CDOTAUserMsg_MiniKillCamInfo.Attacker attackers = 1;</code>
       */
      public skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_MiniKillCamInfo.Attacker getAttackers(int index) {
        if (attackersBuilder_ == null) {
          return attackers_.get(index);
        } else {
          return attackersBuilder_.getMessage(index);
        }
      }
      /**
       * <code>repeated .CDOTAUserMsg_MiniKillCamInfo.Attacker attackers = 1;</code>
       */
      public Builder setAttackers(
          int index, skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_MiniKillCamInfo.Attacker value) {
        if (attackersBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureAttackersIsMutable();
          attackers_.set(index, value);
          onChanged();
        } else {
          attackersBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .CDOTAUserMsg_MiniKillCamInfo.Attacker attackers = 1;</code>
       */
      public Builder setAttackers(
          int index, skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_MiniKillCamInfo.Attacker.Builder builderForValue) {
        if (attackersBuilder_ == null) {
          ensureAttackersIsMutable();
          attackers_.set(index, builderForValue.build());
          onChanged();
        } else {
          attackersBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .CDOTAUserMsg_MiniKillCamInfo.Attacker attackers = 1;</code>
       */
      public Builder addAttackers(skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_MiniKillCamInfo.Attacker value) {
        if (attackersBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureAttackersIsMutable();
          attackers_.add(value);
          onChanged();
        } else {
          attackersBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <code>repeated .CDOTAUserMsg_MiniKillCamInfo.Attacker attackers = 1;</code>
       */
      public Builder addAttackers(
          int index, skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_MiniKillCamInfo.Attacker value) {
        if (attackersBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureAttackersIsMutable();
          attackers_.add(index, value);
          onChanged();
        } else {
          attackersBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .CDOTAUserMsg_MiniKillCamInfo.Attacker attackers = 1;</code>
       */
      public Builder addAttackers(
          skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_MiniKillCamInfo.Attacker.Builder builderForValue) {
        if (attackersBuilder_ == null) {
          ensureAttackersIsMutable();
          attackers_.add(builderForValue.build());
          onChanged();
        } else {
          attackersBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .CDOTAUserMsg_MiniKillCamInfo.Attacker attackers = 1;</code>
       */
      public Builder addAttackers(
          int index, skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_MiniKillCamInfo.Attacker.Builder builderForValue) {
        if (attackersBuilder_ == null) {
          ensureAttackersIsMutable();
          attackers_.add(index, builderForValue.build());
          onChanged();
        } else {
          attackersBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .CDOTAUserMsg_MiniKillCamInfo.Attacker attackers = 1;</code>
       */
      public Builder addAllAttackers(
          java.lang.Iterable<? extends skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_MiniKillCamInfo.Attacker> values) {
        if (attackersBuilder_ == null) {
          ensureAttackersIsMutable();
          com.google.protobuf.AbstractMessageLite.Builder.addAll(
              values, attackers_);
          onChanged();
        } else {
          attackersBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <code>repeated .CDOTAUserMsg_MiniKillCamInfo.Attacker attackers = 1;</code>
       */
      public Builder clearAttackers() {
        if (attackersBuilder_ == null) {
          attackers_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000001);
          onChanged();
        } else {
          attackersBuilder_.clear();
        }
        return this;
      }
      /**
       * <code>repeated .CDOTAUserMsg_MiniKillCamInfo.Attacker attackers = 1;</code>
       */
      public Builder removeAttackers(int index) {
        if (attackersBuilder_ == null) {
          ensureAttackersIsMutable();
          attackers_.remove(index);
          onChanged();
        } else {
          attackersBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <code>repeated .CDOTAUserMsg_MiniKillCamInfo.Attacker attackers = 1;</code>
       */
      public skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_MiniKillCamInfo.Attacker.Builder getAttackersBuilder(
          int index) {
        return getAttackersFieldBuilder().getBuilder(index);
      }
      /**
       * <code>repeated .CDOTAUserMsg_MiniKillCamInfo.Attacker attackers = 1;</code>
       */
      public skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_MiniKillCamInfo.AttackerOrBuilder getAttackersOrBuilder(
          int index) {
        if (attackersBuilder_ == null) {
          return attackers_.get(index);  } else {
          return attackersBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <code>repeated .CDOTAUserMsg_MiniKillCamInfo.Attacker attackers = 1;</code>
       */
      public java.util.List<? extends skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_MiniKillCamInfo.AttackerOrBuilder> 
           getAttackersOrBuilderList() {
        if (attackersBuilder_ != null) {
          return attackersBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(attackers_);
        }
      }
      /**
       * <code>repeated .CDOTAUserMsg_MiniKillCamInfo.Attacker attackers = 1;</code>
       */
      public skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_MiniKillCamInfo.Attacker.Builder addAttackersBuilder() {
        return getAttackersFieldBuilder().addBuilder(
            skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_MiniKillCamInfo.Attacker.getDefaultInstance());
      }
      /**
       * <code>repeated .CDOTAUserMsg_MiniKillCamInfo.Attacker attackers = 1;</code>
       */
      public skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_MiniKillCamInfo.Attacker.Builder addAttackersBuilder(
          int index) {
        return getAttackersFieldBuilder().addBuilder(
            index, skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_MiniKillCamInfo.Attacker.getDefaultInstance());
      }
      /**
       * <code>repeated .CDOTAUserMsg_MiniKillCamInfo.Attacker attackers = 1;</code>
       */
      public java.util.List<skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_MiniKillCamInfo.Attacker.Builder> 
           getAttackersBuilderList() {
        return getAttackersFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilder<
          skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_MiniKillCamInfo.Attacker, skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_MiniKillCamInfo.Attacker.Builder, skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_MiniKillCamInfo.AttackerOrBuilder> 
          getAttackersFieldBuilder() {
        if (attackersBuilder_ == null) {
          attackersBuilder_ = new com.google.protobuf.RepeatedFieldBuilder<
              skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_MiniKillCamInfo.Attacker, skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_MiniKillCamInfo.Attacker.Builder, skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_MiniKillCamInfo.AttackerOrBuilder>(
                  attackers_,
                  ((bitField0_ & 0x00000001) == 0x00000001),
                  getParentForChildren(),
                  isClean());
          attackers_ = null;
        }
        return attackersBuilder_;
      }

      // @@protoc_insertion_point(builder_scope:CDOTAUserMsg_MiniKillCamInfo)
    }

    static {
      defaultInstance = new CDOTAUserMsg_MiniKillCamInfo(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:CDOTAUserMsg_MiniKillCamInfo)
  }

  public interface CDOTAUserMsg_GlobalLightColorOrBuilder extends
      // @@protoc_insertion_point(interface_extends:CDOTAUserMsg_GlobalLightColor)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>optional uint32 color = 1;</code>
     */
    boolean hasColor();
    /**
     * <code>optional uint32 color = 1;</code>
     */
    int getColor();

    /**
     * <code>optional float duration = 2;</code>
     */
    boolean hasDuration();
    /**
     * <code>optional float duration = 2;</code>
     */
    float getDuration();
  }
  /**
   * Protobuf type {@code CDOTAUserMsg_GlobalLightColor}
   */
  public static final class CDOTAUserMsg_GlobalLightColor extends
      com.google.protobuf.GeneratedMessage implements
      // @@protoc_insertion_point(message_implements:CDOTAUserMsg_GlobalLightColor)
      CDOTAUserMsg_GlobalLightColorOrBuilder {
    // Use CDOTAUserMsg_GlobalLightColor.newBuilder() to construct.
    private CDOTAUserMsg_GlobalLightColor(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private CDOTAUserMsg_GlobalLightColor(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final CDOTAUserMsg_GlobalLightColor defaultInstance;
    public static CDOTAUserMsg_GlobalLightColor getDefaultInstance() {
      return defaultInstance;
    }

    public CDOTAUserMsg_GlobalLightColor getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private CDOTAUserMsg_GlobalLightColor(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 8: {
              bitField0_ |= 0x00000001;
              color_ = input.readUInt32();
              break;
            }
            case 21: {
              bitField0_ |= 0x00000002;
              duration_ = input.readFloat();
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return skadistats.clarity.wire.common.proto.DotaUserMessages.internal_static_CDOTAUserMsg_GlobalLightColor_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return skadistats.clarity.wire.common.proto.DotaUserMessages.internal_static_CDOTAUserMsg_GlobalLightColor_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_GlobalLightColor.class, skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_GlobalLightColor.Builder.class);
    }

    public static com.google.protobuf.Parser<CDOTAUserMsg_GlobalLightColor> PARSER =
        new com.google.protobuf.AbstractParser<CDOTAUserMsg_GlobalLightColor>() {
      public CDOTAUserMsg_GlobalLightColor parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new CDOTAUserMsg_GlobalLightColor(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<CDOTAUserMsg_GlobalLightColor> getParserForType() {
      return PARSER;
    }

    private int bitField0_;
    public static final int COLOR_FIELD_NUMBER = 1;
    private int color_;
    /**
     * <code>optional uint32 color = 1;</code>
     */
    public boolean hasColor() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>optional uint32 color = 1;</code>
     */
    public int getColor() {
      return color_;
    }

    public static final int DURATION_FIELD_NUMBER = 2;
    private float duration_;
    /**
     * <code>optional float duration = 2;</code>
     */
    public boolean hasDuration() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>optional float duration = 2;</code>
     */
    public float getDuration() {
      return duration_;
    }

    private void initFields() {
      color_ = 0;
      duration_ = 0F;
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeUInt32(1, color_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeFloat(2, duration_);
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(1, color_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeFloatSize(2, duration_);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_GlobalLightColor parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_GlobalLightColor parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_GlobalLightColor parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_GlobalLightColor parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_GlobalLightColor parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_GlobalLightColor parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_GlobalLightColor parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_GlobalLightColor parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_GlobalLightColor parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_GlobalLightColor parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_GlobalLightColor prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code CDOTAUserMsg_GlobalLightColor}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:CDOTAUserMsg_GlobalLightColor)
        skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_GlobalLightColorOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return skadistats.clarity.wire.common.proto.DotaUserMessages.internal_static_CDOTAUserMsg_GlobalLightColor_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return skadistats.clarity.wire.common.proto.DotaUserMessages.internal_static_CDOTAUserMsg_GlobalLightColor_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_GlobalLightColor.class, skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_GlobalLightColor.Builder.class);
      }

      // Construct using skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_GlobalLightColor.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        color_ = 0;
        bitField0_ = (bitField0_ & ~0x00000001);
        duration_ = 0F;
        bitField0_ = (bitField0_ & ~0x00000002);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return skadistats.clarity.wire.common.proto.DotaUserMessages.internal_static_CDOTAUserMsg_GlobalLightColor_descriptor;
      }

      public skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_GlobalLightColor getDefaultInstanceForType() {
        return skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_GlobalLightColor.getDefaultInstance();
      }

      public skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_GlobalLightColor build() {
        skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_GlobalLightColor result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_GlobalLightColor buildPartial() {
        skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_GlobalLightColor result = new skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_GlobalLightColor(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.color_ = color_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.duration_ = duration_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_GlobalLightColor) {
          return mergeFrom((skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_GlobalLightColor)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_GlobalLightColor other) {
        if (other == skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_GlobalLightColor.getDefaultInstance()) return this;
        if (other.hasColor()) {
          setColor(other.getColor());
        }
        if (other.hasDuration()) {
          setDuration(other.getDuration());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_GlobalLightColor parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_GlobalLightColor) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private int color_ ;
      /**
       * <code>optional uint32 color = 1;</code>
       */
      public boolean hasColor() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>optional uint32 color = 1;</code>
       */
      public int getColor() {
        return color_;
      }
      /**
       * <code>optional uint32 color = 1;</code>
       */
      public Builder setColor(int value) {
        bitField0_ |= 0x00000001;
        color_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional uint32 color = 1;</code>
       */
      public Builder clearColor() {
        bitField0_ = (bitField0_ & ~0x00000001);
        color_ = 0;
        onChanged();
        return this;
      }

      private float duration_ ;
      /**
       * <code>optional float duration = 2;</code>
       */
      public boolean hasDuration() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>optional float duration = 2;</code>
       */
      public float getDuration() {
        return duration_;
      }
      /**
       * <code>optional float duration = 2;</code>
       */
      public Builder setDuration(float value) {
        bitField0_ |= 0x00000002;
        duration_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional float duration = 2;</code>
       */
      public Builder clearDuration() {
        bitField0_ = (bitField0_ & ~0x00000002);
        duration_ = 0F;
        onChanged();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:CDOTAUserMsg_GlobalLightColor)
    }

    static {
      defaultInstance = new CDOTAUserMsg_GlobalLightColor(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:CDOTAUserMsg_GlobalLightColor)
  }

  public interface CDOTAUserMsg_GlobalLightDirectionOrBuilder extends
      // @@protoc_insertion_point(interface_extends:CDOTAUserMsg_GlobalLightDirection)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>optional .CMsgVector direction = 1;</code>
     */
    boolean hasDirection();
    /**
     * <code>optional .CMsgVector direction = 1;</code>
     */
    skadistats.clarity.wire.common.proto.NetworkBaseTypes.CMsgVector getDirection();
    /**
     * <code>optional .CMsgVector direction = 1;</code>
     */
    skadistats.clarity.wire.common.proto.NetworkBaseTypes.CMsgVectorOrBuilder getDirectionOrBuilder();

    /**
     * <code>optional float duration = 2;</code>
     */
    boolean hasDuration();
    /**
     * <code>optional float duration = 2;</code>
     */
    float getDuration();
  }
  /**
   * Protobuf type {@code CDOTAUserMsg_GlobalLightDirection}
   */
  public static final class CDOTAUserMsg_GlobalLightDirection extends
      com.google.protobuf.GeneratedMessage implements
      // @@protoc_insertion_point(message_implements:CDOTAUserMsg_GlobalLightDirection)
      CDOTAUserMsg_GlobalLightDirectionOrBuilder {
    // Use CDOTAUserMsg_GlobalLightDirection.newBuilder() to construct.
    private CDOTAUserMsg_GlobalLightDirection(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private CDOTAUserMsg_GlobalLightDirection(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final CDOTAUserMsg_GlobalLightDirection defaultInstance;
    public static CDOTAUserMsg_GlobalLightDirection getDefaultInstance() {
      return defaultInstance;
    }

    public CDOTAUserMsg_GlobalLightDirection getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private CDOTAUserMsg_GlobalLightDirection(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 10: {
              skadistats.clarity.wire.common.proto.NetworkBaseTypes.CMsgVector.Builder subBuilder = null;
              if (((bitField0_ & 0x00000001) == 0x00000001)) {
                subBuilder = direction_.toBuilder();
              }
              direction_ = input.readMessage(skadistats.clarity.wire.common.proto.NetworkBaseTypes.CMsgVector.PARSER, extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(direction_);
                direction_ = subBuilder.buildPartial();
              }
              bitField0_ |= 0x00000001;
              break;
            }
            case 21: {
              bitField0_ |= 0x00000002;
              duration_ = input.readFloat();
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return skadistats.clarity.wire.common.proto.DotaUserMessages.internal_static_CDOTAUserMsg_GlobalLightDirection_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return skadistats.clarity.wire.common.proto.DotaUserMessages.internal_static_CDOTAUserMsg_GlobalLightDirection_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_GlobalLightDirection.class, skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_GlobalLightDirection.Builder.class);
    }

    public static com.google.protobuf.Parser<CDOTAUserMsg_GlobalLightDirection> PARSER =
        new com.google.protobuf.AbstractParser<CDOTAUserMsg_GlobalLightDirection>() {
      public CDOTAUserMsg_GlobalLightDirection parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new CDOTAUserMsg_GlobalLightDirection(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<CDOTAUserMsg_GlobalLightDirection> getParserForType() {
      return PARSER;
    }

    private int bitField0_;
    public static final int DIRECTION_FIELD_NUMBER = 1;
    private skadistats.clarity.wire.common.proto.NetworkBaseTypes.CMsgVector direction_;
    /**
     * <code>optional .CMsgVector direction = 1;</code>
     */
    public boolean hasDirection() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>optional .CMsgVector direction = 1;</code>
     */
    public skadistats.clarity.wire.common.proto.NetworkBaseTypes.CMsgVector getDirection() {
      return direction_;
    }
    /**
     * <code>optional .CMsgVector direction = 1;</code>
     */
    public skadistats.clarity.wire.common.proto.NetworkBaseTypes.CMsgVectorOrBuilder getDirectionOrBuilder() {
      return direction_;
    }

    public static final int DURATION_FIELD_NUMBER = 2;
    private float duration_;
    /**
     * <code>optional float duration = 2;</code>
     */
    public boolean hasDuration() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>optional float duration = 2;</code>
     */
    public float getDuration() {
      return duration_;
    }

    private void initFields() {
      direction_ = skadistats.clarity.wire.common.proto.NetworkBaseTypes.CMsgVector.getDefaultInstance();
      duration_ = 0F;
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeMessage(1, direction_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeFloat(2, duration_);
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(1, direction_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeFloatSize(2, duration_);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_GlobalLightDirection parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_GlobalLightDirection parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_GlobalLightDirection parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_GlobalLightDirection parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_GlobalLightDirection parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_GlobalLightDirection parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_GlobalLightDirection parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_GlobalLightDirection parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_GlobalLightDirection parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_GlobalLightDirection parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_GlobalLightDirection prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code CDOTAUserMsg_GlobalLightDirection}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:CDOTAUserMsg_GlobalLightDirection)
        skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_GlobalLightDirectionOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return skadistats.clarity.wire.common.proto.DotaUserMessages.internal_static_CDOTAUserMsg_GlobalLightDirection_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return skadistats.clarity.wire.common.proto.DotaUserMessages.internal_static_CDOTAUserMsg_GlobalLightDirection_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_GlobalLightDirection.class, skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_GlobalLightDirection.Builder.class);
      }

      // Construct using skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_GlobalLightDirection.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
          getDirectionFieldBuilder();
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        if (directionBuilder_ == null) {
          direction_ = skadistats.clarity.wire.common.proto.NetworkBaseTypes.CMsgVector.getDefaultInstance();
        } else {
          directionBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000001);
        duration_ = 0F;
        bitField0_ = (bitField0_ & ~0x00000002);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return skadistats.clarity.wire.common.proto.DotaUserMessages.internal_static_CDOTAUserMsg_GlobalLightDirection_descriptor;
      }

      public skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_GlobalLightDirection getDefaultInstanceForType() {
        return skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_GlobalLightDirection.getDefaultInstance();
      }

      public skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_GlobalLightDirection build() {
        skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_GlobalLightDirection result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_GlobalLightDirection buildPartial() {
        skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_GlobalLightDirection result = new skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_GlobalLightDirection(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        if (directionBuilder_ == null) {
          result.direction_ = direction_;
        } else {
          result.direction_ = directionBuilder_.build();
        }
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.duration_ = duration_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_GlobalLightDirection) {
          return mergeFrom((skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_GlobalLightDirection)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_GlobalLightDirection other) {
        if (other == skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_GlobalLightDirection.getDefaultInstance()) return this;
        if (other.hasDirection()) {
          mergeDirection(other.getDirection());
        }
        if (other.hasDuration()) {
          setDuration(other.getDuration());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_GlobalLightDirection parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_GlobalLightDirection) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private skadistats.clarity.wire.common.proto.NetworkBaseTypes.CMsgVector direction_ = skadistats.clarity.wire.common.proto.NetworkBaseTypes.CMsgVector.getDefaultInstance();
      private com.google.protobuf.SingleFieldBuilder<
          skadistats.clarity.wire.common.proto.NetworkBaseTypes.CMsgVector, skadistats.clarity.wire.common.proto.NetworkBaseTypes.CMsgVector.Builder, skadistats.clarity.wire.common.proto.NetworkBaseTypes.CMsgVectorOrBuilder> directionBuilder_;
      /**
       * <code>optional .CMsgVector direction = 1;</code>
       */
      public boolean hasDirection() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>optional .CMsgVector direction = 1;</code>
       */
      public skadistats.clarity.wire.common.proto.NetworkBaseTypes.CMsgVector getDirection() {
        if (directionBuilder_ == null) {
          return direction_;
        } else {
          return directionBuilder_.getMessage();
        }
      }
      /**
       * <code>optional .CMsgVector direction = 1;</code>
       */
      public Builder setDirection(skadistats.clarity.wire.common.proto.NetworkBaseTypes.CMsgVector value) {
        if (directionBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          direction_ = value;
          onChanged();
        } else {
          directionBuilder_.setMessage(value);
        }
        bitField0_ |= 0x00000001;
        return this;
      }
      /**
       * <code>optional .CMsgVector direction = 1;</code>
       */
      public Builder setDirection(
          skadistats.clarity.wire.common.proto.NetworkBaseTypes.CMsgVector.Builder builderForValue) {
        if (directionBuilder_ == null) {
          direction_ = builderForValue.build();
          onChanged();
        } else {
          directionBuilder_.setMessage(builderForValue.build());
        }
        bitField0_ |= 0x00000001;
        return this;
      }
      /**
       * <code>optional .CMsgVector direction = 1;</code>
       */
      public Builder mergeDirection(skadistats.clarity.wire.common.proto.NetworkBaseTypes.CMsgVector value) {
        if (directionBuilder_ == null) {
          if (((bitField0_ & 0x00000001) == 0x00000001) &&
              direction_ != skadistats.clarity.wire.common.proto.NetworkBaseTypes.CMsgVector.getDefaultInstance()) {
            direction_ =
              skadistats.clarity.wire.common.proto.NetworkBaseTypes.CMsgVector.newBuilder(direction_).mergeFrom(value).buildPartial();
          } else {
            direction_ = value;
          }
          onChanged();
        } else {
          directionBuilder_.mergeFrom(value);
        }
        bitField0_ |= 0x00000001;
        return this;
      }
      /**
       * <code>optional .CMsgVector direction = 1;</code>
       */
      public Builder clearDirection() {
        if (directionBuilder_ == null) {
          direction_ = skadistats.clarity.wire.common.proto.NetworkBaseTypes.CMsgVector.getDefaultInstance();
          onChanged();
        } else {
          directionBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000001);
        return this;
      }
      /**
       * <code>optional .CMsgVector direction = 1;</code>
       */
      public skadistats.clarity.wire.common.proto.NetworkBaseTypes.CMsgVector.Builder getDirectionBuilder() {
        bitField0_ |= 0x00000001;
        onChanged();
        return getDirectionFieldBuilder().getBuilder();
      }
      /**
       * <code>optional .CMsgVector direction = 1;</code>
       */
      public skadistats.clarity.wire.common.proto.NetworkBaseTypes.CMsgVectorOrBuilder getDirectionOrBuilder() {
        if (directionBuilder_ != null) {
          return directionBuilder_.getMessageOrBuilder();
        } else {
          return direction_;
        }
      }
      /**
       * <code>optional .CMsgVector direction = 1;</code>
       */
      private com.google.protobuf.SingleFieldBuilder<
          skadistats.clarity.wire.common.proto.NetworkBaseTypes.CMsgVector, skadistats.clarity.wire.common.proto.NetworkBaseTypes.CMsgVector.Builder, skadistats.clarity.wire.common.proto.NetworkBaseTypes.CMsgVectorOrBuilder> 
          getDirectionFieldBuilder() {
        if (directionBuilder_ == null) {
          directionBuilder_ = new com.google.protobuf.SingleFieldBuilder<
              skadistats.clarity.wire.common.proto.NetworkBaseTypes.CMsgVector, skadistats.clarity.wire.common.proto.NetworkBaseTypes.CMsgVector.Builder, skadistats.clarity.wire.common.proto.NetworkBaseTypes.CMsgVectorOrBuilder>(
                  getDirection(),
                  getParentForChildren(),
                  isClean());
          direction_ = null;
        }
        return directionBuilder_;
      }

      private float duration_ ;
      /**
       * <code>optional float duration = 2;</code>
       */
      public boolean hasDuration() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>optional float duration = 2;</code>
       */
      public float getDuration() {
        return duration_;
      }
      /**
       * <code>optional float duration = 2;</code>
       */
      public Builder setDuration(float value) {
        bitField0_ |= 0x00000002;
        duration_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional float duration = 2;</code>
       */
      public Builder clearDuration() {
        bitField0_ = (bitField0_ & ~0x00000002);
        duration_ = 0F;
        onChanged();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:CDOTAUserMsg_GlobalLightDirection)
    }

    static {
      defaultInstance = new CDOTAUserMsg_GlobalLightDirection(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:CDOTAUserMsg_GlobalLightDirection)
  }

  public interface CDOTAUserMsg_LocationPingOrBuilder extends
      // @@protoc_insertion_point(interface_extends:CDOTAUserMsg_LocationPing)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>optional uint32 player_id = 1;</code>
     */
    boolean hasPlayerId();
    /**
     * <code>optional uint32 player_id = 1;</code>
     */
    int getPlayerId();

    /**
     * <code>optional .CDOTAMsg_LocationPing location_ping = 2;</code>
     */
    boolean hasLocationPing();
    /**
     * <code>optional .CDOTAMsg_LocationPing location_ping = 2;</code>
     */
    skadistats.clarity.wire.common.proto.DotaCommonMessages.CDOTAMsg_LocationPing getLocationPing();
    /**
     * <code>optional .CDOTAMsg_LocationPing location_ping = 2;</code>
     */
    skadistats.clarity.wire.common.proto.DotaCommonMessages.CDOTAMsg_LocationPingOrBuilder getLocationPingOrBuilder();
  }
  /**
   * Protobuf type {@code CDOTAUserMsg_LocationPing}
   */
  public static final class CDOTAUserMsg_LocationPing extends
      com.google.protobuf.GeneratedMessage implements
      // @@protoc_insertion_point(message_implements:CDOTAUserMsg_LocationPing)
      CDOTAUserMsg_LocationPingOrBuilder {
    // Use CDOTAUserMsg_LocationPing.newBuilder() to construct.
    private CDOTAUserMsg_LocationPing(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private CDOTAUserMsg_LocationPing(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final CDOTAUserMsg_LocationPing defaultInstance;
    public static CDOTAUserMsg_LocationPing getDefaultInstance() {
      return defaultInstance;
    }

    public CDOTAUserMsg_LocationPing getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private CDOTAUserMsg_LocationPing(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 8: {
              bitField0_ |= 0x00000001;
              playerId_ = input.readUInt32();
              break;
            }
            case 18: {
              skadistats.clarity.wire.common.proto.DotaCommonMessages.CDOTAMsg_LocationPing.Builder subBuilder = null;
              if (((bitField0_ & 0x00000002) == 0x00000002)) {
                subBuilder = locationPing_.toBuilder();
              }
              locationPing_ = input.readMessage(skadistats.clarity.wire.common.proto.DotaCommonMessages.CDOTAMsg_LocationPing.PARSER, extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(locationPing_);
                locationPing_ = subBuilder.buildPartial();
              }
              bitField0_ |= 0x00000002;
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return skadistats.clarity.wire.common.proto.DotaUserMessages.internal_static_CDOTAUserMsg_LocationPing_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return skadistats.clarity.wire.common.proto.DotaUserMessages.internal_static_CDOTAUserMsg_LocationPing_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_LocationPing.class, skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_LocationPing.Builder.class);
    }

    public static com.google.protobuf.Parser<CDOTAUserMsg_LocationPing> PARSER =
        new com.google.protobuf.AbstractParser<CDOTAUserMsg_LocationPing>() {
      public CDOTAUserMsg_LocationPing parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new CDOTAUserMsg_LocationPing(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<CDOTAUserMsg_LocationPing> getParserForType() {
      return PARSER;
    }

    private int bitField0_;
    public static final int PLAYER_ID_FIELD_NUMBER = 1;
    private int playerId_;
    /**
     * <code>optional uint32 player_id = 1;</code>
     */
    public boolean hasPlayerId() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>optional uint32 player_id = 1;</code>
     */
    public int getPlayerId() {
      return playerId_;
    }

    public static final int LOCATION_PING_FIELD_NUMBER = 2;
    private skadistats.clarity.wire.common.proto.DotaCommonMessages.CDOTAMsg_LocationPing locationPing_;
    /**
     * <code>optional .CDOTAMsg_LocationPing location_ping = 2;</code>
     */
    public boolean hasLocationPing() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>optional .CDOTAMsg_LocationPing location_ping = 2;</code>
     */
    public skadistats.clarity.wire.common.proto.DotaCommonMessages.CDOTAMsg_LocationPing getLocationPing() {
      return locationPing_;
    }
    /**
     * <code>optional .CDOTAMsg_LocationPing location_ping = 2;</code>
     */
    public skadistats.clarity.wire.common.proto.DotaCommonMessages.CDOTAMsg_LocationPingOrBuilder getLocationPingOrBuilder() {
      return locationPing_;
    }

    private void initFields() {
      playerId_ = 0;
      locationPing_ = skadistats.clarity.wire.common.proto.DotaCommonMessages.CDOTAMsg_LocationPing.getDefaultInstance();
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeUInt32(1, playerId_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeMessage(2, locationPing_);
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(1, playerId_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(2, locationPing_);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_LocationPing parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_LocationPing parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_LocationPing parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_LocationPing parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_LocationPing parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_LocationPing parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_LocationPing parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_LocationPing parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_LocationPing parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_LocationPing parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_LocationPing prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code CDOTAUserMsg_LocationPing}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:CDOTAUserMsg_LocationPing)
        skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_LocationPingOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return skadistats.clarity.wire.common.proto.DotaUserMessages.internal_static_CDOTAUserMsg_LocationPing_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return skadistats.clarity.wire.common.proto.DotaUserMessages.internal_static_CDOTAUserMsg_LocationPing_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_LocationPing.class, skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_LocationPing.Builder.class);
      }

      // Construct using skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_LocationPing.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
          getLocationPingFieldBuilder();
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        playerId_ = 0;
        bitField0_ = (bitField0_ & ~0x00000001);
        if (locationPingBuilder_ == null) {
          locationPing_ = skadistats.clarity.wire.common.proto.DotaCommonMessages.CDOTAMsg_LocationPing.getDefaultInstance();
        } else {
          locationPingBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000002);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return skadistats.clarity.wire.common.proto.DotaUserMessages.internal_static_CDOTAUserMsg_LocationPing_descriptor;
      }

      public skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_LocationPing getDefaultInstanceForType() {
        return skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_LocationPing.getDefaultInstance();
      }

      public skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_LocationPing build() {
        skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_LocationPing result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_LocationPing buildPartial() {
        skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_LocationPing result = new skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_LocationPing(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.playerId_ = playerId_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        if (locationPingBuilder_ == null) {
          result.locationPing_ = locationPing_;
        } else {
          result.locationPing_ = locationPingBuilder_.build();
        }
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_LocationPing) {
          return mergeFrom((skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_LocationPing)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_LocationPing other) {
        if (other == skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_LocationPing.getDefaultInstance()) return this;
        if (other.hasPlayerId()) {
          setPlayerId(other.getPlayerId());
        }
        if (other.hasLocationPing()) {
          mergeLocationPing(other.getLocationPing());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_LocationPing parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_LocationPing) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private int playerId_ ;
      /**
       * <code>optional uint32 player_id = 1;</code>
       */
      public boolean hasPlayerId() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>optional uint32 player_id = 1;</code>
       */
      public int getPlayerId() {
        return playerId_;
      }
      /**
       * <code>optional uint32 player_id = 1;</code>
       */
      public Builder setPlayerId(int value) {
        bitField0_ |= 0x00000001;
        playerId_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional uint32 player_id = 1;</code>
       */
      public Builder clearPlayerId() {
        bitField0_ = (bitField0_ & ~0x00000001);
        playerId_ = 0;
        onChanged();
        return this;
      }

      private skadistats.clarity.wire.common.proto.DotaCommonMessages.CDOTAMsg_LocationPing locationPing_ = skadistats.clarity.wire.common.proto.DotaCommonMessages.CDOTAMsg_LocationPing.getDefaultInstance();
      private com.google.protobuf.SingleFieldBuilder<
          skadistats.clarity.wire.common.proto.DotaCommonMessages.CDOTAMsg_LocationPing, skadistats.clarity.wire.common.proto.DotaCommonMessages.CDOTAMsg_LocationPing.Builder, skadistats.clarity.wire.common.proto.DotaCommonMessages.CDOTAMsg_LocationPingOrBuilder> locationPingBuilder_;
      /**
       * <code>optional .CDOTAMsg_LocationPing location_ping = 2;</code>
       */
      public boolean hasLocationPing() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>optional .CDOTAMsg_LocationPing location_ping = 2;</code>
       */
      public skadistats.clarity.wire.common.proto.DotaCommonMessages.CDOTAMsg_LocationPing getLocationPing() {
        if (locationPingBuilder_ == null) {
          return locationPing_;
        } else {
          return locationPingBuilder_.getMessage();
        }
      }
      /**
       * <code>optional .CDOTAMsg_LocationPing location_ping = 2;</code>
       */
      public Builder setLocationPing(skadistats.clarity.wire.common.proto.DotaCommonMessages.CDOTAMsg_LocationPing value) {
        if (locationPingBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          locationPing_ = value;
          onChanged();
        } else {
          locationPingBuilder_.setMessage(value);
        }
        bitField0_ |= 0x00000002;
        return this;
      }
      /**
       * <code>optional .CDOTAMsg_LocationPing location_ping = 2;</code>
       */
      public Builder setLocationPing(
          skadistats.clarity.wire.common.proto.DotaCommonMessages.CDOTAMsg_LocationPing.Builder builderForValue) {
        if (locationPingBuilder_ == null) {
          locationPing_ = builderForValue.build();
          onChanged();
        } else {
          locationPingBuilder_.setMessage(builderForValue.build());
        }
        bitField0_ |= 0x00000002;
        return this;
      }
      /**
       * <code>optional .CDOTAMsg_LocationPing location_ping = 2;</code>
       */
      public Builder mergeLocationPing(skadistats.clarity.wire.common.proto.DotaCommonMessages.CDOTAMsg_LocationPing value) {
        if (locationPingBuilder_ == null) {
          if (((bitField0_ & 0x00000002) == 0x00000002) &&
              locationPing_ != skadistats.clarity.wire.common.proto.DotaCommonMessages.CDOTAMsg_LocationPing.getDefaultInstance()) {
            locationPing_ =
              skadistats.clarity.wire.common.proto.DotaCommonMessages.CDOTAMsg_LocationPing.newBuilder(locationPing_).mergeFrom(value).buildPartial();
          } else {
            locationPing_ = value;
          }
          onChanged();
        } else {
          locationPingBuilder_.mergeFrom(value);
        }
        bitField0_ |= 0x00000002;
        return this;
      }
      /**
       * <code>optional .CDOTAMsg_LocationPing location_ping = 2;</code>
       */
      public Builder clearLocationPing() {
        if (locationPingBuilder_ == null) {
          locationPing_ = skadistats.clarity.wire.common.proto.DotaCommonMessages.CDOTAMsg_LocationPing.getDefaultInstance();
          onChanged();
        } else {
          locationPingBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000002);
        return this;
      }
      /**
       * <code>optional .CDOTAMsg_LocationPing location_ping = 2;</code>
       */
      public skadistats.clarity.wire.common.proto.DotaCommonMessages.CDOTAMsg_LocationPing.Builder getLocationPingBuilder() {
        bitField0_ |= 0x00000002;
        onChanged();
        return getLocationPingFieldBuilder().getBuilder();
      }
      /**
       * <code>optional .CDOTAMsg_LocationPing location_ping = 2;</code>
       */
      public skadistats.clarity.wire.common.proto.DotaCommonMessages.CDOTAMsg_LocationPingOrBuilder getLocationPingOrBuilder() {
        if (locationPingBuilder_ != null) {
          return locationPingBuilder_.getMessageOrBuilder();
        } else {
          return locationPing_;
        }
      }
      /**
       * <code>optional .CDOTAMsg_LocationPing location_ping = 2;</code>
       */
      private com.google.protobuf.SingleFieldBuilder<
          skadistats.clarity.wire.common.proto.DotaCommonMessages.CDOTAMsg_LocationPing, skadistats.clarity.wire.common.proto.DotaCommonMessages.CDOTAMsg_LocationPing.Builder, skadistats.clarity.wire.common.proto.DotaCommonMessages.CDOTAMsg_LocationPingOrBuilder> 
          getLocationPingFieldBuilder() {
        if (locationPingBuilder_ == null) {
          locationPingBuilder_ = new com.google.protobuf.SingleFieldBuilder<
              skadistats.clarity.wire.common.proto.DotaCommonMessages.CDOTAMsg_LocationPing, skadistats.clarity.wire.common.proto.DotaCommonMessages.CDOTAMsg_LocationPing.Builder, skadistats.clarity.wire.common.proto.DotaCommonMessages.CDOTAMsg_LocationPingOrBuilder>(
                  getLocationPing(),
                  getParentForChildren(),
                  isClean());
          locationPing_ = null;
        }
        return locationPingBuilder_;
      }

      // @@protoc_insertion_point(builder_scope:CDOTAUserMsg_LocationPing)
    }

    static {
      defaultInstance = new CDOTAUserMsg_LocationPing(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:CDOTAUserMsg_LocationPing)
  }

  public interface CDOTAUserMsg_ItemAlertOrBuilder extends
      // @@protoc_insertion_point(interface_extends:CDOTAUserMsg_ItemAlert)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>optional uint32 player_id = 1;</code>
     */
    boolean hasPlayerId();
    /**
     * <code>optional uint32 player_id = 1;</code>
     */
    int getPlayerId();

    /**
     * <code>optional .CDOTAMsg_ItemAlert item_alert = 2;</code>
     */
    boolean hasItemAlert();
    /**
     * <code>optional .CDOTAMsg_ItemAlert item_alert = 2;</code>
     */
    skadistats.clarity.wire.common.proto.DotaCommonMessages.CDOTAMsg_ItemAlert getItemAlert();
    /**
     * <code>optional .CDOTAMsg_ItemAlert item_alert = 2;</code>
     */
    skadistats.clarity.wire.common.proto.DotaCommonMessages.CDOTAMsg_ItemAlertOrBuilder getItemAlertOrBuilder();
  }
  /**
   * Protobuf type {@code CDOTAUserMsg_ItemAlert}
   */
  public static final class CDOTAUserMsg_ItemAlert extends
      com.google.protobuf.GeneratedMessage implements
      // @@protoc_insertion_point(message_implements:CDOTAUserMsg_ItemAlert)
      CDOTAUserMsg_ItemAlertOrBuilder {
    // Use CDOTAUserMsg_ItemAlert.newBuilder() to construct.
    private CDOTAUserMsg_ItemAlert(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private CDOTAUserMsg_ItemAlert(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final CDOTAUserMsg_ItemAlert defaultInstance;
    public static CDOTAUserMsg_ItemAlert getDefaultInstance() {
      return defaultInstance;
    }

    public CDOTAUserMsg_ItemAlert getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private CDOTAUserMsg_ItemAlert(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 8: {
              bitField0_ |= 0x00000001;
              playerId_ = input.readUInt32();
              break;
            }
            case 18: {
              skadistats.clarity.wire.common.proto.DotaCommonMessages.CDOTAMsg_ItemAlert.Builder subBuilder = null;
              if (((bitField0_ & 0x00000002) == 0x00000002)) {
                subBuilder = itemAlert_.toBuilder();
              }
              itemAlert_ = input.readMessage(skadistats.clarity.wire.common.proto.DotaCommonMessages.CDOTAMsg_ItemAlert.PARSER, extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(itemAlert_);
                itemAlert_ = subBuilder.buildPartial();
              }
              bitField0_ |= 0x00000002;
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return skadistats.clarity.wire.common.proto.DotaUserMessages.internal_static_CDOTAUserMsg_ItemAlert_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return skadistats.clarity.wire.common.proto.DotaUserMessages.internal_static_CDOTAUserMsg_ItemAlert_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_ItemAlert.class, skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_ItemAlert.Builder.class);
    }

    public static com.google.protobuf.Parser<CDOTAUserMsg_ItemAlert> PARSER =
        new com.google.protobuf.AbstractParser<CDOTAUserMsg_ItemAlert>() {
      public CDOTAUserMsg_ItemAlert parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new CDOTAUserMsg_ItemAlert(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<CDOTAUserMsg_ItemAlert> getParserForType() {
      return PARSER;
    }

    private int bitField0_;
    public static final int PLAYER_ID_FIELD_NUMBER = 1;
    private int playerId_;
    /**
     * <code>optional uint32 player_id = 1;</code>
     */
    public boolean hasPlayerId() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>optional uint32 player_id = 1;</code>
     */
    public int getPlayerId() {
      return playerId_;
    }

    public static final int ITEM_ALERT_FIELD_NUMBER = 2;
    private skadistats.clarity.wire.common.proto.DotaCommonMessages.CDOTAMsg_ItemAlert itemAlert_;
    /**
     * <code>optional .CDOTAMsg_ItemAlert item_alert = 2;</code>
     */
    public boolean hasItemAlert() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>optional .CDOTAMsg_ItemAlert item_alert = 2;</code>
     */
    public skadistats.clarity.wire.common.proto.DotaCommonMessages.CDOTAMsg_ItemAlert getItemAlert() {
      return itemAlert_;
    }
    /**
     * <code>optional .CDOTAMsg_ItemAlert item_alert = 2;</code>
     */
    public skadistats.clarity.wire.common.proto.DotaCommonMessages.CDOTAMsg_ItemAlertOrBuilder getItemAlertOrBuilder() {
      return itemAlert_;
    }

    private void initFields() {
      playerId_ = 0;
      itemAlert_ = skadistats.clarity.wire.common.proto.DotaCommonMessages.CDOTAMsg_ItemAlert.getDefaultInstance();
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeUInt32(1, playerId_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeMessage(2, itemAlert_);
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(1, playerId_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(2, itemAlert_);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_ItemAlert parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_ItemAlert parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_ItemAlert parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_ItemAlert parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_ItemAlert parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_ItemAlert parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_ItemAlert parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_ItemAlert parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_ItemAlert parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_ItemAlert parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_ItemAlert prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code CDOTAUserMsg_ItemAlert}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:CDOTAUserMsg_ItemAlert)
        skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_ItemAlertOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return skadistats.clarity.wire.common.proto.DotaUserMessages.internal_static_CDOTAUserMsg_ItemAlert_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return skadistats.clarity.wire.common.proto.DotaUserMessages.internal_static_CDOTAUserMsg_ItemAlert_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_ItemAlert.class, skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_ItemAlert.Builder.class);
      }

      // Construct using skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_ItemAlert.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
          getItemAlertFieldBuilder();
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        playerId_ = 0;
        bitField0_ = (bitField0_ & ~0x00000001);
        if (itemAlertBuilder_ == null) {
          itemAlert_ = skadistats.clarity.wire.common.proto.DotaCommonMessages.CDOTAMsg_ItemAlert.getDefaultInstance();
        } else {
          itemAlertBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000002);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return skadistats.clarity.wire.common.proto.DotaUserMessages.internal_static_CDOTAUserMsg_ItemAlert_descriptor;
      }

      public skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_ItemAlert getDefaultInstanceForType() {
        return skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_ItemAlert.getDefaultInstance();
      }

      public skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_ItemAlert build() {
        skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_ItemAlert result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_ItemAlert buildPartial() {
        skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_ItemAlert result = new skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_ItemAlert(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.playerId_ = playerId_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        if (itemAlertBuilder_ == null) {
          result.itemAlert_ = itemAlert_;
        } else {
          result.itemAlert_ = itemAlertBuilder_.build();
        }
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_ItemAlert) {
          return mergeFrom((skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_ItemAlert)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_ItemAlert other) {
        if (other == skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_ItemAlert.getDefaultInstance()) return this;
        if (other.hasPlayerId()) {
          setPlayerId(other.getPlayerId());
        }
        if (other.hasItemAlert()) {
          mergeItemAlert(other.getItemAlert());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_ItemAlert parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_ItemAlert) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private int playerId_ ;
      /**
       * <code>optional uint32 player_id = 1;</code>
       */
      public boolean hasPlayerId() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>optional uint32 player_id = 1;</code>
       */
      public int getPlayerId() {
        return playerId_;
      }
      /**
       * <code>optional uint32 player_id = 1;</code>
       */
      public Builder setPlayerId(int value) {
        bitField0_ |= 0x00000001;
        playerId_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional uint32 player_id = 1;</code>
       */
      public Builder clearPlayerId() {
        bitField0_ = (bitField0_ & ~0x00000001);
        playerId_ = 0;
        onChanged();
        return this;
      }

      private skadistats.clarity.wire.common.proto.DotaCommonMessages.CDOTAMsg_ItemAlert itemAlert_ = skadistats.clarity.wire.common.proto.DotaCommonMessages.CDOTAMsg_ItemAlert.getDefaultInstance();
      private com.google.protobuf.SingleFieldBuilder<
          skadistats.clarity.wire.common.proto.DotaCommonMessages.CDOTAMsg_ItemAlert, skadistats.clarity.wire.common.proto.DotaCommonMessages.CDOTAMsg_ItemAlert.Builder, skadistats.clarity.wire.common.proto.DotaCommonMessages.CDOTAMsg_ItemAlertOrBuilder> itemAlertBuilder_;
      /**
       * <code>optional .CDOTAMsg_ItemAlert item_alert = 2;</code>
       */
      public boolean hasItemAlert() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>optional .CDOTAMsg_ItemAlert item_alert = 2;</code>
       */
      public skadistats.clarity.wire.common.proto.DotaCommonMessages.CDOTAMsg_ItemAlert getItemAlert() {
        if (itemAlertBuilder_ == null) {
          return itemAlert_;
        } else {
          return itemAlertBuilder_.getMessage();
        }
      }
      /**
       * <code>optional .CDOTAMsg_ItemAlert item_alert = 2;</code>
       */
      public Builder setItemAlert(skadistats.clarity.wire.common.proto.DotaCommonMessages.CDOTAMsg_ItemAlert value) {
        if (itemAlertBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          itemAlert_ = value;
          onChanged();
        } else {
          itemAlertBuilder_.setMessage(value);
        }
        bitField0_ |= 0x00000002;
        return this;
      }
      /**
       * <code>optional .CDOTAMsg_ItemAlert item_alert = 2;</code>
       */
      public Builder setItemAlert(
          skadistats.clarity.wire.common.proto.DotaCommonMessages.CDOTAMsg_ItemAlert.Builder builderForValue) {
        if (itemAlertBuilder_ == null) {
          itemAlert_ = builderForValue.build();
          onChanged();
        } else {
          itemAlertBuilder_.setMessage(builderForValue.build());
        }
        bitField0_ |= 0x00000002;
        return this;
      }
      /**
       * <code>optional .CDOTAMsg_ItemAlert item_alert = 2;</code>
       */
      public Builder mergeItemAlert(skadistats.clarity.wire.common.proto.DotaCommonMessages.CDOTAMsg_ItemAlert value) {
        if (itemAlertBuilder_ == null) {
          if (((bitField0_ & 0x00000002) == 0x00000002) &&
              itemAlert_ != skadistats.clarity.wire.common.proto.DotaCommonMessages.CDOTAMsg_ItemAlert.getDefaultInstance()) {
            itemAlert_ =
              skadistats.clarity.wire.common.proto.DotaCommonMessages.CDOTAMsg_ItemAlert.newBuilder(itemAlert_).mergeFrom(value).buildPartial();
          } else {
            itemAlert_ = value;
          }
          onChanged();
        } else {
          itemAlertBuilder_.mergeFrom(value);
        }
        bitField0_ |= 0x00000002;
        return this;
      }
      /**
       * <code>optional .CDOTAMsg_ItemAlert item_alert = 2;</code>
       */
      public Builder clearItemAlert() {
        if (itemAlertBuilder_ == null) {
          itemAlert_ = skadistats.clarity.wire.common.proto.DotaCommonMessages.CDOTAMsg_ItemAlert.getDefaultInstance();
          onChanged();
        } else {
          itemAlertBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000002);
        return this;
      }
      /**
       * <code>optional .CDOTAMsg_ItemAlert item_alert = 2;</code>
       */
      public skadistats.clarity.wire.common.proto.DotaCommonMessages.CDOTAMsg_ItemAlert.Builder getItemAlertBuilder() {
        bitField0_ |= 0x00000002;
        onChanged();
        return getItemAlertFieldBuilder().getBuilder();
      }
      /**
       * <code>optional .CDOTAMsg_ItemAlert item_alert = 2;</code>
       */
      public skadistats.clarity.wire.common.proto.DotaCommonMessages.CDOTAMsg_ItemAlertOrBuilder getItemAlertOrBuilder() {
        if (itemAlertBuilder_ != null) {
          return itemAlertBuilder_.getMessageOrBuilder();
        } else {
          return itemAlert_;
        }
      }
      /**
       * <code>optional .CDOTAMsg_ItemAlert item_alert = 2;</code>
       */
      private com.google.protobuf.SingleFieldBuilder<
          skadistats.clarity.wire.common.proto.DotaCommonMessages.CDOTAMsg_ItemAlert, skadistats.clarity.wire.common.proto.DotaCommonMessages.CDOTAMsg_ItemAlert.Builder, skadistats.clarity.wire.common.proto.DotaCommonMessages.CDOTAMsg_ItemAlertOrBuilder> 
          getItemAlertFieldBuilder() {
        if (itemAlertBuilder_ == null) {
          itemAlertBuilder_ = new com.google.protobuf.SingleFieldBuilder<
              skadistats.clarity.wire.common.proto.DotaCommonMessages.CDOTAMsg_ItemAlert, skadistats.clarity.wire.common.proto.DotaCommonMessages.CDOTAMsg_ItemAlert.Builder, skadistats.clarity.wire.common.proto.DotaCommonMessages.CDOTAMsg_ItemAlertOrBuilder>(
                  getItemAlert(),
                  getParentForChildren(),
                  isClean());
          itemAlert_ = null;
        }
        return itemAlertBuilder_;
      }

      // @@protoc_insertion_point(builder_scope:CDOTAUserMsg_ItemAlert)
    }

    static {
      defaultInstance = new CDOTAUserMsg_ItemAlert(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:CDOTAUserMsg_ItemAlert)
  }

  public interface CDOTAUserMsg_EnemyItemAlertOrBuilder extends
      // @@protoc_insertion_point(interface_extends:CDOTAUserMsg_EnemyItemAlert)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>optional uint32 player_id = 1;</code>
     */
    boolean hasPlayerId();
    /**
     * <code>optional uint32 player_id = 1;</code>
     */
    int getPlayerId();

    /**
     * <code>optional uint32 target_player_id = 2;</code>
     */
    boolean hasTargetPlayerId();
    /**
     * <code>optional uint32 target_player_id = 2;</code>
     */
    int getTargetPlayerId();

    /**
     * <code>optional int32 itemid = 3;</code>
     */
    boolean hasItemid();
    /**
     * <code>optional int32 itemid = 3;</code>
     */
    int getItemid();

    /**
     * <code>optional uint32 rune_type = 4;</code>
     */
    boolean hasRuneType();
    /**
     * <code>optional uint32 rune_type = 4;</code>
     */
    int getRuneType();
  }
  /**
   * Protobuf type {@code CDOTAUserMsg_EnemyItemAlert}
   */
  public static final class CDOTAUserMsg_EnemyItemAlert extends
      com.google.protobuf.GeneratedMessage implements
      // @@protoc_insertion_point(message_implements:CDOTAUserMsg_EnemyItemAlert)
      CDOTAUserMsg_EnemyItemAlertOrBuilder {
    // Use CDOTAUserMsg_EnemyItemAlert.newBuilder() to construct.
    private CDOTAUserMsg_EnemyItemAlert(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private CDOTAUserMsg_EnemyItemAlert(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final CDOTAUserMsg_EnemyItemAlert defaultInstance;
    public static CDOTAUserMsg_EnemyItemAlert getDefaultInstance() {
      return defaultInstance;
    }

    public CDOTAUserMsg_EnemyItemAlert getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private CDOTAUserMsg_EnemyItemAlert(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 8: {
              bitField0_ |= 0x00000001;
              playerId_ = input.readUInt32();
              break;
            }
            case 16: {
              bitField0_ |= 0x00000002;
              targetPlayerId_ = input.readUInt32();
              break;
            }
            case 24: {
              bitField0_ |= 0x00000004;
              itemid_ = input.readInt32();
              break;
            }
            case 32: {
              bitField0_ |= 0x00000008;
              runeType_ = input.readUInt32();
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return skadistats.clarity.wire.common.proto.DotaUserMessages.internal_static_CDOTAUserMsg_EnemyItemAlert_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return skadistats.clarity.wire.common.proto.DotaUserMessages.internal_static_CDOTAUserMsg_EnemyItemAlert_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_EnemyItemAlert.class, skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_EnemyItemAlert.Builder.class);
    }

    public static com.google.protobuf.Parser<CDOTAUserMsg_EnemyItemAlert> PARSER =
        new com.google.protobuf.AbstractParser<CDOTAUserMsg_EnemyItemAlert>() {
      public CDOTAUserMsg_EnemyItemAlert parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new CDOTAUserMsg_EnemyItemAlert(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<CDOTAUserMsg_EnemyItemAlert> getParserForType() {
      return PARSER;
    }

    private int bitField0_;
    public static final int PLAYER_ID_FIELD_NUMBER = 1;
    private int playerId_;
    /**
     * <code>optional uint32 player_id = 1;</code>
     */
    public boolean hasPlayerId() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>optional uint32 player_id = 1;</code>
     */
    public int getPlayerId() {
      return playerId_;
    }

    public static final int TARGET_PLAYER_ID_FIELD_NUMBER = 2;
    private int targetPlayerId_;
    /**
     * <code>optional uint32 target_player_id = 2;</code>
     */
    public boolean hasTargetPlayerId() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>optional uint32 target_player_id = 2;</code>
     */
    public int getTargetPlayerId() {
      return targetPlayerId_;
    }

    public static final int ITEMID_FIELD_NUMBER = 3;
    private int itemid_;
    /**
     * <code>optional int32 itemid = 3;</code>
     */
    public boolean hasItemid() {
      return ((bitField0_ & 0x00000004) == 0x00000004);
    }
    /**
     * <code>optional int32 itemid = 3;</code>
     */
    public int getItemid() {
      return itemid_;
    }

    public static final int RUNE_TYPE_FIELD_NUMBER = 4;
    private int runeType_;
    /**
     * <code>optional uint32 rune_type = 4;</code>
     */
    public boolean hasRuneType() {
      return ((bitField0_ & 0x00000008) == 0x00000008);
    }
    /**
     * <code>optional uint32 rune_type = 4;</code>
     */
    public int getRuneType() {
      return runeType_;
    }

    private void initFields() {
      playerId_ = 0;
      targetPlayerId_ = 0;
      itemid_ = 0;
      runeType_ = 0;
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeUInt32(1, playerId_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeUInt32(2, targetPlayerId_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        output.writeInt32(3, itemid_);
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        output.writeUInt32(4, runeType_);
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(1, playerId_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(2, targetPlayerId_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(3, itemid_);
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(4, runeType_);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_EnemyItemAlert parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_EnemyItemAlert parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_EnemyItemAlert parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_EnemyItemAlert parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_EnemyItemAlert parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_EnemyItemAlert parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_EnemyItemAlert parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_EnemyItemAlert parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_EnemyItemAlert parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_EnemyItemAlert parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_EnemyItemAlert prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code CDOTAUserMsg_EnemyItemAlert}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:CDOTAUserMsg_EnemyItemAlert)
        skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_EnemyItemAlertOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return skadistats.clarity.wire.common.proto.DotaUserMessages.internal_static_CDOTAUserMsg_EnemyItemAlert_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return skadistats.clarity.wire.common.proto.DotaUserMessages.internal_static_CDOTAUserMsg_EnemyItemAlert_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_EnemyItemAlert.class, skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_EnemyItemAlert.Builder.class);
      }

      // Construct using skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_EnemyItemAlert.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        playerId_ = 0;
        bitField0_ = (bitField0_ & ~0x00000001);
        targetPlayerId_ = 0;
        bitField0_ = (bitField0_ & ~0x00000002);
        itemid_ = 0;
        bitField0_ = (bitField0_ & ~0x00000004);
        runeType_ = 0;
        bitField0_ = (bitField0_ & ~0x00000008);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return skadistats.clarity.wire.common.proto.DotaUserMessages.internal_static_CDOTAUserMsg_EnemyItemAlert_descriptor;
      }

      public skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_EnemyItemAlert getDefaultInstanceForType() {
        return skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_EnemyItemAlert.getDefaultInstance();
      }

      public skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_EnemyItemAlert build() {
        skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_EnemyItemAlert result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_EnemyItemAlert buildPartial() {
        skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_EnemyItemAlert result = new skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_EnemyItemAlert(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.playerId_ = playerId_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.targetPlayerId_ = targetPlayerId_;
        if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
          to_bitField0_ |= 0x00000004;
        }
        result.itemid_ = itemid_;
        if (((from_bitField0_ & 0x00000008) == 0x00000008)) {
          to_bitField0_ |= 0x00000008;
        }
        result.runeType_ = runeType_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_EnemyItemAlert) {
          return mergeFrom((skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_EnemyItemAlert)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_EnemyItemAlert other) {
        if (other == skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_EnemyItemAlert.getDefaultInstance()) return this;
        if (other.hasPlayerId()) {
          setPlayerId(other.getPlayerId());
        }
        if (other.hasTargetPlayerId()) {
          setTargetPlayerId(other.getTargetPlayerId());
        }
        if (other.hasItemid()) {
          setItemid(other.getItemid());
        }
        if (other.hasRuneType()) {
          setRuneType(other.getRuneType());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_EnemyItemAlert parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_EnemyItemAlert) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private int playerId_ ;
      /**
       * <code>optional uint32 player_id = 1;</code>
       */
      public boolean hasPlayerId() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>optional uint32 player_id = 1;</code>
       */
      public int getPlayerId() {
        return playerId_;
      }
      /**
       * <code>optional uint32 player_id = 1;</code>
       */
      public Builder setPlayerId(int value) {
        bitField0_ |= 0x00000001;
        playerId_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional uint32 player_id = 1;</code>
       */
      public Builder clearPlayerId() {
        bitField0_ = (bitField0_ & ~0x00000001);
        playerId_ = 0;
        onChanged();
        return this;
      }

      private int targetPlayerId_ ;
      /**
       * <code>optional uint32 target_player_id = 2;</code>
       */
      public boolean hasTargetPlayerId() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>optional uint32 target_player_id = 2;</code>
       */
      public int getTargetPlayerId() {
        return targetPlayerId_;
      }
      /**
       * <code>optional uint32 target_player_id = 2;</code>
       */
      public Builder setTargetPlayerId(int value) {
        bitField0_ |= 0x00000002;
        targetPlayerId_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional uint32 target_player_id = 2;</code>
       */
      public Builder clearTargetPlayerId() {
        bitField0_ = (bitField0_ & ~0x00000002);
        targetPlayerId_ = 0;
        onChanged();
        return this;
      }

      private int itemid_ ;
      /**
       * <code>optional int32 itemid = 3;</code>
       */
      public boolean hasItemid() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }
      /**
       * <code>optional int32 itemid = 3;</code>
       */
      public int getItemid() {
        return itemid_;
      }
      /**
       * <code>optional int32 itemid = 3;</code>
       */
      public Builder setItemid(int value) {
        bitField0_ |= 0x00000004;
        itemid_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 itemid = 3;</code>
       */
      public Builder clearItemid() {
        bitField0_ = (bitField0_ & ~0x00000004);
        itemid_ = 0;
        onChanged();
        return this;
      }

      private int runeType_ ;
      /**
       * <code>optional uint32 rune_type = 4;</code>
       */
      public boolean hasRuneType() {
        return ((bitField0_ & 0x00000008) == 0x00000008);
      }
      /**
       * <code>optional uint32 rune_type = 4;</code>
       */
      public int getRuneType() {
        return runeType_;
      }
      /**
       * <code>optional uint32 rune_type = 4;</code>
       */
      public Builder setRuneType(int value) {
        bitField0_ |= 0x00000008;
        runeType_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional uint32 rune_type = 4;</code>
       */
      public Builder clearRuneType() {
        bitField0_ = (bitField0_ & ~0x00000008);
        runeType_ = 0;
        onChanged();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:CDOTAUserMsg_EnemyItemAlert)
    }

    static {
      defaultInstance = new CDOTAUserMsg_EnemyItemAlert(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:CDOTAUserMsg_EnemyItemAlert)
  }

  public interface CDOTAUserMsg_ModifierAlertOrBuilder extends
      // @@protoc_insertion_point(interface_extends:CDOTAUserMsg_ModifierAlert)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>optional uint32 player_id = 1;</code>
     */
    boolean hasPlayerId();
    /**
     * <code>optional uint32 player_id = 1;</code>
     */
    int getPlayerId();

    /**
     * <code>optional string class_name = 2;</code>
     */
    boolean hasClassName();
    /**
     * <code>optional string class_name = 2;</code>
     */
    java.lang.String getClassName();
    /**
     * <code>optional string class_name = 2;</code>
     */
    com.google.protobuf.ByteString
        getClassNameBytes();

    /**
     * <code>optional uint32 stack_count = 3;</code>
     */
    boolean hasStackCount();
    /**
     * <code>optional uint32 stack_count = 3;</code>
     */
    int getStackCount();

    /**
     * <code>optional bool is_debuff = 4;</code>
     */
    boolean hasIsDebuff();
    /**
     * <code>optional bool is_debuff = 4;</code>
     */
    boolean getIsDebuff();

    /**
     * <code>optional uint32 target_entindex = 5;</code>
     */
    boolean hasTargetEntindex();
    /**
     * <code>optional uint32 target_entindex = 5;</code>
     */
    int getTargetEntindex();
  }
  /**
   * Protobuf type {@code CDOTAUserMsg_ModifierAlert}
   */
  public static final class CDOTAUserMsg_ModifierAlert extends
      com.google.protobuf.GeneratedMessage implements
      // @@protoc_insertion_point(message_implements:CDOTAUserMsg_ModifierAlert)
      CDOTAUserMsg_ModifierAlertOrBuilder {
    // Use CDOTAUserMsg_ModifierAlert.newBuilder() to construct.
    private CDOTAUserMsg_ModifierAlert(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private CDOTAUserMsg_ModifierAlert(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final CDOTAUserMsg_ModifierAlert defaultInstance;
    public static CDOTAUserMsg_ModifierAlert getDefaultInstance() {
      return defaultInstance;
    }

    public CDOTAUserMsg_ModifierAlert getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private CDOTAUserMsg_ModifierAlert(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 8: {
              bitField0_ |= 0x00000001;
              playerId_ = input.readUInt32();
              break;
            }
            case 18: {
              com.google.protobuf.ByteString bs = input.readBytes();
              bitField0_ |= 0x00000002;
              className_ = bs;
              break;
            }
            case 24: {
              bitField0_ |= 0x00000004;
              stackCount_ = input.readUInt32();
              break;
            }
            case 32: {
              bitField0_ |= 0x00000008;
              isDebuff_ = input.readBool();
              break;
            }
            case 40: {
              bitField0_ |= 0x00000010;
              targetEntindex_ = input.readUInt32();
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return skadistats.clarity.wire.common.proto.DotaUserMessages.internal_static_CDOTAUserMsg_ModifierAlert_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return skadistats.clarity.wire.common.proto.DotaUserMessages.internal_static_CDOTAUserMsg_ModifierAlert_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_ModifierAlert.class, skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_ModifierAlert.Builder.class);
    }

    public static com.google.protobuf.Parser<CDOTAUserMsg_ModifierAlert> PARSER =
        new com.google.protobuf.AbstractParser<CDOTAUserMsg_ModifierAlert>() {
      public CDOTAUserMsg_ModifierAlert parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new CDOTAUserMsg_ModifierAlert(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<CDOTAUserMsg_ModifierAlert> getParserForType() {
      return PARSER;
    }

    private int bitField0_;
    public static final int PLAYER_ID_FIELD_NUMBER = 1;
    private int playerId_;
    /**
     * <code>optional uint32 player_id = 1;</code>
     */
    public boolean hasPlayerId() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>optional uint32 player_id = 1;</code>
     */
    public int getPlayerId() {
      return playerId_;
    }

    public static final int CLASS_NAME_FIELD_NUMBER = 2;
    private java.lang.Object className_;
    /**
     * <code>optional string class_name = 2;</code>
     */
    public boolean hasClassName() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>optional string class_name = 2;</code>
     */
    public java.lang.String getClassName() {
      java.lang.Object ref = className_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          className_ = s;
        }
        return s;
      }
    }
    /**
     * <code>optional string class_name = 2;</code>
     */
    public com.google.protobuf.ByteString
        getClassNameBytes() {
      java.lang.Object ref = className_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        className_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int STACK_COUNT_FIELD_NUMBER = 3;
    private int stackCount_;
    /**
     * <code>optional uint32 stack_count = 3;</code>
     */
    public boolean hasStackCount() {
      return ((bitField0_ & 0x00000004) == 0x00000004);
    }
    /**
     * <code>optional uint32 stack_count = 3;</code>
     */
    public int getStackCount() {
      return stackCount_;
    }

    public static final int IS_DEBUFF_FIELD_NUMBER = 4;
    private boolean isDebuff_;
    /**
     * <code>optional bool is_debuff = 4;</code>
     */
    public boolean hasIsDebuff() {
      return ((bitField0_ & 0x00000008) == 0x00000008);
    }
    /**
     * <code>optional bool is_debuff = 4;</code>
     */
    public boolean getIsDebuff() {
      return isDebuff_;
    }

    public static final int TARGET_ENTINDEX_FIELD_NUMBER = 5;
    private int targetEntindex_;
    /**
     * <code>optional uint32 target_entindex = 5;</code>
     */
    public boolean hasTargetEntindex() {
      return ((bitField0_ & 0x00000010) == 0x00000010);
    }
    /**
     * <code>optional uint32 target_entindex = 5;</code>
     */
    public int getTargetEntindex() {
      return targetEntindex_;
    }

    private void initFields() {
      playerId_ = 0;
      className_ = "";
      stackCount_ = 0;
      isDebuff_ = false;
      targetEntindex_ = 0;
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeUInt32(1, playerId_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeBytes(2, getClassNameBytes());
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        output.writeUInt32(3, stackCount_);
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        output.writeBool(4, isDebuff_);
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        output.writeUInt32(5, targetEntindex_);
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(1, playerId_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(2, getClassNameBytes());
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(3, stackCount_);
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBoolSize(4, isDebuff_);
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(5, targetEntindex_);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_ModifierAlert parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_ModifierAlert parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_ModifierAlert parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_ModifierAlert parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_ModifierAlert parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_ModifierAlert parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_ModifierAlert parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_ModifierAlert parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_ModifierAlert parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_ModifierAlert parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_ModifierAlert prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code CDOTAUserMsg_ModifierAlert}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:CDOTAUserMsg_ModifierAlert)
        skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_ModifierAlertOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return skadistats.clarity.wire.common.proto.DotaUserMessages.internal_static_CDOTAUserMsg_ModifierAlert_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return skadistats.clarity.wire.common.proto.DotaUserMessages.internal_static_CDOTAUserMsg_ModifierAlert_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_ModifierAlert.class, skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_ModifierAlert.Builder.class);
      }

      // Construct using skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_ModifierAlert.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        playerId_ = 0;
        bitField0_ = (bitField0_ & ~0x00000001);
        className_ = "";
        bitField0_ = (bitField0_ & ~0x00000002);
        stackCount_ = 0;
        bitField0_ = (bitField0_ & ~0x00000004);
        isDebuff_ = false;
        bitField0_ = (bitField0_ & ~0x00000008);
        targetEntindex_ = 0;
        bitField0_ = (bitField0_ & ~0x00000010);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return skadistats.clarity.wire.common.proto.DotaUserMessages.internal_static_CDOTAUserMsg_ModifierAlert_descriptor;
      }

      public skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_ModifierAlert getDefaultInstanceForType() {
        return skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_ModifierAlert.getDefaultInstance();
      }

      public skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_ModifierAlert build() {
        skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_ModifierAlert result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_ModifierAlert buildPartial() {
        skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_ModifierAlert result = new skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_ModifierAlert(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.playerId_ = playerId_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.className_ = className_;
        if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
          to_bitField0_ |= 0x00000004;
        }
        result.stackCount_ = stackCount_;
        if (((from_bitField0_ & 0x00000008) == 0x00000008)) {
          to_bitField0_ |= 0x00000008;
        }
        result.isDebuff_ = isDebuff_;
        if (((from_bitField0_ & 0x00000010) == 0x00000010)) {
          to_bitField0_ |= 0x00000010;
        }
        result.targetEntindex_ = targetEntindex_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_ModifierAlert) {
          return mergeFrom((skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_ModifierAlert)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_ModifierAlert other) {
        if (other == skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_ModifierAlert.getDefaultInstance()) return this;
        if (other.hasPlayerId()) {
          setPlayerId(other.getPlayerId());
        }
        if (other.hasClassName()) {
          bitField0_ |= 0x00000002;
          className_ = other.className_;
          onChanged();
        }
        if (other.hasStackCount()) {
          setStackCount(other.getStackCount());
        }
        if (other.hasIsDebuff()) {
          setIsDebuff(other.getIsDebuff());
        }
        if (other.hasTargetEntindex()) {
          setTargetEntindex(other.getTargetEntindex());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_ModifierAlert parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_ModifierAlert) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private int playerId_ ;
      /**
       * <code>optional uint32 player_id = 1;</code>
       */
      public boolean hasPlayerId() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>optional uint32 player_id = 1;</code>
       */
      public int getPlayerId() {
        return playerId_;
      }
      /**
       * <code>optional uint32 player_id = 1;</code>
       */
      public Builder setPlayerId(int value) {
        bitField0_ |= 0x00000001;
        playerId_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional uint32 player_id = 1;</code>
       */
      public Builder clearPlayerId() {
        bitField0_ = (bitField0_ & ~0x00000001);
        playerId_ = 0;
        onChanged();
        return this;
      }

      private java.lang.Object className_ = "";
      /**
       * <code>optional string class_name = 2;</code>
       */
      public boolean hasClassName() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>optional string class_name = 2;</code>
       */
      public java.lang.String getClassName() {
        java.lang.Object ref = className_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          if (bs.isValidUtf8()) {
            className_ = s;
          }
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>optional string class_name = 2;</code>
       */
      public com.google.protobuf.ByteString
          getClassNameBytes() {
        java.lang.Object ref = className_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          className_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>optional string class_name = 2;</code>
       */
      public Builder setClassName(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000002;
        className_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional string class_name = 2;</code>
       */
      public Builder clearClassName() {
        bitField0_ = (bitField0_ & ~0x00000002);
        className_ = getDefaultInstance().getClassName();
        onChanged();
        return this;
      }
      /**
       * <code>optional string class_name = 2;</code>
       */
      public Builder setClassNameBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000002;
        className_ = value;
        onChanged();
        return this;
      }

      private int stackCount_ ;
      /**
       * <code>optional uint32 stack_count = 3;</code>
       */
      public boolean hasStackCount() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }
      /**
       * <code>optional uint32 stack_count = 3;</code>
       */
      public int getStackCount() {
        return stackCount_;
      }
      /**
       * <code>optional uint32 stack_count = 3;</code>
       */
      public Builder setStackCount(int value) {
        bitField0_ |= 0x00000004;
        stackCount_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional uint32 stack_count = 3;</code>
       */
      public Builder clearStackCount() {
        bitField0_ = (bitField0_ & ~0x00000004);
        stackCount_ = 0;
        onChanged();
        return this;
      }

      private boolean isDebuff_ ;
      /**
       * <code>optional bool is_debuff = 4;</code>
       */
      public boolean hasIsDebuff() {
        return ((bitField0_ & 0x00000008) == 0x00000008);
      }
      /**
       * <code>optional bool is_debuff = 4;</code>
       */
      public boolean getIsDebuff() {
        return isDebuff_;
      }
      /**
       * <code>optional bool is_debuff = 4;</code>
       */
      public Builder setIsDebuff(boolean value) {
        bitField0_ |= 0x00000008;
        isDebuff_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional bool is_debuff = 4;</code>
       */
      public Builder clearIsDebuff() {
        bitField0_ = (bitField0_ & ~0x00000008);
        isDebuff_ = false;
        onChanged();
        return this;
      }

      private int targetEntindex_ ;
      /**
       * <code>optional uint32 target_entindex = 5;</code>
       */
      public boolean hasTargetEntindex() {
        return ((bitField0_ & 0x00000010) == 0x00000010);
      }
      /**
       * <code>optional uint32 target_entindex = 5;</code>
       */
      public int getTargetEntindex() {
        return targetEntindex_;
      }
      /**
       * <code>optional uint32 target_entindex = 5;</code>
       */
      public Builder setTargetEntindex(int value) {
        bitField0_ |= 0x00000010;
        targetEntindex_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional uint32 target_entindex = 5;</code>
       */
      public Builder clearTargetEntindex() {
        bitField0_ = (bitField0_ & ~0x00000010);
        targetEntindex_ = 0;
        onChanged();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:CDOTAUserMsg_ModifierAlert)
    }

    static {
      defaultInstance = new CDOTAUserMsg_ModifierAlert(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:CDOTAUserMsg_ModifierAlert)
  }

  public interface CDOTAUserMsg_HPManaAlertOrBuilder extends
      // @@protoc_insertion_point(interface_extends:CDOTAUserMsg_HPManaAlert)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>optional uint32 player_id = 1;</code>
     */
    boolean hasPlayerId();
    /**
     * <code>optional uint32 player_id = 1;</code>
     */
    int getPlayerId();

    /**
     * <code>optional uint32 target_entindex = 2;</code>
     */
    boolean hasTargetEntindex();
    /**
     * <code>optional uint32 target_entindex = 2;</code>
     */
    int getTargetEntindex();
  }
  /**
   * Protobuf type {@code CDOTAUserMsg_HPManaAlert}
   */
  public static final class CDOTAUserMsg_HPManaAlert extends
      com.google.protobuf.GeneratedMessage implements
      // @@protoc_insertion_point(message_implements:CDOTAUserMsg_HPManaAlert)
      CDOTAUserMsg_HPManaAlertOrBuilder {
    // Use CDOTAUserMsg_HPManaAlert.newBuilder() to construct.
    private CDOTAUserMsg_HPManaAlert(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private CDOTAUserMsg_HPManaAlert(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final CDOTAUserMsg_HPManaAlert defaultInstance;
    public static CDOTAUserMsg_HPManaAlert getDefaultInstance() {
      return defaultInstance;
    }

    public CDOTAUserMsg_HPManaAlert getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private CDOTAUserMsg_HPManaAlert(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 8: {
              bitField0_ |= 0x00000001;
              playerId_ = input.readUInt32();
              break;
            }
            case 16: {
              bitField0_ |= 0x00000002;
              targetEntindex_ = input.readUInt32();
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return skadistats.clarity.wire.common.proto.DotaUserMessages.internal_static_CDOTAUserMsg_HPManaAlert_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return skadistats.clarity.wire.common.proto.DotaUserMessages.internal_static_CDOTAUserMsg_HPManaAlert_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_HPManaAlert.class, skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_HPManaAlert.Builder.class);
    }

    public static com.google.protobuf.Parser<CDOTAUserMsg_HPManaAlert> PARSER =
        new com.google.protobuf.AbstractParser<CDOTAUserMsg_HPManaAlert>() {
      public CDOTAUserMsg_HPManaAlert parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new CDOTAUserMsg_HPManaAlert(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<CDOTAUserMsg_HPManaAlert> getParserForType() {
      return PARSER;
    }

    private int bitField0_;
    public static final int PLAYER_ID_FIELD_NUMBER = 1;
    private int playerId_;
    /**
     * <code>optional uint32 player_id = 1;</code>
     */
    public boolean hasPlayerId() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>optional uint32 player_id = 1;</code>
     */
    public int getPlayerId() {
      return playerId_;
    }

    public static final int TARGET_ENTINDEX_FIELD_NUMBER = 2;
    private int targetEntindex_;
    /**
     * <code>optional uint32 target_entindex = 2;</code>
     */
    public boolean hasTargetEntindex() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>optional uint32 target_entindex = 2;</code>
     */
    public int getTargetEntindex() {
      return targetEntindex_;
    }

    private void initFields() {
      playerId_ = 0;
      targetEntindex_ = 0;
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeUInt32(1, playerId_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeUInt32(2, targetEntindex_);
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(1, playerId_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(2, targetEntindex_);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_HPManaAlert parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_HPManaAlert parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_HPManaAlert parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_HPManaAlert parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_HPManaAlert parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_HPManaAlert parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_HPManaAlert parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_HPManaAlert parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_HPManaAlert parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_HPManaAlert parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_HPManaAlert prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code CDOTAUserMsg_HPManaAlert}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:CDOTAUserMsg_HPManaAlert)
        skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_HPManaAlertOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return skadistats.clarity.wire.common.proto.DotaUserMessages.internal_static_CDOTAUserMsg_HPManaAlert_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return skadistats.clarity.wire.common.proto.DotaUserMessages.internal_static_CDOTAUserMsg_HPManaAlert_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_HPManaAlert.class, skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_HPManaAlert.Builder.class);
      }

      // Construct using skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_HPManaAlert.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        playerId_ = 0;
        bitField0_ = (bitField0_ & ~0x00000001);
        targetEntindex_ = 0;
        bitField0_ = (bitField0_ & ~0x00000002);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return skadistats.clarity.wire.common.proto.DotaUserMessages.internal_static_CDOTAUserMsg_HPManaAlert_descriptor;
      }

      public skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_HPManaAlert getDefaultInstanceForType() {
        return skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_HPManaAlert.getDefaultInstance();
      }

      public skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_HPManaAlert build() {
        skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_HPManaAlert result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_HPManaAlert buildPartial() {
        skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_HPManaAlert result = new skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_HPManaAlert(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.playerId_ = playerId_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.targetEntindex_ = targetEntindex_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_HPManaAlert) {
          return mergeFrom((skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_HPManaAlert)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_HPManaAlert other) {
        if (other == skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_HPManaAlert.getDefaultInstance()) return this;
        if (other.hasPlayerId()) {
          setPlayerId(other.getPlayerId());
        }
        if (other.hasTargetEntindex()) {
          setTargetEntindex(other.getTargetEntindex());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_HPManaAlert parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_HPManaAlert) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private int playerId_ ;
      /**
       * <code>optional uint32 player_id = 1;</code>
       */
      public boolean hasPlayerId() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>optional uint32 player_id = 1;</code>
       */
      public int getPlayerId() {
        return playerId_;
      }
      /**
       * <code>optional uint32 player_id = 1;</code>
       */
      public Builder setPlayerId(int value) {
        bitField0_ |= 0x00000001;
        playerId_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional uint32 player_id = 1;</code>
       */
      public Builder clearPlayerId() {
        bitField0_ = (bitField0_ & ~0x00000001);
        playerId_ = 0;
        onChanged();
        return this;
      }

      private int targetEntindex_ ;
      /**
       * <code>optional uint32 target_entindex = 2;</code>
       */
      public boolean hasTargetEntindex() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>optional uint32 target_entindex = 2;</code>
       */
      public int getTargetEntindex() {
        return targetEntindex_;
      }
      /**
       * <code>optional uint32 target_entindex = 2;</code>
       */
      public Builder setTargetEntindex(int value) {
        bitField0_ |= 0x00000002;
        targetEntindex_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional uint32 target_entindex = 2;</code>
       */
      public Builder clearTargetEntindex() {
        bitField0_ = (bitField0_ & ~0x00000002);
        targetEntindex_ = 0;
        onChanged();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:CDOTAUserMsg_HPManaAlert)
    }

    static {
      defaultInstance = new CDOTAUserMsg_HPManaAlert(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:CDOTAUserMsg_HPManaAlert)
  }

  public interface CDOTAUserMsg_GlyphAlertOrBuilder extends
      // @@protoc_insertion_point(interface_extends:CDOTAUserMsg_GlyphAlert)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>optional uint32 player_id = 1;</code>
     */
    boolean hasPlayerId();
    /**
     * <code>optional uint32 player_id = 1;</code>
     */
    int getPlayerId();

    /**
     * <code>optional bool negative = 2;</code>
     */
    boolean hasNegative();
    /**
     * <code>optional bool negative = 2;</code>
     */
    boolean getNegative();
  }
  /**
   * Protobuf type {@code CDOTAUserMsg_GlyphAlert}
   */
  public static final class CDOTAUserMsg_GlyphAlert extends
      com.google.protobuf.GeneratedMessage implements
      // @@protoc_insertion_point(message_implements:CDOTAUserMsg_GlyphAlert)
      CDOTAUserMsg_GlyphAlertOrBuilder {
    // Use CDOTAUserMsg_GlyphAlert.newBuilder() to construct.
    private CDOTAUserMsg_GlyphAlert(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private CDOTAUserMsg_GlyphAlert(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final CDOTAUserMsg_GlyphAlert defaultInstance;
    public static CDOTAUserMsg_GlyphAlert getDefaultInstance() {
      return defaultInstance;
    }

    public CDOTAUserMsg_GlyphAlert getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private CDOTAUserMsg_GlyphAlert(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 8: {
              bitField0_ |= 0x00000001;
              playerId_ = input.readUInt32();
              break;
            }
            case 16: {
              bitField0_ |= 0x00000002;
              negative_ = input.readBool();
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return skadistats.clarity.wire.common.proto.DotaUserMessages.internal_static_CDOTAUserMsg_GlyphAlert_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return skadistats.clarity.wire.common.proto.DotaUserMessages.internal_static_CDOTAUserMsg_GlyphAlert_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_GlyphAlert.class, skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_GlyphAlert.Builder.class);
    }

    public static com.google.protobuf.Parser<CDOTAUserMsg_GlyphAlert> PARSER =
        new com.google.protobuf.AbstractParser<CDOTAUserMsg_GlyphAlert>() {
      public CDOTAUserMsg_GlyphAlert parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new CDOTAUserMsg_GlyphAlert(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<CDOTAUserMsg_GlyphAlert> getParserForType() {
      return PARSER;
    }

    private int bitField0_;
    public static final int PLAYER_ID_FIELD_NUMBER = 1;
    private int playerId_;
    /**
     * <code>optional uint32 player_id = 1;</code>
     */
    public boolean hasPlayerId() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>optional uint32 player_id = 1;</code>
     */
    public int getPlayerId() {
      return playerId_;
    }

    public static final int NEGATIVE_FIELD_NUMBER = 2;
    private boolean negative_;
    /**
     * <code>optional bool negative = 2;</code>
     */
    public boolean hasNegative() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>optional bool negative = 2;</code>
     */
    public boolean getNegative() {
      return negative_;
    }

    private void initFields() {
      playerId_ = 0;
      negative_ = false;
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeUInt32(1, playerId_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeBool(2, negative_);
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(1, playerId_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBoolSize(2, negative_);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_GlyphAlert parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_GlyphAlert parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_GlyphAlert parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_GlyphAlert parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_GlyphAlert parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_GlyphAlert parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_GlyphAlert parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_GlyphAlert parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_GlyphAlert parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_GlyphAlert parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_GlyphAlert prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code CDOTAUserMsg_GlyphAlert}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:CDOTAUserMsg_GlyphAlert)
        skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_GlyphAlertOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return skadistats.clarity.wire.common.proto.DotaUserMessages.internal_static_CDOTAUserMsg_GlyphAlert_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return skadistats.clarity.wire.common.proto.DotaUserMessages.internal_static_CDOTAUserMsg_GlyphAlert_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_GlyphAlert.class, skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_GlyphAlert.Builder.class);
      }

      // Construct using skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_GlyphAlert.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        playerId_ = 0;
        bitField0_ = (bitField0_ & ~0x00000001);
        negative_ = false;
        bitField0_ = (bitField0_ & ~0x00000002);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return skadistats.clarity.wire.common.proto.DotaUserMessages.internal_static_CDOTAUserMsg_GlyphAlert_descriptor;
      }

      public skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_GlyphAlert getDefaultInstanceForType() {
        return skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_GlyphAlert.getDefaultInstance();
      }

      public skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_GlyphAlert build() {
        skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_GlyphAlert result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_GlyphAlert buildPartial() {
        skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_GlyphAlert result = new skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_GlyphAlert(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.playerId_ = playerId_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.negative_ = negative_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_GlyphAlert) {
          return mergeFrom((skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_GlyphAlert)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_GlyphAlert other) {
        if (other == skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_GlyphAlert.getDefaultInstance()) return this;
        if (other.hasPlayerId()) {
          setPlayerId(other.getPlayerId());
        }
        if (other.hasNegative()) {
          setNegative(other.getNegative());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_GlyphAlert parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_GlyphAlert) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private int playerId_ ;
      /**
       * <code>optional uint32 player_id = 1;</code>
       */
      public boolean hasPlayerId() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>optional uint32 player_id = 1;</code>
       */
      public int getPlayerId() {
        return playerId_;
      }
      /**
       * <code>optional uint32 player_id = 1;</code>
       */
      public Builder setPlayerId(int value) {
        bitField0_ |= 0x00000001;
        playerId_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional uint32 player_id = 1;</code>
       */
      public Builder clearPlayerId() {
        bitField0_ = (bitField0_ & ~0x00000001);
        playerId_ = 0;
        onChanged();
        return this;
      }

      private boolean negative_ ;
      /**
       * <code>optional bool negative = 2;</code>
       */
      public boolean hasNegative() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>optional bool negative = 2;</code>
       */
      public boolean getNegative() {
        return negative_;
      }
      /**
       * <code>optional bool negative = 2;</code>
       */
      public Builder setNegative(boolean value) {
        bitField0_ |= 0x00000002;
        negative_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional bool negative = 2;</code>
       */
      public Builder clearNegative() {
        bitField0_ = (bitField0_ & ~0x00000002);
        negative_ = false;
        onChanged();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:CDOTAUserMsg_GlyphAlert)
    }

    static {
      defaultInstance = new CDOTAUserMsg_GlyphAlert(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:CDOTAUserMsg_GlyphAlert)
  }

  public interface CDOTAUserMsg_WillPurchaseAlertOrBuilder extends
      // @@protoc_insertion_point(interface_extends:CDOTAUserMsg_WillPurchaseAlert)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>optional int32 itemid = 1;</code>
     */
    boolean hasItemid();
    /**
     * <code>optional int32 itemid = 1;</code>
     */
    int getItemid();

    /**
     * <code>optional int32 player_id = 2;</code>
     */
    boolean hasPlayerId();
    /**
     * <code>optional int32 player_id = 2;</code>
     */
    int getPlayerId();

    /**
     * <code>optional uint32 gold_remaining = 3;</code>
     */
    boolean hasGoldRemaining();
    /**
     * <code>optional uint32 gold_remaining = 3;</code>
     */
    int getGoldRemaining();
  }
  /**
   * Protobuf type {@code CDOTAUserMsg_WillPurchaseAlert}
   */
  public static final class CDOTAUserMsg_WillPurchaseAlert extends
      com.google.protobuf.GeneratedMessage implements
      // @@protoc_insertion_point(message_implements:CDOTAUserMsg_WillPurchaseAlert)
      CDOTAUserMsg_WillPurchaseAlertOrBuilder {
    // Use CDOTAUserMsg_WillPurchaseAlert.newBuilder() to construct.
    private CDOTAUserMsg_WillPurchaseAlert(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private CDOTAUserMsg_WillPurchaseAlert(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final CDOTAUserMsg_WillPurchaseAlert defaultInstance;
    public static CDOTAUserMsg_WillPurchaseAlert getDefaultInstance() {
      return defaultInstance;
    }

    public CDOTAUserMsg_WillPurchaseAlert getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private CDOTAUserMsg_WillPurchaseAlert(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 8: {
              bitField0_ |= 0x00000001;
              itemid_ = input.readInt32();
              break;
            }
            case 16: {
              bitField0_ |= 0x00000002;
              playerId_ = input.readInt32();
              break;
            }
            case 24: {
              bitField0_ |= 0x00000004;
              goldRemaining_ = input.readUInt32();
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return skadistats.clarity.wire.common.proto.DotaUserMessages.internal_static_CDOTAUserMsg_WillPurchaseAlert_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return skadistats.clarity.wire.common.proto.DotaUserMessages.internal_static_CDOTAUserMsg_WillPurchaseAlert_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_WillPurchaseAlert.class, skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_WillPurchaseAlert.Builder.class);
    }

    public static com.google.protobuf.Parser<CDOTAUserMsg_WillPurchaseAlert> PARSER =
        new com.google.protobuf.AbstractParser<CDOTAUserMsg_WillPurchaseAlert>() {
      public CDOTAUserMsg_WillPurchaseAlert parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new CDOTAUserMsg_WillPurchaseAlert(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<CDOTAUserMsg_WillPurchaseAlert> getParserForType() {
      return PARSER;
    }

    private int bitField0_;
    public static final int ITEMID_FIELD_NUMBER = 1;
    private int itemid_;
    /**
     * <code>optional int32 itemid = 1;</code>
     */
    public boolean hasItemid() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>optional int32 itemid = 1;</code>
     */
    public int getItemid() {
      return itemid_;
    }

    public static final int PLAYER_ID_FIELD_NUMBER = 2;
    private int playerId_;
    /**
     * <code>optional int32 player_id = 2;</code>
     */
    public boolean hasPlayerId() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>optional int32 player_id = 2;</code>
     */
    public int getPlayerId() {
      return playerId_;
    }

    public static final int GOLD_REMAINING_FIELD_NUMBER = 3;
    private int goldRemaining_;
    /**
     * <code>optional uint32 gold_remaining = 3;</code>
     */
    public boolean hasGoldRemaining() {
      return ((bitField0_ & 0x00000004) == 0x00000004);
    }
    /**
     * <code>optional uint32 gold_remaining = 3;</code>
     */
    public int getGoldRemaining() {
      return goldRemaining_;
    }

    private void initFields() {
      itemid_ = 0;
      playerId_ = 0;
      goldRemaining_ = 0;
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeInt32(1, itemid_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeInt32(2, playerId_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        output.writeUInt32(3, goldRemaining_);
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(1, itemid_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(2, playerId_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(3, goldRemaining_);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_WillPurchaseAlert parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_WillPurchaseAlert parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_WillPurchaseAlert parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_WillPurchaseAlert parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_WillPurchaseAlert parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_WillPurchaseAlert parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_WillPurchaseAlert parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_WillPurchaseAlert parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_WillPurchaseAlert parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_WillPurchaseAlert parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_WillPurchaseAlert prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code CDOTAUserMsg_WillPurchaseAlert}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:CDOTAUserMsg_WillPurchaseAlert)
        skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_WillPurchaseAlertOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return skadistats.clarity.wire.common.proto.DotaUserMessages.internal_static_CDOTAUserMsg_WillPurchaseAlert_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return skadistats.clarity.wire.common.proto.DotaUserMessages.internal_static_CDOTAUserMsg_WillPurchaseAlert_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_WillPurchaseAlert.class, skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_WillPurchaseAlert.Builder.class);
      }

      // Construct using skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_WillPurchaseAlert.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        itemid_ = 0;
        bitField0_ = (bitField0_ & ~0x00000001);
        playerId_ = 0;
        bitField0_ = (bitField0_ & ~0x00000002);
        goldRemaining_ = 0;
        bitField0_ = (bitField0_ & ~0x00000004);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return skadistats.clarity.wire.common.proto.DotaUserMessages.internal_static_CDOTAUserMsg_WillPurchaseAlert_descriptor;
      }

      public skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_WillPurchaseAlert getDefaultInstanceForType() {
        return skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_WillPurchaseAlert.getDefaultInstance();
      }

      public skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_WillPurchaseAlert build() {
        skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_WillPurchaseAlert result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_WillPurchaseAlert buildPartial() {
        skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_WillPurchaseAlert result = new skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_WillPurchaseAlert(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.itemid_ = itemid_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.playerId_ = playerId_;
        if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
          to_bitField0_ |= 0x00000004;
        }
        result.goldRemaining_ = goldRemaining_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_WillPurchaseAlert) {
          return mergeFrom((skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_WillPurchaseAlert)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_WillPurchaseAlert other) {
        if (other == skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_WillPurchaseAlert.getDefaultInstance()) return this;
        if (other.hasItemid()) {
          setItemid(other.getItemid());
        }
        if (other.hasPlayerId()) {
          setPlayerId(other.getPlayerId());
        }
        if (other.hasGoldRemaining()) {
          setGoldRemaining(other.getGoldRemaining());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_WillPurchaseAlert parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_WillPurchaseAlert) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private int itemid_ ;
      /**
       * <code>optional int32 itemid = 1;</code>
       */
      public boolean hasItemid() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>optional int32 itemid = 1;</code>
       */
      public int getItemid() {
        return itemid_;
      }
      /**
       * <code>optional int32 itemid = 1;</code>
       */
      public Builder setItemid(int value) {
        bitField0_ |= 0x00000001;
        itemid_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 itemid = 1;</code>
       */
      public Builder clearItemid() {
        bitField0_ = (bitField0_ & ~0x00000001);
        itemid_ = 0;
        onChanged();
        return this;
      }

      private int playerId_ ;
      /**
       * <code>optional int32 player_id = 2;</code>
       */
      public boolean hasPlayerId() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>optional int32 player_id = 2;</code>
       */
      public int getPlayerId() {
        return playerId_;
      }
      /**
       * <code>optional int32 player_id = 2;</code>
       */
      public Builder setPlayerId(int value) {
        bitField0_ |= 0x00000002;
        playerId_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 player_id = 2;</code>
       */
      public Builder clearPlayerId() {
        bitField0_ = (bitField0_ & ~0x00000002);
        playerId_ = 0;
        onChanged();
        return this;
      }

      private int goldRemaining_ ;
      /**
       * <code>optional uint32 gold_remaining = 3;</code>
       */
      public boolean hasGoldRemaining() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }
      /**
       * <code>optional uint32 gold_remaining = 3;</code>
       */
      public int getGoldRemaining() {
        return goldRemaining_;
      }
      /**
       * <code>optional uint32 gold_remaining = 3;</code>
       */
      public Builder setGoldRemaining(int value) {
        bitField0_ |= 0x00000004;
        goldRemaining_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional uint32 gold_remaining = 3;</code>
       */
      public Builder clearGoldRemaining() {
        bitField0_ = (bitField0_ & ~0x00000004);
        goldRemaining_ = 0;
        onChanged();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:CDOTAUserMsg_WillPurchaseAlert)
    }

    static {
      defaultInstance = new CDOTAUserMsg_WillPurchaseAlert(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:CDOTAUserMsg_WillPurchaseAlert)
  }

  public interface CDOTAUserMsg_BuyBackStateAlertOrBuilder extends
      // @@protoc_insertion_point(interface_extends:CDOTAUserMsg_BuyBackStateAlert)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>optional int32 player_id = 1;</code>
     */
    boolean hasPlayerId();
    /**
     * <code>optional int32 player_id = 1;</code>
     */
    int getPlayerId();
  }
  /**
   * Protobuf type {@code CDOTAUserMsg_BuyBackStateAlert}
   */
  public static final class CDOTAUserMsg_BuyBackStateAlert extends
      com.google.protobuf.GeneratedMessage implements
      // @@protoc_insertion_point(message_implements:CDOTAUserMsg_BuyBackStateAlert)
      CDOTAUserMsg_BuyBackStateAlertOrBuilder {
    // Use CDOTAUserMsg_BuyBackStateAlert.newBuilder() to construct.
    private CDOTAUserMsg_BuyBackStateAlert(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private CDOTAUserMsg_BuyBackStateAlert(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final CDOTAUserMsg_BuyBackStateAlert defaultInstance;
    public static CDOTAUserMsg_BuyBackStateAlert getDefaultInstance() {
      return defaultInstance;
    }

    public CDOTAUserMsg_BuyBackStateAlert getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private CDOTAUserMsg_BuyBackStateAlert(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 8: {
              bitField0_ |= 0x00000001;
              playerId_ = input.readInt32();
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return skadistats.clarity.wire.common.proto.DotaUserMessages.internal_static_CDOTAUserMsg_BuyBackStateAlert_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return skadistats.clarity.wire.common.proto.DotaUserMessages.internal_static_CDOTAUserMsg_BuyBackStateAlert_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_BuyBackStateAlert.class, skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_BuyBackStateAlert.Builder.class);
    }

    public static com.google.protobuf.Parser<CDOTAUserMsg_BuyBackStateAlert> PARSER =
        new com.google.protobuf.AbstractParser<CDOTAUserMsg_BuyBackStateAlert>() {
      public CDOTAUserMsg_BuyBackStateAlert parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new CDOTAUserMsg_BuyBackStateAlert(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<CDOTAUserMsg_BuyBackStateAlert> getParserForType() {
      return PARSER;
    }

    private int bitField0_;
    public static final int PLAYER_ID_FIELD_NUMBER = 1;
    private int playerId_;
    /**
     * <code>optional int32 player_id = 1;</code>
     */
    public boolean hasPlayerId() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>optional int32 player_id = 1;</code>
     */
    public int getPlayerId() {
      return playerId_;
    }

    private void initFields() {
      playerId_ = 0;
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeInt32(1, playerId_);
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(1, playerId_);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_BuyBackStateAlert parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_BuyBackStateAlert parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_BuyBackStateAlert parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_BuyBackStateAlert parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_BuyBackStateAlert parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_BuyBackStateAlert parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_BuyBackStateAlert parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_BuyBackStateAlert parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_BuyBackStateAlert parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_BuyBackStateAlert parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_BuyBackStateAlert prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code CDOTAUserMsg_BuyBackStateAlert}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:CDOTAUserMsg_BuyBackStateAlert)
        skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_BuyBackStateAlertOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return skadistats.clarity.wire.common.proto.DotaUserMessages.internal_static_CDOTAUserMsg_BuyBackStateAlert_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return skadistats.clarity.wire.common.proto.DotaUserMessages.internal_static_CDOTAUserMsg_BuyBackStateAlert_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_BuyBackStateAlert.class, skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_BuyBackStateAlert.Builder.class);
      }

      // Construct using skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_BuyBackStateAlert.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        playerId_ = 0;
        bitField0_ = (bitField0_ & ~0x00000001);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return skadistats.clarity.wire.common.proto.DotaUserMessages.internal_static_CDOTAUserMsg_BuyBackStateAlert_descriptor;
      }

      public skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_BuyBackStateAlert getDefaultInstanceForType() {
        return skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_BuyBackStateAlert.getDefaultInstance();
      }

      public skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_BuyBackStateAlert build() {
        skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_BuyBackStateAlert result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_BuyBackStateAlert buildPartial() {
        skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_BuyBackStateAlert result = new skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_BuyBackStateAlert(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.playerId_ = playerId_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_BuyBackStateAlert) {
          return mergeFrom((skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_BuyBackStateAlert)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_BuyBackStateAlert other) {
        if (other == skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_BuyBackStateAlert.getDefaultInstance()) return this;
        if (other.hasPlayerId()) {
          setPlayerId(other.getPlayerId());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_BuyBackStateAlert parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_BuyBackStateAlert) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private int playerId_ ;
      /**
       * <code>optional int32 player_id = 1;</code>
       */
      public boolean hasPlayerId() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>optional int32 player_id = 1;</code>
       */
      public int getPlayerId() {
        return playerId_;
      }
      /**
       * <code>optional int32 player_id = 1;</code>
       */
      public Builder setPlayerId(int value) {
        bitField0_ |= 0x00000001;
        playerId_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 player_id = 1;</code>
       */
      public Builder clearPlayerId() {
        bitField0_ = (bitField0_ & ~0x00000001);
        playerId_ = 0;
        onChanged();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:CDOTAUserMsg_BuyBackStateAlert)
    }

    static {
      defaultInstance = new CDOTAUserMsg_BuyBackStateAlert(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:CDOTAUserMsg_BuyBackStateAlert)
  }

  public interface CDOTAUserMsg_QuickBuyAlertOrBuilder extends
      // @@protoc_insertion_point(interface_extends:CDOTAUserMsg_QuickBuyAlert)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>optional int32 player_id = 1;</code>
     */
    boolean hasPlayerId();
    /**
     * <code>optional int32 player_id = 1;</code>
     */
    int getPlayerId();

    /**
     * <code>optional int32 itemid = 2;</code>
     */
    boolean hasItemid();
    /**
     * <code>optional int32 itemid = 2;</code>
     */
    int getItemid();

    /**
     * <code>optional int32 gold_required = 3;</code>
     */
    boolean hasGoldRequired();
    /**
     * <code>optional int32 gold_required = 3;</code>
     */
    int getGoldRequired();
  }
  /**
   * Protobuf type {@code CDOTAUserMsg_QuickBuyAlert}
   */
  public static final class CDOTAUserMsg_QuickBuyAlert extends
      com.google.protobuf.GeneratedMessage implements
      // @@protoc_insertion_point(message_implements:CDOTAUserMsg_QuickBuyAlert)
      CDOTAUserMsg_QuickBuyAlertOrBuilder {
    // Use CDOTAUserMsg_QuickBuyAlert.newBuilder() to construct.
    private CDOTAUserMsg_QuickBuyAlert(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private CDOTAUserMsg_QuickBuyAlert(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final CDOTAUserMsg_QuickBuyAlert defaultInstance;
    public static CDOTAUserMsg_QuickBuyAlert getDefaultInstance() {
      return defaultInstance;
    }

    public CDOTAUserMsg_QuickBuyAlert getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private CDOTAUserMsg_QuickBuyAlert(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 8: {
              bitField0_ |= 0x00000001;
              playerId_ = input.readInt32();
              break;
            }
            case 16: {
              bitField0_ |= 0x00000002;
              itemid_ = input.readInt32();
              break;
            }
            case 24: {
              bitField0_ |= 0x00000004;
              goldRequired_ = input.readInt32();
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return skadistats.clarity.wire.common.proto.DotaUserMessages.internal_static_CDOTAUserMsg_QuickBuyAlert_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return skadistats.clarity.wire.common.proto.DotaUserMessages.internal_static_CDOTAUserMsg_QuickBuyAlert_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_QuickBuyAlert.class, skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_QuickBuyAlert.Builder.class);
    }

    public static com.google.protobuf.Parser<CDOTAUserMsg_QuickBuyAlert> PARSER =
        new com.google.protobuf.AbstractParser<CDOTAUserMsg_QuickBuyAlert>() {
      public CDOTAUserMsg_QuickBuyAlert parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new CDOTAUserMsg_QuickBuyAlert(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<CDOTAUserMsg_QuickBuyAlert> getParserForType() {
      return PARSER;
    }

    private int bitField0_;
    public static final int PLAYER_ID_FIELD_NUMBER = 1;
    private int playerId_;
    /**
     * <code>optional int32 player_id = 1;</code>
     */
    public boolean hasPlayerId() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>optional int32 player_id = 1;</code>
     */
    public int getPlayerId() {
      return playerId_;
    }

    public static final int ITEMID_FIELD_NUMBER = 2;
    private int itemid_;
    /**
     * <code>optional int32 itemid = 2;</code>
     */
    public boolean hasItemid() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>optional int32 itemid = 2;</code>
     */
    public int getItemid() {
      return itemid_;
    }

    public static final int GOLD_REQUIRED_FIELD_NUMBER = 3;
    private int goldRequired_;
    /**
     * <code>optional int32 gold_required = 3;</code>
     */
    public boolean hasGoldRequired() {
      return ((bitField0_ & 0x00000004) == 0x00000004);
    }
    /**
     * <code>optional int32 gold_required = 3;</code>
     */
    public int getGoldRequired() {
      return goldRequired_;
    }

    private void initFields() {
      playerId_ = 0;
      itemid_ = 0;
      goldRequired_ = 0;
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeInt32(1, playerId_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeInt32(2, itemid_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        output.writeInt32(3, goldRequired_);
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(1, playerId_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(2, itemid_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(3, goldRequired_);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_QuickBuyAlert parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_QuickBuyAlert parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_QuickBuyAlert parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_QuickBuyAlert parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_QuickBuyAlert parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_QuickBuyAlert parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_QuickBuyAlert parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_QuickBuyAlert parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_QuickBuyAlert parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_QuickBuyAlert parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_QuickBuyAlert prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code CDOTAUserMsg_QuickBuyAlert}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:CDOTAUserMsg_QuickBuyAlert)
        skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_QuickBuyAlertOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return skadistats.clarity.wire.common.proto.DotaUserMessages.internal_static_CDOTAUserMsg_QuickBuyAlert_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return skadistats.clarity.wire.common.proto.DotaUserMessages.internal_static_CDOTAUserMsg_QuickBuyAlert_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_QuickBuyAlert.class, skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_QuickBuyAlert.Builder.class);
      }

      // Construct using skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_QuickBuyAlert.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        playerId_ = 0;
        bitField0_ = (bitField0_ & ~0x00000001);
        itemid_ = 0;
        bitField0_ = (bitField0_ & ~0x00000002);
        goldRequired_ = 0;
        bitField0_ = (bitField0_ & ~0x00000004);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return skadistats.clarity.wire.common.proto.DotaUserMessages.internal_static_CDOTAUserMsg_QuickBuyAlert_descriptor;
      }

      public skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_QuickBuyAlert getDefaultInstanceForType() {
        return skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_QuickBuyAlert.getDefaultInstance();
      }

      public skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_QuickBuyAlert build() {
        skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_QuickBuyAlert result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_QuickBuyAlert buildPartial() {
        skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_QuickBuyAlert result = new skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_QuickBuyAlert(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.playerId_ = playerId_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.itemid_ = itemid_;
        if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
          to_bitField0_ |= 0x00000004;
        }
        result.goldRequired_ = goldRequired_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_QuickBuyAlert) {
          return mergeFrom((skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_QuickBuyAlert)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_QuickBuyAlert other) {
        if (other == skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_QuickBuyAlert.getDefaultInstance()) return this;
        if (other.hasPlayerId()) {
          setPlayerId(other.getPlayerId());
        }
        if (other.hasItemid()) {
          setItemid(other.getItemid());
        }
        if (other.hasGoldRequired()) {
          setGoldRequired(other.getGoldRequired());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_QuickBuyAlert parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_QuickBuyAlert) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private int playerId_ ;
      /**
       * <code>optional int32 player_id = 1;</code>
       */
      public boolean hasPlayerId() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>optional int32 player_id = 1;</code>
       */
      public int getPlayerId() {
        return playerId_;
      }
      /**
       * <code>optional int32 player_id = 1;</code>
       */
      public Builder setPlayerId(int value) {
        bitField0_ |= 0x00000001;
        playerId_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 player_id = 1;</code>
       */
      public Builder clearPlayerId() {
        bitField0_ = (bitField0_ & ~0x00000001);
        playerId_ = 0;
        onChanged();
        return this;
      }

      private int itemid_ ;
      /**
       * <code>optional int32 itemid = 2;</code>
       */
      public boolean hasItemid() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>optional int32 itemid = 2;</code>
       */
      public int getItemid() {
        return itemid_;
      }
      /**
       * <code>optional int32 itemid = 2;</code>
       */
      public Builder setItemid(int value) {
        bitField0_ |= 0x00000002;
        itemid_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 itemid = 2;</code>
       */
      public Builder clearItemid() {
        bitField0_ = (bitField0_ & ~0x00000002);
        itemid_ = 0;
        onChanged();
        return this;
      }

      private int goldRequired_ ;
      /**
       * <code>optional int32 gold_required = 3;</code>
       */
      public boolean hasGoldRequired() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }
      /**
       * <code>optional int32 gold_required = 3;</code>
       */
      public int getGoldRequired() {
        return goldRequired_;
      }
      /**
       * <code>optional int32 gold_required = 3;</code>
       */
      public Builder setGoldRequired(int value) {
        bitField0_ |= 0x00000004;
        goldRequired_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 gold_required = 3;</code>
       */
      public Builder clearGoldRequired() {
        bitField0_ = (bitField0_ & ~0x00000004);
        goldRequired_ = 0;
        onChanged();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:CDOTAUserMsg_QuickBuyAlert)
    }

    static {
      defaultInstance = new CDOTAUserMsg_QuickBuyAlert(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:CDOTAUserMsg_QuickBuyAlert)
  }

  public interface CDOTAUserMsg_CourierKilledAlertOrBuilder extends
      // @@protoc_insertion_point(interface_extends:CDOTAUserMsg_CourierKilledAlert)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>optional uint32 team = 1;</code>
     */
    boolean hasTeam();
    /**
     * <code>optional uint32 team = 1;</code>
     */
    int getTeam();

    /**
     * <code>optional uint32 gold_value = 2;</code>
     */
    boolean hasGoldValue();
    /**
     * <code>optional uint32 gold_value = 2;</code>
     */
    int getGoldValue();

    /**
     * <code>optional int32 entity_handle = 3;</code>
     */
    boolean hasEntityHandle();
    /**
     * <code>optional int32 entity_handle = 3;</code>
     */
    int getEntityHandle();

    /**
     * <code>optional int32 timestamp = 4;</code>
     */
    boolean hasTimestamp();
    /**
     * <code>optional int32 timestamp = 4;</code>
     */
    int getTimestamp();
  }
  /**
   * Protobuf type {@code CDOTAUserMsg_CourierKilledAlert}
   */
  public static final class CDOTAUserMsg_CourierKilledAlert extends
      com.google.protobuf.GeneratedMessage implements
      // @@protoc_insertion_point(message_implements:CDOTAUserMsg_CourierKilledAlert)
      CDOTAUserMsg_CourierKilledAlertOrBuilder {
    // Use CDOTAUserMsg_CourierKilledAlert.newBuilder() to construct.
    private CDOTAUserMsg_CourierKilledAlert(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private CDOTAUserMsg_CourierKilledAlert(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final CDOTAUserMsg_CourierKilledAlert defaultInstance;
    public static CDOTAUserMsg_CourierKilledAlert getDefaultInstance() {
      return defaultInstance;
    }

    public CDOTAUserMsg_CourierKilledAlert getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private CDOTAUserMsg_CourierKilledAlert(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 8: {
              bitField0_ |= 0x00000001;
              team_ = input.readUInt32();
              break;
            }
            case 16: {
              bitField0_ |= 0x00000002;
              goldValue_ = input.readUInt32();
              break;
            }
            case 24: {
              bitField0_ |= 0x00000004;
              entityHandle_ = input.readInt32();
              break;
            }
            case 32: {
              bitField0_ |= 0x00000008;
              timestamp_ = input.readInt32();
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return skadistats.clarity.wire.common.proto.DotaUserMessages.internal_static_CDOTAUserMsg_CourierKilledAlert_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return skadistats.clarity.wire.common.proto.DotaUserMessages.internal_static_CDOTAUserMsg_CourierKilledAlert_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_CourierKilledAlert.class, skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_CourierKilledAlert.Builder.class);
    }

    public static com.google.protobuf.Parser<CDOTAUserMsg_CourierKilledAlert> PARSER =
        new com.google.protobuf.AbstractParser<CDOTAUserMsg_CourierKilledAlert>() {
      public CDOTAUserMsg_CourierKilledAlert parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new CDOTAUserMsg_CourierKilledAlert(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<CDOTAUserMsg_CourierKilledAlert> getParserForType() {
      return PARSER;
    }

    private int bitField0_;
    public static final int TEAM_FIELD_NUMBER = 1;
    private int team_;
    /**
     * <code>optional uint32 team = 1;</code>
     */
    public boolean hasTeam() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>optional uint32 team = 1;</code>
     */
    public int getTeam() {
      return team_;
    }

    public static final int GOLD_VALUE_FIELD_NUMBER = 2;
    private int goldValue_;
    /**
     * <code>optional uint32 gold_value = 2;</code>
     */
    public boolean hasGoldValue() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>optional uint32 gold_value = 2;</code>
     */
    public int getGoldValue() {
      return goldValue_;
    }

    public static final int ENTITY_HANDLE_FIELD_NUMBER = 3;
    private int entityHandle_;
    /**
     * <code>optional int32 entity_handle = 3;</code>
     */
    public boolean hasEntityHandle() {
      return ((bitField0_ & 0x00000004) == 0x00000004);
    }
    /**
     * <code>optional int32 entity_handle = 3;</code>
     */
    public int getEntityHandle() {
      return entityHandle_;
    }

    public static final int TIMESTAMP_FIELD_NUMBER = 4;
    private int timestamp_;
    /**
     * <code>optional int32 timestamp = 4;</code>
     */
    public boolean hasTimestamp() {
      return ((bitField0_ & 0x00000008) == 0x00000008);
    }
    /**
     * <code>optional int32 timestamp = 4;</code>
     */
    public int getTimestamp() {
      return timestamp_;
    }

    private void initFields() {
      team_ = 0;
      goldValue_ = 0;
      entityHandle_ = 0;
      timestamp_ = 0;
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeUInt32(1, team_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeUInt32(2, goldValue_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        output.writeInt32(3, entityHandle_);
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        output.writeInt32(4, timestamp_);
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(1, team_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(2, goldValue_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(3, entityHandle_);
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(4, timestamp_);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_CourierKilledAlert parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_CourierKilledAlert parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_CourierKilledAlert parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_CourierKilledAlert parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_CourierKilledAlert parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_CourierKilledAlert parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_CourierKilledAlert parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_CourierKilledAlert parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_CourierKilledAlert parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_CourierKilledAlert parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_CourierKilledAlert prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code CDOTAUserMsg_CourierKilledAlert}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:CDOTAUserMsg_CourierKilledAlert)
        skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_CourierKilledAlertOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return skadistats.clarity.wire.common.proto.DotaUserMessages.internal_static_CDOTAUserMsg_CourierKilledAlert_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return skadistats.clarity.wire.common.proto.DotaUserMessages.internal_static_CDOTAUserMsg_CourierKilledAlert_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_CourierKilledAlert.class, skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_CourierKilledAlert.Builder.class);
      }

      // Construct using skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_CourierKilledAlert.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        team_ = 0;
        bitField0_ = (bitField0_ & ~0x00000001);
        goldValue_ = 0;
        bitField0_ = (bitField0_ & ~0x00000002);
        entityHandle_ = 0;
        bitField0_ = (bitField0_ & ~0x00000004);
        timestamp_ = 0;
        bitField0_ = (bitField0_ & ~0x00000008);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return skadistats.clarity.wire.common.proto.DotaUserMessages.internal_static_CDOTAUserMsg_CourierKilledAlert_descriptor;
      }

      public skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_CourierKilledAlert getDefaultInstanceForType() {
        return skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_CourierKilledAlert.getDefaultInstance();
      }

      public skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_CourierKilledAlert build() {
        skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_CourierKilledAlert result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_CourierKilledAlert buildPartial() {
        skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_CourierKilledAlert result = new skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_CourierKilledAlert(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.team_ = team_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.goldValue_ = goldValue_;
        if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
          to_bitField0_ |= 0x00000004;
        }
        result.entityHandle_ = entityHandle_;
        if (((from_bitField0_ & 0x00000008) == 0x00000008)) {
          to_bitField0_ |= 0x00000008;
        }
        result.timestamp_ = timestamp_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_CourierKilledAlert) {
          return mergeFrom((skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_CourierKilledAlert)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_CourierKilledAlert other) {
        if (other == skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_CourierKilledAlert.getDefaultInstance()) return this;
        if (other.hasTeam()) {
          setTeam(other.getTeam());
        }
        if (other.hasGoldValue()) {
          setGoldValue(other.getGoldValue());
        }
        if (other.hasEntityHandle()) {
          setEntityHandle(other.getEntityHandle());
        }
        if (other.hasTimestamp()) {
          setTimestamp(other.getTimestamp());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_CourierKilledAlert parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_CourierKilledAlert) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private int team_ ;
      /**
       * <code>optional uint32 team = 1;</code>
       */
      public boolean hasTeam() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>optional uint32 team = 1;</code>
       */
      public int getTeam() {
        return team_;
      }
      /**
       * <code>optional uint32 team = 1;</code>
       */
      public Builder setTeam(int value) {
        bitField0_ |= 0x00000001;
        team_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional uint32 team = 1;</code>
       */
      public Builder clearTeam() {
        bitField0_ = (bitField0_ & ~0x00000001);
        team_ = 0;
        onChanged();
        return this;
      }

      private int goldValue_ ;
      /**
       * <code>optional uint32 gold_value = 2;</code>
       */
      public boolean hasGoldValue() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>optional uint32 gold_value = 2;</code>
       */
      public int getGoldValue() {
        return goldValue_;
      }
      /**
       * <code>optional uint32 gold_value = 2;</code>
       */
      public Builder setGoldValue(int value) {
        bitField0_ |= 0x00000002;
        goldValue_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional uint32 gold_value = 2;</code>
       */
      public Builder clearGoldValue() {
        bitField0_ = (bitField0_ & ~0x00000002);
        goldValue_ = 0;
        onChanged();
        return this;
      }

      private int entityHandle_ ;
      /**
       * <code>optional int32 entity_handle = 3;</code>
       */
      public boolean hasEntityHandle() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }
      /**
       * <code>optional int32 entity_handle = 3;</code>
       */
      public int getEntityHandle() {
        return entityHandle_;
      }
      /**
       * <code>optional int32 entity_handle = 3;</code>
       */
      public Builder setEntityHandle(int value) {
        bitField0_ |= 0x00000004;
        entityHandle_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 entity_handle = 3;</code>
       */
      public Builder clearEntityHandle() {
        bitField0_ = (bitField0_ & ~0x00000004);
        entityHandle_ = 0;
        onChanged();
        return this;
      }

      private int timestamp_ ;
      /**
       * <code>optional int32 timestamp = 4;</code>
       */
      public boolean hasTimestamp() {
        return ((bitField0_ & 0x00000008) == 0x00000008);
      }
      /**
       * <code>optional int32 timestamp = 4;</code>
       */
      public int getTimestamp() {
        return timestamp_;
      }
      /**
       * <code>optional int32 timestamp = 4;</code>
       */
      public Builder setTimestamp(int value) {
        bitField0_ |= 0x00000008;
        timestamp_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 timestamp = 4;</code>
       */
      public Builder clearTimestamp() {
        bitField0_ = (bitField0_ & ~0x00000008);
        timestamp_ = 0;
        onChanged();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:CDOTAUserMsg_CourierKilledAlert)
    }

    static {
      defaultInstance = new CDOTAUserMsg_CourierKilledAlert(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:CDOTAUserMsg_CourierKilledAlert)
  }

  public interface CDOTAUserMsg_MinimapEventOrBuilder extends
      // @@protoc_insertion_point(interface_extends:CDOTAUserMsg_MinimapEvent)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>optional int32 event_type = 1;</code>
     */
    boolean hasEventType();
    /**
     * <code>optional int32 event_type = 1;</code>
     */
    int getEventType();

    /**
     * <code>optional int32 entity_handle = 2;</code>
     */
    boolean hasEntityHandle();
    /**
     * <code>optional int32 entity_handle = 2;</code>
     */
    int getEntityHandle();

    /**
     * <code>optional int32 x = 3;</code>
     */
    boolean hasX();
    /**
     * <code>optional int32 x = 3;</code>
     */
    int getX();

    /**
     * <code>optional int32 y = 4;</code>
     */
    boolean hasY();
    /**
     * <code>optional int32 y = 4;</code>
     */
    int getY();

    /**
     * <code>optional int32 duration = 5;</code>
     */
    boolean hasDuration();
    /**
     * <code>optional int32 duration = 5;</code>
     */
    int getDuration();
  }
  /**
   * Protobuf type {@code CDOTAUserMsg_MinimapEvent}
   */
  public static final class CDOTAUserMsg_MinimapEvent extends
      com.google.protobuf.GeneratedMessage implements
      // @@protoc_insertion_point(message_implements:CDOTAUserMsg_MinimapEvent)
      CDOTAUserMsg_MinimapEventOrBuilder {
    // Use CDOTAUserMsg_MinimapEvent.newBuilder() to construct.
    private CDOTAUserMsg_MinimapEvent(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private CDOTAUserMsg_MinimapEvent(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final CDOTAUserMsg_MinimapEvent defaultInstance;
    public static CDOTAUserMsg_MinimapEvent getDefaultInstance() {
      return defaultInstance;
    }

    public CDOTAUserMsg_MinimapEvent getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private CDOTAUserMsg_MinimapEvent(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 8: {
              bitField0_ |= 0x00000001;
              eventType_ = input.readInt32();
              break;
            }
            case 16: {
              bitField0_ |= 0x00000002;
              entityHandle_ = input.readInt32();
              break;
            }
            case 24: {
              bitField0_ |= 0x00000004;
              x_ = input.readInt32();
              break;
            }
            case 32: {
              bitField0_ |= 0x00000008;
              y_ = input.readInt32();
              break;
            }
            case 40: {
              bitField0_ |= 0x00000010;
              duration_ = input.readInt32();
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return skadistats.clarity.wire.common.proto.DotaUserMessages.internal_static_CDOTAUserMsg_MinimapEvent_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return skadistats.clarity.wire.common.proto.DotaUserMessages.internal_static_CDOTAUserMsg_MinimapEvent_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_MinimapEvent.class, skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_MinimapEvent.Builder.class);
    }

    public static com.google.protobuf.Parser<CDOTAUserMsg_MinimapEvent> PARSER =
        new com.google.protobuf.AbstractParser<CDOTAUserMsg_MinimapEvent>() {
      public CDOTAUserMsg_MinimapEvent parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new CDOTAUserMsg_MinimapEvent(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<CDOTAUserMsg_MinimapEvent> getParserForType() {
      return PARSER;
    }

    private int bitField0_;
    public static final int EVENT_TYPE_FIELD_NUMBER = 1;
    private int eventType_;
    /**
     * <code>optional int32 event_type = 1;</code>
     */
    public boolean hasEventType() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>optional int32 event_type = 1;</code>
     */
    public int getEventType() {
      return eventType_;
    }

    public static final int ENTITY_HANDLE_FIELD_NUMBER = 2;
    private int entityHandle_;
    /**
     * <code>optional int32 entity_handle = 2;</code>
     */
    public boolean hasEntityHandle() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>optional int32 entity_handle = 2;</code>
     */
    public int getEntityHandle() {
      return entityHandle_;
    }

    public static final int X_FIELD_NUMBER = 3;
    private int x_;
    /**
     * <code>optional int32 x = 3;</code>
     */
    public boolean hasX() {
      return ((bitField0_ & 0x00000004) == 0x00000004);
    }
    /**
     * <code>optional int32 x = 3;</code>
     */
    public int getX() {
      return x_;
    }

    public static final int Y_FIELD_NUMBER = 4;
    private int y_;
    /**
     * <code>optional int32 y = 4;</code>
     */
    public boolean hasY() {
      return ((bitField0_ & 0x00000008) == 0x00000008);
    }
    /**
     * <code>optional int32 y = 4;</code>
     */
    public int getY() {
      return y_;
    }

    public static final int DURATION_FIELD_NUMBER = 5;
    private int duration_;
    /**
     * <code>optional int32 duration = 5;</code>
     */
    public boolean hasDuration() {
      return ((bitField0_ & 0x00000010) == 0x00000010);
    }
    /**
     * <code>optional int32 duration = 5;</code>
     */
    public int getDuration() {
      return duration_;
    }

    private void initFields() {
      eventType_ = 0;
      entityHandle_ = 0;
      x_ = 0;
      y_ = 0;
      duration_ = 0;
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeInt32(1, eventType_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeInt32(2, entityHandle_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        output.writeInt32(3, x_);
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        output.writeInt32(4, y_);
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        output.writeInt32(5, duration_);
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(1, eventType_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(2, entityHandle_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(3, x_);
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(4, y_);
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(5, duration_);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_MinimapEvent parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_MinimapEvent parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_MinimapEvent parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_MinimapEvent parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_MinimapEvent parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_MinimapEvent parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_MinimapEvent parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_MinimapEvent parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_MinimapEvent parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_MinimapEvent parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_MinimapEvent prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code CDOTAUserMsg_MinimapEvent}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:CDOTAUserMsg_MinimapEvent)
        skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_MinimapEventOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return skadistats.clarity.wire.common.proto.DotaUserMessages.internal_static_CDOTAUserMsg_MinimapEvent_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return skadistats.clarity.wire.common.proto.DotaUserMessages.internal_static_CDOTAUserMsg_MinimapEvent_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_MinimapEvent.class, skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_MinimapEvent.Builder.class);
      }

      // Construct using skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_MinimapEvent.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        eventType_ = 0;
        bitField0_ = (bitField0_ & ~0x00000001);
        entityHandle_ = 0;
        bitField0_ = (bitField0_ & ~0x00000002);
        x_ = 0;
        bitField0_ = (bitField0_ & ~0x00000004);
        y_ = 0;
        bitField0_ = (bitField0_ & ~0x00000008);
        duration_ = 0;
        bitField0_ = (bitField0_ & ~0x00000010);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return skadistats.clarity.wire.common.proto.DotaUserMessages.internal_static_CDOTAUserMsg_MinimapEvent_descriptor;
      }

      public skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_MinimapEvent getDefaultInstanceForType() {
        return skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_MinimapEvent.getDefaultInstance();
      }

      public skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_MinimapEvent build() {
        skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_MinimapEvent result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_MinimapEvent buildPartial() {
        skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_MinimapEvent result = new skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_MinimapEvent(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.eventType_ = eventType_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.entityHandle_ = entityHandle_;
        if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
          to_bitField0_ |= 0x00000004;
        }
        result.x_ = x_;
        if (((from_bitField0_ & 0x00000008) == 0x00000008)) {
          to_bitField0_ |= 0x00000008;
        }
        result.y_ = y_;
        if (((from_bitField0_ & 0x00000010) == 0x00000010)) {
          to_bitField0_ |= 0x00000010;
        }
        result.duration_ = duration_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_MinimapEvent) {
          return mergeFrom((skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_MinimapEvent)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_MinimapEvent other) {
        if (other == skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_MinimapEvent.getDefaultInstance()) return this;
        if (other.hasEventType()) {
          setEventType(other.getEventType());
        }
        if (other.hasEntityHandle()) {
          setEntityHandle(other.getEntityHandle());
        }
        if (other.hasX()) {
          setX(other.getX());
        }
        if (other.hasY()) {
          setY(other.getY());
        }
        if (other.hasDuration()) {
          setDuration(other.getDuration());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_MinimapEvent parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_MinimapEvent) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private int eventType_ ;
      /**
       * <code>optional int32 event_type = 1;</code>
       */
      public boolean hasEventType() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>optional int32 event_type = 1;</code>
       */
      public int getEventType() {
        return eventType_;
      }
      /**
       * <code>optional int32 event_type = 1;</code>
       */
      public Builder setEventType(int value) {
        bitField0_ |= 0x00000001;
        eventType_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 event_type = 1;</code>
       */
      public Builder clearEventType() {
        bitField0_ = (bitField0_ & ~0x00000001);
        eventType_ = 0;
        onChanged();
        return this;
      }

      private int entityHandle_ ;
      /**
       * <code>optional int32 entity_handle = 2;</code>
       */
      public boolean hasEntityHandle() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>optional int32 entity_handle = 2;</code>
       */
      public int getEntityHandle() {
        return entityHandle_;
      }
      /**
       * <code>optional int32 entity_handle = 2;</code>
       */
      public Builder setEntityHandle(int value) {
        bitField0_ |= 0x00000002;
        entityHandle_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 entity_handle = 2;</code>
       */
      public Builder clearEntityHandle() {
        bitField0_ = (bitField0_ & ~0x00000002);
        entityHandle_ = 0;
        onChanged();
        return this;
      }

      private int x_ ;
      /**
       * <code>optional int32 x = 3;</code>
       */
      public boolean hasX() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }
      /**
       * <code>optional int32 x = 3;</code>
       */
      public int getX() {
        return x_;
      }
      /**
       * <code>optional int32 x = 3;</code>
       */
      public Builder setX(int value) {
        bitField0_ |= 0x00000004;
        x_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 x = 3;</code>
       */
      public Builder clearX() {
        bitField0_ = (bitField0_ & ~0x00000004);
        x_ = 0;
        onChanged();
        return this;
      }

      private int y_ ;
      /**
       * <code>optional int32 y = 4;</code>
       */
      public boolean hasY() {
        return ((bitField0_ & 0x00000008) == 0x00000008);
      }
      /**
       * <code>optional int32 y = 4;</code>
       */
      public int getY() {
        return y_;
      }
      /**
       * <code>optional int32 y = 4;</code>
       */
      public Builder setY(int value) {
        bitField0_ |= 0x00000008;
        y_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 y = 4;</code>
       */
      public Builder clearY() {
        bitField0_ = (bitField0_ & ~0x00000008);
        y_ = 0;
        onChanged();
        return this;
      }

      private int duration_ ;
      /**
       * <code>optional int32 duration = 5;</code>
       */
      public boolean hasDuration() {
        return ((bitField0_ & 0x00000010) == 0x00000010);
      }
      /**
       * <code>optional int32 duration = 5;</code>
       */
      public int getDuration() {
        return duration_;
      }
      /**
       * <code>optional int32 duration = 5;</code>
       */
      public Builder setDuration(int value) {
        bitField0_ |= 0x00000010;
        duration_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 duration = 5;</code>
       */
      public Builder clearDuration() {
        bitField0_ = (bitField0_ & ~0x00000010);
        duration_ = 0;
        onChanged();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:CDOTAUserMsg_MinimapEvent)
    }

    static {
      defaultInstance = new CDOTAUserMsg_MinimapEvent(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:CDOTAUserMsg_MinimapEvent)
  }

  public interface CDOTAUserMsg_MapLineOrBuilder extends
      // @@protoc_insertion_point(interface_extends:CDOTAUserMsg_MapLine)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>optional int32 player_id = 1;</code>
     */
    boolean hasPlayerId();
    /**
     * <code>optional int32 player_id = 1;</code>
     */
    int getPlayerId();

    /**
     * <code>optional .CDOTAMsg_MapLine mapline = 2;</code>
     */
    boolean hasMapline();
    /**
     * <code>optional .CDOTAMsg_MapLine mapline = 2;</code>
     */
    skadistats.clarity.wire.common.proto.DotaCommonMessages.CDOTAMsg_MapLine getMapline();
    /**
     * <code>optional .CDOTAMsg_MapLine mapline = 2;</code>
     */
    skadistats.clarity.wire.common.proto.DotaCommonMessages.CDOTAMsg_MapLineOrBuilder getMaplineOrBuilder();
  }
  /**
   * Protobuf type {@code CDOTAUserMsg_MapLine}
   */
  public static final class CDOTAUserMsg_MapLine extends
      com.google.protobuf.GeneratedMessage implements
      // @@protoc_insertion_point(message_implements:CDOTAUserMsg_MapLine)
      CDOTAUserMsg_MapLineOrBuilder {
    // Use CDOTAUserMsg_MapLine.newBuilder() to construct.
    private CDOTAUserMsg_MapLine(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private CDOTAUserMsg_MapLine(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final CDOTAUserMsg_MapLine defaultInstance;
    public static CDOTAUserMsg_MapLine getDefaultInstance() {
      return defaultInstance;
    }

    public CDOTAUserMsg_MapLine getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private CDOTAUserMsg_MapLine(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 8: {
              bitField0_ |= 0x00000001;
              playerId_ = input.readInt32();
              break;
            }
            case 18: {
              skadistats.clarity.wire.common.proto.DotaCommonMessages.CDOTAMsg_MapLine.Builder subBuilder = null;
              if (((bitField0_ & 0x00000002) == 0x00000002)) {
                subBuilder = mapline_.toBuilder();
              }
              mapline_ = input.readMessage(skadistats.clarity.wire.common.proto.DotaCommonMessages.CDOTAMsg_MapLine.PARSER, extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(mapline_);
                mapline_ = subBuilder.buildPartial();
              }
              bitField0_ |= 0x00000002;
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return skadistats.clarity.wire.common.proto.DotaUserMessages.internal_static_CDOTAUserMsg_MapLine_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return skadistats.clarity.wire.common.proto.DotaUserMessages.internal_static_CDOTAUserMsg_MapLine_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_MapLine.class, skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_MapLine.Builder.class);
    }

    public static com.google.protobuf.Parser<CDOTAUserMsg_MapLine> PARSER =
        new com.google.protobuf.AbstractParser<CDOTAUserMsg_MapLine>() {
      public CDOTAUserMsg_MapLine parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new CDOTAUserMsg_MapLine(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<CDOTAUserMsg_MapLine> getParserForType() {
      return PARSER;
    }

    private int bitField0_;
    public static final int PLAYER_ID_FIELD_NUMBER = 1;
    private int playerId_;
    /**
     * <code>optional int32 player_id = 1;</code>
     */
    public boolean hasPlayerId() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>optional int32 player_id = 1;</code>
     */
    public int getPlayerId() {
      return playerId_;
    }

    public static final int MAPLINE_FIELD_NUMBER = 2;
    private skadistats.clarity.wire.common.proto.DotaCommonMessages.CDOTAMsg_MapLine mapline_;
    /**
     * <code>optional .CDOTAMsg_MapLine mapline = 2;</code>
     */
    public boolean hasMapline() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>optional .CDOTAMsg_MapLine mapline = 2;</code>
     */
    public skadistats.clarity.wire.common.proto.DotaCommonMessages.CDOTAMsg_MapLine getMapline() {
      return mapline_;
    }
    /**
     * <code>optional .CDOTAMsg_MapLine mapline = 2;</code>
     */
    public skadistats.clarity.wire.common.proto.DotaCommonMessages.CDOTAMsg_MapLineOrBuilder getMaplineOrBuilder() {
      return mapline_;
    }

    private void initFields() {
      playerId_ = 0;
      mapline_ = skadistats.clarity.wire.common.proto.DotaCommonMessages.CDOTAMsg_MapLine.getDefaultInstance();
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeInt32(1, playerId_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeMessage(2, mapline_);
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(1, playerId_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(2, mapline_);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_MapLine parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_MapLine parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_MapLine parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_MapLine parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_MapLine parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_MapLine parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_MapLine parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_MapLine parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_MapLine parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_MapLine parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_MapLine prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code CDOTAUserMsg_MapLine}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:CDOTAUserMsg_MapLine)
        skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_MapLineOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return skadistats.clarity.wire.common.proto.DotaUserMessages.internal_static_CDOTAUserMsg_MapLine_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return skadistats.clarity.wire.common.proto.DotaUserMessages.internal_static_CDOTAUserMsg_MapLine_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_MapLine.class, skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_MapLine.Builder.class);
      }

      // Construct using skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_MapLine.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
          getMaplineFieldBuilder();
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        playerId_ = 0;
        bitField0_ = (bitField0_ & ~0x00000001);
        if (maplineBuilder_ == null) {
          mapline_ = skadistats.clarity.wire.common.proto.DotaCommonMessages.CDOTAMsg_MapLine.getDefaultInstance();
        } else {
          maplineBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000002);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return skadistats.clarity.wire.common.proto.DotaUserMessages.internal_static_CDOTAUserMsg_MapLine_descriptor;
      }

      public skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_MapLine getDefaultInstanceForType() {
        return skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_MapLine.getDefaultInstance();
      }

      public skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_MapLine build() {
        skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_MapLine result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_MapLine buildPartial() {
        skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_MapLine result = new skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_MapLine(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.playerId_ = playerId_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        if (maplineBuilder_ == null) {
          result.mapline_ = mapline_;
        } else {
          result.mapline_ = maplineBuilder_.build();
        }
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_MapLine) {
          return mergeFrom((skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_MapLine)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_MapLine other) {
        if (other == skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_MapLine.getDefaultInstance()) return this;
        if (other.hasPlayerId()) {
          setPlayerId(other.getPlayerId());
        }
        if (other.hasMapline()) {
          mergeMapline(other.getMapline());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_MapLine parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_MapLine) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private int playerId_ ;
      /**
       * <code>optional int32 player_id = 1;</code>
       */
      public boolean hasPlayerId() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>optional int32 player_id = 1;</code>
       */
      public int getPlayerId() {
        return playerId_;
      }
      /**
       * <code>optional int32 player_id = 1;</code>
       */
      public Builder setPlayerId(int value) {
        bitField0_ |= 0x00000001;
        playerId_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 player_id = 1;</code>
       */
      public Builder clearPlayerId() {
        bitField0_ = (bitField0_ & ~0x00000001);
        playerId_ = 0;
        onChanged();
        return this;
      }

      private skadistats.clarity.wire.common.proto.DotaCommonMessages.CDOTAMsg_MapLine mapline_ = skadistats.clarity.wire.common.proto.DotaCommonMessages.CDOTAMsg_MapLine.getDefaultInstance();
      private com.google.protobuf.SingleFieldBuilder<
          skadistats.clarity.wire.common.proto.DotaCommonMessages.CDOTAMsg_MapLine, skadistats.clarity.wire.common.proto.DotaCommonMessages.CDOTAMsg_MapLine.Builder, skadistats.clarity.wire.common.proto.DotaCommonMessages.CDOTAMsg_MapLineOrBuilder> maplineBuilder_;
      /**
       * <code>optional .CDOTAMsg_MapLine mapline = 2;</code>
       */
      public boolean hasMapline() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>optional .CDOTAMsg_MapLine mapline = 2;</code>
       */
      public skadistats.clarity.wire.common.proto.DotaCommonMessages.CDOTAMsg_MapLine getMapline() {
        if (maplineBuilder_ == null) {
          return mapline_;
        } else {
          return maplineBuilder_.getMessage();
        }
      }
      /**
       * <code>optional .CDOTAMsg_MapLine mapline = 2;</code>
       */
      public Builder setMapline(skadistats.clarity.wire.common.proto.DotaCommonMessages.CDOTAMsg_MapLine value) {
        if (maplineBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          mapline_ = value;
          onChanged();
        } else {
          maplineBuilder_.setMessage(value);
        }
        bitField0_ |= 0x00000002;
        return this;
      }
      /**
       * <code>optional .CDOTAMsg_MapLine mapline = 2;</code>
       */
      public Builder setMapline(
          skadistats.clarity.wire.common.proto.DotaCommonMessages.CDOTAMsg_MapLine.Builder builderForValue) {
        if (maplineBuilder_ == null) {
          mapline_ = builderForValue.build();
          onChanged();
        } else {
          maplineBuilder_.setMessage(builderForValue.build());
        }
        bitField0_ |= 0x00000002;
        return this;
      }
      /**
       * <code>optional .CDOTAMsg_MapLine mapline = 2;</code>
       */
      public Builder mergeMapline(skadistats.clarity.wire.common.proto.DotaCommonMessages.CDOTAMsg_MapLine value) {
        if (maplineBuilder_ == null) {
          if (((bitField0_ & 0x00000002) == 0x00000002) &&
              mapline_ != skadistats.clarity.wire.common.proto.DotaCommonMessages.CDOTAMsg_MapLine.getDefaultInstance()) {
            mapline_ =
              skadistats.clarity.wire.common.proto.DotaCommonMessages.CDOTAMsg_MapLine.newBuilder(mapline_).mergeFrom(value).buildPartial();
          } else {
            mapline_ = value;
          }
          onChanged();
        } else {
          maplineBuilder_.mergeFrom(value);
        }
        bitField0_ |= 0x00000002;
        return this;
      }
      /**
       * <code>optional .CDOTAMsg_MapLine mapline = 2;</code>
       */
      public Builder clearMapline() {
        if (maplineBuilder_ == null) {
          mapline_ = skadistats.clarity.wire.common.proto.DotaCommonMessages.CDOTAMsg_MapLine.getDefaultInstance();
          onChanged();
        } else {
          maplineBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000002);
        return this;
      }
      /**
       * <code>optional .CDOTAMsg_MapLine mapline = 2;</code>
       */
      public skadistats.clarity.wire.common.proto.DotaCommonMessages.CDOTAMsg_MapLine.Builder getMaplineBuilder() {
        bitField0_ |= 0x00000002;
        onChanged();
        return getMaplineFieldBuilder().getBuilder();
      }
      /**
       * <code>optional .CDOTAMsg_MapLine mapline = 2;</code>
       */
      public skadistats.clarity.wire.common.proto.DotaCommonMessages.CDOTAMsg_MapLineOrBuilder getMaplineOrBuilder() {
        if (maplineBuilder_ != null) {
          return maplineBuilder_.getMessageOrBuilder();
        } else {
          return mapline_;
        }
      }
      /**
       * <code>optional .CDOTAMsg_MapLine mapline = 2;</code>
       */
      private com.google.protobuf.SingleFieldBuilder<
          skadistats.clarity.wire.common.proto.DotaCommonMessages.CDOTAMsg_MapLine, skadistats.clarity.wire.common.proto.DotaCommonMessages.CDOTAMsg_MapLine.Builder, skadistats.clarity.wire.common.proto.DotaCommonMessages.CDOTAMsg_MapLineOrBuilder> 
          getMaplineFieldBuilder() {
        if (maplineBuilder_ == null) {
          maplineBuilder_ = new com.google.protobuf.SingleFieldBuilder<
              skadistats.clarity.wire.common.proto.DotaCommonMessages.CDOTAMsg_MapLine, skadistats.clarity.wire.common.proto.DotaCommonMessages.CDOTAMsg_MapLine.Builder, skadistats.clarity.wire.common.proto.DotaCommonMessages.CDOTAMsg_MapLineOrBuilder>(
                  getMapline(),
                  getParentForChildren(),
                  isClean());
          mapline_ = null;
        }
        return maplineBuilder_;
      }

      // @@protoc_insertion_point(builder_scope:CDOTAUserMsg_MapLine)
    }

    static {
      defaultInstance = new CDOTAUserMsg_MapLine(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:CDOTAUserMsg_MapLine)
  }

  public interface CDOTAUserMsg_MinimapDebugPointOrBuilder extends
      // @@protoc_insertion_point(interface_extends:CDOTAUserMsg_MinimapDebugPoint)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>optional .CMsgVector location = 1;</code>
     */
    boolean hasLocation();
    /**
     * <code>optional .CMsgVector location = 1;</code>
     */
    skadistats.clarity.wire.common.proto.NetworkBaseTypes.CMsgVector getLocation();
    /**
     * <code>optional .CMsgVector location = 1;</code>
     */
    skadistats.clarity.wire.common.proto.NetworkBaseTypes.CMsgVectorOrBuilder getLocationOrBuilder();

    /**
     * <code>optional uint32 color = 2;</code>
     */
    boolean hasColor();
    /**
     * <code>optional uint32 color = 2;</code>
     */
    int getColor();

    /**
     * <code>optional int32 size = 3;</code>
     */
    boolean hasSize();
    /**
     * <code>optional int32 size = 3;</code>
     */
    int getSize();

    /**
     * <code>optional float duration = 4;</code>
     */
    boolean hasDuration();
    /**
     * <code>optional float duration = 4;</code>
     */
    float getDuration();

    /**
     * <code>optional int32 index = 5;</code>
     */
    boolean hasIndex();
    /**
     * <code>optional int32 index = 5;</code>
     */
    int getIndex();
  }
  /**
   * Protobuf type {@code CDOTAUserMsg_MinimapDebugPoint}
   */
  public static final class CDOTAUserMsg_MinimapDebugPoint extends
      com.google.protobuf.GeneratedMessage implements
      // @@protoc_insertion_point(message_implements:CDOTAUserMsg_MinimapDebugPoint)
      CDOTAUserMsg_MinimapDebugPointOrBuilder {
    // Use CDOTAUserMsg_MinimapDebugPoint.newBuilder() to construct.
    private CDOTAUserMsg_MinimapDebugPoint(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private CDOTAUserMsg_MinimapDebugPoint(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final CDOTAUserMsg_MinimapDebugPoint defaultInstance;
    public static CDOTAUserMsg_MinimapDebugPoint getDefaultInstance() {
      return defaultInstance;
    }

    public CDOTAUserMsg_MinimapDebugPoint getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private CDOTAUserMsg_MinimapDebugPoint(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 10: {
              skadistats.clarity.wire.common.proto.NetworkBaseTypes.CMsgVector.Builder subBuilder = null;
              if (((bitField0_ & 0x00000001) == 0x00000001)) {
                subBuilder = location_.toBuilder();
              }
              location_ = input.readMessage(skadistats.clarity.wire.common.proto.NetworkBaseTypes.CMsgVector.PARSER, extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(location_);
                location_ = subBuilder.buildPartial();
              }
              bitField0_ |= 0x00000001;
              break;
            }
            case 16: {
              bitField0_ |= 0x00000002;
              color_ = input.readUInt32();
              break;
            }
            case 24: {
              bitField0_ |= 0x00000004;
              size_ = input.readInt32();
              break;
            }
            case 37: {
              bitField0_ |= 0x00000008;
              duration_ = input.readFloat();
              break;
            }
            case 40: {
              bitField0_ |= 0x00000010;
              index_ = input.readInt32();
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return skadistats.clarity.wire.common.proto.DotaUserMessages.internal_static_CDOTAUserMsg_MinimapDebugPoint_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return skadistats.clarity.wire.common.proto.DotaUserMessages.internal_static_CDOTAUserMsg_MinimapDebugPoint_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_MinimapDebugPoint.class, skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_MinimapDebugPoint.Builder.class);
    }

    public static com.google.protobuf.Parser<CDOTAUserMsg_MinimapDebugPoint> PARSER =
        new com.google.protobuf.AbstractParser<CDOTAUserMsg_MinimapDebugPoint>() {
      public CDOTAUserMsg_MinimapDebugPoint parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new CDOTAUserMsg_MinimapDebugPoint(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<CDOTAUserMsg_MinimapDebugPoint> getParserForType() {
      return PARSER;
    }

    private int bitField0_;
    public static final int LOCATION_FIELD_NUMBER = 1;
    private skadistats.clarity.wire.common.proto.NetworkBaseTypes.CMsgVector location_;
    /**
     * <code>optional .CMsgVector location = 1;</code>
     */
    public boolean hasLocation() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>optional .CMsgVector location = 1;</code>
     */
    public skadistats.clarity.wire.common.proto.NetworkBaseTypes.CMsgVector getLocation() {
      return location_;
    }
    /**
     * <code>optional .CMsgVector location = 1;</code>
     */
    public skadistats.clarity.wire.common.proto.NetworkBaseTypes.CMsgVectorOrBuilder getLocationOrBuilder() {
      return location_;
    }

    public static final int COLOR_FIELD_NUMBER = 2;
    private int color_;
    /**
     * <code>optional uint32 color = 2;</code>
     */
    public boolean hasColor() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>optional uint32 color = 2;</code>
     */
    public int getColor() {
      return color_;
    }

    public static final int SIZE_FIELD_NUMBER = 3;
    private int size_;
    /**
     * <code>optional int32 size = 3;</code>
     */
    public boolean hasSize() {
      return ((bitField0_ & 0x00000004) == 0x00000004);
    }
    /**
     * <code>optional int32 size = 3;</code>
     */
    public int getSize() {
      return size_;
    }

    public static final int DURATION_FIELD_NUMBER = 4;
    private float duration_;
    /**
     * <code>optional float duration = 4;</code>
     */
    public boolean hasDuration() {
      return ((bitField0_ & 0x00000008) == 0x00000008);
    }
    /**
     * <code>optional float duration = 4;</code>
     */
    public float getDuration() {
      return duration_;
    }

    public static final int INDEX_FIELD_NUMBER = 5;
    private int index_;
    /**
     * <code>optional int32 index = 5;</code>
     */
    public boolean hasIndex() {
      return ((bitField0_ & 0x00000010) == 0x00000010);
    }
    /**
     * <code>optional int32 index = 5;</code>
     */
    public int getIndex() {
      return index_;
    }

    private void initFields() {
      location_ = skadistats.clarity.wire.common.proto.NetworkBaseTypes.CMsgVector.getDefaultInstance();
      color_ = 0;
      size_ = 0;
      duration_ = 0F;
      index_ = 0;
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeMessage(1, location_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeUInt32(2, color_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        output.writeInt32(3, size_);
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        output.writeFloat(4, duration_);
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        output.writeInt32(5, index_);
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(1, location_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(2, color_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(3, size_);
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        size += com.google.protobuf.CodedOutputStream
          .computeFloatSize(4, duration_);
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(5, index_);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_MinimapDebugPoint parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_MinimapDebugPoint parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_MinimapDebugPoint parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_MinimapDebugPoint parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_MinimapDebugPoint parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_MinimapDebugPoint parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_MinimapDebugPoint parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_MinimapDebugPoint parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_MinimapDebugPoint parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_MinimapDebugPoint parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_MinimapDebugPoint prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code CDOTAUserMsg_MinimapDebugPoint}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:CDOTAUserMsg_MinimapDebugPoint)
        skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_MinimapDebugPointOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return skadistats.clarity.wire.common.proto.DotaUserMessages.internal_static_CDOTAUserMsg_MinimapDebugPoint_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return skadistats.clarity.wire.common.proto.DotaUserMessages.internal_static_CDOTAUserMsg_MinimapDebugPoint_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_MinimapDebugPoint.class, skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_MinimapDebugPoint.Builder.class);
      }

      // Construct using skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_MinimapDebugPoint.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
          getLocationFieldBuilder();
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        if (locationBuilder_ == null) {
          location_ = skadistats.clarity.wire.common.proto.NetworkBaseTypes.CMsgVector.getDefaultInstance();
        } else {
          locationBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000001);
        color_ = 0;
        bitField0_ = (bitField0_ & ~0x00000002);
        size_ = 0;
        bitField0_ = (bitField0_ & ~0x00000004);
        duration_ = 0F;
        bitField0_ = (bitField0_ & ~0x00000008);
        index_ = 0;
        bitField0_ = (bitField0_ & ~0x00000010);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return skadistats.clarity.wire.common.proto.DotaUserMessages.internal_static_CDOTAUserMsg_MinimapDebugPoint_descriptor;
      }

      public skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_MinimapDebugPoint getDefaultInstanceForType() {
        return skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_MinimapDebugPoint.getDefaultInstance();
      }

      public skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_MinimapDebugPoint build() {
        skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_MinimapDebugPoint result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_MinimapDebugPoint buildPartial() {
        skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_MinimapDebugPoint result = new skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_MinimapDebugPoint(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        if (locationBuilder_ == null) {
          result.location_ = location_;
        } else {
          result.location_ = locationBuilder_.build();
        }
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.color_ = color_;
        if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
          to_bitField0_ |= 0x00000004;
        }
        result.size_ = size_;
        if (((from_bitField0_ & 0x00000008) == 0x00000008)) {
          to_bitField0_ |= 0x00000008;
        }
        result.duration_ = duration_;
        if (((from_bitField0_ & 0x00000010) == 0x00000010)) {
          to_bitField0_ |= 0x00000010;
        }
        result.index_ = index_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_MinimapDebugPoint) {
          return mergeFrom((skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_MinimapDebugPoint)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_MinimapDebugPoint other) {
        if (other == skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_MinimapDebugPoint.getDefaultInstance()) return this;
        if (other.hasLocation()) {
          mergeLocation(other.getLocation());
        }
        if (other.hasColor()) {
          setColor(other.getColor());
        }
        if (other.hasSize()) {
          setSize(other.getSize());
        }
        if (other.hasDuration()) {
          setDuration(other.getDuration());
        }
        if (other.hasIndex()) {
          setIndex(other.getIndex());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_MinimapDebugPoint parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_MinimapDebugPoint) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private skadistats.clarity.wire.common.proto.NetworkBaseTypes.CMsgVector location_ = skadistats.clarity.wire.common.proto.NetworkBaseTypes.CMsgVector.getDefaultInstance();
      private com.google.protobuf.SingleFieldBuilder<
          skadistats.clarity.wire.common.proto.NetworkBaseTypes.CMsgVector, skadistats.clarity.wire.common.proto.NetworkBaseTypes.CMsgVector.Builder, skadistats.clarity.wire.common.proto.NetworkBaseTypes.CMsgVectorOrBuilder> locationBuilder_;
      /**
       * <code>optional .CMsgVector location = 1;</code>
       */
      public boolean hasLocation() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>optional .CMsgVector location = 1;</code>
       */
      public skadistats.clarity.wire.common.proto.NetworkBaseTypes.CMsgVector getLocation() {
        if (locationBuilder_ == null) {
          return location_;
        } else {
          return locationBuilder_.getMessage();
        }
      }
      /**
       * <code>optional .CMsgVector location = 1;</code>
       */
      public Builder setLocation(skadistats.clarity.wire.common.proto.NetworkBaseTypes.CMsgVector value) {
        if (locationBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          location_ = value;
          onChanged();
        } else {
          locationBuilder_.setMessage(value);
        }
        bitField0_ |= 0x00000001;
        return this;
      }
      /**
       * <code>optional .CMsgVector location = 1;</code>
       */
      public Builder setLocation(
          skadistats.clarity.wire.common.proto.NetworkBaseTypes.CMsgVector.Builder builderForValue) {
        if (locationBuilder_ == null) {
          location_ = builderForValue.build();
          onChanged();
        } else {
          locationBuilder_.setMessage(builderForValue.build());
        }
        bitField0_ |= 0x00000001;
        return this;
      }
      /**
       * <code>optional .CMsgVector location = 1;</code>
       */
      public Builder mergeLocation(skadistats.clarity.wire.common.proto.NetworkBaseTypes.CMsgVector value) {
        if (locationBuilder_ == null) {
          if (((bitField0_ & 0x00000001) == 0x00000001) &&
              location_ != skadistats.clarity.wire.common.proto.NetworkBaseTypes.CMsgVector.getDefaultInstance()) {
            location_ =
              skadistats.clarity.wire.common.proto.NetworkBaseTypes.CMsgVector.newBuilder(location_).mergeFrom(value).buildPartial();
          } else {
            location_ = value;
          }
          onChanged();
        } else {
          locationBuilder_.mergeFrom(value);
        }
        bitField0_ |= 0x00000001;
        return this;
      }
      /**
       * <code>optional .CMsgVector location = 1;</code>
       */
      public Builder clearLocation() {
        if (locationBuilder_ == null) {
          location_ = skadistats.clarity.wire.common.proto.NetworkBaseTypes.CMsgVector.getDefaultInstance();
          onChanged();
        } else {
          locationBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000001);
        return this;
      }
      /**
       * <code>optional .CMsgVector location = 1;</code>
       */
      public skadistats.clarity.wire.common.proto.NetworkBaseTypes.CMsgVector.Builder getLocationBuilder() {
        bitField0_ |= 0x00000001;
        onChanged();
        return getLocationFieldBuilder().getBuilder();
      }
      /**
       * <code>optional .CMsgVector location = 1;</code>
       */
      public skadistats.clarity.wire.common.proto.NetworkBaseTypes.CMsgVectorOrBuilder getLocationOrBuilder() {
        if (locationBuilder_ != null) {
          return locationBuilder_.getMessageOrBuilder();
        } else {
          return location_;
        }
      }
      /**
       * <code>optional .CMsgVector location = 1;</code>
       */
      private com.google.protobuf.SingleFieldBuilder<
          skadistats.clarity.wire.common.proto.NetworkBaseTypes.CMsgVector, skadistats.clarity.wire.common.proto.NetworkBaseTypes.CMsgVector.Builder, skadistats.clarity.wire.common.proto.NetworkBaseTypes.CMsgVectorOrBuilder> 
          getLocationFieldBuilder() {
        if (locationBuilder_ == null) {
          locationBuilder_ = new com.google.protobuf.SingleFieldBuilder<
              skadistats.clarity.wire.common.proto.NetworkBaseTypes.CMsgVector, skadistats.clarity.wire.common.proto.NetworkBaseTypes.CMsgVector.Builder, skadistats.clarity.wire.common.proto.NetworkBaseTypes.CMsgVectorOrBuilder>(
                  getLocation(),
                  getParentForChildren(),
                  isClean());
          location_ = null;
        }
        return locationBuilder_;
      }

      private int color_ ;
      /**
       * <code>optional uint32 color = 2;</code>
       */
      public boolean hasColor() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>optional uint32 color = 2;</code>
       */
      public int getColor() {
        return color_;
      }
      /**
       * <code>optional uint32 color = 2;</code>
       */
      public Builder setColor(int value) {
        bitField0_ |= 0x00000002;
        color_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional uint32 color = 2;</code>
       */
      public Builder clearColor() {
        bitField0_ = (bitField0_ & ~0x00000002);
        color_ = 0;
        onChanged();
        return this;
      }

      private int size_ ;
      /**
       * <code>optional int32 size = 3;</code>
       */
      public boolean hasSize() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }
      /**
       * <code>optional int32 size = 3;</code>
       */
      public int getSize() {
        return size_;
      }
      /**
       * <code>optional int32 size = 3;</code>
       */
      public Builder setSize(int value) {
        bitField0_ |= 0x00000004;
        size_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 size = 3;</code>
       */
      public Builder clearSize() {
        bitField0_ = (bitField0_ & ~0x00000004);
        size_ = 0;
        onChanged();
        return this;
      }

      private float duration_ ;
      /**
       * <code>optional float duration = 4;</code>
       */
      public boolean hasDuration() {
        return ((bitField0_ & 0x00000008) == 0x00000008);
      }
      /**
       * <code>optional float duration = 4;</code>
       */
      public float getDuration() {
        return duration_;
      }
      /**
       * <code>optional float duration = 4;</code>
       */
      public Builder setDuration(float value) {
        bitField0_ |= 0x00000008;
        duration_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional float duration = 4;</code>
       */
      public Builder clearDuration() {
        bitField0_ = (bitField0_ & ~0x00000008);
        duration_ = 0F;
        onChanged();
        return this;
      }

      private int index_ ;
      /**
       * <code>optional int32 index = 5;</code>
       */
      public boolean hasIndex() {
        return ((bitField0_ & 0x00000010) == 0x00000010);
      }
      /**
       * <code>optional int32 index = 5;</code>
       */
      public int getIndex() {
        return index_;
      }
      /**
       * <code>optional int32 index = 5;</code>
       */
      public Builder setIndex(int value) {
        bitField0_ |= 0x00000010;
        index_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 index = 5;</code>
       */
      public Builder clearIndex() {
        bitField0_ = (bitField0_ & ~0x00000010);
        index_ = 0;
        onChanged();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:CDOTAUserMsg_MinimapDebugPoint)
    }

    static {
      defaultInstance = new CDOTAUserMsg_MinimapDebugPoint(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:CDOTAUserMsg_MinimapDebugPoint)
  }

  public interface CDOTAUserMsg_CreateLinearProjectileOrBuilder extends
      // @@protoc_insertion_point(interface_extends:CDOTAUserMsg_CreateLinearProjectile)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>optional .CMsgVector origin = 1;</code>
     */
    boolean hasOrigin();
    /**
     * <code>optional .CMsgVector origin = 1;</code>
     */
    skadistats.clarity.wire.common.proto.NetworkBaseTypes.CMsgVector getOrigin();
    /**
     * <code>optional .CMsgVector origin = 1;</code>
     */
    skadistats.clarity.wire.common.proto.NetworkBaseTypes.CMsgVectorOrBuilder getOriginOrBuilder();

    /**
     * <code>optional .CMsgVector2D velocity = 2;</code>
     */
    boolean hasVelocity();
    /**
     * <code>optional .CMsgVector2D velocity = 2;</code>
     */
    skadistats.clarity.wire.common.proto.NetworkBaseTypes.CMsgVector2D getVelocity();
    /**
     * <code>optional .CMsgVector2D velocity = 2;</code>
     */
    skadistats.clarity.wire.common.proto.NetworkBaseTypes.CMsgVector2DOrBuilder getVelocityOrBuilder();

    /**
     * <code>optional int32 latency = 3;</code>
     */
    boolean hasLatency();
    /**
     * <code>optional int32 latency = 3;</code>
     */
    int getLatency();

    /**
     * <code>optional int32 entindex = 4;</code>
     */
    boolean hasEntindex();
    /**
     * <code>optional int32 entindex = 4;</code>
     */
    int getEntindex();

    /**
     * <code>optional uint64 particle_index = 5;</code>
     */
    boolean hasParticleIndex();
    /**
     * <code>optional uint64 particle_index = 5;</code>
     */
    long getParticleIndex();

    /**
     * <code>optional int32 handle = 6;</code>
     */
    boolean hasHandle();
    /**
     * <code>optional int32 handle = 6;</code>
     */
    int getHandle();

    /**
     * <code>optional .CMsgVector2D acceleration = 7;</code>
     */
    boolean hasAcceleration();
    /**
     * <code>optional .CMsgVector2D acceleration = 7;</code>
     */
    skadistats.clarity.wire.common.proto.NetworkBaseTypes.CMsgVector2D getAcceleration();
    /**
     * <code>optional .CMsgVector2D acceleration = 7;</code>
     */
    skadistats.clarity.wire.common.proto.NetworkBaseTypes.CMsgVector2DOrBuilder getAccelerationOrBuilder();

    /**
     * <code>optional float max_speed = 8;</code>
     */
    boolean hasMaxSpeed();
    /**
     * <code>optional float max_speed = 8;</code>
     */
    float getMaxSpeed();
  }
  /**
   * Protobuf type {@code CDOTAUserMsg_CreateLinearProjectile}
   */
  public static final class CDOTAUserMsg_CreateLinearProjectile extends
      com.google.protobuf.GeneratedMessage implements
      // @@protoc_insertion_point(message_implements:CDOTAUserMsg_CreateLinearProjectile)
      CDOTAUserMsg_CreateLinearProjectileOrBuilder {
    // Use CDOTAUserMsg_CreateLinearProjectile.newBuilder() to construct.
    private CDOTAUserMsg_CreateLinearProjectile(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private CDOTAUserMsg_CreateLinearProjectile(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final CDOTAUserMsg_CreateLinearProjectile defaultInstance;
    public static CDOTAUserMsg_CreateLinearProjectile getDefaultInstance() {
      return defaultInstance;
    }

    public CDOTAUserMsg_CreateLinearProjectile getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private CDOTAUserMsg_CreateLinearProjectile(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 10: {
              skadistats.clarity.wire.common.proto.NetworkBaseTypes.CMsgVector.Builder subBuilder = null;
              if (((bitField0_ & 0x00000001) == 0x00000001)) {
                subBuilder = origin_.toBuilder();
              }
              origin_ = input.readMessage(skadistats.clarity.wire.common.proto.NetworkBaseTypes.CMsgVector.PARSER, extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(origin_);
                origin_ = subBuilder.buildPartial();
              }
              bitField0_ |= 0x00000001;
              break;
            }
            case 18: {
              skadistats.clarity.wire.common.proto.NetworkBaseTypes.CMsgVector2D.Builder subBuilder = null;
              if (((bitField0_ & 0x00000002) == 0x00000002)) {
                subBuilder = velocity_.toBuilder();
              }
              velocity_ = input.readMessage(skadistats.clarity.wire.common.proto.NetworkBaseTypes.CMsgVector2D.PARSER, extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(velocity_);
                velocity_ = subBuilder.buildPartial();
              }
              bitField0_ |= 0x00000002;
              break;
            }
            case 24: {
              bitField0_ |= 0x00000004;
              latency_ = input.readInt32();
              break;
            }
            case 32: {
              bitField0_ |= 0x00000008;
              entindex_ = input.readInt32();
              break;
            }
            case 40: {
              bitField0_ |= 0x00000010;
              particleIndex_ = input.readUInt64();
              break;
            }
            case 48: {
              bitField0_ |= 0x00000020;
              handle_ = input.readInt32();
              break;
            }
            case 58: {
              skadistats.clarity.wire.common.proto.NetworkBaseTypes.CMsgVector2D.Builder subBuilder = null;
              if (((bitField0_ & 0x00000040) == 0x00000040)) {
                subBuilder = acceleration_.toBuilder();
              }
              acceleration_ = input.readMessage(skadistats.clarity.wire.common.proto.NetworkBaseTypes.CMsgVector2D.PARSER, extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(acceleration_);
                acceleration_ = subBuilder.buildPartial();
              }
              bitField0_ |= 0x00000040;
              break;
            }
            case 69: {
              bitField0_ |= 0x00000080;
              maxSpeed_ = input.readFloat();
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return skadistats.clarity.wire.common.proto.DotaUserMessages.internal_static_CDOTAUserMsg_CreateLinearProjectile_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return skadistats.clarity.wire.common.proto.DotaUserMessages.internal_static_CDOTAUserMsg_CreateLinearProjectile_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_CreateLinearProjectile.class, skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_CreateLinearProjectile.Builder.class);
    }

    public static com.google.protobuf.Parser<CDOTAUserMsg_CreateLinearProjectile> PARSER =
        new com.google.protobuf.AbstractParser<CDOTAUserMsg_CreateLinearProjectile>() {
      public CDOTAUserMsg_CreateLinearProjectile parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new CDOTAUserMsg_CreateLinearProjectile(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<CDOTAUserMsg_CreateLinearProjectile> getParserForType() {
      return PARSER;
    }

    private int bitField0_;
    public static final int ORIGIN_FIELD_NUMBER = 1;
    private skadistats.clarity.wire.common.proto.NetworkBaseTypes.CMsgVector origin_;
    /**
     * <code>optional .CMsgVector origin = 1;</code>
     */
    public boolean hasOrigin() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>optional .CMsgVector origin = 1;</code>
     */
    public skadistats.clarity.wire.common.proto.NetworkBaseTypes.CMsgVector getOrigin() {
      return origin_;
    }
    /**
     * <code>optional .CMsgVector origin = 1;</code>
     */
    public skadistats.clarity.wire.common.proto.NetworkBaseTypes.CMsgVectorOrBuilder getOriginOrBuilder() {
      return origin_;
    }

    public static final int VELOCITY_FIELD_NUMBER = 2;
    private skadistats.clarity.wire.common.proto.NetworkBaseTypes.CMsgVector2D velocity_;
    /**
     * <code>optional .CMsgVector2D velocity = 2;</code>
     */
    public boolean hasVelocity() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>optional .CMsgVector2D velocity = 2;</code>
     */
    public skadistats.clarity.wire.common.proto.NetworkBaseTypes.CMsgVector2D getVelocity() {
      return velocity_;
    }
    /**
     * <code>optional .CMsgVector2D velocity = 2;</code>
     */
    public skadistats.clarity.wire.common.proto.NetworkBaseTypes.CMsgVector2DOrBuilder getVelocityOrBuilder() {
      return velocity_;
    }

    public static final int LATENCY_FIELD_NUMBER = 3;
    private int latency_;
    /**
     * <code>optional int32 latency = 3;</code>
     */
    public boolean hasLatency() {
      return ((bitField0_ & 0x00000004) == 0x00000004);
    }
    /**
     * <code>optional int32 latency = 3;</code>
     */
    public int getLatency() {
      return latency_;
    }

    public static final int ENTINDEX_FIELD_NUMBER = 4;
    private int entindex_;
    /**
     * <code>optional int32 entindex = 4;</code>
     */
    public boolean hasEntindex() {
      return ((bitField0_ & 0x00000008) == 0x00000008);
    }
    /**
     * <code>optional int32 entindex = 4;</code>
     */
    public int getEntindex() {
      return entindex_;
    }

    public static final int PARTICLE_INDEX_FIELD_NUMBER = 5;
    private long particleIndex_;
    /**
     * <code>optional uint64 particle_index = 5;</code>
     */
    public boolean hasParticleIndex() {
      return ((bitField0_ & 0x00000010) == 0x00000010);
    }
    /**
     * <code>optional uint64 particle_index = 5;</code>
     */
    public long getParticleIndex() {
      return particleIndex_;
    }

    public static final int HANDLE_FIELD_NUMBER = 6;
    private int handle_;
    /**
     * <code>optional int32 handle = 6;</code>
     */
    public boolean hasHandle() {
      return ((bitField0_ & 0x00000020) == 0x00000020);
    }
    /**
     * <code>optional int32 handle = 6;</code>
     */
    public int getHandle() {
      return handle_;
    }

    public static final int ACCELERATION_FIELD_NUMBER = 7;
    private skadistats.clarity.wire.common.proto.NetworkBaseTypes.CMsgVector2D acceleration_;
    /**
     * <code>optional .CMsgVector2D acceleration = 7;</code>
     */
    public boolean hasAcceleration() {
      return ((bitField0_ & 0x00000040) == 0x00000040);
    }
    /**
     * <code>optional .CMsgVector2D acceleration = 7;</code>
     */
    public skadistats.clarity.wire.common.proto.NetworkBaseTypes.CMsgVector2D getAcceleration() {
      return acceleration_;
    }
    /**
     * <code>optional .CMsgVector2D acceleration = 7;</code>
     */
    public skadistats.clarity.wire.common.proto.NetworkBaseTypes.CMsgVector2DOrBuilder getAccelerationOrBuilder() {
      return acceleration_;
    }

    public static final int MAX_SPEED_FIELD_NUMBER = 8;
    private float maxSpeed_;
    /**
     * <code>optional float max_speed = 8;</code>
     */
    public boolean hasMaxSpeed() {
      return ((bitField0_ & 0x00000080) == 0x00000080);
    }
    /**
     * <code>optional float max_speed = 8;</code>
     */
    public float getMaxSpeed() {
      return maxSpeed_;
    }

    private void initFields() {
      origin_ = skadistats.clarity.wire.common.proto.NetworkBaseTypes.CMsgVector.getDefaultInstance();
      velocity_ = skadistats.clarity.wire.common.proto.NetworkBaseTypes.CMsgVector2D.getDefaultInstance();
      latency_ = 0;
      entindex_ = 0;
      particleIndex_ = 0L;
      handle_ = 0;
      acceleration_ = skadistats.clarity.wire.common.proto.NetworkBaseTypes.CMsgVector2D.getDefaultInstance();
      maxSpeed_ = 0F;
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeMessage(1, origin_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeMessage(2, velocity_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        output.writeInt32(3, latency_);
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        output.writeInt32(4, entindex_);
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        output.writeUInt64(5, particleIndex_);
      }
      if (((bitField0_ & 0x00000020) == 0x00000020)) {
        output.writeInt32(6, handle_);
      }
      if (((bitField0_ & 0x00000040) == 0x00000040)) {
        output.writeMessage(7, acceleration_);
      }
      if (((bitField0_ & 0x00000080) == 0x00000080)) {
        output.writeFloat(8, maxSpeed_);
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(1, origin_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(2, velocity_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(3, latency_);
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(4, entindex_);
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt64Size(5, particleIndex_);
      }
      if (((bitField0_ & 0x00000020) == 0x00000020)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(6, handle_);
      }
      if (((bitField0_ & 0x00000040) == 0x00000040)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(7, acceleration_);
      }
      if (((bitField0_ & 0x00000080) == 0x00000080)) {
        size += com.google.protobuf.CodedOutputStream
          .computeFloatSize(8, maxSpeed_);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_CreateLinearProjectile parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_CreateLinearProjectile parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_CreateLinearProjectile parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_CreateLinearProjectile parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_CreateLinearProjectile parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_CreateLinearProjectile parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_CreateLinearProjectile parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_CreateLinearProjectile parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_CreateLinearProjectile parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_CreateLinearProjectile parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_CreateLinearProjectile prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code CDOTAUserMsg_CreateLinearProjectile}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:CDOTAUserMsg_CreateLinearProjectile)
        skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_CreateLinearProjectileOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return skadistats.clarity.wire.common.proto.DotaUserMessages.internal_static_CDOTAUserMsg_CreateLinearProjectile_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return skadistats.clarity.wire.common.proto.DotaUserMessages.internal_static_CDOTAUserMsg_CreateLinearProjectile_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_CreateLinearProjectile.class, skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_CreateLinearProjectile.Builder.class);
      }

      // Construct using skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_CreateLinearProjectile.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
          getOriginFieldBuilder();
          getVelocityFieldBuilder();
          getAccelerationFieldBuilder();
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        if (originBuilder_ == null) {
          origin_ = skadistats.clarity.wire.common.proto.NetworkBaseTypes.CMsgVector.getDefaultInstance();
        } else {
          originBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000001);
        if (velocityBuilder_ == null) {
          velocity_ = skadistats.clarity.wire.common.proto.NetworkBaseTypes.CMsgVector2D.getDefaultInstance();
        } else {
          velocityBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000002);
        latency_ = 0;
        bitField0_ = (bitField0_ & ~0x00000004);
        entindex_ = 0;
        bitField0_ = (bitField0_ & ~0x00000008);
        particleIndex_ = 0L;
        bitField0_ = (bitField0_ & ~0x00000010);
        handle_ = 0;
        bitField0_ = (bitField0_ & ~0x00000020);
        if (accelerationBuilder_ == null) {
          acceleration_ = skadistats.clarity.wire.common.proto.NetworkBaseTypes.CMsgVector2D.getDefaultInstance();
        } else {
          accelerationBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000040);
        maxSpeed_ = 0F;
        bitField0_ = (bitField0_ & ~0x00000080);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return skadistats.clarity.wire.common.proto.DotaUserMessages.internal_static_CDOTAUserMsg_CreateLinearProjectile_descriptor;
      }

      public skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_CreateLinearProjectile getDefaultInstanceForType() {
        return skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_CreateLinearProjectile.getDefaultInstance();
      }

      public skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_CreateLinearProjectile build() {
        skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_CreateLinearProjectile result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_CreateLinearProjectile buildPartial() {
        skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_CreateLinearProjectile result = new skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_CreateLinearProjectile(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        if (originBuilder_ == null) {
          result.origin_ = origin_;
        } else {
          result.origin_ = originBuilder_.build();
        }
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        if (velocityBuilder_ == null) {
          result.velocity_ = velocity_;
        } else {
          result.velocity_ = velocityBuilder_.build();
        }
        if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
          to_bitField0_ |= 0x00000004;
        }
        result.latency_ = latency_;
        if (((from_bitField0_ & 0x00000008) == 0x00000008)) {
          to_bitField0_ |= 0x00000008;
        }
        result.entindex_ = entindex_;
        if (((from_bitField0_ & 0x00000010) == 0x00000010)) {
          to_bitField0_ |= 0x00000010;
        }
        result.particleIndex_ = particleIndex_;
        if (((from_bitField0_ & 0x00000020) == 0x00000020)) {
          to_bitField0_ |= 0x00000020;
        }
        result.handle_ = handle_;
        if (((from_bitField0_ & 0x00000040) == 0x00000040)) {
          to_bitField0_ |= 0x00000040;
        }
        if (accelerationBuilder_ == null) {
          result.acceleration_ = acceleration_;
        } else {
          result.acceleration_ = accelerationBuilder_.build();
        }
        if (((from_bitField0_ & 0x00000080) == 0x00000080)) {
          to_bitField0_ |= 0x00000080;
        }
        result.maxSpeed_ = maxSpeed_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_CreateLinearProjectile) {
          return mergeFrom((skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_CreateLinearProjectile)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_CreateLinearProjectile other) {
        if (other == skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_CreateLinearProjectile.getDefaultInstance()) return this;
        if (other.hasOrigin()) {
          mergeOrigin(other.getOrigin());
        }
        if (other.hasVelocity()) {
          mergeVelocity(other.getVelocity());
        }
        if (other.hasLatency()) {
          setLatency(other.getLatency());
        }
        if (other.hasEntindex()) {
          setEntindex(other.getEntindex());
        }
        if (other.hasParticleIndex()) {
          setParticleIndex(other.getParticleIndex());
        }
        if (other.hasHandle()) {
          setHandle(other.getHandle());
        }
        if (other.hasAcceleration()) {
          mergeAcceleration(other.getAcceleration());
        }
        if (other.hasMaxSpeed()) {
          setMaxSpeed(other.getMaxSpeed());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_CreateLinearProjectile parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_CreateLinearProjectile) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private skadistats.clarity.wire.common.proto.NetworkBaseTypes.CMsgVector origin_ = skadistats.clarity.wire.common.proto.NetworkBaseTypes.CMsgVector.getDefaultInstance();
      private com.google.protobuf.SingleFieldBuilder<
          skadistats.clarity.wire.common.proto.NetworkBaseTypes.CMsgVector, skadistats.clarity.wire.common.proto.NetworkBaseTypes.CMsgVector.Builder, skadistats.clarity.wire.common.proto.NetworkBaseTypes.CMsgVectorOrBuilder> originBuilder_;
      /**
       * <code>optional .CMsgVector origin = 1;</code>
       */
      public boolean hasOrigin() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>optional .CMsgVector origin = 1;</code>
       */
      public skadistats.clarity.wire.common.proto.NetworkBaseTypes.CMsgVector getOrigin() {
        if (originBuilder_ == null) {
          return origin_;
        } else {
          return originBuilder_.getMessage();
        }
      }
      /**
       * <code>optional .CMsgVector origin = 1;</code>
       */
      public Builder setOrigin(skadistats.clarity.wire.common.proto.NetworkBaseTypes.CMsgVector value) {
        if (originBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          origin_ = value;
          onChanged();
        } else {
          originBuilder_.setMessage(value);
        }
        bitField0_ |= 0x00000001;
        return this;
      }
      /**
       * <code>optional .CMsgVector origin = 1;</code>
       */
      public Builder setOrigin(
          skadistats.clarity.wire.common.proto.NetworkBaseTypes.CMsgVector.Builder builderForValue) {
        if (originBuilder_ == null) {
          origin_ = builderForValue.build();
          onChanged();
        } else {
          originBuilder_.setMessage(builderForValue.build());
        }
        bitField0_ |= 0x00000001;
        return this;
      }
      /**
       * <code>optional .CMsgVector origin = 1;</code>
       */
      public Builder mergeOrigin(skadistats.clarity.wire.common.proto.NetworkBaseTypes.CMsgVector value) {
        if (originBuilder_ == null) {
          if (((bitField0_ & 0x00000001) == 0x00000001) &&
              origin_ != skadistats.clarity.wire.common.proto.NetworkBaseTypes.CMsgVector.getDefaultInstance()) {
            origin_ =
              skadistats.clarity.wire.common.proto.NetworkBaseTypes.CMsgVector.newBuilder(origin_).mergeFrom(value).buildPartial();
          } else {
            origin_ = value;
          }
          onChanged();
        } else {
          originBuilder_.mergeFrom(value);
        }
        bitField0_ |= 0x00000001;
        return this;
      }
      /**
       * <code>optional .CMsgVector origin = 1;</code>
       */
      public Builder clearOrigin() {
        if (originBuilder_ == null) {
          origin_ = skadistats.clarity.wire.common.proto.NetworkBaseTypes.CMsgVector.getDefaultInstance();
          onChanged();
        } else {
          originBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000001);
        return this;
      }
      /**
       * <code>optional .CMsgVector origin = 1;</code>
       */
      public skadistats.clarity.wire.common.proto.NetworkBaseTypes.CMsgVector.Builder getOriginBuilder() {
        bitField0_ |= 0x00000001;
        onChanged();
        return getOriginFieldBuilder().getBuilder();
      }
      /**
       * <code>optional .CMsgVector origin = 1;</code>
       */
      public skadistats.clarity.wire.common.proto.NetworkBaseTypes.CMsgVectorOrBuilder getOriginOrBuilder() {
        if (originBuilder_ != null) {
          return originBuilder_.getMessageOrBuilder();
        } else {
          return origin_;
        }
      }
      /**
       * <code>optional .CMsgVector origin = 1;</code>
       */
      private com.google.protobuf.SingleFieldBuilder<
          skadistats.clarity.wire.common.proto.NetworkBaseTypes.CMsgVector, skadistats.clarity.wire.common.proto.NetworkBaseTypes.CMsgVector.Builder, skadistats.clarity.wire.common.proto.NetworkBaseTypes.CMsgVectorOrBuilder> 
          getOriginFieldBuilder() {
        if (originBuilder_ == null) {
          originBuilder_ = new com.google.protobuf.SingleFieldBuilder<
              skadistats.clarity.wire.common.proto.NetworkBaseTypes.CMsgVector, skadistats.clarity.wire.common.proto.NetworkBaseTypes.CMsgVector.Builder, skadistats.clarity.wire.common.proto.NetworkBaseTypes.CMsgVectorOrBuilder>(
                  getOrigin(),
                  getParentForChildren(),
                  isClean());
          origin_ = null;
        }
        return originBuilder_;
      }

      private skadistats.clarity.wire.common.proto.NetworkBaseTypes.CMsgVector2D velocity_ = skadistats.clarity.wire.common.proto.NetworkBaseTypes.CMsgVector2D.getDefaultInstance();
      private com.google.protobuf.SingleFieldBuilder<
          skadistats.clarity.wire.common.proto.NetworkBaseTypes.CMsgVector2D, skadistats.clarity.wire.common.proto.NetworkBaseTypes.CMsgVector2D.Builder, skadistats.clarity.wire.common.proto.NetworkBaseTypes.CMsgVector2DOrBuilder> velocityBuilder_;
      /**
       * <code>optional .CMsgVector2D velocity = 2;</code>
       */
      public boolean hasVelocity() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>optional .CMsgVector2D velocity = 2;</code>
       */
      public skadistats.clarity.wire.common.proto.NetworkBaseTypes.CMsgVector2D getVelocity() {
        if (velocityBuilder_ == null) {
          return velocity_;
        } else {
          return velocityBuilder_.getMessage();
        }
      }
      /**
       * <code>optional .CMsgVector2D velocity = 2;</code>
       */
      public Builder setVelocity(skadistats.clarity.wire.common.proto.NetworkBaseTypes.CMsgVector2D value) {
        if (velocityBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          velocity_ = value;
          onChanged();
        } else {
          velocityBuilder_.setMessage(value);
        }
        bitField0_ |= 0x00000002;
        return this;
      }
      /**
       * <code>optional .CMsgVector2D velocity = 2;</code>
       */
      public Builder setVelocity(
          skadistats.clarity.wire.common.proto.NetworkBaseTypes.CMsgVector2D.Builder builderForValue) {
        if (velocityBuilder_ == null) {
          velocity_ = builderForValue.build();
          onChanged();
        } else {
          velocityBuilder_.setMessage(builderForValue.build());
        }
        bitField0_ |= 0x00000002;
        return this;
      }
      /**
       * <code>optional .CMsgVector2D velocity = 2;</code>
       */
      public Builder mergeVelocity(skadistats.clarity.wire.common.proto.NetworkBaseTypes.CMsgVector2D value) {
        if (velocityBuilder_ == null) {
          if (((bitField0_ & 0x00000002) == 0x00000002) &&
              velocity_ != skadistats.clarity.wire.common.proto.NetworkBaseTypes.CMsgVector2D.getDefaultInstance()) {
            velocity_ =
              skadistats.clarity.wire.common.proto.NetworkBaseTypes.CMsgVector2D.newBuilder(velocity_).mergeFrom(value).buildPartial();
          } else {
            velocity_ = value;
          }
          onChanged();
        } else {
          velocityBuilder_.mergeFrom(value);
        }
        bitField0_ |= 0x00000002;
        return this;
      }
      /**
       * <code>optional .CMsgVector2D velocity = 2;</code>
       */
      public Builder clearVelocity() {
        if (velocityBuilder_ == null) {
          velocity_ = skadistats.clarity.wire.common.proto.NetworkBaseTypes.CMsgVector2D.getDefaultInstance();
          onChanged();
        } else {
          velocityBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000002);
        return this;
      }
      /**
       * <code>optional .CMsgVector2D velocity = 2;</code>
       */
      public skadistats.clarity.wire.common.proto.NetworkBaseTypes.CMsgVector2D.Builder getVelocityBuilder() {
        bitField0_ |= 0x00000002;
        onChanged();
        return getVelocityFieldBuilder().getBuilder();
      }
      /**
       * <code>optional .CMsgVector2D velocity = 2;</code>
       */
      public skadistats.clarity.wire.common.proto.NetworkBaseTypes.CMsgVector2DOrBuilder getVelocityOrBuilder() {
        if (velocityBuilder_ != null) {
          return velocityBuilder_.getMessageOrBuilder();
        } else {
          return velocity_;
        }
      }
      /**
       * <code>optional .CMsgVector2D velocity = 2;</code>
       */
      private com.google.protobuf.SingleFieldBuilder<
          skadistats.clarity.wire.common.proto.NetworkBaseTypes.CMsgVector2D, skadistats.clarity.wire.common.proto.NetworkBaseTypes.CMsgVector2D.Builder, skadistats.clarity.wire.common.proto.NetworkBaseTypes.CMsgVector2DOrBuilder> 
          getVelocityFieldBuilder() {
        if (velocityBuilder_ == null) {
          velocityBuilder_ = new com.google.protobuf.SingleFieldBuilder<
              skadistats.clarity.wire.common.proto.NetworkBaseTypes.CMsgVector2D, skadistats.clarity.wire.common.proto.NetworkBaseTypes.CMsgVector2D.Builder, skadistats.clarity.wire.common.proto.NetworkBaseTypes.CMsgVector2DOrBuilder>(
                  getVelocity(),
                  getParentForChildren(),
                  isClean());
          velocity_ = null;
        }
        return velocityBuilder_;
      }

      private int latency_ ;
      /**
       * <code>optional int32 latency = 3;</code>
       */
      public boolean hasLatency() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }
      /**
       * <code>optional int32 latency = 3;</code>
       */
      public int getLatency() {
        return latency_;
      }
      /**
       * <code>optional int32 latency = 3;</code>
       */
      public Builder setLatency(int value) {
        bitField0_ |= 0x00000004;
        latency_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 latency = 3;</code>
       */
      public Builder clearLatency() {
        bitField0_ = (bitField0_ & ~0x00000004);
        latency_ = 0;
        onChanged();
        return this;
      }

      private int entindex_ ;
      /**
       * <code>optional int32 entindex = 4;</code>
       */
      public boolean hasEntindex() {
        return ((bitField0_ & 0x00000008) == 0x00000008);
      }
      /**
       * <code>optional int32 entindex = 4;</code>
       */
      public int getEntindex() {
        return entindex_;
      }
      /**
       * <code>optional int32 entindex = 4;</code>
       */
      public Builder setEntindex(int value) {
        bitField0_ |= 0x00000008;
        entindex_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 entindex = 4;</code>
       */
      public Builder clearEntindex() {
        bitField0_ = (bitField0_ & ~0x00000008);
        entindex_ = 0;
        onChanged();
        return this;
      }

      private long particleIndex_ ;
      /**
       * <code>optional uint64 particle_index = 5;</code>
       */
      public boolean hasParticleIndex() {
        return ((bitField0_ & 0x00000010) == 0x00000010);
      }
      /**
       * <code>optional uint64 particle_index = 5;</code>
       */
      public long getParticleIndex() {
        return particleIndex_;
      }
      /**
       * <code>optional uint64 particle_index = 5;</code>
       */
      public Builder setParticleIndex(long value) {
        bitField0_ |= 0x00000010;
        particleIndex_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional uint64 particle_index = 5;</code>
       */
      public Builder clearParticleIndex() {
        bitField0_ = (bitField0_ & ~0x00000010);
        particleIndex_ = 0L;
        onChanged();
        return this;
      }

      private int handle_ ;
      /**
       * <code>optional int32 handle = 6;</code>
       */
      public boolean hasHandle() {
        return ((bitField0_ & 0x00000020) == 0x00000020);
      }
      /**
       * <code>optional int32 handle = 6;</code>
       */
      public int getHandle() {
        return handle_;
      }
      /**
       * <code>optional int32 handle = 6;</code>
       */
      public Builder setHandle(int value) {
        bitField0_ |= 0x00000020;
        handle_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 handle = 6;</code>
       */
      public Builder clearHandle() {
        bitField0_ = (bitField0_ & ~0x00000020);
        handle_ = 0;
        onChanged();
        return this;
      }

      private skadistats.clarity.wire.common.proto.NetworkBaseTypes.CMsgVector2D acceleration_ = skadistats.clarity.wire.common.proto.NetworkBaseTypes.CMsgVector2D.getDefaultInstance();
      private com.google.protobuf.SingleFieldBuilder<
          skadistats.clarity.wire.common.proto.NetworkBaseTypes.CMsgVector2D, skadistats.clarity.wire.common.proto.NetworkBaseTypes.CMsgVector2D.Builder, skadistats.clarity.wire.common.proto.NetworkBaseTypes.CMsgVector2DOrBuilder> accelerationBuilder_;
      /**
       * <code>optional .CMsgVector2D acceleration = 7;</code>
       */
      public boolean hasAcceleration() {
        return ((bitField0_ & 0x00000040) == 0x00000040);
      }
      /**
       * <code>optional .CMsgVector2D acceleration = 7;</code>
       */
      public skadistats.clarity.wire.common.proto.NetworkBaseTypes.CMsgVector2D getAcceleration() {
        if (accelerationBuilder_ == null) {
          return acceleration_;
        } else {
          return accelerationBuilder_.getMessage();
        }
      }
      /**
       * <code>optional .CMsgVector2D acceleration = 7;</code>
       */
      public Builder setAcceleration(skadistats.clarity.wire.common.proto.NetworkBaseTypes.CMsgVector2D value) {
        if (accelerationBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          acceleration_ = value;
          onChanged();
        } else {
          accelerationBuilder_.setMessage(value);
        }
        bitField0_ |= 0x00000040;
        return this;
      }
      /**
       * <code>optional .CMsgVector2D acceleration = 7;</code>
       */
      public Builder setAcceleration(
          skadistats.clarity.wire.common.proto.NetworkBaseTypes.CMsgVector2D.Builder builderForValue) {
        if (accelerationBuilder_ == null) {
          acceleration_ = builderForValue.build();
          onChanged();
        } else {
          accelerationBuilder_.setMessage(builderForValue.build());
        }
        bitField0_ |= 0x00000040;
        return this;
      }
      /**
       * <code>optional .CMsgVector2D acceleration = 7;</code>
       */
      public Builder mergeAcceleration(skadistats.clarity.wire.common.proto.NetworkBaseTypes.CMsgVector2D value) {
        if (accelerationBuilder_ == null) {
          if (((bitField0_ & 0x00000040) == 0x00000040) &&
              acceleration_ != skadistats.clarity.wire.common.proto.NetworkBaseTypes.CMsgVector2D.getDefaultInstance()) {
            acceleration_ =
              skadistats.clarity.wire.common.proto.NetworkBaseTypes.CMsgVector2D.newBuilder(acceleration_).mergeFrom(value).buildPartial();
          } else {
            acceleration_ = value;
          }
          onChanged();
        } else {
          accelerationBuilder_.mergeFrom(value);
        }
        bitField0_ |= 0x00000040;
        return this;
      }
      /**
       * <code>optional .CMsgVector2D acceleration = 7;</code>
       */
      public Builder clearAcceleration() {
        if (accelerationBuilder_ == null) {
          acceleration_ = skadistats.clarity.wire.common.proto.NetworkBaseTypes.CMsgVector2D.getDefaultInstance();
          onChanged();
        } else {
          accelerationBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000040);
        return this;
      }
      /**
       * <code>optional .CMsgVector2D acceleration = 7;</code>
       */
      public skadistats.clarity.wire.common.proto.NetworkBaseTypes.CMsgVector2D.Builder getAccelerationBuilder() {
        bitField0_ |= 0x00000040;
        onChanged();
        return getAccelerationFieldBuilder().getBuilder();
      }
      /**
       * <code>optional .CMsgVector2D acceleration = 7;</code>
       */
      public skadistats.clarity.wire.common.proto.NetworkBaseTypes.CMsgVector2DOrBuilder getAccelerationOrBuilder() {
        if (accelerationBuilder_ != null) {
          return accelerationBuilder_.getMessageOrBuilder();
        } else {
          return acceleration_;
        }
      }
      /**
       * <code>optional .CMsgVector2D acceleration = 7;</code>
       */
      private com.google.protobuf.SingleFieldBuilder<
          skadistats.clarity.wire.common.proto.NetworkBaseTypes.CMsgVector2D, skadistats.clarity.wire.common.proto.NetworkBaseTypes.CMsgVector2D.Builder, skadistats.clarity.wire.common.proto.NetworkBaseTypes.CMsgVector2DOrBuilder> 
          getAccelerationFieldBuilder() {
        if (accelerationBuilder_ == null) {
          accelerationBuilder_ = new com.google.protobuf.SingleFieldBuilder<
              skadistats.clarity.wire.common.proto.NetworkBaseTypes.CMsgVector2D, skadistats.clarity.wire.common.proto.NetworkBaseTypes.CMsgVector2D.Builder, skadistats.clarity.wire.common.proto.NetworkBaseTypes.CMsgVector2DOrBuilder>(
                  getAcceleration(),
                  getParentForChildren(),
                  isClean());
          acceleration_ = null;
        }
        return accelerationBuilder_;
      }

      private float maxSpeed_ ;
      /**
       * <code>optional float max_speed = 8;</code>
       */
      public boolean hasMaxSpeed() {
        return ((bitField0_ & 0x00000080) == 0x00000080);
      }
      /**
       * <code>optional float max_speed = 8;</code>
       */
      public float getMaxSpeed() {
        return maxSpeed_;
      }
      /**
       * <code>optional float max_speed = 8;</code>
       */
      public Builder setMaxSpeed(float value) {
        bitField0_ |= 0x00000080;
        maxSpeed_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional float max_speed = 8;</code>
       */
      public Builder clearMaxSpeed() {
        bitField0_ = (bitField0_ & ~0x00000080);
        maxSpeed_ = 0F;
        onChanged();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:CDOTAUserMsg_CreateLinearProjectile)
    }

    static {
      defaultInstance = new CDOTAUserMsg_CreateLinearProjectile(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:CDOTAUserMsg_CreateLinearProjectile)
  }

  public interface CDOTAUserMsg_DestroyLinearProjectileOrBuilder extends
      // @@protoc_insertion_point(interface_extends:CDOTAUserMsg_DestroyLinearProjectile)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>optional int32 handle = 1;</code>
     */
    boolean hasHandle();
    /**
     * <code>optional int32 handle = 1;</code>
     */
    int getHandle();
  }
  /**
   * Protobuf type {@code CDOTAUserMsg_DestroyLinearProjectile}
   */
  public static final class CDOTAUserMsg_DestroyLinearProjectile extends
      com.google.protobuf.GeneratedMessage implements
      // @@protoc_insertion_point(message_implements:CDOTAUserMsg_DestroyLinearProjectile)
      CDOTAUserMsg_DestroyLinearProjectileOrBuilder {
    // Use CDOTAUserMsg_DestroyLinearProjectile.newBuilder() to construct.
    private CDOTAUserMsg_DestroyLinearProjectile(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private CDOTAUserMsg_DestroyLinearProjectile(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final CDOTAUserMsg_DestroyLinearProjectile defaultInstance;
    public static CDOTAUserMsg_DestroyLinearProjectile getDefaultInstance() {
      return defaultInstance;
    }

    public CDOTAUserMsg_DestroyLinearProjectile getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private CDOTAUserMsg_DestroyLinearProjectile(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 8: {
              bitField0_ |= 0x00000001;
              handle_ = input.readInt32();
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return skadistats.clarity.wire.common.proto.DotaUserMessages.internal_static_CDOTAUserMsg_DestroyLinearProjectile_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return skadistats.clarity.wire.common.proto.DotaUserMessages.internal_static_CDOTAUserMsg_DestroyLinearProjectile_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_DestroyLinearProjectile.class, skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_DestroyLinearProjectile.Builder.class);
    }

    public static com.google.protobuf.Parser<CDOTAUserMsg_DestroyLinearProjectile> PARSER =
        new com.google.protobuf.AbstractParser<CDOTAUserMsg_DestroyLinearProjectile>() {
      public CDOTAUserMsg_DestroyLinearProjectile parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new CDOTAUserMsg_DestroyLinearProjectile(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<CDOTAUserMsg_DestroyLinearProjectile> getParserForType() {
      return PARSER;
    }

    private int bitField0_;
    public static final int HANDLE_FIELD_NUMBER = 1;
    private int handle_;
    /**
     * <code>optional int32 handle = 1;</code>
     */
    public boolean hasHandle() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>optional int32 handle = 1;</code>
     */
    public int getHandle() {
      return handle_;
    }

    private void initFields() {
      handle_ = 0;
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeInt32(1, handle_);
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(1, handle_);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_DestroyLinearProjectile parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_DestroyLinearProjectile parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_DestroyLinearProjectile parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_DestroyLinearProjectile parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_DestroyLinearProjectile parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_DestroyLinearProjectile parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_DestroyLinearProjectile parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_DestroyLinearProjectile parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_DestroyLinearProjectile parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_DestroyLinearProjectile parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_DestroyLinearProjectile prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code CDOTAUserMsg_DestroyLinearProjectile}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:CDOTAUserMsg_DestroyLinearProjectile)
        skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_DestroyLinearProjectileOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return skadistats.clarity.wire.common.proto.DotaUserMessages.internal_static_CDOTAUserMsg_DestroyLinearProjectile_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return skadistats.clarity.wire.common.proto.DotaUserMessages.internal_static_CDOTAUserMsg_DestroyLinearProjectile_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_DestroyLinearProjectile.class, skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_DestroyLinearProjectile.Builder.class);
      }

      // Construct using skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_DestroyLinearProjectile.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        handle_ = 0;
        bitField0_ = (bitField0_ & ~0x00000001);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return skadistats.clarity.wire.common.proto.DotaUserMessages.internal_static_CDOTAUserMsg_DestroyLinearProjectile_descriptor;
      }

      public skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_DestroyLinearProjectile getDefaultInstanceForType() {
        return skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_DestroyLinearProjectile.getDefaultInstance();
      }

      public skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_DestroyLinearProjectile build() {
        skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_DestroyLinearProjectile result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_DestroyLinearProjectile buildPartial() {
        skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_DestroyLinearProjectile result = new skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_DestroyLinearProjectile(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.handle_ = handle_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_DestroyLinearProjectile) {
          return mergeFrom((skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_DestroyLinearProjectile)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_DestroyLinearProjectile other) {
        if (other == skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_DestroyLinearProjectile.getDefaultInstance()) return this;
        if (other.hasHandle()) {
          setHandle(other.getHandle());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_DestroyLinearProjectile parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_DestroyLinearProjectile) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private int handle_ ;
      /**
       * <code>optional int32 handle = 1;</code>
       */
      public boolean hasHandle() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>optional int32 handle = 1;</code>
       */
      public int getHandle() {
        return handle_;
      }
      /**
       * <code>optional int32 handle = 1;</code>
       */
      public Builder setHandle(int value) {
        bitField0_ |= 0x00000001;
        handle_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 handle = 1;</code>
       */
      public Builder clearHandle() {
        bitField0_ = (bitField0_ & ~0x00000001);
        handle_ = 0;
        onChanged();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:CDOTAUserMsg_DestroyLinearProjectile)
    }

    static {
      defaultInstance = new CDOTAUserMsg_DestroyLinearProjectile(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:CDOTAUserMsg_DestroyLinearProjectile)
  }

  public interface CDOTAUserMsg_DodgeTrackingProjectilesOrBuilder extends
      // @@protoc_insertion_point(interface_extends:CDOTAUserMsg_DodgeTrackingProjectiles)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>required int32 entindex = 1;</code>
     */
    boolean hasEntindex();
    /**
     * <code>required int32 entindex = 1;</code>
     */
    int getEntindex();

    /**
     * <code>optional bool attacks_only = 2;</code>
     */
    boolean hasAttacksOnly();
    /**
     * <code>optional bool attacks_only = 2;</code>
     */
    boolean getAttacksOnly();
  }
  /**
   * Protobuf type {@code CDOTAUserMsg_DodgeTrackingProjectiles}
   */
  public static final class CDOTAUserMsg_DodgeTrackingProjectiles extends
      com.google.protobuf.GeneratedMessage implements
      // @@protoc_insertion_point(message_implements:CDOTAUserMsg_DodgeTrackingProjectiles)
      CDOTAUserMsg_DodgeTrackingProjectilesOrBuilder {
    // Use CDOTAUserMsg_DodgeTrackingProjectiles.newBuilder() to construct.
    private CDOTAUserMsg_DodgeTrackingProjectiles(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private CDOTAUserMsg_DodgeTrackingProjectiles(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final CDOTAUserMsg_DodgeTrackingProjectiles defaultInstance;
    public static CDOTAUserMsg_DodgeTrackingProjectiles getDefaultInstance() {
      return defaultInstance;
    }

    public CDOTAUserMsg_DodgeTrackingProjectiles getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private CDOTAUserMsg_DodgeTrackingProjectiles(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 8: {
              bitField0_ |= 0x00000001;
              entindex_ = input.readInt32();
              break;
            }
            case 16: {
              bitField0_ |= 0x00000002;
              attacksOnly_ = input.readBool();
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return skadistats.clarity.wire.common.proto.DotaUserMessages.internal_static_CDOTAUserMsg_DodgeTrackingProjectiles_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return skadistats.clarity.wire.common.proto.DotaUserMessages.internal_static_CDOTAUserMsg_DodgeTrackingProjectiles_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_DodgeTrackingProjectiles.class, skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_DodgeTrackingProjectiles.Builder.class);
    }

    public static com.google.protobuf.Parser<CDOTAUserMsg_DodgeTrackingProjectiles> PARSER =
        new com.google.protobuf.AbstractParser<CDOTAUserMsg_DodgeTrackingProjectiles>() {
      public CDOTAUserMsg_DodgeTrackingProjectiles parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new CDOTAUserMsg_DodgeTrackingProjectiles(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<CDOTAUserMsg_DodgeTrackingProjectiles> getParserForType() {
      return PARSER;
    }

    private int bitField0_;
    public static final int ENTINDEX_FIELD_NUMBER = 1;
    private int entindex_;
    /**
     * <code>required int32 entindex = 1;</code>
     */
    public boolean hasEntindex() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>required int32 entindex = 1;</code>
     */
    public int getEntindex() {
      return entindex_;
    }

    public static final int ATTACKS_ONLY_FIELD_NUMBER = 2;
    private boolean attacksOnly_;
    /**
     * <code>optional bool attacks_only = 2;</code>
     */
    public boolean hasAttacksOnly() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>optional bool attacks_only = 2;</code>
     */
    public boolean getAttacksOnly() {
      return attacksOnly_;
    }

    private void initFields() {
      entindex_ = 0;
      attacksOnly_ = false;
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      if (!hasEntindex()) {
        memoizedIsInitialized = 0;
        return false;
      }
      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeInt32(1, entindex_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeBool(2, attacksOnly_);
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(1, entindex_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBoolSize(2, attacksOnly_);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_DodgeTrackingProjectiles parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_DodgeTrackingProjectiles parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_DodgeTrackingProjectiles parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_DodgeTrackingProjectiles parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_DodgeTrackingProjectiles parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_DodgeTrackingProjectiles parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_DodgeTrackingProjectiles parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_DodgeTrackingProjectiles parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_DodgeTrackingProjectiles parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_DodgeTrackingProjectiles parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_DodgeTrackingProjectiles prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code CDOTAUserMsg_DodgeTrackingProjectiles}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:CDOTAUserMsg_DodgeTrackingProjectiles)
        skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_DodgeTrackingProjectilesOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return skadistats.clarity.wire.common.proto.DotaUserMessages.internal_static_CDOTAUserMsg_DodgeTrackingProjectiles_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return skadistats.clarity.wire.common.proto.DotaUserMessages.internal_static_CDOTAUserMsg_DodgeTrackingProjectiles_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_DodgeTrackingProjectiles.class, skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_DodgeTrackingProjectiles.Builder.class);
      }

      // Construct using skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_DodgeTrackingProjectiles.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        entindex_ = 0;
        bitField0_ = (bitField0_ & ~0x00000001);
        attacksOnly_ = false;
        bitField0_ = (bitField0_ & ~0x00000002);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return skadistats.clarity.wire.common.proto.DotaUserMessages.internal_static_CDOTAUserMsg_DodgeTrackingProjectiles_descriptor;
      }

      public skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_DodgeTrackingProjectiles getDefaultInstanceForType() {
        return skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_DodgeTrackingProjectiles.getDefaultInstance();
      }

      public skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_DodgeTrackingProjectiles build() {
        skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_DodgeTrackingProjectiles result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_DodgeTrackingProjectiles buildPartial() {
        skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_DodgeTrackingProjectiles result = new skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_DodgeTrackingProjectiles(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.entindex_ = entindex_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.attacksOnly_ = attacksOnly_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_DodgeTrackingProjectiles) {
          return mergeFrom((skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_DodgeTrackingProjectiles)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_DodgeTrackingProjectiles other) {
        if (other == skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_DodgeTrackingProjectiles.getDefaultInstance()) return this;
        if (other.hasEntindex()) {
          setEntindex(other.getEntindex());
        }
        if (other.hasAttacksOnly()) {
          setAttacksOnly(other.getAttacksOnly());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        if (!hasEntindex()) {
          
          return false;
        }
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_DodgeTrackingProjectiles parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_DodgeTrackingProjectiles) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private int entindex_ ;
      /**
       * <code>required int32 entindex = 1;</code>
       */
      public boolean hasEntindex() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>required int32 entindex = 1;</code>
       */
      public int getEntindex() {
        return entindex_;
      }
      /**
       * <code>required int32 entindex = 1;</code>
       */
      public Builder setEntindex(int value) {
        bitField0_ |= 0x00000001;
        entindex_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required int32 entindex = 1;</code>
       */
      public Builder clearEntindex() {
        bitField0_ = (bitField0_ & ~0x00000001);
        entindex_ = 0;
        onChanged();
        return this;
      }

      private boolean attacksOnly_ ;
      /**
       * <code>optional bool attacks_only = 2;</code>
       */
      public boolean hasAttacksOnly() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>optional bool attacks_only = 2;</code>
       */
      public boolean getAttacksOnly() {
        return attacksOnly_;
      }
      /**
       * <code>optional bool attacks_only = 2;</code>
       */
      public Builder setAttacksOnly(boolean value) {
        bitField0_ |= 0x00000002;
        attacksOnly_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional bool attacks_only = 2;</code>
       */
      public Builder clearAttacksOnly() {
        bitField0_ = (bitField0_ & ~0x00000002);
        attacksOnly_ = false;
        onChanged();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:CDOTAUserMsg_DodgeTrackingProjectiles)
    }

    static {
      defaultInstance = new CDOTAUserMsg_DodgeTrackingProjectiles(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:CDOTAUserMsg_DodgeTrackingProjectiles)
  }

  public interface CDOTAUserMsg_SpectatorPlayerClickOrBuilder extends
      // @@protoc_insertion_point(interface_extends:CDOTAUserMsg_SpectatorPlayerClick)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>required int32 entindex = 1;</code>
     */
    boolean hasEntindex();
    /**
     * <code>required int32 entindex = 1;</code>
     */
    int getEntindex();

    /**
     * <code>optional int32 order_type = 2;</code>
     */
    boolean hasOrderType();
    /**
     * <code>optional int32 order_type = 2;</code>
     */
    int getOrderType();

    /**
     * <code>optional int32 target_index = 3;</code>
     */
    boolean hasTargetIndex();
    /**
     * <code>optional int32 target_index = 3;</code>
     */
    int getTargetIndex();
  }
  /**
   * Protobuf type {@code CDOTAUserMsg_SpectatorPlayerClick}
   */
  public static final class CDOTAUserMsg_SpectatorPlayerClick extends
      com.google.protobuf.GeneratedMessage implements
      // @@protoc_insertion_point(message_implements:CDOTAUserMsg_SpectatorPlayerClick)
      CDOTAUserMsg_SpectatorPlayerClickOrBuilder {
    // Use CDOTAUserMsg_SpectatorPlayerClick.newBuilder() to construct.
    private CDOTAUserMsg_SpectatorPlayerClick(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private CDOTAUserMsg_SpectatorPlayerClick(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final CDOTAUserMsg_SpectatorPlayerClick defaultInstance;
    public static CDOTAUserMsg_SpectatorPlayerClick getDefaultInstance() {
      return defaultInstance;
    }

    public CDOTAUserMsg_SpectatorPlayerClick getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private CDOTAUserMsg_SpectatorPlayerClick(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 8: {
              bitField0_ |= 0x00000001;
              entindex_ = input.readInt32();
              break;
            }
            case 16: {
              bitField0_ |= 0x00000002;
              orderType_ = input.readInt32();
              break;
            }
            case 24: {
              bitField0_ |= 0x00000004;
              targetIndex_ = input.readInt32();
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return skadistats.clarity.wire.common.proto.DotaUserMessages.internal_static_CDOTAUserMsg_SpectatorPlayerClick_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return skadistats.clarity.wire.common.proto.DotaUserMessages.internal_static_CDOTAUserMsg_SpectatorPlayerClick_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_SpectatorPlayerClick.class, skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_SpectatorPlayerClick.Builder.class);
    }

    public static com.google.protobuf.Parser<CDOTAUserMsg_SpectatorPlayerClick> PARSER =
        new com.google.protobuf.AbstractParser<CDOTAUserMsg_SpectatorPlayerClick>() {
      public CDOTAUserMsg_SpectatorPlayerClick parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new CDOTAUserMsg_SpectatorPlayerClick(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<CDOTAUserMsg_SpectatorPlayerClick> getParserForType() {
      return PARSER;
    }

    private int bitField0_;
    public static final int ENTINDEX_FIELD_NUMBER = 1;
    private int entindex_;
    /**
     * <code>required int32 entindex = 1;</code>
     */
    public boolean hasEntindex() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>required int32 entindex = 1;</code>
     */
    public int getEntindex() {
      return entindex_;
    }

    public static final int ORDER_TYPE_FIELD_NUMBER = 2;
    private int orderType_;
    /**
     * <code>optional int32 order_type = 2;</code>
     */
    public boolean hasOrderType() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>optional int32 order_type = 2;</code>
     */
    public int getOrderType() {
      return orderType_;
    }

    public static final int TARGET_INDEX_FIELD_NUMBER = 3;
    private int targetIndex_;
    /**
     * <code>optional int32 target_index = 3;</code>
     */
    public boolean hasTargetIndex() {
      return ((bitField0_ & 0x00000004) == 0x00000004);
    }
    /**
     * <code>optional int32 target_index = 3;</code>
     */
    public int getTargetIndex() {
      return targetIndex_;
    }

    private void initFields() {
      entindex_ = 0;
      orderType_ = 0;
      targetIndex_ = 0;
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      if (!hasEntindex()) {
        memoizedIsInitialized = 0;
        return false;
      }
      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeInt32(1, entindex_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeInt32(2, orderType_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        output.writeInt32(3, targetIndex_);
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(1, entindex_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(2, orderType_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(3, targetIndex_);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_SpectatorPlayerClick parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_SpectatorPlayerClick parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_SpectatorPlayerClick parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_SpectatorPlayerClick parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_SpectatorPlayerClick parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_SpectatorPlayerClick parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_SpectatorPlayerClick parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_SpectatorPlayerClick parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_SpectatorPlayerClick parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_SpectatorPlayerClick parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_SpectatorPlayerClick prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code CDOTAUserMsg_SpectatorPlayerClick}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:CDOTAUserMsg_SpectatorPlayerClick)
        skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_SpectatorPlayerClickOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return skadistats.clarity.wire.common.proto.DotaUserMessages.internal_static_CDOTAUserMsg_SpectatorPlayerClick_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return skadistats.clarity.wire.common.proto.DotaUserMessages.internal_static_CDOTAUserMsg_SpectatorPlayerClick_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_SpectatorPlayerClick.class, skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_SpectatorPlayerClick.Builder.class);
      }

      // Construct using skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_SpectatorPlayerClick.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        entindex_ = 0;
        bitField0_ = (bitField0_ & ~0x00000001);
        orderType_ = 0;
        bitField0_ = (bitField0_ & ~0x00000002);
        targetIndex_ = 0;
        bitField0_ = (bitField0_ & ~0x00000004);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return skadistats.clarity.wire.common.proto.DotaUserMessages.internal_static_CDOTAUserMsg_SpectatorPlayerClick_descriptor;
      }

      public skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_SpectatorPlayerClick getDefaultInstanceForType() {
        return skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_SpectatorPlayerClick.getDefaultInstance();
      }

      public skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_SpectatorPlayerClick build() {
        skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_SpectatorPlayerClick result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_SpectatorPlayerClick buildPartial() {
        skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_SpectatorPlayerClick result = new skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_SpectatorPlayerClick(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.entindex_ = entindex_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.orderType_ = orderType_;
        if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
          to_bitField0_ |= 0x00000004;
        }
        result.targetIndex_ = targetIndex_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_SpectatorPlayerClick) {
          return mergeFrom((skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_SpectatorPlayerClick)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_SpectatorPlayerClick other) {
        if (other == skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_SpectatorPlayerClick.getDefaultInstance()) return this;
        if (other.hasEntindex()) {
          setEntindex(other.getEntindex());
        }
        if (other.hasOrderType()) {
          setOrderType(other.getOrderType());
        }
        if (other.hasTargetIndex()) {
          setTargetIndex(other.getTargetIndex());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        if (!hasEntindex()) {
          
          return false;
        }
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_SpectatorPlayerClick parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_SpectatorPlayerClick) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private int entindex_ ;
      /**
       * <code>required int32 entindex = 1;</code>
       */
      public boolean hasEntindex() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>required int32 entindex = 1;</code>
       */
      public int getEntindex() {
        return entindex_;
      }
      /**
       * <code>required int32 entindex = 1;</code>
       */
      public Builder setEntindex(int value) {
        bitField0_ |= 0x00000001;
        entindex_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required int32 entindex = 1;</code>
       */
      public Builder clearEntindex() {
        bitField0_ = (bitField0_ & ~0x00000001);
        entindex_ = 0;
        onChanged();
        return this;
      }

      private int orderType_ ;
      /**
       * <code>optional int32 order_type = 2;</code>
       */
      public boolean hasOrderType() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>optional int32 order_type = 2;</code>
       */
      public int getOrderType() {
        return orderType_;
      }
      /**
       * <code>optional int32 order_type = 2;</code>
       */
      public Builder setOrderType(int value) {
        bitField0_ |= 0x00000002;
        orderType_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 order_type = 2;</code>
       */
      public Builder clearOrderType() {
        bitField0_ = (bitField0_ & ~0x00000002);
        orderType_ = 0;
        onChanged();
        return this;
      }

      private int targetIndex_ ;
      /**
       * <code>optional int32 target_index = 3;</code>
       */
      public boolean hasTargetIndex() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }
      /**
       * <code>optional int32 target_index = 3;</code>
       */
      public int getTargetIndex() {
        return targetIndex_;
      }
      /**
       * <code>optional int32 target_index = 3;</code>
       */
      public Builder setTargetIndex(int value) {
        bitField0_ |= 0x00000004;
        targetIndex_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 target_index = 3;</code>
       */
      public Builder clearTargetIndex() {
        bitField0_ = (bitField0_ & ~0x00000004);
        targetIndex_ = 0;
        onChanged();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:CDOTAUserMsg_SpectatorPlayerClick)
    }

    static {
      defaultInstance = new CDOTAUserMsg_SpectatorPlayerClick(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:CDOTAUserMsg_SpectatorPlayerClick)
  }

  public interface CDOTAUserMsg_SpectatorPlayerUnitOrdersOrBuilder extends
      // @@protoc_insertion_point(interface_extends:CDOTAUserMsg_SpectatorPlayerUnitOrders)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>optional int32 entindex = 1;</code>
     */
    boolean hasEntindex();
    /**
     * <code>optional int32 entindex = 1;</code>
     */
    int getEntindex();

    /**
     * <code>optional int32 order_type = 2;</code>
     */
    boolean hasOrderType();
    /**
     * <code>optional int32 order_type = 2;</code>
     */
    int getOrderType();

    /**
     * <code>repeated int32 units = 3;</code>
     */
    java.util.List<java.lang.Integer> getUnitsList();
    /**
     * <code>repeated int32 units = 3;</code>
     */
    int getUnitsCount();
    /**
     * <code>repeated int32 units = 3;</code>
     */
    int getUnits(int index);

    /**
     * <code>optional int32 target_index = 4;</code>
     */
    boolean hasTargetIndex();
    /**
     * <code>optional int32 target_index = 4;</code>
     */
    int getTargetIndex();

    /**
     * <code>optional int32 ability_index = 5;</code>
     */
    boolean hasAbilityIndex();
    /**
     * <code>optional int32 ability_index = 5;</code>
     */
    int getAbilityIndex();

    /**
     * <code>optional .CMsgVector position = 6;</code>
     */
    boolean hasPosition();
    /**
     * <code>optional .CMsgVector position = 6;</code>
     */
    skadistats.clarity.wire.common.proto.NetworkBaseTypes.CMsgVector getPosition();
    /**
     * <code>optional .CMsgVector position = 6;</code>
     */
    skadistats.clarity.wire.common.proto.NetworkBaseTypes.CMsgVectorOrBuilder getPositionOrBuilder();

    /**
     * <code>optional bool queue = 7;</code>
     */
    boolean hasQueue();
    /**
     * <code>optional bool queue = 7;</code>
     */
    boolean getQueue();

    /**
     * <code>optional int32 sequence_number = 8;</code>
     */
    boolean hasSequenceNumber();
    /**
     * <code>optional int32 sequence_number = 8;</code>
     */
    int getSequenceNumber();
  }
  /**
   * Protobuf type {@code CDOTAUserMsg_SpectatorPlayerUnitOrders}
   */
  public static final class CDOTAUserMsg_SpectatorPlayerUnitOrders extends
      com.google.protobuf.GeneratedMessage implements
      // @@protoc_insertion_point(message_implements:CDOTAUserMsg_SpectatorPlayerUnitOrders)
      CDOTAUserMsg_SpectatorPlayerUnitOrdersOrBuilder {
    // Use CDOTAUserMsg_SpectatorPlayerUnitOrders.newBuilder() to construct.
    private CDOTAUserMsg_SpectatorPlayerUnitOrders(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private CDOTAUserMsg_SpectatorPlayerUnitOrders(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final CDOTAUserMsg_SpectatorPlayerUnitOrders defaultInstance;
    public static CDOTAUserMsg_SpectatorPlayerUnitOrders getDefaultInstance() {
      return defaultInstance;
    }

    public CDOTAUserMsg_SpectatorPlayerUnitOrders getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private CDOTAUserMsg_SpectatorPlayerUnitOrders(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 8: {
              bitField0_ |= 0x00000001;
              entindex_ = input.readInt32();
              break;
            }
            case 16: {
              bitField0_ |= 0x00000002;
              orderType_ = input.readInt32();
              break;
            }
            case 24: {
              if (!((mutable_bitField0_ & 0x00000004) == 0x00000004)) {
                units_ = new java.util.ArrayList<java.lang.Integer>();
                mutable_bitField0_ |= 0x00000004;
              }
              units_.add(input.readInt32());
              break;
            }
            case 26: {
              int length = input.readRawVarint32();
              int limit = input.pushLimit(length);
              if (!((mutable_bitField0_ & 0x00000004) == 0x00000004) && input.getBytesUntilLimit() > 0) {
                units_ = new java.util.ArrayList<java.lang.Integer>();
                mutable_bitField0_ |= 0x00000004;
              }
              while (input.getBytesUntilLimit() > 0) {
                units_.add(input.readInt32());
              }
              input.popLimit(limit);
              break;
            }
            case 32: {
              bitField0_ |= 0x00000004;
              targetIndex_ = input.readInt32();
              break;
            }
            case 40: {
              bitField0_ |= 0x00000008;
              abilityIndex_ = input.readInt32();
              break;
            }
            case 50: {
              skadistats.clarity.wire.common.proto.NetworkBaseTypes.CMsgVector.Builder subBuilder = null;
              if (((bitField0_ & 0x00000010) == 0x00000010)) {
                subBuilder = position_.toBuilder();
              }
              position_ = input.readMessage(skadistats.clarity.wire.common.proto.NetworkBaseTypes.CMsgVector.PARSER, extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(position_);
                position_ = subBuilder.buildPartial();
              }
              bitField0_ |= 0x00000010;
              break;
            }
            case 56: {
              bitField0_ |= 0x00000020;
              queue_ = input.readBool();
              break;
            }
            case 64: {
              bitField0_ |= 0x00000040;
              sequenceNumber_ = input.readInt32();
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        if (((mutable_bitField0_ & 0x00000004) == 0x00000004)) {
          units_ = java.util.Collections.unmodifiableList(units_);
        }
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return skadistats.clarity.wire.common.proto.DotaUserMessages.internal_static_CDOTAUserMsg_SpectatorPlayerUnitOrders_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return skadistats.clarity.wire.common.proto.DotaUserMessages.internal_static_CDOTAUserMsg_SpectatorPlayerUnitOrders_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_SpectatorPlayerUnitOrders.class, skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_SpectatorPlayerUnitOrders.Builder.class);
    }

    public static com.google.protobuf.Parser<CDOTAUserMsg_SpectatorPlayerUnitOrders> PARSER =
        new com.google.protobuf.AbstractParser<CDOTAUserMsg_SpectatorPlayerUnitOrders>() {
      public CDOTAUserMsg_SpectatorPlayerUnitOrders parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new CDOTAUserMsg_SpectatorPlayerUnitOrders(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<CDOTAUserMsg_SpectatorPlayerUnitOrders> getParserForType() {
      return PARSER;
    }

    private int bitField0_;
    public static final int ENTINDEX_FIELD_NUMBER = 1;
    private int entindex_;
    /**
     * <code>optional int32 entindex = 1;</code>
     */
    public boolean hasEntindex() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>optional int32 entindex = 1;</code>
     */
    public int getEntindex() {
      return entindex_;
    }

    public static final int ORDER_TYPE_FIELD_NUMBER = 2;
    private int orderType_;
    /**
     * <code>optional int32 order_type = 2;</code>
     */
    public boolean hasOrderType() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>optional int32 order_type = 2;</code>
     */
    public int getOrderType() {
      return orderType_;
    }

    public static final int UNITS_FIELD_NUMBER = 3;
    private java.util.List<java.lang.Integer> units_;
    /**
     * <code>repeated int32 units = 3;</code>
     */
    public java.util.List<java.lang.Integer>
        getUnitsList() {
      return units_;
    }
    /**
     * <code>repeated int32 units = 3;</code>
     */
    public int getUnitsCount() {
      return units_.size();
    }
    /**
     * <code>repeated int32 units = 3;</code>
     */
    public int getUnits(int index) {
      return units_.get(index);
    }

    public static final int TARGET_INDEX_FIELD_NUMBER = 4;
    private int targetIndex_;
    /**
     * <code>optional int32 target_index = 4;</code>
     */
    public boolean hasTargetIndex() {
      return ((bitField0_ & 0x00000004) == 0x00000004);
    }
    /**
     * <code>optional int32 target_index = 4;</code>
     */
    public int getTargetIndex() {
      return targetIndex_;
    }

    public static final int ABILITY_INDEX_FIELD_NUMBER = 5;
    private int abilityIndex_;
    /**
     * <code>optional int32 ability_index = 5;</code>
     */
    public boolean hasAbilityIndex() {
      return ((bitField0_ & 0x00000008) == 0x00000008);
    }
    /**
     * <code>optional int32 ability_index = 5;</code>
     */
    public int getAbilityIndex() {
      return abilityIndex_;
    }

    public static final int POSITION_FIELD_NUMBER = 6;
    private skadistats.clarity.wire.common.proto.NetworkBaseTypes.CMsgVector position_;
    /**
     * <code>optional .CMsgVector position = 6;</code>
     */
    public boolean hasPosition() {
      return ((bitField0_ & 0x00000010) == 0x00000010);
    }
    /**
     * <code>optional .CMsgVector position = 6;</code>
     */
    public skadistats.clarity.wire.common.proto.NetworkBaseTypes.CMsgVector getPosition() {
      return position_;
    }
    /**
     * <code>optional .CMsgVector position = 6;</code>
     */
    public skadistats.clarity.wire.common.proto.NetworkBaseTypes.CMsgVectorOrBuilder getPositionOrBuilder() {
      return position_;
    }

    public static final int QUEUE_FIELD_NUMBER = 7;
    private boolean queue_;
    /**
     * <code>optional bool queue = 7;</code>
     */
    public boolean hasQueue() {
      return ((bitField0_ & 0x00000020) == 0x00000020);
    }
    /**
     * <code>optional bool queue = 7;</code>
     */
    public boolean getQueue() {
      return queue_;
    }

    public static final int SEQUENCE_NUMBER_FIELD_NUMBER = 8;
    private int sequenceNumber_;
    /**
     * <code>optional int32 sequence_number = 8;</code>
     */
    public boolean hasSequenceNumber() {
      return ((bitField0_ & 0x00000040) == 0x00000040);
    }
    /**
     * <code>optional int32 sequence_number = 8;</code>
     */
    public int getSequenceNumber() {
      return sequenceNumber_;
    }

    private void initFields() {
      entindex_ = 0;
      orderType_ = 0;
      units_ = java.util.Collections.emptyList();
      targetIndex_ = 0;
      abilityIndex_ = 0;
      position_ = skadistats.clarity.wire.common.proto.NetworkBaseTypes.CMsgVector.getDefaultInstance();
      queue_ = false;
      sequenceNumber_ = 0;
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeInt32(1, entindex_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeInt32(2, orderType_);
      }
      for (int i = 0; i < units_.size(); i++) {
        output.writeInt32(3, units_.get(i));
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        output.writeInt32(4, targetIndex_);
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        output.writeInt32(5, abilityIndex_);
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        output.writeMessage(6, position_);
      }
      if (((bitField0_ & 0x00000020) == 0x00000020)) {
        output.writeBool(7, queue_);
      }
      if (((bitField0_ & 0x00000040) == 0x00000040)) {
        output.writeInt32(8, sequenceNumber_);
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(1, entindex_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(2, orderType_);
      }
      {
        int dataSize = 0;
        for (int i = 0; i < units_.size(); i++) {
          dataSize += com.google.protobuf.CodedOutputStream
            .computeInt32SizeNoTag(units_.get(i));
        }
        size += dataSize;
        size += 1 * getUnitsList().size();
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(4, targetIndex_);
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(5, abilityIndex_);
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(6, position_);
      }
      if (((bitField0_ & 0x00000020) == 0x00000020)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBoolSize(7, queue_);
      }
      if (((bitField0_ & 0x00000040) == 0x00000040)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(8, sequenceNumber_);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_SpectatorPlayerUnitOrders parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_SpectatorPlayerUnitOrders parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_SpectatorPlayerUnitOrders parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_SpectatorPlayerUnitOrders parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_SpectatorPlayerUnitOrders parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_SpectatorPlayerUnitOrders parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_SpectatorPlayerUnitOrders parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_SpectatorPlayerUnitOrders parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_SpectatorPlayerUnitOrders parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_SpectatorPlayerUnitOrders parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_SpectatorPlayerUnitOrders prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code CDOTAUserMsg_SpectatorPlayerUnitOrders}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:CDOTAUserMsg_SpectatorPlayerUnitOrders)
        skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_SpectatorPlayerUnitOrdersOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return skadistats.clarity.wire.common.proto.DotaUserMessages.internal_static_CDOTAUserMsg_SpectatorPlayerUnitOrders_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return skadistats.clarity.wire.common.proto.DotaUserMessages.internal_static_CDOTAUserMsg_SpectatorPlayerUnitOrders_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_SpectatorPlayerUnitOrders.class, skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_SpectatorPlayerUnitOrders.Builder.class);
      }

      // Construct using skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_SpectatorPlayerUnitOrders.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
          getPositionFieldBuilder();
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        entindex_ = 0;
        bitField0_ = (bitField0_ & ~0x00000001);
        orderType_ = 0;
        bitField0_ = (bitField0_ & ~0x00000002);
        units_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000004);
        targetIndex_ = 0;
        bitField0_ = (bitField0_ & ~0x00000008);
        abilityIndex_ = 0;
        bitField0_ = (bitField0_ & ~0x00000010);
        if (positionBuilder_ == null) {
          position_ = skadistats.clarity.wire.common.proto.NetworkBaseTypes.CMsgVector.getDefaultInstance();
        } else {
          positionBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000020);
        queue_ = false;
        bitField0_ = (bitField0_ & ~0x00000040);
        sequenceNumber_ = 0;
        bitField0_ = (bitField0_ & ~0x00000080);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return skadistats.clarity.wire.common.proto.DotaUserMessages.internal_static_CDOTAUserMsg_SpectatorPlayerUnitOrders_descriptor;
      }

      public skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_SpectatorPlayerUnitOrders getDefaultInstanceForType() {
        return skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_SpectatorPlayerUnitOrders.getDefaultInstance();
      }

      public skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_SpectatorPlayerUnitOrders build() {
        skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_SpectatorPlayerUnitOrders result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_SpectatorPlayerUnitOrders buildPartial() {
        skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_SpectatorPlayerUnitOrders result = new skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_SpectatorPlayerUnitOrders(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.entindex_ = entindex_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.orderType_ = orderType_;
        if (((bitField0_ & 0x00000004) == 0x00000004)) {
          units_ = java.util.Collections.unmodifiableList(units_);
          bitField0_ = (bitField0_ & ~0x00000004);
        }
        result.units_ = units_;
        if (((from_bitField0_ & 0x00000008) == 0x00000008)) {
          to_bitField0_ |= 0x00000004;
        }
        result.targetIndex_ = targetIndex_;
        if (((from_bitField0_ & 0x00000010) == 0x00000010)) {
          to_bitField0_ |= 0x00000008;
        }
        result.abilityIndex_ = abilityIndex_;
        if (((from_bitField0_ & 0x00000020) == 0x00000020)) {
          to_bitField0_ |= 0x00000010;
        }
        if (positionBuilder_ == null) {
          result.position_ = position_;
        } else {
          result.position_ = positionBuilder_.build();
        }
        if (((from_bitField0_ & 0x00000040) == 0x00000040)) {
          to_bitField0_ |= 0x00000020;
        }
        result.queue_ = queue_;
        if (((from_bitField0_ & 0x00000080) == 0x00000080)) {
          to_bitField0_ |= 0x00000040;
        }
        result.sequenceNumber_ = sequenceNumber_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_SpectatorPlayerUnitOrders) {
          return mergeFrom((skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_SpectatorPlayerUnitOrders)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_SpectatorPlayerUnitOrders other) {
        if (other == skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_SpectatorPlayerUnitOrders.getDefaultInstance()) return this;
        if (other.hasEntindex()) {
          setEntindex(other.getEntindex());
        }
        if (other.hasOrderType()) {
          setOrderType(other.getOrderType());
        }
        if (!other.units_.isEmpty()) {
          if (units_.isEmpty()) {
            units_ = other.units_;
            bitField0_ = (bitField0_ & ~0x00000004);
          } else {
            ensureUnitsIsMutable();
            units_.addAll(other.units_);
          }
          onChanged();
        }
        if (other.hasTargetIndex()) {
          setTargetIndex(other.getTargetIndex());
        }
        if (other.hasAbilityIndex()) {
          setAbilityIndex(other.getAbilityIndex());
        }
        if (other.hasPosition()) {
          mergePosition(other.getPosition());
        }
        if (other.hasQueue()) {
          setQueue(other.getQueue());
        }
        if (other.hasSequenceNumber()) {
          setSequenceNumber(other.getSequenceNumber());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_SpectatorPlayerUnitOrders parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_SpectatorPlayerUnitOrders) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private int entindex_ ;
      /**
       * <code>optional int32 entindex = 1;</code>
       */
      public boolean hasEntindex() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>optional int32 entindex = 1;</code>
       */
      public int getEntindex() {
        return entindex_;
      }
      /**
       * <code>optional int32 entindex = 1;</code>
       */
      public Builder setEntindex(int value) {
        bitField0_ |= 0x00000001;
        entindex_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 entindex = 1;</code>
       */
      public Builder clearEntindex() {
        bitField0_ = (bitField0_ & ~0x00000001);
        entindex_ = 0;
        onChanged();
        return this;
      }

      private int orderType_ ;
      /**
       * <code>optional int32 order_type = 2;</code>
       */
      public boolean hasOrderType() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>optional int32 order_type = 2;</code>
       */
      public int getOrderType() {
        return orderType_;
      }
      /**
       * <code>optional int32 order_type = 2;</code>
       */
      public Builder setOrderType(int value) {
        bitField0_ |= 0x00000002;
        orderType_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 order_type = 2;</code>
       */
      public Builder clearOrderType() {
        bitField0_ = (bitField0_ & ~0x00000002);
        orderType_ = 0;
        onChanged();
        return this;
      }

      private java.util.List<java.lang.Integer> units_ = java.util.Collections.emptyList();
      private void ensureUnitsIsMutable() {
        if (!((bitField0_ & 0x00000004) == 0x00000004)) {
          units_ = new java.util.ArrayList<java.lang.Integer>(units_);
          bitField0_ |= 0x00000004;
         }
      }
      /**
       * <code>repeated int32 units = 3;</code>
       */
      public java.util.List<java.lang.Integer>
          getUnitsList() {
        return java.util.Collections.unmodifiableList(units_);
      }
      /**
       * <code>repeated int32 units = 3;</code>
       */
      public int getUnitsCount() {
        return units_.size();
      }
      /**
       * <code>repeated int32 units = 3;</code>
       */
      public int getUnits(int index) {
        return units_.get(index);
      }
      /**
       * <code>repeated int32 units = 3;</code>
       */
      public Builder setUnits(
          int index, int value) {
        ensureUnitsIsMutable();
        units_.set(index, value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int32 units = 3;</code>
       */
      public Builder addUnits(int value) {
        ensureUnitsIsMutable();
        units_.add(value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int32 units = 3;</code>
       */
      public Builder addAllUnits(
          java.lang.Iterable<? extends java.lang.Integer> values) {
        ensureUnitsIsMutable();
        com.google.protobuf.AbstractMessageLite.Builder.addAll(
            values, units_);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int32 units = 3;</code>
       */
      public Builder clearUnits() {
        units_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000004);
        onChanged();
        return this;
      }

      private int targetIndex_ ;
      /**
       * <code>optional int32 target_index = 4;</code>
       */
      public boolean hasTargetIndex() {
        return ((bitField0_ & 0x00000008) == 0x00000008);
      }
      /**
       * <code>optional int32 target_index = 4;</code>
       */
      public int getTargetIndex() {
        return targetIndex_;
      }
      /**
       * <code>optional int32 target_index = 4;</code>
       */
      public Builder setTargetIndex(int value) {
        bitField0_ |= 0x00000008;
        targetIndex_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 target_index = 4;</code>
       */
      public Builder clearTargetIndex() {
        bitField0_ = (bitField0_ & ~0x00000008);
        targetIndex_ = 0;
        onChanged();
        return this;
      }

      private int abilityIndex_ ;
      /**
       * <code>optional int32 ability_index = 5;</code>
       */
      public boolean hasAbilityIndex() {
        return ((bitField0_ & 0x00000010) == 0x00000010);
      }
      /**
       * <code>optional int32 ability_index = 5;</code>
       */
      public int getAbilityIndex() {
        return abilityIndex_;
      }
      /**
       * <code>optional int32 ability_index = 5;</code>
       */
      public Builder setAbilityIndex(int value) {
        bitField0_ |= 0x00000010;
        abilityIndex_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 ability_index = 5;</code>
       */
      public Builder clearAbilityIndex() {
        bitField0_ = (bitField0_ & ~0x00000010);
        abilityIndex_ = 0;
        onChanged();
        return this;
      }

      private skadistats.clarity.wire.common.proto.NetworkBaseTypes.CMsgVector position_ = skadistats.clarity.wire.common.proto.NetworkBaseTypes.CMsgVector.getDefaultInstance();
      private com.google.protobuf.SingleFieldBuilder<
          skadistats.clarity.wire.common.proto.NetworkBaseTypes.CMsgVector, skadistats.clarity.wire.common.proto.NetworkBaseTypes.CMsgVector.Builder, skadistats.clarity.wire.common.proto.NetworkBaseTypes.CMsgVectorOrBuilder> positionBuilder_;
      /**
       * <code>optional .CMsgVector position = 6;</code>
       */
      public boolean hasPosition() {
        return ((bitField0_ & 0x00000020) == 0x00000020);
      }
      /**
       * <code>optional .CMsgVector position = 6;</code>
       */
      public skadistats.clarity.wire.common.proto.NetworkBaseTypes.CMsgVector getPosition() {
        if (positionBuilder_ == null) {
          return position_;
        } else {
          return positionBuilder_.getMessage();
        }
      }
      /**
       * <code>optional .CMsgVector position = 6;</code>
       */
      public Builder setPosition(skadistats.clarity.wire.common.proto.NetworkBaseTypes.CMsgVector value) {
        if (positionBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          position_ = value;
          onChanged();
        } else {
          positionBuilder_.setMessage(value);
        }
        bitField0_ |= 0x00000020;
        return this;
      }
      /**
       * <code>optional .CMsgVector position = 6;</code>
       */
      public Builder setPosition(
          skadistats.clarity.wire.common.proto.NetworkBaseTypes.CMsgVector.Builder builderForValue) {
        if (positionBuilder_ == null) {
          position_ = builderForValue.build();
          onChanged();
        } else {
          positionBuilder_.setMessage(builderForValue.build());
        }
        bitField0_ |= 0x00000020;
        return this;
      }
      /**
       * <code>optional .CMsgVector position = 6;</code>
       */
      public Builder mergePosition(skadistats.clarity.wire.common.proto.NetworkBaseTypes.CMsgVector value) {
        if (positionBuilder_ == null) {
          if (((bitField0_ & 0x00000020) == 0x00000020) &&
              position_ != skadistats.clarity.wire.common.proto.NetworkBaseTypes.CMsgVector.getDefaultInstance()) {
            position_ =
              skadistats.clarity.wire.common.proto.NetworkBaseTypes.CMsgVector.newBuilder(position_).mergeFrom(value).buildPartial();
          } else {
            position_ = value;
          }
          onChanged();
        } else {
          positionBuilder_.mergeFrom(value);
        }
        bitField0_ |= 0x00000020;
        return this;
      }
      /**
       * <code>optional .CMsgVector position = 6;</code>
       */
      public Builder clearPosition() {
        if (positionBuilder_ == null) {
          position_ = skadistats.clarity.wire.common.proto.NetworkBaseTypes.CMsgVector.getDefaultInstance();
          onChanged();
        } else {
          positionBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000020);
        return this;
      }
      /**
       * <code>optional .CMsgVector position = 6;</code>
       */
      public skadistats.clarity.wire.common.proto.NetworkBaseTypes.CMsgVector.Builder getPositionBuilder() {
        bitField0_ |= 0x00000020;
        onChanged();
        return getPositionFieldBuilder().getBuilder();
      }
      /**
       * <code>optional .CMsgVector position = 6;</code>
       */
      public skadistats.clarity.wire.common.proto.NetworkBaseTypes.CMsgVectorOrBuilder getPositionOrBuilder() {
        if (positionBuilder_ != null) {
          return positionBuilder_.getMessageOrBuilder();
        } else {
          return position_;
        }
      }
      /**
       * <code>optional .CMsgVector position = 6;</code>
       */
      private com.google.protobuf.SingleFieldBuilder<
          skadistats.clarity.wire.common.proto.NetworkBaseTypes.CMsgVector, skadistats.clarity.wire.common.proto.NetworkBaseTypes.CMsgVector.Builder, skadistats.clarity.wire.common.proto.NetworkBaseTypes.CMsgVectorOrBuilder> 
          getPositionFieldBuilder() {
        if (positionBuilder_ == null) {
          positionBuilder_ = new com.google.protobuf.SingleFieldBuilder<
              skadistats.clarity.wire.common.proto.NetworkBaseTypes.CMsgVector, skadistats.clarity.wire.common.proto.NetworkBaseTypes.CMsgVector.Builder, skadistats.clarity.wire.common.proto.NetworkBaseTypes.CMsgVectorOrBuilder>(
                  getPosition(),
                  getParentForChildren(),
                  isClean());
          position_ = null;
        }
        return positionBuilder_;
      }

      private boolean queue_ ;
      /**
       * <code>optional bool queue = 7;</code>
       */
      public boolean hasQueue() {
        return ((bitField0_ & 0x00000040) == 0x00000040);
      }
      /**
       * <code>optional bool queue = 7;</code>
       */
      public boolean getQueue() {
        return queue_;
      }
      /**
       * <code>optional bool queue = 7;</code>
       */
      public Builder setQueue(boolean value) {
        bitField0_ |= 0x00000040;
        queue_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional bool queue = 7;</code>
       */
      public Builder clearQueue() {
        bitField0_ = (bitField0_ & ~0x00000040);
        queue_ = false;
        onChanged();
        return this;
      }

      private int sequenceNumber_ ;
      /**
       * <code>optional int32 sequence_number = 8;</code>
       */
      public boolean hasSequenceNumber() {
        return ((bitField0_ & 0x00000080) == 0x00000080);
      }
      /**
       * <code>optional int32 sequence_number = 8;</code>
       */
      public int getSequenceNumber() {
        return sequenceNumber_;
      }
      /**
       * <code>optional int32 sequence_number = 8;</code>
       */
      public Builder setSequenceNumber(int value) {
        bitField0_ |= 0x00000080;
        sequenceNumber_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 sequence_number = 8;</code>
       */
      public Builder clearSequenceNumber() {
        bitField0_ = (bitField0_ & ~0x00000080);
        sequenceNumber_ = 0;
        onChanged();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:CDOTAUserMsg_SpectatorPlayerUnitOrders)
    }

    static {
      defaultInstance = new CDOTAUserMsg_SpectatorPlayerUnitOrders(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:CDOTAUserMsg_SpectatorPlayerUnitOrders)
  }

  public interface CDOTAUserMsg_NevermoreRequiemOrBuilder extends
      // @@protoc_insertion_point(interface_extends:CDOTAUserMsg_NevermoreRequiem)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>optional int32 entity_handle = 1;</code>
     */
    boolean hasEntityHandle();
    /**
     * <code>optional int32 entity_handle = 1;</code>
     */
    int getEntityHandle();

    /**
     * <code>optional int32 lines = 2;</code>
     */
    boolean hasLines();
    /**
     * <code>optional int32 lines = 2;</code>
     */
    int getLines();

    /**
     * <code>optional .CMsgVector origin = 3;</code>
     */
    boolean hasOrigin();
    /**
     * <code>optional .CMsgVector origin = 3;</code>
     */
    skadistats.clarity.wire.common.proto.NetworkBaseTypes.CMsgVector getOrigin();
    /**
     * <code>optional .CMsgVector origin = 3;</code>
     */
    skadistats.clarity.wire.common.proto.NetworkBaseTypes.CMsgVectorOrBuilder getOriginOrBuilder();

    /**
     * <code>optional bool reverse = 4;</code>
     */
    boolean hasReverse();
    /**
     * <code>optional bool reverse = 4;</code>
     */
    boolean getReverse();
  }
  /**
   * Protobuf type {@code CDOTAUserMsg_NevermoreRequiem}
   */
  public static final class CDOTAUserMsg_NevermoreRequiem extends
      com.google.protobuf.GeneratedMessage implements
      // @@protoc_insertion_point(message_implements:CDOTAUserMsg_NevermoreRequiem)
      CDOTAUserMsg_NevermoreRequiemOrBuilder {
    // Use CDOTAUserMsg_NevermoreRequiem.newBuilder() to construct.
    private CDOTAUserMsg_NevermoreRequiem(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private CDOTAUserMsg_NevermoreRequiem(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final CDOTAUserMsg_NevermoreRequiem defaultInstance;
    public static CDOTAUserMsg_NevermoreRequiem getDefaultInstance() {
      return defaultInstance;
    }

    public CDOTAUserMsg_NevermoreRequiem getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private CDOTAUserMsg_NevermoreRequiem(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 8: {
              bitField0_ |= 0x00000001;
              entityHandle_ = input.readInt32();
              break;
            }
            case 16: {
              bitField0_ |= 0x00000002;
              lines_ = input.readInt32();
              break;
            }
            case 26: {
              skadistats.clarity.wire.common.proto.NetworkBaseTypes.CMsgVector.Builder subBuilder = null;
              if (((bitField0_ & 0x00000004) == 0x00000004)) {
                subBuilder = origin_.toBuilder();
              }
              origin_ = input.readMessage(skadistats.clarity.wire.common.proto.NetworkBaseTypes.CMsgVector.PARSER, extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(origin_);
                origin_ = subBuilder.buildPartial();
              }
              bitField0_ |= 0x00000004;
              break;
            }
            case 32: {
              bitField0_ |= 0x00000008;
              reverse_ = input.readBool();
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return skadistats.clarity.wire.common.proto.DotaUserMessages.internal_static_CDOTAUserMsg_NevermoreRequiem_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return skadistats.clarity.wire.common.proto.DotaUserMessages.internal_static_CDOTAUserMsg_NevermoreRequiem_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_NevermoreRequiem.class, skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_NevermoreRequiem.Builder.class);
    }

    public static com.google.protobuf.Parser<CDOTAUserMsg_NevermoreRequiem> PARSER =
        new com.google.protobuf.AbstractParser<CDOTAUserMsg_NevermoreRequiem>() {
      public CDOTAUserMsg_NevermoreRequiem parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new CDOTAUserMsg_NevermoreRequiem(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<CDOTAUserMsg_NevermoreRequiem> getParserForType() {
      return PARSER;
    }

    private int bitField0_;
    public static final int ENTITY_HANDLE_FIELD_NUMBER = 1;
    private int entityHandle_;
    /**
     * <code>optional int32 entity_handle = 1;</code>
     */
    public boolean hasEntityHandle() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>optional int32 entity_handle = 1;</code>
     */
    public int getEntityHandle() {
      return entityHandle_;
    }

    public static final int LINES_FIELD_NUMBER = 2;
    private int lines_;
    /**
     * <code>optional int32 lines = 2;</code>
     */
    public boolean hasLines() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>optional int32 lines = 2;</code>
     */
    public int getLines() {
      return lines_;
    }

    public static final int ORIGIN_FIELD_NUMBER = 3;
    private skadistats.clarity.wire.common.proto.NetworkBaseTypes.CMsgVector origin_;
    /**
     * <code>optional .CMsgVector origin = 3;</code>
     */
    public boolean hasOrigin() {
      return ((bitField0_ & 0x00000004) == 0x00000004);
    }
    /**
     * <code>optional .CMsgVector origin = 3;</code>
     */
    public skadistats.clarity.wire.common.proto.NetworkBaseTypes.CMsgVector getOrigin() {
      return origin_;
    }
    /**
     * <code>optional .CMsgVector origin = 3;</code>
     */
    public skadistats.clarity.wire.common.proto.NetworkBaseTypes.CMsgVectorOrBuilder getOriginOrBuilder() {
      return origin_;
    }

    public static final int REVERSE_FIELD_NUMBER = 4;
    private boolean reverse_;
    /**
     * <code>optional bool reverse = 4;</code>
     */
    public boolean hasReverse() {
      return ((bitField0_ & 0x00000008) == 0x00000008);
    }
    /**
     * <code>optional bool reverse = 4;</code>
     */
    public boolean getReverse() {
      return reverse_;
    }

    private void initFields() {
      entityHandle_ = 0;
      lines_ = 0;
      origin_ = skadistats.clarity.wire.common.proto.NetworkBaseTypes.CMsgVector.getDefaultInstance();
      reverse_ = false;
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeInt32(1, entityHandle_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeInt32(2, lines_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        output.writeMessage(3, origin_);
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        output.writeBool(4, reverse_);
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(1, entityHandle_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(2, lines_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(3, origin_);
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBoolSize(4, reverse_);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_NevermoreRequiem parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_NevermoreRequiem parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_NevermoreRequiem parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_NevermoreRequiem parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_NevermoreRequiem parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_NevermoreRequiem parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_NevermoreRequiem parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_NevermoreRequiem parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_NevermoreRequiem parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_NevermoreRequiem parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_NevermoreRequiem prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code CDOTAUserMsg_NevermoreRequiem}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:CDOTAUserMsg_NevermoreRequiem)
        skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_NevermoreRequiemOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return skadistats.clarity.wire.common.proto.DotaUserMessages.internal_static_CDOTAUserMsg_NevermoreRequiem_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return skadistats.clarity.wire.common.proto.DotaUserMessages.internal_static_CDOTAUserMsg_NevermoreRequiem_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_NevermoreRequiem.class, skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_NevermoreRequiem.Builder.class);
      }

      // Construct using skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_NevermoreRequiem.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
          getOriginFieldBuilder();
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        entityHandle_ = 0;
        bitField0_ = (bitField0_ & ~0x00000001);
        lines_ = 0;
        bitField0_ = (bitField0_ & ~0x00000002);
        if (originBuilder_ == null) {
          origin_ = skadistats.clarity.wire.common.proto.NetworkBaseTypes.CMsgVector.getDefaultInstance();
        } else {
          originBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000004);
        reverse_ = false;
        bitField0_ = (bitField0_ & ~0x00000008);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return skadistats.clarity.wire.common.proto.DotaUserMessages.internal_static_CDOTAUserMsg_NevermoreRequiem_descriptor;
      }

      public skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_NevermoreRequiem getDefaultInstanceForType() {
        return skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_NevermoreRequiem.getDefaultInstance();
      }

      public skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_NevermoreRequiem build() {
        skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_NevermoreRequiem result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_NevermoreRequiem buildPartial() {
        skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_NevermoreRequiem result = new skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_NevermoreRequiem(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.entityHandle_ = entityHandle_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.lines_ = lines_;
        if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
          to_bitField0_ |= 0x00000004;
        }
        if (originBuilder_ == null) {
          result.origin_ = origin_;
        } else {
          result.origin_ = originBuilder_.build();
        }
        if (((from_bitField0_ & 0x00000008) == 0x00000008)) {
          to_bitField0_ |= 0x00000008;
        }
        result.reverse_ = reverse_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_NevermoreRequiem) {
          return mergeFrom((skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_NevermoreRequiem)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_NevermoreRequiem other) {
        if (other == skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_NevermoreRequiem.getDefaultInstance()) return this;
        if (other.hasEntityHandle()) {
          setEntityHandle(other.getEntityHandle());
        }
        if (other.hasLines()) {
          setLines(other.getLines());
        }
        if (other.hasOrigin()) {
          mergeOrigin(other.getOrigin());
        }
        if (other.hasReverse()) {
          setReverse(other.getReverse());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_NevermoreRequiem parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_NevermoreRequiem) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private int entityHandle_ ;
      /**
       * <code>optional int32 entity_handle = 1;</code>
       */
      public boolean hasEntityHandle() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>optional int32 entity_handle = 1;</code>
       */
      public int getEntityHandle() {
        return entityHandle_;
      }
      /**
       * <code>optional int32 entity_handle = 1;</code>
       */
      public Builder setEntityHandle(int value) {
        bitField0_ |= 0x00000001;
        entityHandle_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 entity_handle = 1;</code>
       */
      public Builder clearEntityHandle() {
        bitField0_ = (bitField0_ & ~0x00000001);
        entityHandle_ = 0;
        onChanged();
        return this;
      }

      private int lines_ ;
      /**
       * <code>optional int32 lines = 2;</code>
       */
      public boolean hasLines() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>optional int32 lines = 2;</code>
       */
      public int getLines() {
        return lines_;
      }
      /**
       * <code>optional int32 lines = 2;</code>
       */
      public Builder setLines(int value) {
        bitField0_ |= 0x00000002;
        lines_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 lines = 2;</code>
       */
      public Builder clearLines() {
        bitField0_ = (bitField0_ & ~0x00000002);
        lines_ = 0;
        onChanged();
        return this;
      }

      private skadistats.clarity.wire.common.proto.NetworkBaseTypes.CMsgVector origin_ = skadistats.clarity.wire.common.proto.NetworkBaseTypes.CMsgVector.getDefaultInstance();
      private com.google.protobuf.SingleFieldBuilder<
          skadistats.clarity.wire.common.proto.NetworkBaseTypes.CMsgVector, skadistats.clarity.wire.common.proto.NetworkBaseTypes.CMsgVector.Builder, skadistats.clarity.wire.common.proto.NetworkBaseTypes.CMsgVectorOrBuilder> originBuilder_;
      /**
       * <code>optional .CMsgVector origin = 3;</code>
       */
      public boolean hasOrigin() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }
      /**
       * <code>optional .CMsgVector origin = 3;</code>
       */
      public skadistats.clarity.wire.common.proto.NetworkBaseTypes.CMsgVector getOrigin() {
        if (originBuilder_ == null) {
          return origin_;
        } else {
          return originBuilder_.getMessage();
        }
      }
      /**
       * <code>optional .CMsgVector origin = 3;</code>
       */
      public Builder setOrigin(skadistats.clarity.wire.common.proto.NetworkBaseTypes.CMsgVector value) {
        if (originBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          origin_ = value;
          onChanged();
        } else {
          originBuilder_.setMessage(value);
        }
        bitField0_ |= 0x00000004;
        return this;
      }
      /**
       * <code>optional .CMsgVector origin = 3;</code>
       */
      public Builder setOrigin(
          skadistats.clarity.wire.common.proto.NetworkBaseTypes.CMsgVector.Builder builderForValue) {
        if (originBuilder_ == null) {
          origin_ = builderForValue.build();
          onChanged();
        } else {
          originBuilder_.setMessage(builderForValue.build());
        }
        bitField0_ |= 0x00000004;
        return this;
      }
      /**
       * <code>optional .CMsgVector origin = 3;</code>
       */
      public Builder mergeOrigin(skadistats.clarity.wire.common.proto.NetworkBaseTypes.CMsgVector value) {
        if (originBuilder_ == null) {
          if (((bitField0_ & 0x00000004) == 0x00000004) &&
              origin_ != skadistats.clarity.wire.common.proto.NetworkBaseTypes.CMsgVector.getDefaultInstance()) {
            origin_ =
              skadistats.clarity.wire.common.proto.NetworkBaseTypes.CMsgVector.newBuilder(origin_).mergeFrom(value).buildPartial();
          } else {
            origin_ = value;
          }
          onChanged();
        } else {
          originBuilder_.mergeFrom(value);
        }
        bitField0_ |= 0x00000004;
        return this;
      }
      /**
       * <code>optional .CMsgVector origin = 3;</code>
       */
      public Builder clearOrigin() {
        if (originBuilder_ == null) {
          origin_ = skadistats.clarity.wire.common.proto.NetworkBaseTypes.CMsgVector.getDefaultInstance();
          onChanged();
        } else {
          originBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000004);
        return this;
      }
      /**
       * <code>optional .CMsgVector origin = 3;</code>
       */
      public skadistats.clarity.wire.common.proto.NetworkBaseTypes.CMsgVector.Builder getOriginBuilder() {
        bitField0_ |= 0x00000004;
        onChanged();
        return getOriginFieldBuilder().getBuilder();
      }
      /**
       * <code>optional .CMsgVector origin = 3;</code>
       */
      public skadistats.clarity.wire.common.proto.NetworkBaseTypes.CMsgVectorOrBuilder getOriginOrBuilder() {
        if (originBuilder_ != null) {
          return originBuilder_.getMessageOrBuilder();
        } else {
          return origin_;
        }
      }
      /**
       * <code>optional .CMsgVector origin = 3;</code>
       */
      private com.google.protobuf.SingleFieldBuilder<
          skadistats.clarity.wire.common.proto.NetworkBaseTypes.CMsgVector, skadistats.clarity.wire.common.proto.NetworkBaseTypes.CMsgVector.Builder, skadistats.clarity.wire.common.proto.NetworkBaseTypes.CMsgVectorOrBuilder> 
          getOriginFieldBuilder() {
        if (originBuilder_ == null) {
          originBuilder_ = new com.google.protobuf.SingleFieldBuilder<
              skadistats.clarity.wire.common.proto.NetworkBaseTypes.CMsgVector, skadistats.clarity.wire.common.proto.NetworkBaseTypes.CMsgVector.Builder, skadistats.clarity.wire.common.proto.NetworkBaseTypes.CMsgVectorOrBuilder>(
                  getOrigin(),
                  getParentForChildren(),
                  isClean());
          origin_ = null;
        }
        return originBuilder_;
      }

      private boolean reverse_ ;
      /**
       * <code>optional bool reverse = 4;</code>
       */
      public boolean hasReverse() {
        return ((bitField0_ & 0x00000008) == 0x00000008);
      }
      /**
       * <code>optional bool reverse = 4;</code>
       */
      public boolean getReverse() {
        return reverse_;
      }
      /**
       * <code>optional bool reverse = 4;</code>
       */
      public Builder setReverse(boolean value) {
        bitField0_ |= 0x00000008;
        reverse_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional bool reverse = 4;</code>
       */
      public Builder clearReverse() {
        bitField0_ = (bitField0_ & ~0x00000008);
        reverse_ = false;
        onChanged();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:CDOTAUserMsg_NevermoreRequiem)
    }

    static {
      defaultInstance = new CDOTAUserMsg_NevermoreRequiem(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:CDOTAUserMsg_NevermoreRequiem)
  }

  public interface CDOTAUserMsg_InvalidCommandOrBuilder extends
      // @@protoc_insertion_point(interface_extends:CDOTAUserMsg_InvalidCommand)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>optional string message = 1;</code>
     */
    boolean hasMessage();
    /**
     * <code>optional string message = 1;</code>
     */
    java.lang.String getMessage();
    /**
     * <code>optional string message = 1;</code>
     */
    com.google.protobuf.ByteString
        getMessageBytes();
  }
  /**
   * Protobuf type {@code CDOTAUserMsg_InvalidCommand}
   */
  public static final class CDOTAUserMsg_InvalidCommand extends
      com.google.protobuf.GeneratedMessage implements
      // @@protoc_insertion_point(message_implements:CDOTAUserMsg_InvalidCommand)
      CDOTAUserMsg_InvalidCommandOrBuilder {
    // Use CDOTAUserMsg_InvalidCommand.newBuilder() to construct.
    private CDOTAUserMsg_InvalidCommand(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private CDOTAUserMsg_InvalidCommand(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final CDOTAUserMsg_InvalidCommand defaultInstance;
    public static CDOTAUserMsg_InvalidCommand getDefaultInstance() {
      return defaultInstance;
    }

    public CDOTAUserMsg_InvalidCommand getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private CDOTAUserMsg_InvalidCommand(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 10: {
              com.google.protobuf.ByteString bs = input.readBytes();
              bitField0_ |= 0x00000001;
              message_ = bs;
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return skadistats.clarity.wire.common.proto.DotaUserMessages.internal_static_CDOTAUserMsg_InvalidCommand_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return skadistats.clarity.wire.common.proto.DotaUserMessages.internal_static_CDOTAUserMsg_InvalidCommand_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_InvalidCommand.class, skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_InvalidCommand.Builder.class);
    }

    public static com.google.protobuf.Parser<CDOTAUserMsg_InvalidCommand> PARSER =
        new com.google.protobuf.AbstractParser<CDOTAUserMsg_InvalidCommand>() {
      public CDOTAUserMsg_InvalidCommand parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new CDOTAUserMsg_InvalidCommand(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<CDOTAUserMsg_InvalidCommand> getParserForType() {
      return PARSER;
    }

    private int bitField0_;
    public static final int MESSAGE_FIELD_NUMBER = 1;
    private java.lang.Object message_;
    /**
     * <code>optional string message = 1;</code>
     */
    public boolean hasMessage() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>optional string message = 1;</code>
     */
    public java.lang.String getMessage() {
      java.lang.Object ref = message_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          message_ = s;
        }
        return s;
      }
    }
    /**
     * <code>optional string message = 1;</code>
     */
    public com.google.protobuf.ByteString
        getMessageBytes() {
      java.lang.Object ref = message_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        message_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    private void initFields() {
      message_ = "";
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeBytes(1, getMessageBytes());
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(1, getMessageBytes());
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_InvalidCommand parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_InvalidCommand parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_InvalidCommand parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_InvalidCommand parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_InvalidCommand parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_InvalidCommand parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_InvalidCommand parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_InvalidCommand parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_InvalidCommand parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_InvalidCommand parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_InvalidCommand prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code CDOTAUserMsg_InvalidCommand}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:CDOTAUserMsg_InvalidCommand)
        skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_InvalidCommandOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return skadistats.clarity.wire.common.proto.DotaUserMessages.internal_static_CDOTAUserMsg_InvalidCommand_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return skadistats.clarity.wire.common.proto.DotaUserMessages.internal_static_CDOTAUserMsg_InvalidCommand_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_InvalidCommand.class, skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_InvalidCommand.Builder.class);
      }

      // Construct using skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_InvalidCommand.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        message_ = "";
        bitField0_ = (bitField0_ & ~0x00000001);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return skadistats.clarity.wire.common.proto.DotaUserMessages.internal_static_CDOTAUserMsg_InvalidCommand_descriptor;
      }

      public skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_InvalidCommand getDefaultInstanceForType() {
        return skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_InvalidCommand.getDefaultInstance();
      }

      public skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_InvalidCommand build() {
        skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_InvalidCommand result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_InvalidCommand buildPartial() {
        skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_InvalidCommand result = new skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_InvalidCommand(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.message_ = message_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_InvalidCommand) {
          return mergeFrom((skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_InvalidCommand)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_InvalidCommand other) {
        if (other == skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_InvalidCommand.getDefaultInstance()) return this;
        if (other.hasMessage()) {
          bitField0_ |= 0x00000001;
          message_ = other.message_;
          onChanged();
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_InvalidCommand parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_InvalidCommand) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private java.lang.Object message_ = "";
      /**
       * <code>optional string message = 1;</code>
       */
      public boolean hasMessage() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>optional string message = 1;</code>
       */
      public java.lang.String getMessage() {
        java.lang.Object ref = message_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          if (bs.isValidUtf8()) {
            message_ = s;
          }
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>optional string message = 1;</code>
       */
      public com.google.protobuf.ByteString
          getMessageBytes() {
        java.lang.Object ref = message_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          message_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>optional string message = 1;</code>
       */
      public Builder setMessage(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000001;
        message_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional string message = 1;</code>
       */
      public Builder clearMessage() {
        bitField0_ = (bitField0_ & ~0x00000001);
        message_ = getDefaultInstance().getMessage();
        onChanged();
        return this;
      }
      /**
       * <code>optional string message = 1;</code>
       */
      public Builder setMessageBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000001;
        message_ = value;
        onChanged();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:CDOTAUserMsg_InvalidCommand)
    }

    static {
      defaultInstance = new CDOTAUserMsg_InvalidCommand(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:CDOTAUserMsg_InvalidCommand)
  }

  public interface CDOTAUserMsg_HudErrorOrBuilder extends
      // @@protoc_insertion_point(interface_extends:CDOTAUserMsg_HudError)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>optional int32 order_id = 1;</code>
     */
    boolean hasOrderId();
    /**
     * <code>optional int32 order_id = 1;</code>
     */
    int getOrderId();
  }
  /**
   * Protobuf type {@code CDOTAUserMsg_HudError}
   */
  public static final class CDOTAUserMsg_HudError extends
      com.google.protobuf.GeneratedMessage implements
      // @@protoc_insertion_point(message_implements:CDOTAUserMsg_HudError)
      CDOTAUserMsg_HudErrorOrBuilder {
    // Use CDOTAUserMsg_HudError.newBuilder() to construct.
    private CDOTAUserMsg_HudError(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private CDOTAUserMsg_HudError(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final CDOTAUserMsg_HudError defaultInstance;
    public static CDOTAUserMsg_HudError getDefaultInstance() {
      return defaultInstance;
    }

    public CDOTAUserMsg_HudError getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private CDOTAUserMsg_HudError(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 8: {
              bitField0_ |= 0x00000001;
              orderId_ = input.readInt32();
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return skadistats.clarity.wire.common.proto.DotaUserMessages.internal_static_CDOTAUserMsg_HudError_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return skadistats.clarity.wire.common.proto.DotaUserMessages.internal_static_CDOTAUserMsg_HudError_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_HudError.class, skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_HudError.Builder.class);
    }

    public static com.google.protobuf.Parser<CDOTAUserMsg_HudError> PARSER =
        new com.google.protobuf.AbstractParser<CDOTAUserMsg_HudError>() {
      public CDOTAUserMsg_HudError parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new CDOTAUserMsg_HudError(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<CDOTAUserMsg_HudError> getParserForType() {
      return PARSER;
    }

    private int bitField0_;
    public static final int ORDER_ID_FIELD_NUMBER = 1;
    private int orderId_;
    /**
     * <code>optional int32 order_id = 1;</code>
     */
    public boolean hasOrderId() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>optional int32 order_id = 1;</code>
     */
    public int getOrderId() {
      return orderId_;
    }

    private void initFields() {
      orderId_ = 0;
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeInt32(1, orderId_);
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(1, orderId_);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_HudError parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_HudError parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_HudError parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_HudError parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_HudError parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_HudError parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_HudError parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_HudError parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_HudError parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_HudError parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_HudError prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code CDOTAUserMsg_HudError}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:CDOTAUserMsg_HudError)
        skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_HudErrorOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return skadistats.clarity.wire.common.proto.DotaUserMessages.internal_static_CDOTAUserMsg_HudError_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return skadistats.clarity.wire.common.proto.DotaUserMessages.internal_static_CDOTAUserMsg_HudError_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_HudError.class, skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_HudError.Builder.class);
      }

      // Construct using skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_HudError.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        orderId_ = 0;
        bitField0_ = (bitField0_ & ~0x00000001);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return skadistats.clarity.wire.common.proto.DotaUserMessages.internal_static_CDOTAUserMsg_HudError_descriptor;
      }

      public skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_HudError getDefaultInstanceForType() {
        return skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_HudError.getDefaultInstance();
      }

      public skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_HudError build() {
        skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_HudError result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_HudError buildPartial() {
        skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_HudError result = new skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_HudError(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.orderId_ = orderId_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_HudError) {
          return mergeFrom((skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_HudError)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_HudError other) {
        if (other == skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_HudError.getDefaultInstance()) return this;
        if (other.hasOrderId()) {
          setOrderId(other.getOrderId());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_HudError parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_HudError) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private int orderId_ ;
      /**
       * <code>optional int32 order_id = 1;</code>
       */
      public boolean hasOrderId() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>optional int32 order_id = 1;</code>
       */
      public int getOrderId() {
        return orderId_;
      }
      /**
       * <code>optional int32 order_id = 1;</code>
       */
      public Builder setOrderId(int value) {
        bitField0_ |= 0x00000001;
        orderId_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 order_id = 1;</code>
       */
      public Builder clearOrderId() {
        bitField0_ = (bitField0_ & ~0x00000001);
        orderId_ = 0;
        onChanged();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:CDOTAUserMsg_HudError)
    }

    static {
      defaultInstance = new CDOTAUserMsg_HudError(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:CDOTAUserMsg_HudError)
  }

  public interface CDOTAUserMsg_SharedCooldownOrBuilder extends
      // @@protoc_insertion_point(interface_extends:CDOTAUserMsg_SharedCooldown)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>optional int32 entindex = 1;</code>
     */
    boolean hasEntindex();
    /**
     * <code>optional int32 entindex = 1;</code>
     */
    int getEntindex();

    /**
     * <code>optional string name = 2;</code>
     */
    boolean hasName();
    /**
     * <code>optional string name = 2;</code>
     */
    java.lang.String getName();
    /**
     * <code>optional string name = 2;</code>
     */
    com.google.protobuf.ByteString
        getNameBytes();

    /**
     * <code>optional float cooldown = 3;</code>
     */
    boolean hasCooldown();
    /**
     * <code>optional float cooldown = 3;</code>
     */
    float getCooldown();

    /**
     * <code>optional int32 name_index = 4;</code>
     */
    boolean hasNameIndex();
    /**
     * <code>optional int32 name_index = 4;</code>
     */
    int getNameIndex();
  }
  /**
   * Protobuf type {@code CDOTAUserMsg_SharedCooldown}
   */
  public static final class CDOTAUserMsg_SharedCooldown extends
      com.google.protobuf.GeneratedMessage implements
      // @@protoc_insertion_point(message_implements:CDOTAUserMsg_SharedCooldown)
      CDOTAUserMsg_SharedCooldownOrBuilder {
    // Use CDOTAUserMsg_SharedCooldown.newBuilder() to construct.
    private CDOTAUserMsg_SharedCooldown(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private CDOTAUserMsg_SharedCooldown(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final CDOTAUserMsg_SharedCooldown defaultInstance;
    public static CDOTAUserMsg_SharedCooldown getDefaultInstance() {
      return defaultInstance;
    }

    public CDOTAUserMsg_SharedCooldown getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private CDOTAUserMsg_SharedCooldown(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 8: {
              bitField0_ |= 0x00000001;
              entindex_ = input.readInt32();
              break;
            }
            case 18: {
              com.google.protobuf.ByteString bs = input.readBytes();
              bitField0_ |= 0x00000002;
              name_ = bs;
              break;
            }
            case 29: {
              bitField0_ |= 0x00000004;
              cooldown_ = input.readFloat();
              break;
            }
            case 32: {
              bitField0_ |= 0x00000008;
              nameIndex_ = input.readInt32();
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return skadistats.clarity.wire.common.proto.DotaUserMessages.internal_static_CDOTAUserMsg_SharedCooldown_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return skadistats.clarity.wire.common.proto.DotaUserMessages.internal_static_CDOTAUserMsg_SharedCooldown_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_SharedCooldown.class, skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_SharedCooldown.Builder.class);
    }

    public static com.google.protobuf.Parser<CDOTAUserMsg_SharedCooldown> PARSER =
        new com.google.protobuf.AbstractParser<CDOTAUserMsg_SharedCooldown>() {
      public CDOTAUserMsg_SharedCooldown parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new CDOTAUserMsg_SharedCooldown(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<CDOTAUserMsg_SharedCooldown> getParserForType() {
      return PARSER;
    }

    private int bitField0_;
    public static final int ENTINDEX_FIELD_NUMBER = 1;
    private int entindex_;
    /**
     * <code>optional int32 entindex = 1;</code>
     */
    public boolean hasEntindex() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>optional int32 entindex = 1;</code>
     */
    public int getEntindex() {
      return entindex_;
    }

    public static final int NAME_FIELD_NUMBER = 2;
    private java.lang.Object name_;
    /**
     * <code>optional string name = 2;</code>
     */
    public boolean hasName() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>optional string name = 2;</code>
     */
    public java.lang.String getName() {
      java.lang.Object ref = name_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          name_ = s;
        }
        return s;
      }
    }
    /**
     * <code>optional string name = 2;</code>
     */
    public com.google.protobuf.ByteString
        getNameBytes() {
      java.lang.Object ref = name_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        name_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int COOLDOWN_FIELD_NUMBER = 3;
    private float cooldown_;
    /**
     * <code>optional float cooldown = 3;</code>
     */
    public boolean hasCooldown() {
      return ((bitField0_ & 0x00000004) == 0x00000004);
    }
    /**
     * <code>optional float cooldown = 3;</code>
     */
    public float getCooldown() {
      return cooldown_;
    }

    public static final int NAME_INDEX_FIELD_NUMBER = 4;
    private int nameIndex_;
    /**
     * <code>optional int32 name_index = 4;</code>
     */
    public boolean hasNameIndex() {
      return ((bitField0_ & 0x00000008) == 0x00000008);
    }
    /**
     * <code>optional int32 name_index = 4;</code>
     */
    public int getNameIndex() {
      return nameIndex_;
    }

    private void initFields() {
      entindex_ = 0;
      name_ = "";
      cooldown_ = 0F;
      nameIndex_ = 0;
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeInt32(1, entindex_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeBytes(2, getNameBytes());
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        output.writeFloat(3, cooldown_);
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        output.writeInt32(4, nameIndex_);
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(1, entindex_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(2, getNameBytes());
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        size += com.google.protobuf.CodedOutputStream
          .computeFloatSize(3, cooldown_);
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(4, nameIndex_);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_SharedCooldown parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_SharedCooldown parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_SharedCooldown parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_SharedCooldown parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_SharedCooldown parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_SharedCooldown parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_SharedCooldown parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_SharedCooldown parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_SharedCooldown parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_SharedCooldown parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_SharedCooldown prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code CDOTAUserMsg_SharedCooldown}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:CDOTAUserMsg_SharedCooldown)
        skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_SharedCooldownOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return skadistats.clarity.wire.common.proto.DotaUserMessages.internal_static_CDOTAUserMsg_SharedCooldown_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return skadistats.clarity.wire.common.proto.DotaUserMessages.internal_static_CDOTAUserMsg_SharedCooldown_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_SharedCooldown.class, skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_SharedCooldown.Builder.class);
      }

      // Construct using skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_SharedCooldown.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        entindex_ = 0;
        bitField0_ = (bitField0_ & ~0x00000001);
        name_ = "";
        bitField0_ = (bitField0_ & ~0x00000002);
        cooldown_ = 0F;
        bitField0_ = (bitField0_ & ~0x00000004);
        nameIndex_ = 0;
        bitField0_ = (bitField0_ & ~0x00000008);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return skadistats.clarity.wire.common.proto.DotaUserMessages.internal_static_CDOTAUserMsg_SharedCooldown_descriptor;
      }

      public skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_SharedCooldown getDefaultInstanceForType() {
        return skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_SharedCooldown.getDefaultInstance();
      }

      public skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_SharedCooldown build() {
        skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_SharedCooldown result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_SharedCooldown buildPartial() {
        skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_SharedCooldown result = new skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_SharedCooldown(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.entindex_ = entindex_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.name_ = name_;
        if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
          to_bitField0_ |= 0x00000004;
        }
        result.cooldown_ = cooldown_;
        if (((from_bitField0_ & 0x00000008) == 0x00000008)) {
          to_bitField0_ |= 0x00000008;
        }
        result.nameIndex_ = nameIndex_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_SharedCooldown) {
          return mergeFrom((skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_SharedCooldown)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_SharedCooldown other) {
        if (other == skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_SharedCooldown.getDefaultInstance()) return this;
        if (other.hasEntindex()) {
          setEntindex(other.getEntindex());
        }
        if (other.hasName()) {
          bitField0_ |= 0x00000002;
          name_ = other.name_;
          onChanged();
        }
        if (other.hasCooldown()) {
          setCooldown(other.getCooldown());
        }
        if (other.hasNameIndex()) {
          setNameIndex(other.getNameIndex());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_SharedCooldown parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_SharedCooldown) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private int entindex_ ;
      /**
       * <code>optional int32 entindex = 1;</code>
       */
      public boolean hasEntindex() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>optional int32 entindex = 1;</code>
       */
      public int getEntindex() {
        return entindex_;
      }
      /**
       * <code>optional int32 entindex = 1;</code>
       */
      public Builder setEntindex(int value) {
        bitField0_ |= 0x00000001;
        entindex_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 entindex = 1;</code>
       */
      public Builder clearEntindex() {
        bitField0_ = (bitField0_ & ~0x00000001);
        entindex_ = 0;
        onChanged();
        return this;
      }

      private java.lang.Object name_ = "";
      /**
       * <code>optional string name = 2;</code>
       */
      public boolean hasName() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>optional string name = 2;</code>
       */
      public java.lang.String getName() {
        java.lang.Object ref = name_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          if (bs.isValidUtf8()) {
            name_ = s;
          }
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>optional string name = 2;</code>
       */
      public com.google.protobuf.ByteString
          getNameBytes() {
        java.lang.Object ref = name_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          name_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>optional string name = 2;</code>
       */
      public Builder setName(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000002;
        name_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional string name = 2;</code>
       */
      public Builder clearName() {
        bitField0_ = (bitField0_ & ~0x00000002);
        name_ = getDefaultInstance().getName();
        onChanged();
        return this;
      }
      /**
       * <code>optional string name = 2;</code>
       */
      public Builder setNameBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000002;
        name_ = value;
        onChanged();
        return this;
      }

      private float cooldown_ ;
      /**
       * <code>optional float cooldown = 3;</code>
       */
      public boolean hasCooldown() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }
      /**
       * <code>optional float cooldown = 3;</code>
       */
      public float getCooldown() {
        return cooldown_;
      }
      /**
       * <code>optional float cooldown = 3;</code>
       */
      public Builder setCooldown(float value) {
        bitField0_ |= 0x00000004;
        cooldown_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional float cooldown = 3;</code>
       */
      public Builder clearCooldown() {
        bitField0_ = (bitField0_ & ~0x00000004);
        cooldown_ = 0F;
        onChanged();
        return this;
      }

      private int nameIndex_ ;
      /**
       * <code>optional int32 name_index = 4;</code>
       */
      public boolean hasNameIndex() {
        return ((bitField0_ & 0x00000008) == 0x00000008);
      }
      /**
       * <code>optional int32 name_index = 4;</code>
       */
      public int getNameIndex() {
        return nameIndex_;
      }
      /**
       * <code>optional int32 name_index = 4;</code>
       */
      public Builder setNameIndex(int value) {
        bitField0_ |= 0x00000008;
        nameIndex_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 name_index = 4;</code>
       */
      public Builder clearNameIndex() {
        bitField0_ = (bitField0_ & ~0x00000008);
        nameIndex_ = 0;
        onChanged();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:CDOTAUserMsg_SharedCooldown)
    }

    static {
      defaultInstance = new CDOTAUserMsg_SharedCooldown(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:CDOTAUserMsg_SharedCooldown)
  }

  public interface CDOTAUserMsg_SetNextAutobuyItemOrBuilder extends
      // @@protoc_insertion_point(interface_extends:CDOTAUserMsg_SetNextAutobuyItem)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>optional string name = 1;</code>
     */
    boolean hasName();
    /**
     * <code>optional string name = 1;</code>
     */
    java.lang.String getName();
    /**
     * <code>optional string name = 1;</code>
     */
    com.google.protobuf.ByteString
        getNameBytes();
  }
  /**
   * Protobuf type {@code CDOTAUserMsg_SetNextAutobuyItem}
   */
  public static final class CDOTAUserMsg_SetNextAutobuyItem extends
      com.google.protobuf.GeneratedMessage implements
      // @@protoc_insertion_point(message_implements:CDOTAUserMsg_SetNextAutobuyItem)
      CDOTAUserMsg_SetNextAutobuyItemOrBuilder {
    // Use CDOTAUserMsg_SetNextAutobuyItem.newBuilder() to construct.
    private CDOTAUserMsg_SetNextAutobuyItem(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private CDOTAUserMsg_SetNextAutobuyItem(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final CDOTAUserMsg_SetNextAutobuyItem defaultInstance;
    public static CDOTAUserMsg_SetNextAutobuyItem getDefaultInstance() {
      return defaultInstance;
    }

    public CDOTAUserMsg_SetNextAutobuyItem getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private CDOTAUserMsg_SetNextAutobuyItem(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 10: {
              com.google.protobuf.ByteString bs = input.readBytes();
              bitField0_ |= 0x00000001;
              name_ = bs;
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return skadistats.clarity.wire.common.proto.DotaUserMessages.internal_static_CDOTAUserMsg_SetNextAutobuyItem_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return skadistats.clarity.wire.common.proto.DotaUserMessages.internal_static_CDOTAUserMsg_SetNextAutobuyItem_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_SetNextAutobuyItem.class, skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_SetNextAutobuyItem.Builder.class);
    }

    public static com.google.protobuf.Parser<CDOTAUserMsg_SetNextAutobuyItem> PARSER =
        new com.google.protobuf.AbstractParser<CDOTAUserMsg_SetNextAutobuyItem>() {
      public CDOTAUserMsg_SetNextAutobuyItem parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new CDOTAUserMsg_SetNextAutobuyItem(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<CDOTAUserMsg_SetNextAutobuyItem> getParserForType() {
      return PARSER;
    }

    private int bitField0_;
    public static final int NAME_FIELD_NUMBER = 1;
    private java.lang.Object name_;
    /**
     * <code>optional string name = 1;</code>
     */
    public boolean hasName() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>optional string name = 1;</code>
     */
    public java.lang.String getName() {
      java.lang.Object ref = name_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          name_ = s;
        }
        return s;
      }
    }
    /**
     * <code>optional string name = 1;</code>
     */
    public com.google.protobuf.ByteString
        getNameBytes() {
      java.lang.Object ref = name_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        name_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    private void initFields() {
      name_ = "";
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeBytes(1, getNameBytes());
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(1, getNameBytes());
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_SetNextAutobuyItem parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_SetNextAutobuyItem parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_SetNextAutobuyItem parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_SetNextAutobuyItem parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_SetNextAutobuyItem parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_SetNextAutobuyItem parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_SetNextAutobuyItem parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_SetNextAutobuyItem parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_SetNextAutobuyItem parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_SetNextAutobuyItem parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_SetNextAutobuyItem prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code CDOTAUserMsg_SetNextAutobuyItem}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:CDOTAUserMsg_SetNextAutobuyItem)
        skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_SetNextAutobuyItemOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return skadistats.clarity.wire.common.proto.DotaUserMessages.internal_static_CDOTAUserMsg_SetNextAutobuyItem_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return skadistats.clarity.wire.common.proto.DotaUserMessages.internal_static_CDOTAUserMsg_SetNextAutobuyItem_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_SetNextAutobuyItem.class, skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_SetNextAutobuyItem.Builder.class);
      }

      // Construct using skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_SetNextAutobuyItem.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        name_ = "";
        bitField0_ = (bitField0_ & ~0x00000001);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return skadistats.clarity.wire.common.proto.DotaUserMessages.internal_static_CDOTAUserMsg_SetNextAutobuyItem_descriptor;
      }

      public skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_SetNextAutobuyItem getDefaultInstanceForType() {
        return skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_SetNextAutobuyItem.getDefaultInstance();
      }

      public skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_SetNextAutobuyItem build() {
        skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_SetNextAutobuyItem result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_SetNextAutobuyItem buildPartial() {
        skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_SetNextAutobuyItem result = new skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_SetNextAutobuyItem(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.name_ = name_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_SetNextAutobuyItem) {
          return mergeFrom((skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_SetNextAutobuyItem)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_SetNextAutobuyItem other) {
        if (other == skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_SetNextAutobuyItem.getDefaultInstance()) return this;
        if (other.hasName()) {
          bitField0_ |= 0x00000001;
          name_ = other.name_;
          onChanged();
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_SetNextAutobuyItem parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_SetNextAutobuyItem) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private java.lang.Object name_ = "";
      /**
       * <code>optional string name = 1;</code>
       */
      public boolean hasName() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>optional string name = 1;</code>
       */
      public java.lang.String getName() {
        java.lang.Object ref = name_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          if (bs.isValidUtf8()) {
            name_ = s;
          }
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>optional string name = 1;</code>
       */
      public com.google.protobuf.ByteString
          getNameBytes() {
        java.lang.Object ref = name_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          name_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>optional string name = 1;</code>
       */
      public Builder setName(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000001;
        name_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional string name = 1;</code>
       */
      public Builder clearName() {
        bitField0_ = (bitField0_ & ~0x00000001);
        name_ = getDefaultInstance().getName();
        onChanged();
        return this;
      }
      /**
       * <code>optional string name = 1;</code>
       */
      public Builder setNameBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000001;
        name_ = value;
        onChanged();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:CDOTAUserMsg_SetNextAutobuyItem)
    }

    static {
      defaultInstance = new CDOTAUserMsg_SetNextAutobuyItem(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:CDOTAUserMsg_SetNextAutobuyItem)
  }

  public interface CDOTAUserMsg_HalloweenDropsOrBuilder extends
      // @@protoc_insertion_point(interface_extends:CDOTAUserMsg_HalloweenDrops)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>repeated uint32 item_defs = 1;</code>
     */
    java.util.List<java.lang.Integer> getItemDefsList();
    /**
     * <code>repeated uint32 item_defs = 1;</code>
     */
    int getItemDefsCount();
    /**
     * <code>repeated uint32 item_defs = 1;</code>
     */
    int getItemDefs(int index);

    /**
     * <code>repeated uint32 player_ids = 2;</code>
     */
    java.util.List<java.lang.Integer> getPlayerIdsList();
    /**
     * <code>repeated uint32 player_ids = 2;</code>
     */
    int getPlayerIdsCount();
    /**
     * <code>repeated uint32 player_ids = 2;</code>
     */
    int getPlayerIds(int index);

    /**
     * <code>optional uint32 prize_list = 3;</code>
     */
    boolean hasPrizeList();
    /**
     * <code>optional uint32 prize_list = 3;</code>
     */
    int getPrizeList();
  }
  /**
   * Protobuf type {@code CDOTAUserMsg_HalloweenDrops}
   */
  public static final class CDOTAUserMsg_HalloweenDrops extends
      com.google.protobuf.GeneratedMessage implements
      // @@protoc_insertion_point(message_implements:CDOTAUserMsg_HalloweenDrops)
      CDOTAUserMsg_HalloweenDropsOrBuilder {
    // Use CDOTAUserMsg_HalloweenDrops.newBuilder() to construct.
    private CDOTAUserMsg_HalloweenDrops(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private CDOTAUserMsg_HalloweenDrops(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final CDOTAUserMsg_HalloweenDrops defaultInstance;
    public static CDOTAUserMsg_HalloweenDrops getDefaultInstance() {
      return defaultInstance;
    }

    public CDOTAUserMsg_HalloweenDrops getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private CDOTAUserMsg_HalloweenDrops(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 8: {
              if (!((mutable_bitField0_ & 0x00000001) == 0x00000001)) {
                itemDefs_ = new java.util.ArrayList<java.lang.Integer>();
                mutable_bitField0_ |= 0x00000001;
              }
              itemDefs_.add(input.readUInt32());
              break;
            }
            case 10: {
              int length = input.readRawVarint32();
              int limit = input.pushLimit(length);
              if (!((mutable_bitField0_ & 0x00000001) == 0x00000001) && input.getBytesUntilLimit() > 0) {
                itemDefs_ = new java.util.ArrayList<java.lang.Integer>();
                mutable_bitField0_ |= 0x00000001;
              }
              while (input.getBytesUntilLimit() > 0) {
                itemDefs_.add(input.readUInt32());
              }
              input.popLimit(limit);
              break;
            }
            case 16: {
              if (!((mutable_bitField0_ & 0x00000002) == 0x00000002)) {
                playerIds_ = new java.util.ArrayList<java.lang.Integer>();
                mutable_bitField0_ |= 0x00000002;
              }
              playerIds_.add(input.readUInt32());
              break;
            }
            case 18: {
              int length = input.readRawVarint32();
              int limit = input.pushLimit(length);
              if (!((mutable_bitField0_ & 0x00000002) == 0x00000002) && input.getBytesUntilLimit() > 0) {
                playerIds_ = new java.util.ArrayList<java.lang.Integer>();
                mutable_bitField0_ |= 0x00000002;
              }
              while (input.getBytesUntilLimit() > 0) {
                playerIds_.add(input.readUInt32());
              }
              input.popLimit(limit);
              break;
            }
            case 24: {
              bitField0_ |= 0x00000001;
              prizeList_ = input.readUInt32();
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        if (((mutable_bitField0_ & 0x00000001) == 0x00000001)) {
          itemDefs_ = java.util.Collections.unmodifiableList(itemDefs_);
        }
        if (((mutable_bitField0_ & 0x00000002) == 0x00000002)) {
          playerIds_ = java.util.Collections.unmodifiableList(playerIds_);
        }
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return skadistats.clarity.wire.common.proto.DotaUserMessages.internal_static_CDOTAUserMsg_HalloweenDrops_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return skadistats.clarity.wire.common.proto.DotaUserMessages.internal_static_CDOTAUserMsg_HalloweenDrops_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_HalloweenDrops.class, skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_HalloweenDrops.Builder.class);
    }

    public static com.google.protobuf.Parser<CDOTAUserMsg_HalloweenDrops> PARSER =
        new com.google.protobuf.AbstractParser<CDOTAUserMsg_HalloweenDrops>() {
      public CDOTAUserMsg_HalloweenDrops parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new CDOTAUserMsg_HalloweenDrops(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<CDOTAUserMsg_HalloweenDrops> getParserForType() {
      return PARSER;
    }

    private int bitField0_;
    public static final int ITEM_DEFS_FIELD_NUMBER = 1;
    private java.util.List<java.lang.Integer> itemDefs_;
    /**
     * <code>repeated uint32 item_defs = 1;</code>
     */
    public java.util.List<java.lang.Integer>
        getItemDefsList() {
      return itemDefs_;
    }
    /**
     * <code>repeated uint32 item_defs = 1;</code>
     */
    public int getItemDefsCount() {
      return itemDefs_.size();
    }
    /**
     * <code>repeated uint32 item_defs = 1;</code>
     */
    public int getItemDefs(int index) {
      return itemDefs_.get(index);
    }

    public static final int PLAYER_IDS_FIELD_NUMBER = 2;
    private java.util.List<java.lang.Integer> playerIds_;
    /**
     * <code>repeated uint32 player_ids = 2;</code>
     */
    public java.util.List<java.lang.Integer>
        getPlayerIdsList() {
      return playerIds_;
    }
    /**
     * <code>repeated uint32 player_ids = 2;</code>
     */
    public int getPlayerIdsCount() {
      return playerIds_.size();
    }
    /**
     * <code>repeated uint32 player_ids = 2;</code>
     */
    public int getPlayerIds(int index) {
      return playerIds_.get(index);
    }

    public static final int PRIZE_LIST_FIELD_NUMBER = 3;
    private int prizeList_;
    /**
     * <code>optional uint32 prize_list = 3;</code>
     */
    public boolean hasPrizeList() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>optional uint32 prize_list = 3;</code>
     */
    public int getPrizeList() {
      return prizeList_;
    }

    private void initFields() {
      itemDefs_ = java.util.Collections.emptyList();
      playerIds_ = java.util.Collections.emptyList();
      prizeList_ = 0;
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      for (int i = 0; i < itemDefs_.size(); i++) {
        output.writeUInt32(1, itemDefs_.get(i));
      }
      for (int i = 0; i < playerIds_.size(); i++) {
        output.writeUInt32(2, playerIds_.get(i));
      }
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeUInt32(3, prizeList_);
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      {
        int dataSize = 0;
        for (int i = 0; i < itemDefs_.size(); i++) {
          dataSize += com.google.protobuf.CodedOutputStream
            .computeUInt32SizeNoTag(itemDefs_.get(i));
        }
        size += dataSize;
        size += 1 * getItemDefsList().size();
      }
      {
        int dataSize = 0;
        for (int i = 0; i < playerIds_.size(); i++) {
          dataSize += com.google.protobuf.CodedOutputStream
            .computeUInt32SizeNoTag(playerIds_.get(i));
        }
        size += dataSize;
        size += 1 * getPlayerIdsList().size();
      }
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(3, prizeList_);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_HalloweenDrops parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_HalloweenDrops parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_HalloweenDrops parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_HalloweenDrops parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_HalloweenDrops parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_HalloweenDrops parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_HalloweenDrops parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_HalloweenDrops parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_HalloweenDrops parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_HalloweenDrops parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_HalloweenDrops prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code CDOTAUserMsg_HalloweenDrops}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:CDOTAUserMsg_HalloweenDrops)
        skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_HalloweenDropsOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return skadistats.clarity.wire.common.proto.DotaUserMessages.internal_static_CDOTAUserMsg_HalloweenDrops_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return skadistats.clarity.wire.common.proto.DotaUserMessages.internal_static_CDOTAUserMsg_HalloweenDrops_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_HalloweenDrops.class, skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_HalloweenDrops.Builder.class);
      }

      // Construct using skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_HalloweenDrops.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        itemDefs_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000001);
        playerIds_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000002);
        prizeList_ = 0;
        bitField0_ = (bitField0_ & ~0x00000004);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return skadistats.clarity.wire.common.proto.DotaUserMessages.internal_static_CDOTAUserMsg_HalloweenDrops_descriptor;
      }

      public skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_HalloweenDrops getDefaultInstanceForType() {
        return skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_HalloweenDrops.getDefaultInstance();
      }

      public skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_HalloweenDrops build() {
        skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_HalloweenDrops result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_HalloweenDrops buildPartial() {
        skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_HalloweenDrops result = new skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_HalloweenDrops(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((bitField0_ & 0x00000001) == 0x00000001)) {
          itemDefs_ = java.util.Collections.unmodifiableList(itemDefs_);
          bitField0_ = (bitField0_ & ~0x00000001);
        }
        result.itemDefs_ = itemDefs_;
        if (((bitField0_ & 0x00000002) == 0x00000002)) {
          playerIds_ = java.util.Collections.unmodifiableList(playerIds_);
          bitField0_ = (bitField0_ & ~0x00000002);
        }
        result.playerIds_ = playerIds_;
        if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
          to_bitField0_ |= 0x00000001;
        }
        result.prizeList_ = prizeList_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_HalloweenDrops) {
          return mergeFrom((skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_HalloweenDrops)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_HalloweenDrops other) {
        if (other == skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_HalloweenDrops.getDefaultInstance()) return this;
        if (!other.itemDefs_.isEmpty()) {
          if (itemDefs_.isEmpty()) {
            itemDefs_ = other.itemDefs_;
            bitField0_ = (bitField0_ & ~0x00000001);
          } else {
            ensureItemDefsIsMutable();
            itemDefs_.addAll(other.itemDefs_);
          }
          onChanged();
        }
        if (!other.playerIds_.isEmpty()) {
          if (playerIds_.isEmpty()) {
            playerIds_ = other.playerIds_;
            bitField0_ = (bitField0_ & ~0x00000002);
          } else {
            ensurePlayerIdsIsMutable();
            playerIds_.addAll(other.playerIds_);
          }
          onChanged();
        }
        if (other.hasPrizeList()) {
          setPrizeList(other.getPrizeList());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_HalloweenDrops parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_HalloweenDrops) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private java.util.List<java.lang.Integer> itemDefs_ = java.util.Collections.emptyList();
      private void ensureItemDefsIsMutable() {
        if (!((bitField0_ & 0x00000001) == 0x00000001)) {
          itemDefs_ = new java.util.ArrayList<java.lang.Integer>(itemDefs_);
          bitField0_ |= 0x00000001;
         }
      }
      /**
       * <code>repeated uint32 item_defs = 1;</code>
       */
      public java.util.List<java.lang.Integer>
          getItemDefsList() {
        return java.util.Collections.unmodifiableList(itemDefs_);
      }
      /**
       * <code>repeated uint32 item_defs = 1;</code>
       */
      public int getItemDefsCount() {
        return itemDefs_.size();
      }
      /**
       * <code>repeated uint32 item_defs = 1;</code>
       */
      public int getItemDefs(int index) {
        return itemDefs_.get(index);
      }
      /**
       * <code>repeated uint32 item_defs = 1;</code>
       */
      public Builder setItemDefs(
          int index, int value) {
        ensureItemDefsIsMutable();
        itemDefs_.set(index, value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated uint32 item_defs = 1;</code>
       */
      public Builder addItemDefs(int value) {
        ensureItemDefsIsMutable();
        itemDefs_.add(value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated uint32 item_defs = 1;</code>
       */
      public Builder addAllItemDefs(
          java.lang.Iterable<? extends java.lang.Integer> values) {
        ensureItemDefsIsMutable();
        com.google.protobuf.AbstractMessageLite.Builder.addAll(
            values, itemDefs_);
        onChanged();
        return this;
      }
      /**
       * <code>repeated uint32 item_defs = 1;</code>
       */
      public Builder clearItemDefs() {
        itemDefs_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000001);
        onChanged();
        return this;
      }

      private java.util.List<java.lang.Integer> playerIds_ = java.util.Collections.emptyList();
      private void ensurePlayerIdsIsMutable() {
        if (!((bitField0_ & 0x00000002) == 0x00000002)) {
          playerIds_ = new java.util.ArrayList<java.lang.Integer>(playerIds_);
          bitField0_ |= 0x00000002;
         }
      }
      /**
       * <code>repeated uint32 player_ids = 2;</code>
       */
      public java.util.List<java.lang.Integer>
          getPlayerIdsList() {
        return java.util.Collections.unmodifiableList(playerIds_);
      }
      /**
       * <code>repeated uint32 player_ids = 2;</code>
       */
      public int getPlayerIdsCount() {
        return playerIds_.size();
      }
      /**
       * <code>repeated uint32 player_ids = 2;</code>
       */
      public int getPlayerIds(int index) {
        return playerIds_.get(index);
      }
      /**
       * <code>repeated uint32 player_ids = 2;</code>
       */
      public Builder setPlayerIds(
          int index, int value) {
        ensurePlayerIdsIsMutable();
        playerIds_.set(index, value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated uint32 player_ids = 2;</code>
       */
      public Builder addPlayerIds(int value) {
        ensurePlayerIdsIsMutable();
        playerIds_.add(value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated uint32 player_ids = 2;</code>
       */
      public Builder addAllPlayerIds(
          java.lang.Iterable<? extends java.lang.Integer> values) {
        ensurePlayerIdsIsMutable();
        com.google.protobuf.AbstractMessageLite.Builder.addAll(
            values, playerIds_);
        onChanged();
        return this;
      }
      /**
       * <code>repeated uint32 player_ids = 2;</code>
       */
      public Builder clearPlayerIds() {
        playerIds_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000002);
        onChanged();
        return this;
      }

      private int prizeList_ ;
      /**
       * <code>optional uint32 prize_list = 3;</code>
       */
      public boolean hasPrizeList() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }
      /**
       * <code>optional uint32 prize_list = 3;</code>
       */
      public int getPrizeList() {
        return prizeList_;
      }
      /**
       * <code>optional uint32 prize_list = 3;</code>
       */
      public Builder setPrizeList(int value) {
        bitField0_ |= 0x00000004;
        prizeList_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional uint32 prize_list = 3;</code>
       */
      public Builder clearPrizeList() {
        bitField0_ = (bitField0_ & ~0x00000004);
        prizeList_ = 0;
        onChanged();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:CDOTAUserMsg_HalloweenDrops)
    }

    static {
      defaultInstance = new CDOTAUserMsg_HalloweenDrops(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:CDOTAUserMsg_HalloweenDrops)
  }

  public interface CDOTAUserMsg_PredictionResultOrBuilder extends
      // @@protoc_insertion_point(interface_extends:CDOTAUserMsg_PredictionResult)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>optional uint32 account_id = 1;</code>
     */
    boolean hasAccountId();
    /**
     * <code>optional uint32 account_id = 1;</code>
     */
    int getAccountId();

    /**
     * <code>optional uint64 match_id = 2;</code>
     */
    boolean hasMatchId();
    /**
     * <code>optional uint64 match_id = 2;</code>
     */
    long getMatchId();

    /**
     * <code>optional bool correct = 3;</code>
     */
    boolean hasCorrect();
    /**
     * <code>optional bool correct = 3;</code>
     */
    boolean getCorrect();

    /**
     * <code>repeated .CDOTAUserMsg_PredictionResult.Prediction predictions = 4;</code>
     */
    java.util.List<skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_PredictionResult.Prediction> 
        getPredictionsList();
    /**
     * <code>repeated .CDOTAUserMsg_PredictionResult.Prediction predictions = 4;</code>
     */
    skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_PredictionResult.Prediction getPredictions(int index);
    /**
     * <code>repeated .CDOTAUserMsg_PredictionResult.Prediction predictions = 4;</code>
     */
    int getPredictionsCount();
    /**
     * <code>repeated .CDOTAUserMsg_PredictionResult.Prediction predictions = 4;</code>
     */
    java.util.List<? extends skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_PredictionResult.PredictionOrBuilder> 
        getPredictionsOrBuilderList();
    /**
     * <code>repeated .CDOTAUserMsg_PredictionResult.Prediction predictions = 4;</code>
     */
    skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_PredictionResult.PredictionOrBuilder getPredictionsOrBuilder(
        int index);
  }
  /**
   * Protobuf type {@code CDOTAUserMsg_PredictionResult}
   */
  public static final class CDOTAUserMsg_PredictionResult extends
      com.google.protobuf.GeneratedMessage implements
      // @@protoc_insertion_point(message_implements:CDOTAUserMsg_PredictionResult)
      CDOTAUserMsg_PredictionResultOrBuilder {
    // Use CDOTAUserMsg_PredictionResult.newBuilder() to construct.
    private CDOTAUserMsg_PredictionResult(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private CDOTAUserMsg_PredictionResult(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final CDOTAUserMsg_PredictionResult defaultInstance;
    public static CDOTAUserMsg_PredictionResult getDefaultInstance() {
      return defaultInstance;
    }

    public CDOTAUserMsg_PredictionResult getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private CDOTAUserMsg_PredictionResult(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 8: {
              bitField0_ |= 0x00000001;
              accountId_ = input.readUInt32();
              break;
            }
            case 16: {
              bitField0_ |= 0x00000002;
              matchId_ = input.readUInt64();
              break;
            }
            case 24: {
              bitField0_ |= 0x00000004;
              correct_ = input.readBool();
              break;
            }
            case 34: {
              if (!((mutable_bitField0_ & 0x00000008) == 0x00000008)) {
                predictions_ = new java.util.ArrayList<skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_PredictionResult.Prediction>();
                mutable_bitField0_ |= 0x00000008;
              }
              predictions_.add(input.readMessage(skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_PredictionResult.Prediction.PARSER, extensionRegistry));
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        if (((mutable_bitField0_ & 0x00000008) == 0x00000008)) {
          predictions_ = java.util.Collections.unmodifiableList(predictions_);
        }
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return skadistats.clarity.wire.common.proto.DotaUserMessages.internal_static_CDOTAUserMsg_PredictionResult_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return skadistats.clarity.wire.common.proto.DotaUserMessages.internal_static_CDOTAUserMsg_PredictionResult_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_PredictionResult.class, skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_PredictionResult.Builder.class);
    }

    public static com.google.protobuf.Parser<CDOTAUserMsg_PredictionResult> PARSER =
        new com.google.protobuf.AbstractParser<CDOTAUserMsg_PredictionResult>() {
      public CDOTAUserMsg_PredictionResult parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new CDOTAUserMsg_PredictionResult(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<CDOTAUserMsg_PredictionResult> getParserForType() {
      return PARSER;
    }

    public interface PredictionOrBuilder extends
        // @@protoc_insertion_point(interface_extends:CDOTAUserMsg_PredictionResult.Prediction)
        com.google.protobuf.MessageOrBuilder {

      /**
       * <code>optional uint32 item_def = 1;</code>
       */
      boolean hasItemDef();
      /**
       * <code>optional uint32 item_def = 1;</code>
       */
      int getItemDef();

      /**
       * <code>optional uint32 num_correct = 2;</code>
       */
      boolean hasNumCorrect();
      /**
       * <code>optional uint32 num_correct = 2;</code>
       */
      int getNumCorrect();

      /**
       * <code>optional uint32 num_fails = 3;</code>
       */
      boolean hasNumFails();
      /**
       * <code>optional uint32 num_fails = 3;</code>
       */
      int getNumFails();

      /**
       * <code>optional .CDOTAUserMsg_PredictionResult.Prediction.EResult result = 4 [default = k_eResult_ItemGranted];</code>
       */
      boolean hasResult();
      /**
       * <code>optional .CDOTAUserMsg_PredictionResult.Prediction.EResult result = 4 [default = k_eResult_ItemGranted];</code>
       */
      skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_PredictionResult.Prediction.EResult getResult();

      /**
       * <code>repeated uint32 granted_item_defs = 6;</code>
       */
      java.util.List<java.lang.Integer> getGrantedItemDefsList();
      /**
       * <code>repeated uint32 granted_item_defs = 6;</code>
       */
      int getGrantedItemDefsCount();
      /**
       * <code>repeated uint32 granted_item_defs = 6;</code>
       */
      int getGrantedItemDefs(int index);
    }
    /**
     * Protobuf type {@code CDOTAUserMsg_PredictionResult.Prediction}
     */
    public static final class Prediction extends
        com.google.protobuf.GeneratedMessage implements
        // @@protoc_insertion_point(message_implements:CDOTAUserMsg_PredictionResult.Prediction)
        PredictionOrBuilder {
      // Use Prediction.newBuilder() to construct.
      private Prediction(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
        super(builder);
        this.unknownFields = builder.getUnknownFields();
      }
      private Prediction(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

      private static final Prediction defaultInstance;
      public static Prediction getDefaultInstance() {
        return defaultInstance;
      }

      public Prediction getDefaultInstanceForType() {
        return defaultInstance;
      }

      private final com.google.protobuf.UnknownFieldSet unknownFields;
      @java.lang.Override
      public final com.google.protobuf.UnknownFieldSet
          getUnknownFields() {
        return this.unknownFields;
      }
      private Prediction(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        initFields();
        int mutable_bitField0_ = 0;
        com.google.protobuf.UnknownFieldSet.Builder unknownFields =
            com.google.protobuf.UnknownFieldSet.newBuilder();
        try {
          boolean done = false;
          while (!done) {
            int tag = input.readTag();
            switch (tag) {
              case 0:
                done = true;
                break;
              default: {
                if (!parseUnknownField(input, unknownFields,
                                       extensionRegistry, tag)) {
                  done = true;
                }
                break;
              }
              case 8: {
                bitField0_ |= 0x00000001;
                itemDef_ = input.readUInt32();
                break;
              }
              case 16: {
                bitField0_ |= 0x00000002;
                numCorrect_ = input.readUInt32();
                break;
              }
              case 24: {
                bitField0_ |= 0x00000004;
                numFails_ = input.readUInt32();
                break;
              }
              case 32: {
                int rawValue = input.readEnum();
                skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_PredictionResult.Prediction.EResult value = skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_PredictionResult.Prediction.EResult.valueOf(rawValue);
                if (value == null) {
                  unknownFields.mergeVarintField(4, rawValue);
                } else {
                  bitField0_ |= 0x00000008;
                  result_ = value;
                }
                break;
              }
              case 48: {
                if (!((mutable_bitField0_ & 0x00000010) == 0x00000010)) {
                  grantedItemDefs_ = new java.util.ArrayList<java.lang.Integer>();
                  mutable_bitField0_ |= 0x00000010;
                }
                grantedItemDefs_.add(input.readUInt32());
                break;
              }
              case 50: {
                int length = input.readRawVarint32();
                int limit = input.pushLimit(length);
                if (!((mutable_bitField0_ & 0x00000010) == 0x00000010) && input.getBytesUntilLimit() > 0) {
                  grantedItemDefs_ = new java.util.ArrayList<java.lang.Integer>();
                  mutable_bitField0_ |= 0x00000010;
                }
                while (input.getBytesUntilLimit() > 0) {
                  grantedItemDefs_.add(input.readUInt32());
                }
                input.popLimit(limit);
                break;
              }
            }
          }
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.setUnfinishedMessage(this);
        } catch (java.io.IOException e) {
          throw new com.google.protobuf.InvalidProtocolBufferException(
              e.getMessage()).setUnfinishedMessage(this);
        } finally {
          if (((mutable_bitField0_ & 0x00000010) == 0x00000010)) {
            grantedItemDefs_ = java.util.Collections.unmodifiableList(grantedItemDefs_);
          }
          this.unknownFields = unknownFields.build();
          makeExtensionsImmutable();
        }
      }
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return skadistats.clarity.wire.common.proto.DotaUserMessages.internal_static_CDOTAUserMsg_PredictionResult_Prediction_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return skadistats.clarity.wire.common.proto.DotaUserMessages.internal_static_CDOTAUserMsg_PredictionResult_Prediction_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_PredictionResult.Prediction.class, skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_PredictionResult.Prediction.Builder.class);
      }

      public static com.google.protobuf.Parser<Prediction> PARSER =
          new com.google.protobuf.AbstractParser<Prediction>() {
        public Prediction parsePartialFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws com.google.protobuf.InvalidProtocolBufferException {
          return new Prediction(input, extensionRegistry);
        }
      };

      @java.lang.Override
      public com.google.protobuf.Parser<Prediction> getParserForType() {
        return PARSER;
      }

      /**
       * Protobuf enum {@code CDOTAUserMsg_PredictionResult.Prediction.EResult}
       */
      public enum EResult
          implements com.google.protobuf.ProtocolMessageEnum {
        /**
         * <code>k_eResult_ItemGranted = 1;</code>
         */
        k_eResult_ItemGranted(0, 1),
        /**
         * <code>k_eResult_Destroyed = 2;</code>
         */
        k_eResult_Destroyed(1, 2),
        ;

        /**
         * <code>k_eResult_ItemGranted = 1;</code>
         */
        public static final int k_eResult_ItemGranted_VALUE = 1;
        /**
         * <code>k_eResult_Destroyed = 2;</code>
         */
        public static final int k_eResult_Destroyed_VALUE = 2;


        public final int getNumber() { return value; }

        public static EResult valueOf(int value) {
          switch (value) {
            case 1: return k_eResult_ItemGranted;
            case 2: return k_eResult_Destroyed;
            default: return null;
          }
        }

        public static com.google.protobuf.Internal.EnumLiteMap<EResult>
            internalGetValueMap() {
          return internalValueMap;
        }
        private static com.google.protobuf.Internal.EnumLiteMap<EResult>
            internalValueMap =
              new com.google.protobuf.Internal.EnumLiteMap<EResult>() {
                public EResult findValueByNumber(int number) {
                  return EResult.valueOf(number);
                }
              };

        public final com.google.protobuf.Descriptors.EnumValueDescriptor
            getValueDescriptor() {
          return getDescriptor().getValues().get(index);
        }
        public final com.google.protobuf.Descriptors.EnumDescriptor
            getDescriptorForType() {
          return getDescriptor();
        }
        public static final com.google.protobuf.Descriptors.EnumDescriptor
            getDescriptor() {
          return skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_PredictionResult.Prediction.getDescriptor().getEnumTypes().get(0);
        }

        private static final EResult[] VALUES = values();

        public static EResult valueOf(
            com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
          if (desc.getType() != getDescriptor()) {
            throw new java.lang.IllegalArgumentException(
              "EnumValueDescriptor is not for this type.");
          }
          return VALUES[desc.getIndex()];
        }

        private final int index;
        private final int value;

        private EResult(int index, int value) {
          this.index = index;
          this.value = value;
        }

        // @@protoc_insertion_point(enum_scope:CDOTAUserMsg_PredictionResult.Prediction.EResult)
      }

      private int bitField0_;
      public static final int ITEM_DEF_FIELD_NUMBER = 1;
      private int itemDef_;
      /**
       * <code>optional uint32 item_def = 1;</code>
       */
      public boolean hasItemDef() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>optional uint32 item_def = 1;</code>
       */
      public int getItemDef() {
        return itemDef_;
      }

      public static final int NUM_CORRECT_FIELD_NUMBER = 2;
      private int numCorrect_;
      /**
       * <code>optional uint32 num_correct = 2;</code>
       */
      public boolean hasNumCorrect() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>optional uint32 num_correct = 2;</code>
       */
      public int getNumCorrect() {
        return numCorrect_;
      }

      public static final int NUM_FAILS_FIELD_NUMBER = 3;
      private int numFails_;
      /**
       * <code>optional uint32 num_fails = 3;</code>
       */
      public boolean hasNumFails() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }
      /**
       * <code>optional uint32 num_fails = 3;</code>
       */
      public int getNumFails() {
        return numFails_;
      }

      public static final int RESULT_FIELD_NUMBER = 4;
      private skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_PredictionResult.Prediction.EResult result_;
      /**
       * <code>optional .CDOTAUserMsg_PredictionResult.Prediction.EResult result = 4 [default = k_eResult_ItemGranted];</code>
       */
      public boolean hasResult() {
        return ((bitField0_ & 0x00000008) == 0x00000008);
      }
      /**
       * <code>optional .CDOTAUserMsg_PredictionResult.Prediction.EResult result = 4 [default = k_eResult_ItemGranted];</code>
       */
      public skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_PredictionResult.Prediction.EResult getResult() {
        return result_;
      }

      public static final int GRANTED_ITEM_DEFS_FIELD_NUMBER = 6;
      private java.util.List<java.lang.Integer> grantedItemDefs_;
      /**
       * <code>repeated uint32 granted_item_defs = 6;</code>
       */
      public java.util.List<java.lang.Integer>
          getGrantedItemDefsList() {
        return grantedItemDefs_;
      }
      /**
       * <code>repeated uint32 granted_item_defs = 6;</code>
       */
      public int getGrantedItemDefsCount() {
        return grantedItemDefs_.size();
      }
      /**
       * <code>repeated uint32 granted_item_defs = 6;</code>
       */
      public int getGrantedItemDefs(int index) {
        return grantedItemDefs_.get(index);
      }

      private void initFields() {
        itemDef_ = 0;
        numCorrect_ = 0;
        numFails_ = 0;
        result_ = skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_PredictionResult.Prediction.EResult.k_eResult_ItemGranted;
        grantedItemDefs_ = java.util.Collections.emptyList();
      }
      private byte memoizedIsInitialized = -1;
      public final boolean isInitialized() {
        byte isInitialized = memoizedIsInitialized;
        if (isInitialized == 1) return true;
        if (isInitialized == 0) return false;

        memoizedIsInitialized = 1;
        return true;
      }

      public void writeTo(com.google.protobuf.CodedOutputStream output)
                          throws java.io.IOException {
        getSerializedSize();
        if (((bitField0_ & 0x00000001) == 0x00000001)) {
          output.writeUInt32(1, itemDef_);
        }
        if (((bitField0_ & 0x00000002) == 0x00000002)) {
          output.writeUInt32(2, numCorrect_);
        }
        if (((bitField0_ & 0x00000004) == 0x00000004)) {
          output.writeUInt32(3, numFails_);
        }
        if (((bitField0_ & 0x00000008) == 0x00000008)) {
          output.writeEnum(4, result_.getNumber());
        }
        for (int i = 0; i < grantedItemDefs_.size(); i++) {
          output.writeUInt32(6, grantedItemDefs_.get(i));
        }
        getUnknownFields().writeTo(output);
      }

      private int memoizedSerializedSize = -1;
      public int getSerializedSize() {
        int size = memoizedSerializedSize;
        if (size != -1) return size;

        size = 0;
        if (((bitField0_ & 0x00000001) == 0x00000001)) {
          size += com.google.protobuf.CodedOutputStream
            .computeUInt32Size(1, itemDef_);
        }
        if (((bitField0_ & 0x00000002) == 0x00000002)) {
          size += com.google.protobuf.CodedOutputStream
            .computeUInt32Size(2, numCorrect_);
        }
        if (((bitField0_ & 0x00000004) == 0x00000004)) {
          size += com.google.protobuf.CodedOutputStream
            .computeUInt32Size(3, numFails_);
        }
        if (((bitField0_ & 0x00000008) == 0x00000008)) {
          size += com.google.protobuf.CodedOutputStream
            .computeEnumSize(4, result_.getNumber());
        }
        {
          int dataSize = 0;
          for (int i = 0; i < grantedItemDefs_.size(); i++) {
            dataSize += com.google.protobuf.CodedOutputStream
              .computeUInt32SizeNoTag(grantedItemDefs_.get(i));
          }
          size += dataSize;
          size += 1 * getGrantedItemDefsList().size();
        }
        size += getUnknownFields().getSerializedSize();
        memoizedSerializedSize = size;
        return size;
      }

      private static final long serialVersionUID = 0L;
      @java.lang.Override
      protected java.lang.Object writeReplace()
          throws java.io.ObjectStreamException {
        return super.writeReplace();
      }

      public static skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_PredictionResult.Prediction parseFrom(
          com.google.protobuf.ByteString data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_PredictionResult.Prediction parseFrom(
          com.google.protobuf.ByteString data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_PredictionResult.Prediction parseFrom(byte[] data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_PredictionResult.Prediction parseFrom(
          byte[] data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_PredictionResult.Prediction parseFrom(java.io.InputStream input)
          throws java.io.IOException {
        return PARSER.parseFrom(input);
      }
      public static skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_PredictionResult.Prediction parseFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return PARSER.parseFrom(input, extensionRegistry);
      }
      public static skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_PredictionResult.Prediction parseDelimitedFrom(java.io.InputStream input)
          throws java.io.IOException {
        return PARSER.parseDelimitedFrom(input);
      }
      public static skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_PredictionResult.Prediction parseDelimitedFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return PARSER.parseDelimitedFrom(input, extensionRegistry);
      }
      public static skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_PredictionResult.Prediction parseFrom(
          com.google.protobuf.CodedInputStream input)
          throws java.io.IOException {
        return PARSER.parseFrom(input);
      }
      public static skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_PredictionResult.Prediction parseFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return PARSER.parseFrom(input, extensionRegistry);
      }

      public static Builder newBuilder() { return Builder.create(); }
      public Builder newBuilderForType() { return newBuilder(); }
      public static Builder newBuilder(skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_PredictionResult.Prediction prototype) {
        return newBuilder().mergeFrom(prototype);
      }
      public Builder toBuilder() { return newBuilder(this); }

      @java.lang.Override
      protected Builder newBuilderForType(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        Builder builder = new Builder(parent);
        return builder;
      }
      /**
       * Protobuf type {@code CDOTAUserMsg_PredictionResult.Prediction}
       */
      public static final class Builder extends
          com.google.protobuf.GeneratedMessage.Builder<Builder> implements
          // @@protoc_insertion_point(builder_implements:CDOTAUserMsg_PredictionResult.Prediction)
          skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_PredictionResult.PredictionOrBuilder {
        public static final com.google.protobuf.Descriptors.Descriptor
            getDescriptor() {
          return skadistats.clarity.wire.common.proto.DotaUserMessages.internal_static_CDOTAUserMsg_PredictionResult_Prediction_descriptor;
        }

        protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
            internalGetFieldAccessorTable() {
          return skadistats.clarity.wire.common.proto.DotaUserMessages.internal_static_CDOTAUserMsg_PredictionResult_Prediction_fieldAccessorTable
              .ensureFieldAccessorsInitialized(
                  skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_PredictionResult.Prediction.class, skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_PredictionResult.Prediction.Builder.class);
        }

        // Construct using skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_PredictionResult.Prediction.newBuilder()
        private Builder() {
          maybeForceBuilderInitialization();
        }

        private Builder(
            com.google.protobuf.GeneratedMessage.BuilderParent parent) {
          super(parent);
          maybeForceBuilderInitialization();
        }
        private void maybeForceBuilderInitialization() {
          if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
          }
        }
        private static Builder create() {
          return new Builder();
        }

        public Builder clear() {
          super.clear();
          itemDef_ = 0;
          bitField0_ = (bitField0_ & ~0x00000001);
          numCorrect_ = 0;
          bitField0_ = (bitField0_ & ~0x00000002);
          numFails_ = 0;
          bitField0_ = (bitField0_ & ~0x00000004);
          result_ = skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_PredictionResult.Prediction.EResult.k_eResult_ItemGranted;
          bitField0_ = (bitField0_ & ~0x00000008);
          grantedItemDefs_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000010);
          return this;
        }

        public Builder clone() {
          return create().mergeFrom(buildPartial());
        }

        public com.google.protobuf.Descriptors.Descriptor
            getDescriptorForType() {
          return skadistats.clarity.wire.common.proto.DotaUserMessages.internal_static_CDOTAUserMsg_PredictionResult_Prediction_descriptor;
        }

        public skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_PredictionResult.Prediction getDefaultInstanceForType() {
          return skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_PredictionResult.Prediction.getDefaultInstance();
        }

        public skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_PredictionResult.Prediction build() {
          skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_PredictionResult.Prediction result = buildPartial();
          if (!result.isInitialized()) {
            throw newUninitializedMessageException(result);
          }
          return result;
        }

        public skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_PredictionResult.Prediction buildPartial() {
          skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_PredictionResult.Prediction result = new skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_PredictionResult.Prediction(this);
          int from_bitField0_ = bitField0_;
          int to_bitField0_ = 0;
          if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
            to_bitField0_ |= 0x00000001;
          }
          result.itemDef_ = itemDef_;
          if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
            to_bitField0_ |= 0x00000002;
          }
          result.numCorrect_ = numCorrect_;
          if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
            to_bitField0_ |= 0x00000004;
          }
          result.numFails_ = numFails_;
          if (((from_bitField0_ & 0x00000008) == 0x00000008)) {
            to_bitField0_ |= 0x00000008;
          }
          result.result_ = result_;
          if (((bitField0_ & 0x00000010) == 0x00000010)) {
            grantedItemDefs_ = java.util.Collections.unmodifiableList(grantedItemDefs_);
            bitField0_ = (bitField0_ & ~0x00000010);
          }
          result.grantedItemDefs_ = grantedItemDefs_;
          result.bitField0_ = to_bitField0_;
          onBuilt();
          return result;
        }

        public Builder mergeFrom(com.google.protobuf.Message other) {
          if (other instanceof skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_PredictionResult.Prediction) {
            return mergeFrom((skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_PredictionResult.Prediction)other);
          } else {
            super.mergeFrom(other);
            return this;
          }
        }

        public Builder mergeFrom(skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_PredictionResult.Prediction other) {
          if (other == skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_PredictionResult.Prediction.getDefaultInstance()) return this;
          if (other.hasItemDef()) {
            setItemDef(other.getItemDef());
          }
          if (other.hasNumCorrect()) {
            setNumCorrect(other.getNumCorrect());
          }
          if (other.hasNumFails()) {
            setNumFails(other.getNumFails());
          }
          if (other.hasResult()) {
            setResult(other.getResult());
          }
          if (!other.grantedItemDefs_.isEmpty()) {
            if (grantedItemDefs_.isEmpty()) {
              grantedItemDefs_ = other.grantedItemDefs_;
              bitField0_ = (bitField0_ & ~0x00000010);
            } else {
              ensureGrantedItemDefsIsMutable();
              grantedItemDefs_.addAll(other.grantedItemDefs_);
            }
            onChanged();
          }
          this.mergeUnknownFields(other.getUnknownFields());
          return this;
        }

        public final boolean isInitialized() {
          return true;
        }

        public Builder mergeFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws java.io.IOException {
          skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_PredictionResult.Prediction parsedMessage = null;
          try {
            parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
          } catch (com.google.protobuf.InvalidProtocolBufferException e) {
            parsedMessage = (skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_PredictionResult.Prediction) e.getUnfinishedMessage();
            throw e;
          } finally {
            if (parsedMessage != null) {
              mergeFrom(parsedMessage);
            }
          }
          return this;
        }
        private int bitField0_;

        private int itemDef_ ;
        /**
         * <code>optional uint32 item_def = 1;</code>
         */
        public boolean hasItemDef() {
          return ((bitField0_ & 0x00000001) == 0x00000001);
        }
        /**
         * <code>optional uint32 item_def = 1;</code>
         */
        public int getItemDef() {
          return itemDef_;
        }
        /**
         * <code>optional uint32 item_def = 1;</code>
         */
        public Builder setItemDef(int value) {
          bitField0_ |= 0x00000001;
          itemDef_ = value;
          onChanged();
          return this;
        }
        /**
         * <code>optional uint32 item_def = 1;</code>
         */
        public Builder clearItemDef() {
          bitField0_ = (bitField0_ & ~0x00000001);
          itemDef_ = 0;
          onChanged();
          return this;
        }

        private int numCorrect_ ;
        /**
         * <code>optional uint32 num_correct = 2;</code>
         */
        public boolean hasNumCorrect() {
          return ((bitField0_ & 0x00000002) == 0x00000002);
        }
        /**
         * <code>optional uint32 num_correct = 2;</code>
         */
        public int getNumCorrect() {
          return numCorrect_;
        }
        /**
         * <code>optional uint32 num_correct = 2;</code>
         */
        public Builder setNumCorrect(int value) {
          bitField0_ |= 0x00000002;
          numCorrect_ = value;
          onChanged();
          return this;
        }
        /**
         * <code>optional uint32 num_correct = 2;</code>
         */
        public Builder clearNumCorrect() {
          bitField0_ = (bitField0_ & ~0x00000002);
          numCorrect_ = 0;
          onChanged();
          return this;
        }

        private int numFails_ ;
        /**
         * <code>optional uint32 num_fails = 3;</code>
         */
        public boolean hasNumFails() {
          return ((bitField0_ & 0x00000004) == 0x00000004);
        }
        /**
         * <code>optional uint32 num_fails = 3;</code>
         */
        public int getNumFails() {
          return numFails_;
        }
        /**
         * <code>optional uint32 num_fails = 3;</code>
         */
        public Builder setNumFails(int value) {
          bitField0_ |= 0x00000004;
          numFails_ = value;
          onChanged();
          return this;
        }
        /**
         * <code>optional uint32 num_fails = 3;</code>
         */
        public Builder clearNumFails() {
          bitField0_ = (bitField0_ & ~0x00000004);
          numFails_ = 0;
          onChanged();
          return this;
        }

        private skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_PredictionResult.Prediction.EResult result_ = skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_PredictionResult.Prediction.EResult.k_eResult_ItemGranted;
        /**
         * <code>optional .CDOTAUserMsg_PredictionResult.Prediction.EResult result = 4 [default = k_eResult_ItemGranted];</code>
         */
        public boolean hasResult() {
          return ((bitField0_ & 0x00000008) == 0x00000008);
        }
        /**
         * <code>optional .CDOTAUserMsg_PredictionResult.Prediction.EResult result = 4 [default = k_eResult_ItemGranted];</code>
         */
        public skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_PredictionResult.Prediction.EResult getResult() {
          return result_;
        }
        /**
         * <code>optional .CDOTAUserMsg_PredictionResult.Prediction.EResult result = 4 [default = k_eResult_ItemGranted];</code>
         */
        public Builder setResult(skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_PredictionResult.Prediction.EResult value) {
          if (value == null) {
            throw new NullPointerException();
          }
          bitField0_ |= 0x00000008;
          result_ = value;
          onChanged();
          return this;
        }
        /**
         * <code>optional .CDOTAUserMsg_PredictionResult.Prediction.EResult result = 4 [default = k_eResult_ItemGranted];</code>
         */
        public Builder clearResult() {
          bitField0_ = (bitField0_ & ~0x00000008);
          result_ = skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_PredictionResult.Prediction.EResult.k_eResult_ItemGranted;
          onChanged();
          return this;
        }

        private java.util.List<java.lang.Integer> grantedItemDefs_ = java.util.Collections.emptyList();
        private void ensureGrantedItemDefsIsMutable() {
          if (!((bitField0_ & 0x00000010) == 0x00000010)) {
            grantedItemDefs_ = new java.util.ArrayList<java.lang.Integer>(grantedItemDefs_);
            bitField0_ |= 0x00000010;
           }
        }
        /**
         * <code>repeated uint32 granted_item_defs = 6;</code>
         */
        public java.util.List<java.lang.Integer>
            getGrantedItemDefsList() {
          return java.util.Collections.unmodifiableList(grantedItemDefs_);
        }
        /**
         * <code>repeated uint32 granted_item_defs = 6;</code>
         */
        public int getGrantedItemDefsCount() {
          return grantedItemDefs_.size();
        }
        /**
         * <code>repeated uint32 granted_item_defs = 6;</code>
         */
        public int getGrantedItemDefs(int index) {
          return grantedItemDefs_.get(index);
        }
        /**
         * <code>repeated uint32 granted_item_defs = 6;</code>
         */
        public Builder setGrantedItemDefs(
            int index, int value) {
          ensureGrantedItemDefsIsMutable();
          grantedItemDefs_.set(index, value);
          onChanged();
          return this;
        }
        /**
         * <code>repeated uint32 granted_item_defs = 6;</code>
         */
        public Builder addGrantedItemDefs(int value) {
          ensureGrantedItemDefsIsMutable();
          grantedItemDefs_.add(value);
          onChanged();
          return this;
        }
        /**
         * <code>repeated uint32 granted_item_defs = 6;</code>
         */
        public Builder addAllGrantedItemDefs(
            java.lang.Iterable<? extends java.lang.Integer> values) {
          ensureGrantedItemDefsIsMutable();
          com.google.protobuf.AbstractMessageLite.Builder.addAll(
              values, grantedItemDefs_);
          onChanged();
          return this;
        }
        /**
         * <code>repeated uint32 granted_item_defs = 6;</code>
         */
        public Builder clearGrantedItemDefs() {
          grantedItemDefs_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000010);
          onChanged();
          return this;
        }

        // @@protoc_insertion_point(builder_scope:CDOTAUserMsg_PredictionResult.Prediction)
      }

      static {
        defaultInstance = new Prediction(true);
        defaultInstance.initFields();
      }

      // @@protoc_insertion_point(class_scope:CDOTAUserMsg_PredictionResult.Prediction)
    }

    private int bitField0_;
    public static final int ACCOUNT_ID_FIELD_NUMBER = 1;
    private int accountId_;
    /**
     * <code>optional uint32 account_id = 1;</code>
     */
    public boolean hasAccountId() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>optional uint32 account_id = 1;</code>
     */
    public int getAccountId() {
      return accountId_;
    }

    public static final int MATCH_ID_FIELD_NUMBER = 2;
    private long matchId_;
    /**
     * <code>optional uint64 match_id = 2;</code>
     */
    public boolean hasMatchId() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>optional uint64 match_id = 2;</code>
     */
    public long getMatchId() {
      return matchId_;
    }

    public static final int CORRECT_FIELD_NUMBER = 3;
    private boolean correct_;
    /**
     * <code>optional bool correct = 3;</code>
     */
    public boolean hasCorrect() {
      return ((bitField0_ & 0x00000004) == 0x00000004);
    }
    /**
     * <code>optional bool correct = 3;</code>
     */
    public boolean getCorrect() {
      return correct_;
    }

    public static final int PREDICTIONS_FIELD_NUMBER = 4;
    private java.util.List<skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_PredictionResult.Prediction> predictions_;
    /**
     * <code>repeated .CDOTAUserMsg_PredictionResult.Prediction predictions = 4;</code>
     */
    public java.util.List<skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_PredictionResult.Prediction> getPredictionsList() {
      return predictions_;
    }
    /**
     * <code>repeated .CDOTAUserMsg_PredictionResult.Prediction predictions = 4;</code>
     */
    public java.util.List<? extends skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_PredictionResult.PredictionOrBuilder> 
        getPredictionsOrBuilderList() {
      return predictions_;
    }
    /**
     * <code>repeated .CDOTAUserMsg_PredictionResult.Prediction predictions = 4;</code>
     */
    public int getPredictionsCount() {
      return predictions_.size();
    }
    /**
     * <code>repeated .CDOTAUserMsg_PredictionResult.Prediction predictions = 4;</code>
     */
    public skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_PredictionResult.Prediction getPredictions(int index) {
      return predictions_.get(index);
    }
    /**
     * <code>repeated .CDOTAUserMsg_PredictionResult.Prediction predictions = 4;</code>
     */
    public skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_PredictionResult.PredictionOrBuilder getPredictionsOrBuilder(
        int index) {
      return predictions_.get(index);
    }

    private void initFields() {
      accountId_ = 0;
      matchId_ = 0L;
      correct_ = false;
      predictions_ = java.util.Collections.emptyList();
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeUInt32(1, accountId_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeUInt64(2, matchId_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        output.writeBool(3, correct_);
      }
      for (int i = 0; i < predictions_.size(); i++) {
        output.writeMessage(4, predictions_.get(i));
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(1, accountId_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt64Size(2, matchId_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBoolSize(3, correct_);
      }
      for (int i = 0; i < predictions_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(4, predictions_.get(i));
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_PredictionResult parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_PredictionResult parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_PredictionResult parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_PredictionResult parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_PredictionResult parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_PredictionResult parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_PredictionResult parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_PredictionResult parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_PredictionResult parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_PredictionResult parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_PredictionResult prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code CDOTAUserMsg_PredictionResult}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:CDOTAUserMsg_PredictionResult)
        skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_PredictionResultOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return skadistats.clarity.wire.common.proto.DotaUserMessages.internal_static_CDOTAUserMsg_PredictionResult_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return skadistats.clarity.wire.common.proto.DotaUserMessages.internal_static_CDOTAUserMsg_PredictionResult_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_PredictionResult.class, skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_PredictionResult.Builder.class);
      }

      // Construct using skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_PredictionResult.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
          getPredictionsFieldBuilder();
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        accountId_ = 0;
        bitField0_ = (bitField0_ & ~0x00000001);
        matchId_ = 0L;
        bitField0_ = (bitField0_ & ~0x00000002);
        correct_ = false;
        bitField0_ = (bitField0_ & ~0x00000004);
        if (predictionsBuilder_ == null) {
          predictions_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000008);
        } else {
          predictionsBuilder_.clear();
        }
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return skadistats.clarity.wire.common.proto.DotaUserMessages.internal_static_CDOTAUserMsg_PredictionResult_descriptor;
      }

      public skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_PredictionResult getDefaultInstanceForType() {
        return skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_PredictionResult.getDefaultInstance();
      }

      public skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_PredictionResult build() {
        skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_PredictionResult result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_PredictionResult buildPartial() {
        skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_PredictionResult result = new skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_PredictionResult(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.accountId_ = accountId_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.matchId_ = matchId_;
        if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
          to_bitField0_ |= 0x00000004;
        }
        result.correct_ = correct_;
        if (predictionsBuilder_ == null) {
          if (((bitField0_ & 0x00000008) == 0x00000008)) {
            predictions_ = java.util.Collections.unmodifiableList(predictions_);
            bitField0_ = (bitField0_ & ~0x00000008);
          }
          result.predictions_ = predictions_;
        } else {
          result.predictions_ = predictionsBuilder_.build();
        }
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_PredictionResult) {
          return mergeFrom((skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_PredictionResult)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_PredictionResult other) {
        if (other == skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_PredictionResult.getDefaultInstance()) return this;
        if (other.hasAccountId()) {
          setAccountId(other.getAccountId());
        }
        if (other.hasMatchId()) {
          setMatchId(other.getMatchId());
        }
        if (other.hasCorrect()) {
          setCorrect(other.getCorrect());
        }
        if (predictionsBuilder_ == null) {
          if (!other.predictions_.isEmpty()) {
            if (predictions_.isEmpty()) {
              predictions_ = other.predictions_;
              bitField0_ = (bitField0_ & ~0x00000008);
            } else {
              ensurePredictionsIsMutable();
              predictions_.addAll(other.predictions_);
            }
            onChanged();
          }
        } else {
          if (!other.predictions_.isEmpty()) {
            if (predictionsBuilder_.isEmpty()) {
              predictionsBuilder_.dispose();
              predictionsBuilder_ = null;
              predictions_ = other.predictions_;
              bitField0_ = (bitField0_ & ~0x00000008);
              predictionsBuilder_ = 
                com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders ?
                   getPredictionsFieldBuilder() : null;
            } else {
              predictionsBuilder_.addAllMessages(other.predictions_);
            }
          }
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_PredictionResult parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_PredictionResult) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private int accountId_ ;
      /**
       * <code>optional uint32 account_id = 1;</code>
       */
      public boolean hasAccountId() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>optional uint32 account_id = 1;</code>
       */
      public int getAccountId() {
        return accountId_;
      }
      /**
       * <code>optional uint32 account_id = 1;</code>
       */
      public Builder setAccountId(int value) {
        bitField0_ |= 0x00000001;
        accountId_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional uint32 account_id = 1;</code>
       */
      public Builder clearAccountId() {
        bitField0_ = (bitField0_ & ~0x00000001);
        accountId_ = 0;
        onChanged();
        return this;
      }

      private long matchId_ ;
      /**
       * <code>optional uint64 match_id = 2;</code>
       */
      public boolean hasMatchId() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>optional uint64 match_id = 2;</code>
       */
      public long getMatchId() {
        return matchId_;
      }
      /**
       * <code>optional uint64 match_id = 2;</code>
       */
      public Builder setMatchId(long value) {
        bitField0_ |= 0x00000002;
        matchId_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional uint64 match_id = 2;</code>
       */
      public Builder clearMatchId() {
        bitField0_ = (bitField0_ & ~0x00000002);
        matchId_ = 0L;
        onChanged();
        return this;
      }

      private boolean correct_ ;
      /**
       * <code>optional bool correct = 3;</code>
       */
      public boolean hasCorrect() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }
      /**
       * <code>optional bool correct = 3;</code>
       */
      public boolean getCorrect() {
        return correct_;
      }
      /**
       * <code>optional bool correct = 3;</code>
       */
      public Builder setCorrect(boolean value) {
        bitField0_ |= 0x00000004;
        correct_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional bool correct = 3;</code>
       */
      public Builder clearCorrect() {
        bitField0_ = (bitField0_ & ~0x00000004);
        correct_ = false;
        onChanged();
        return this;
      }

      private java.util.List<skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_PredictionResult.Prediction> predictions_ =
        java.util.Collections.emptyList();
      private void ensurePredictionsIsMutable() {
        if (!((bitField0_ & 0x00000008) == 0x00000008)) {
          predictions_ = new java.util.ArrayList<skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_PredictionResult.Prediction>(predictions_);
          bitField0_ |= 0x00000008;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilder<
          skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_PredictionResult.Prediction, skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_PredictionResult.Prediction.Builder, skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_PredictionResult.PredictionOrBuilder> predictionsBuilder_;

      /**
       * <code>repeated .CDOTAUserMsg_PredictionResult.Prediction predictions = 4;</code>
       */
      public java.util.List<skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_PredictionResult.Prediction> getPredictionsList() {
        if (predictionsBuilder_ == null) {
          return java.util.Collections.unmodifiableList(predictions_);
        } else {
          return predictionsBuilder_.getMessageList();
        }
      }
      /**
       * <code>repeated .CDOTAUserMsg_PredictionResult.Prediction predictions = 4;</code>
       */
      public int getPredictionsCount() {
        if (predictionsBuilder_ == null) {
          return predictions_.size();
        } else {
          return predictionsBuilder_.getCount();
        }
      }
      /**
       * <code>repeated .CDOTAUserMsg_PredictionResult.Prediction predictions = 4;</code>
       */
      public skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_PredictionResult.Prediction getPredictions(int index) {
        if (predictionsBuilder_ == null) {
          return predictions_.get(index);
        } else {
          return predictionsBuilder_.getMessage(index);
        }
      }
      /**
       * <code>repeated .CDOTAUserMsg_PredictionResult.Prediction predictions = 4;</code>
       */
      public Builder setPredictions(
          int index, skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_PredictionResult.Prediction value) {
        if (predictionsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensurePredictionsIsMutable();
          predictions_.set(index, value);
          onChanged();
        } else {
          predictionsBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .CDOTAUserMsg_PredictionResult.Prediction predictions = 4;</code>
       */
      public Builder setPredictions(
          int index, skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_PredictionResult.Prediction.Builder builderForValue) {
        if (predictionsBuilder_ == null) {
          ensurePredictionsIsMutable();
          predictions_.set(index, builderForValue.build());
          onChanged();
        } else {
          predictionsBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .CDOTAUserMsg_PredictionResult.Prediction predictions = 4;</code>
       */
      public Builder addPredictions(skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_PredictionResult.Prediction value) {
        if (predictionsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensurePredictionsIsMutable();
          predictions_.add(value);
          onChanged();
        } else {
          predictionsBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <code>repeated .CDOTAUserMsg_PredictionResult.Prediction predictions = 4;</code>
       */
      public Builder addPredictions(
          int index, skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_PredictionResult.Prediction value) {
        if (predictionsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensurePredictionsIsMutable();
          predictions_.add(index, value);
          onChanged();
        } else {
          predictionsBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .CDOTAUserMsg_PredictionResult.Prediction predictions = 4;</code>
       */
      public Builder addPredictions(
          skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_PredictionResult.Prediction.Builder builderForValue) {
        if (predictionsBuilder_ == null) {
          ensurePredictionsIsMutable();
          predictions_.add(builderForValue.build());
          onChanged();
        } else {
          predictionsBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .CDOTAUserMsg_PredictionResult.Prediction predictions = 4;</code>
       */
      public Builder addPredictions(
          int index, skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_PredictionResult.Prediction.Builder builderForValue) {
        if (predictionsBuilder_ == null) {
          ensurePredictionsIsMutable();
          predictions_.add(index, builderForValue.build());
          onChanged();
        } else {
          predictionsBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .CDOTAUserMsg_PredictionResult.Prediction predictions = 4;</code>
       */
      public Builder addAllPredictions(
          java.lang.Iterable<? extends skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_PredictionResult.Prediction> values) {
        if (predictionsBuilder_ == null) {
          ensurePredictionsIsMutable();
          com.google.protobuf.AbstractMessageLite.Builder.addAll(
              values, predictions_);
          onChanged();
        } else {
          predictionsBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <code>repeated .CDOTAUserMsg_PredictionResult.Prediction predictions = 4;</code>
       */
      public Builder clearPredictions() {
        if (predictionsBuilder_ == null) {
          predictions_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000008);
          onChanged();
        } else {
          predictionsBuilder_.clear();
        }
        return this;
      }
      /**
       * <code>repeated .CDOTAUserMsg_PredictionResult.Prediction predictions = 4;</code>
       */
      public Builder removePredictions(int index) {
        if (predictionsBuilder_ == null) {
          ensurePredictionsIsMutable();
          predictions_.remove(index);
          onChanged();
        } else {
          predictionsBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <code>repeated .CDOTAUserMsg_PredictionResult.Prediction predictions = 4;</code>
       */
      public skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_PredictionResult.Prediction.Builder getPredictionsBuilder(
          int index) {
        return getPredictionsFieldBuilder().getBuilder(index);
      }
      /**
       * <code>repeated .CDOTAUserMsg_PredictionResult.Prediction predictions = 4;</code>
       */
      public skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_PredictionResult.PredictionOrBuilder getPredictionsOrBuilder(
          int index) {
        if (predictionsBuilder_ == null) {
          return predictions_.get(index);  } else {
          return predictionsBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <code>repeated .CDOTAUserMsg_PredictionResult.Prediction predictions = 4;</code>
       */
      public java.util.List<? extends skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_PredictionResult.PredictionOrBuilder> 
           getPredictionsOrBuilderList() {
        if (predictionsBuilder_ != null) {
          return predictionsBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(predictions_);
        }
      }
      /**
       * <code>repeated .CDOTAUserMsg_PredictionResult.Prediction predictions = 4;</code>
       */
      public skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_PredictionResult.Prediction.Builder addPredictionsBuilder() {
        return getPredictionsFieldBuilder().addBuilder(
            skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_PredictionResult.Prediction.getDefaultInstance());
      }
      /**
       * <code>repeated .CDOTAUserMsg_PredictionResult.Prediction predictions = 4;</code>
       */
      public skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_PredictionResult.Prediction.Builder addPredictionsBuilder(
          int index) {
        return getPredictionsFieldBuilder().addBuilder(
            index, skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_PredictionResult.Prediction.getDefaultInstance());
      }
      /**
       * <code>repeated .CDOTAUserMsg_PredictionResult.Prediction predictions = 4;</code>
       */
      public java.util.List<skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_PredictionResult.Prediction.Builder> 
           getPredictionsBuilderList() {
        return getPredictionsFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilder<
          skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_PredictionResult.Prediction, skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_PredictionResult.Prediction.Builder, skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_PredictionResult.PredictionOrBuilder> 
          getPredictionsFieldBuilder() {
        if (predictionsBuilder_ == null) {
          predictionsBuilder_ = new com.google.protobuf.RepeatedFieldBuilder<
              skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_PredictionResult.Prediction, skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_PredictionResult.Prediction.Builder, skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_PredictionResult.PredictionOrBuilder>(
                  predictions_,
                  ((bitField0_ & 0x00000008) == 0x00000008),
                  getParentForChildren(),
                  isClean());
          predictions_ = null;
        }
        return predictionsBuilder_;
      }

      // @@protoc_insertion_point(builder_scope:CDOTAUserMsg_PredictionResult)
    }

    static {
      defaultInstance = new CDOTAUserMsg_PredictionResult(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:CDOTAUserMsg_PredictionResult)
  }

  public interface CDOTAResponseQuerySerializedOrBuilder extends
      // @@protoc_insertion_point(interface_extends:CDOTAResponseQuerySerialized)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>repeated .CDOTAResponseQuerySerialized.Fact facts = 1;</code>
     */
    java.util.List<skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAResponseQuerySerialized.Fact> 
        getFactsList();
    /**
     * <code>repeated .CDOTAResponseQuerySerialized.Fact facts = 1;</code>
     */
    skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAResponseQuerySerialized.Fact getFacts(int index);
    /**
     * <code>repeated .CDOTAResponseQuerySerialized.Fact facts = 1;</code>
     */
    int getFactsCount();
    /**
     * <code>repeated .CDOTAResponseQuerySerialized.Fact facts = 1;</code>
     */
    java.util.List<? extends skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAResponseQuerySerialized.FactOrBuilder> 
        getFactsOrBuilderList();
    /**
     * <code>repeated .CDOTAResponseQuerySerialized.Fact facts = 1;</code>
     */
    skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAResponseQuerySerialized.FactOrBuilder getFactsOrBuilder(
        int index);
  }
  /**
   * Protobuf type {@code CDOTAResponseQuerySerialized}
   */
  public static final class CDOTAResponseQuerySerialized extends
      com.google.protobuf.GeneratedMessage implements
      // @@protoc_insertion_point(message_implements:CDOTAResponseQuerySerialized)
      CDOTAResponseQuerySerializedOrBuilder {
    // Use CDOTAResponseQuerySerialized.newBuilder() to construct.
    private CDOTAResponseQuerySerialized(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private CDOTAResponseQuerySerialized(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final CDOTAResponseQuerySerialized defaultInstance;
    public static CDOTAResponseQuerySerialized getDefaultInstance() {
      return defaultInstance;
    }

    public CDOTAResponseQuerySerialized getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private CDOTAResponseQuerySerialized(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 10: {
              if (!((mutable_bitField0_ & 0x00000001) == 0x00000001)) {
                facts_ = new java.util.ArrayList<skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAResponseQuerySerialized.Fact>();
                mutable_bitField0_ |= 0x00000001;
              }
              facts_.add(input.readMessage(skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAResponseQuerySerialized.Fact.PARSER, extensionRegistry));
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        if (((mutable_bitField0_ & 0x00000001) == 0x00000001)) {
          facts_ = java.util.Collections.unmodifiableList(facts_);
        }
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return skadistats.clarity.wire.common.proto.DotaUserMessages.internal_static_CDOTAResponseQuerySerialized_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return skadistats.clarity.wire.common.proto.DotaUserMessages.internal_static_CDOTAResponseQuerySerialized_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAResponseQuerySerialized.class, skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAResponseQuerySerialized.Builder.class);
    }

    public static com.google.protobuf.Parser<CDOTAResponseQuerySerialized> PARSER =
        new com.google.protobuf.AbstractParser<CDOTAResponseQuerySerialized>() {
      public CDOTAResponseQuerySerialized parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new CDOTAResponseQuerySerialized(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<CDOTAResponseQuerySerialized> getParserForType() {
      return PARSER;
    }

    public interface FactOrBuilder extends
        // @@protoc_insertion_point(interface_extends:CDOTAResponseQuerySerialized.Fact)
        com.google.protobuf.MessageOrBuilder {

      /**
       * <code>required int32 key = 1;</code>
       */
      boolean hasKey();
      /**
       * <code>required int32 key = 1;</code>
       */
      int getKey();

      /**
       * <code>required .CDOTAResponseQuerySerialized.Fact.ValueType valtype = 2 [default = NUMERIC];</code>
       */
      boolean hasValtype();
      /**
       * <code>required .CDOTAResponseQuerySerialized.Fact.ValueType valtype = 2 [default = NUMERIC];</code>
       */
      skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAResponseQuerySerialized.Fact.ValueType getValtype();

      /**
       * <code>optional float val_numeric = 3;</code>
       */
      boolean hasValNumeric();
      /**
       * <code>optional float val_numeric = 3;</code>
       */
      float getValNumeric();

      /**
       * <code>optional string val_string = 4;</code>
       */
      boolean hasValString();
      /**
       * <code>optional string val_string = 4;</code>
       */
      java.lang.String getValString();
      /**
       * <code>optional string val_string = 4;</code>
       */
      com.google.protobuf.ByteString
          getValStringBytes();
    }
    /**
     * Protobuf type {@code CDOTAResponseQuerySerialized.Fact}
     */
    public static final class Fact extends
        com.google.protobuf.GeneratedMessage implements
        // @@protoc_insertion_point(message_implements:CDOTAResponseQuerySerialized.Fact)
        FactOrBuilder {
      // Use Fact.newBuilder() to construct.
      private Fact(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
        super(builder);
        this.unknownFields = builder.getUnknownFields();
      }
      private Fact(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

      private static final Fact defaultInstance;
      public static Fact getDefaultInstance() {
        return defaultInstance;
      }

      public Fact getDefaultInstanceForType() {
        return defaultInstance;
      }

      private final com.google.protobuf.UnknownFieldSet unknownFields;
      @java.lang.Override
      public final com.google.protobuf.UnknownFieldSet
          getUnknownFields() {
        return this.unknownFields;
      }
      private Fact(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        initFields();
        int mutable_bitField0_ = 0;
        com.google.protobuf.UnknownFieldSet.Builder unknownFields =
            com.google.protobuf.UnknownFieldSet.newBuilder();
        try {
          boolean done = false;
          while (!done) {
            int tag = input.readTag();
            switch (tag) {
              case 0:
                done = true;
                break;
              default: {
                if (!parseUnknownField(input, unknownFields,
                                       extensionRegistry, tag)) {
                  done = true;
                }
                break;
              }
              case 8: {
                bitField0_ |= 0x00000001;
                key_ = input.readInt32();
                break;
              }
              case 16: {
                int rawValue = input.readEnum();
                skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAResponseQuerySerialized.Fact.ValueType value = skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAResponseQuerySerialized.Fact.ValueType.valueOf(rawValue);
                if (value == null) {
                  unknownFields.mergeVarintField(2, rawValue);
                } else {
                  bitField0_ |= 0x00000002;
                  valtype_ = value;
                }
                break;
              }
              case 29: {
                bitField0_ |= 0x00000004;
                valNumeric_ = input.readFloat();
                break;
              }
              case 34: {
                com.google.protobuf.ByteString bs = input.readBytes();
                bitField0_ |= 0x00000008;
                valString_ = bs;
                break;
              }
            }
          }
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.setUnfinishedMessage(this);
        } catch (java.io.IOException e) {
          throw new com.google.protobuf.InvalidProtocolBufferException(
              e.getMessage()).setUnfinishedMessage(this);
        } finally {
          this.unknownFields = unknownFields.build();
          makeExtensionsImmutable();
        }
      }
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return skadistats.clarity.wire.common.proto.DotaUserMessages.internal_static_CDOTAResponseQuerySerialized_Fact_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return skadistats.clarity.wire.common.proto.DotaUserMessages.internal_static_CDOTAResponseQuerySerialized_Fact_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAResponseQuerySerialized.Fact.class, skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAResponseQuerySerialized.Fact.Builder.class);
      }

      public static com.google.protobuf.Parser<Fact> PARSER =
          new com.google.protobuf.AbstractParser<Fact>() {
        public Fact parsePartialFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws com.google.protobuf.InvalidProtocolBufferException {
          return new Fact(input, extensionRegistry);
        }
      };

      @java.lang.Override
      public com.google.protobuf.Parser<Fact> getParserForType() {
        return PARSER;
      }

      /**
       * Protobuf enum {@code CDOTAResponseQuerySerialized.Fact.ValueType}
       */
      public enum ValueType
          implements com.google.protobuf.ProtocolMessageEnum {
        /**
         * <code>NUMERIC = 1;</code>
         */
        NUMERIC(0, 1),
        /**
         * <code>STRING = 2;</code>
         */
        STRING(1, 2),
        ;

        /**
         * <code>NUMERIC = 1;</code>
         */
        public static final int NUMERIC_VALUE = 1;
        /**
         * <code>STRING = 2;</code>
         */
        public static final int STRING_VALUE = 2;


        public final int getNumber() { return value; }

        public static ValueType valueOf(int value) {
          switch (value) {
            case 1: return NUMERIC;
            case 2: return STRING;
            default: return null;
          }
        }

        public static com.google.protobuf.Internal.EnumLiteMap<ValueType>
            internalGetValueMap() {
          return internalValueMap;
        }
        private static com.google.protobuf.Internal.EnumLiteMap<ValueType>
            internalValueMap =
              new com.google.protobuf.Internal.EnumLiteMap<ValueType>() {
                public ValueType findValueByNumber(int number) {
                  return ValueType.valueOf(number);
                }
              };

        public final com.google.protobuf.Descriptors.EnumValueDescriptor
            getValueDescriptor() {
          return getDescriptor().getValues().get(index);
        }
        public final com.google.protobuf.Descriptors.EnumDescriptor
            getDescriptorForType() {
          return getDescriptor();
        }
        public static final com.google.protobuf.Descriptors.EnumDescriptor
            getDescriptor() {
          return skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAResponseQuerySerialized.Fact.getDescriptor().getEnumTypes().get(0);
        }

        private static final ValueType[] VALUES = values();

        public static ValueType valueOf(
            com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
          if (desc.getType() != getDescriptor()) {
            throw new java.lang.IllegalArgumentException(
              "EnumValueDescriptor is not for this type.");
          }
          return VALUES[desc.getIndex()];
        }

        private final int index;
        private final int value;

        private ValueType(int index, int value) {
          this.index = index;
          this.value = value;
        }

        // @@protoc_insertion_point(enum_scope:CDOTAResponseQuerySerialized.Fact.ValueType)
      }

      private int bitField0_;
      public static final int KEY_FIELD_NUMBER = 1;
      private int key_;
      /**
       * <code>required int32 key = 1;</code>
       */
      public boolean hasKey() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>required int32 key = 1;</code>
       */
      public int getKey() {
        return key_;
      }

      public static final int VALTYPE_FIELD_NUMBER = 2;
      private skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAResponseQuerySerialized.Fact.ValueType valtype_;
      /**
       * <code>required .CDOTAResponseQuerySerialized.Fact.ValueType valtype = 2 [default = NUMERIC];</code>
       */
      public boolean hasValtype() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>required .CDOTAResponseQuerySerialized.Fact.ValueType valtype = 2 [default = NUMERIC];</code>
       */
      public skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAResponseQuerySerialized.Fact.ValueType getValtype() {
        return valtype_;
      }

      public static final int VAL_NUMERIC_FIELD_NUMBER = 3;
      private float valNumeric_;
      /**
       * <code>optional float val_numeric = 3;</code>
       */
      public boolean hasValNumeric() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }
      /**
       * <code>optional float val_numeric = 3;</code>
       */
      public float getValNumeric() {
        return valNumeric_;
      }

      public static final int VAL_STRING_FIELD_NUMBER = 4;
      private java.lang.Object valString_;
      /**
       * <code>optional string val_string = 4;</code>
       */
      public boolean hasValString() {
        return ((bitField0_ & 0x00000008) == 0x00000008);
      }
      /**
       * <code>optional string val_string = 4;</code>
       */
      public java.lang.String getValString() {
        java.lang.Object ref = valString_;
        if (ref instanceof java.lang.String) {
          return (java.lang.String) ref;
        } else {
          com.google.protobuf.ByteString bs = 
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          if (bs.isValidUtf8()) {
            valString_ = s;
          }
          return s;
        }
      }
      /**
       * <code>optional string val_string = 4;</code>
       */
      public com.google.protobuf.ByteString
          getValStringBytes() {
        java.lang.Object ref = valString_;
        if (ref instanceof java.lang.String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          valString_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }

      private void initFields() {
        key_ = 0;
        valtype_ = skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAResponseQuerySerialized.Fact.ValueType.NUMERIC;
        valNumeric_ = 0F;
        valString_ = "";
      }
      private byte memoizedIsInitialized = -1;
      public final boolean isInitialized() {
        byte isInitialized = memoizedIsInitialized;
        if (isInitialized == 1) return true;
        if (isInitialized == 0) return false;

        if (!hasKey()) {
          memoizedIsInitialized = 0;
          return false;
        }
        if (!hasValtype()) {
          memoizedIsInitialized = 0;
          return false;
        }
        memoizedIsInitialized = 1;
        return true;
      }

      public void writeTo(com.google.protobuf.CodedOutputStream output)
                          throws java.io.IOException {
        getSerializedSize();
        if (((bitField0_ & 0x00000001) == 0x00000001)) {
          output.writeInt32(1, key_);
        }
        if (((bitField0_ & 0x00000002) == 0x00000002)) {
          output.writeEnum(2, valtype_.getNumber());
        }
        if (((bitField0_ & 0x00000004) == 0x00000004)) {
          output.writeFloat(3, valNumeric_);
        }
        if (((bitField0_ & 0x00000008) == 0x00000008)) {
          output.writeBytes(4, getValStringBytes());
        }
        getUnknownFields().writeTo(output);
      }

      private int memoizedSerializedSize = -1;
      public int getSerializedSize() {
        int size = memoizedSerializedSize;
        if (size != -1) return size;

        size = 0;
        if (((bitField0_ & 0x00000001) == 0x00000001)) {
          size += com.google.protobuf.CodedOutputStream
            .computeInt32Size(1, key_);
        }
        if (((bitField0_ & 0x00000002) == 0x00000002)) {
          size += com.google.protobuf.CodedOutputStream
            .computeEnumSize(2, valtype_.getNumber());
        }
        if (((bitField0_ & 0x00000004) == 0x00000004)) {
          size += com.google.protobuf.CodedOutputStream
            .computeFloatSize(3, valNumeric_);
        }
        if (((bitField0_ & 0x00000008) == 0x00000008)) {
          size += com.google.protobuf.CodedOutputStream
            .computeBytesSize(4, getValStringBytes());
        }
        size += getUnknownFields().getSerializedSize();
        memoizedSerializedSize = size;
        return size;
      }

      private static final long serialVersionUID = 0L;
      @java.lang.Override
      protected java.lang.Object writeReplace()
          throws java.io.ObjectStreamException {
        return super.writeReplace();
      }

      public static skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAResponseQuerySerialized.Fact parseFrom(
          com.google.protobuf.ByteString data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAResponseQuerySerialized.Fact parseFrom(
          com.google.protobuf.ByteString data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAResponseQuerySerialized.Fact parseFrom(byte[] data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAResponseQuerySerialized.Fact parseFrom(
          byte[] data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAResponseQuerySerialized.Fact parseFrom(java.io.InputStream input)
          throws java.io.IOException {
        return PARSER.parseFrom(input);
      }
      public static skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAResponseQuerySerialized.Fact parseFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return PARSER.parseFrom(input, extensionRegistry);
      }
      public static skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAResponseQuerySerialized.Fact parseDelimitedFrom(java.io.InputStream input)
          throws java.io.IOException {
        return PARSER.parseDelimitedFrom(input);
      }
      public static skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAResponseQuerySerialized.Fact parseDelimitedFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return PARSER.parseDelimitedFrom(input, extensionRegistry);
      }
      public static skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAResponseQuerySerialized.Fact parseFrom(
          com.google.protobuf.CodedInputStream input)
          throws java.io.IOException {
        return PARSER.parseFrom(input);
      }
      public static skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAResponseQuerySerialized.Fact parseFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return PARSER.parseFrom(input, extensionRegistry);
      }

      public static Builder newBuilder() { return Builder.create(); }
      public Builder newBuilderForType() { return newBuilder(); }
      public static Builder newBuilder(skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAResponseQuerySerialized.Fact prototype) {
        return newBuilder().mergeFrom(prototype);
      }
      public Builder toBuilder() { return newBuilder(this); }

      @java.lang.Override
      protected Builder newBuilderForType(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        Builder builder = new Builder(parent);
        return builder;
      }
      /**
       * Protobuf type {@code CDOTAResponseQuerySerialized.Fact}
       */
      public static final class Builder extends
          com.google.protobuf.GeneratedMessage.Builder<Builder> implements
          // @@protoc_insertion_point(builder_implements:CDOTAResponseQuerySerialized.Fact)
          skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAResponseQuerySerialized.FactOrBuilder {
        public static final com.google.protobuf.Descriptors.Descriptor
            getDescriptor() {
          return skadistats.clarity.wire.common.proto.DotaUserMessages.internal_static_CDOTAResponseQuerySerialized_Fact_descriptor;
        }

        protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
            internalGetFieldAccessorTable() {
          return skadistats.clarity.wire.common.proto.DotaUserMessages.internal_static_CDOTAResponseQuerySerialized_Fact_fieldAccessorTable
              .ensureFieldAccessorsInitialized(
                  skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAResponseQuerySerialized.Fact.class, skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAResponseQuerySerialized.Fact.Builder.class);
        }

        // Construct using skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAResponseQuerySerialized.Fact.newBuilder()
        private Builder() {
          maybeForceBuilderInitialization();
        }

        private Builder(
            com.google.protobuf.GeneratedMessage.BuilderParent parent) {
          super(parent);
          maybeForceBuilderInitialization();
        }
        private void maybeForceBuilderInitialization() {
          if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
          }
        }
        private static Builder create() {
          return new Builder();
        }

        public Builder clear() {
          super.clear();
          key_ = 0;
          bitField0_ = (bitField0_ & ~0x00000001);
          valtype_ = skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAResponseQuerySerialized.Fact.ValueType.NUMERIC;
          bitField0_ = (bitField0_ & ~0x00000002);
          valNumeric_ = 0F;
          bitField0_ = (bitField0_ & ~0x00000004);
          valString_ = "";
          bitField0_ = (bitField0_ & ~0x00000008);
          return this;
        }

        public Builder clone() {
          return create().mergeFrom(buildPartial());
        }

        public com.google.protobuf.Descriptors.Descriptor
            getDescriptorForType() {
          return skadistats.clarity.wire.common.proto.DotaUserMessages.internal_static_CDOTAResponseQuerySerialized_Fact_descriptor;
        }

        public skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAResponseQuerySerialized.Fact getDefaultInstanceForType() {
          return skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAResponseQuerySerialized.Fact.getDefaultInstance();
        }

        public skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAResponseQuerySerialized.Fact build() {
          skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAResponseQuerySerialized.Fact result = buildPartial();
          if (!result.isInitialized()) {
            throw newUninitializedMessageException(result);
          }
          return result;
        }

        public skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAResponseQuerySerialized.Fact buildPartial() {
          skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAResponseQuerySerialized.Fact result = new skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAResponseQuerySerialized.Fact(this);
          int from_bitField0_ = bitField0_;
          int to_bitField0_ = 0;
          if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
            to_bitField0_ |= 0x00000001;
          }
          result.key_ = key_;
          if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
            to_bitField0_ |= 0x00000002;
          }
          result.valtype_ = valtype_;
          if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
            to_bitField0_ |= 0x00000004;
          }
          result.valNumeric_ = valNumeric_;
          if (((from_bitField0_ & 0x00000008) == 0x00000008)) {
            to_bitField0_ |= 0x00000008;
          }
          result.valString_ = valString_;
          result.bitField0_ = to_bitField0_;
          onBuilt();
          return result;
        }

        public Builder mergeFrom(com.google.protobuf.Message other) {
          if (other instanceof skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAResponseQuerySerialized.Fact) {
            return mergeFrom((skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAResponseQuerySerialized.Fact)other);
          } else {
            super.mergeFrom(other);
            return this;
          }
        }

        public Builder mergeFrom(skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAResponseQuerySerialized.Fact other) {
          if (other == skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAResponseQuerySerialized.Fact.getDefaultInstance()) return this;
          if (other.hasKey()) {
            setKey(other.getKey());
          }
          if (other.hasValtype()) {
            setValtype(other.getValtype());
          }
          if (other.hasValNumeric()) {
            setValNumeric(other.getValNumeric());
          }
          if (other.hasValString()) {
            bitField0_ |= 0x00000008;
            valString_ = other.valString_;
            onChanged();
          }
          this.mergeUnknownFields(other.getUnknownFields());
          return this;
        }

        public final boolean isInitialized() {
          if (!hasKey()) {
            
            return false;
          }
          if (!hasValtype()) {
            
            return false;
          }
          return true;
        }

        public Builder mergeFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws java.io.IOException {
          skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAResponseQuerySerialized.Fact parsedMessage = null;
          try {
            parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
          } catch (com.google.protobuf.InvalidProtocolBufferException e) {
            parsedMessage = (skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAResponseQuerySerialized.Fact) e.getUnfinishedMessage();
            throw e;
          } finally {
            if (parsedMessage != null) {
              mergeFrom(parsedMessage);
            }
          }
          return this;
        }
        private int bitField0_;

        private int key_ ;
        /**
         * <code>required int32 key = 1;</code>
         */
        public boolean hasKey() {
          return ((bitField0_ & 0x00000001) == 0x00000001);
        }
        /**
         * <code>required int32 key = 1;</code>
         */
        public int getKey() {
          return key_;
        }
        /**
         * <code>required int32 key = 1;</code>
         */
        public Builder setKey(int value) {
          bitField0_ |= 0x00000001;
          key_ = value;
          onChanged();
          return this;
        }
        /**
         * <code>required int32 key = 1;</code>
         */
        public Builder clearKey() {
          bitField0_ = (bitField0_ & ~0x00000001);
          key_ = 0;
          onChanged();
          return this;
        }

        private skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAResponseQuerySerialized.Fact.ValueType valtype_ = skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAResponseQuerySerialized.Fact.ValueType.NUMERIC;
        /**
         * <code>required .CDOTAResponseQuerySerialized.Fact.ValueType valtype = 2 [default = NUMERIC];</code>
         */
        public boolean hasValtype() {
          return ((bitField0_ & 0x00000002) == 0x00000002);
        }
        /**
         * <code>required .CDOTAResponseQuerySerialized.Fact.ValueType valtype = 2 [default = NUMERIC];</code>
         */
        public skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAResponseQuerySerialized.Fact.ValueType getValtype() {
          return valtype_;
        }
        /**
         * <code>required .CDOTAResponseQuerySerialized.Fact.ValueType valtype = 2 [default = NUMERIC];</code>
         */
        public Builder setValtype(skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAResponseQuerySerialized.Fact.ValueType value) {
          if (value == null) {
            throw new NullPointerException();
          }
          bitField0_ |= 0x00000002;
          valtype_ = value;
          onChanged();
          return this;
        }
        /**
         * <code>required .CDOTAResponseQuerySerialized.Fact.ValueType valtype = 2 [default = NUMERIC];</code>
         */
        public Builder clearValtype() {
          bitField0_ = (bitField0_ & ~0x00000002);
          valtype_ = skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAResponseQuerySerialized.Fact.ValueType.NUMERIC;
          onChanged();
          return this;
        }

        private float valNumeric_ ;
        /**
         * <code>optional float val_numeric = 3;</code>
         */
        public boolean hasValNumeric() {
          return ((bitField0_ & 0x00000004) == 0x00000004);
        }
        /**
         * <code>optional float val_numeric = 3;</code>
         */
        public float getValNumeric() {
          return valNumeric_;
        }
        /**
         * <code>optional float val_numeric = 3;</code>
         */
        public Builder setValNumeric(float value) {
          bitField0_ |= 0x00000004;
          valNumeric_ = value;
          onChanged();
          return this;
        }
        /**
         * <code>optional float val_numeric = 3;</code>
         */
        public Builder clearValNumeric() {
          bitField0_ = (bitField0_ & ~0x00000004);
          valNumeric_ = 0F;
          onChanged();
          return this;
        }

        private java.lang.Object valString_ = "";
        /**
         * <code>optional string val_string = 4;</code>
         */
        public boolean hasValString() {
          return ((bitField0_ & 0x00000008) == 0x00000008);
        }
        /**
         * <code>optional string val_string = 4;</code>
         */
        public java.lang.String getValString() {
          java.lang.Object ref = valString_;
          if (!(ref instanceof java.lang.String)) {
            com.google.protobuf.ByteString bs =
                (com.google.protobuf.ByteString) ref;
            java.lang.String s = bs.toStringUtf8();
            if (bs.isValidUtf8()) {
              valString_ = s;
            }
            return s;
          } else {
            return (java.lang.String) ref;
          }
        }
        /**
         * <code>optional string val_string = 4;</code>
         */
        public com.google.protobuf.ByteString
            getValStringBytes() {
          java.lang.Object ref = valString_;
          if (ref instanceof String) {
            com.google.protobuf.ByteString b = 
                com.google.protobuf.ByteString.copyFromUtf8(
                    (java.lang.String) ref);
            valString_ = b;
            return b;
          } else {
            return (com.google.protobuf.ByteString) ref;
          }
        }
        /**
         * <code>optional string val_string = 4;</code>
         */
        public Builder setValString(
            java.lang.String value) {
          if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000008;
          valString_ = value;
          onChanged();
          return this;
        }
        /**
         * <code>optional string val_string = 4;</code>
         */
        public Builder clearValString() {
          bitField0_ = (bitField0_ & ~0x00000008);
          valString_ = getDefaultInstance().getValString();
          onChanged();
          return this;
        }
        /**
         * <code>optional string val_string = 4;</code>
         */
        public Builder setValStringBytes(
            com.google.protobuf.ByteString value) {
          if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000008;
          valString_ = value;
          onChanged();
          return this;
        }

        // @@protoc_insertion_point(builder_scope:CDOTAResponseQuerySerialized.Fact)
      }

      static {
        defaultInstance = new Fact(true);
        defaultInstance.initFields();
      }

      // @@protoc_insertion_point(class_scope:CDOTAResponseQuerySerialized.Fact)
    }

    public static final int FACTS_FIELD_NUMBER = 1;
    private java.util.List<skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAResponseQuerySerialized.Fact> facts_;
    /**
     * <code>repeated .CDOTAResponseQuerySerialized.Fact facts = 1;</code>
     */
    public java.util.List<skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAResponseQuerySerialized.Fact> getFactsList() {
      return facts_;
    }
    /**
     * <code>repeated .CDOTAResponseQuerySerialized.Fact facts = 1;</code>
     */
    public java.util.List<? extends skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAResponseQuerySerialized.FactOrBuilder> 
        getFactsOrBuilderList() {
      return facts_;
    }
    /**
     * <code>repeated .CDOTAResponseQuerySerialized.Fact facts = 1;</code>
     */
    public int getFactsCount() {
      return facts_.size();
    }
    /**
     * <code>repeated .CDOTAResponseQuerySerialized.Fact facts = 1;</code>
     */
    public skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAResponseQuerySerialized.Fact getFacts(int index) {
      return facts_.get(index);
    }
    /**
     * <code>repeated .CDOTAResponseQuerySerialized.Fact facts = 1;</code>
     */
    public skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAResponseQuerySerialized.FactOrBuilder getFactsOrBuilder(
        int index) {
      return facts_.get(index);
    }

    private void initFields() {
      facts_ = java.util.Collections.emptyList();
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      for (int i = 0; i < getFactsCount(); i++) {
        if (!getFacts(i).isInitialized()) {
          memoizedIsInitialized = 0;
          return false;
        }
      }
      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      for (int i = 0; i < facts_.size(); i++) {
        output.writeMessage(1, facts_.get(i));
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      for (int i = 0; i < facts_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(1, facts_.get(i));
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAResponseQuerySerialized parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAResponseQuerySerialized parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAResponseQuerySerialized parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAResponseQuerySerialized parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAResponseQuerySerialized parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAResponseQuerySerialized parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAResponseQuerySerialized parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAResponseQuerySerialized parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAResponseQuerySerialized parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAResponseQuerySerialized parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAResponseQuerySerialized prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code CDOTAResponseQuerySerialized}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:CDOTAResponseQuerySerialized)
        skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAResponseQuerySerializedOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return skadistats.clarity.wire.common.proto.DotaUserMessages.internal_static_CDOTAResponseQuerySerialized_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return skadistats.clarity.wire.common.proto.DotaUserMessages.internal_static_CDOTAResponseQuerySerialized_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAResponseQuerySerialized.class, skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAResponseQuerySerialized.Builder.class);
      }

      // Construct using skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAResponseQuerySerialized.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
          getFactsFieldBuilder();
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        if (factsBuilder_ == null) {
          facts_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000001);
        } else {
          factsBuilder_.clear();
        }
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return skadistats.clarity.wire.common.proto.DotaUserMessages.internal_static_CDOTAResponseQuerySerialized_descriptor;
      }

      public skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAResponseQuerySerialized getDefaultInstanceForType() {
        return skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAResponseQuerySerialized.getDefaultInstance();
      }

      public skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAResponseQuerySerialized build() {
        skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAResponseQuerySerialized result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAResponseQuerySerialized buildPartial() {
        skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAResponseQuerySerialized result = new skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAResponseQuerySerialized(this);
        int from_bitField0_ = bitField0_;
        if (factsBuilder_ == null) {
          if (((bitField0_ & 0x00000001) == 0x00000001)) {
            facts_ = java.util.Collections.unmodifiableList(facts_);
            bitField0_ = (bitField0_ & ~0x00000001);
          }
          result.facts_ = facts_;
        } else {
          result.facts_ = factsBuilder_.build();
        }
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAResponseQuerySerialized) {
          return mergeFrom((skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAResponseQuerySerialized)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAResponseQuerySerialized other) {
        if (other == skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAResponseQuerySerialized.getDefaultInstance()) return this;
        if (factsBuilder_ == null) {
          if (!other.facts_.isEmpty()) {
            if (facts_.isEmpty()) {
              facts_ = other.facts_;
              bitField0_ = (bitField0_ & ~0x00000001);
            } else {
              ensureFactsIsMutable();
              facts_.addAll(other.facts_);
            }
            onChanged();
          }
        } else {
          if (!other.facts_.isEmpty()) {
            if (factsBuilder_.isEmpty()) {
              factsBuilder_.dispose();
              factsBuilder_ = null;
              facts_ = other.facts_;
              bitField0_ = (bitField0_ & ~0x00000001);
              factsBuilder_ = 
                com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders ?
                   getFactsFieldBuilder() : null;
            } else {
              factsBuilder_.addAllMessages(other.facts_);
            }
          }
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        for (int i = 0; i < getFactsCount(); i++) {
          if (!getFacts(i).isInitialized()) {
            
            return false;
          }
        }
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAResponseQuerySerialized parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAResponseQuerySerialized) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private java.util.List<skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAResponseQuerySerialized.Fact> facts_ =
        java.util.Collections.emptyList();
      private void ensureFactsIsMutable() {
        if (!((bitField0_ & 0x00000001) == 0x00000001)) {
          facts_ = new java.util.ArrayList<skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAResponseQuerySerialized.Fact>(facts_);
          bitField0_ |= 0x00000001;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilder<
          skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAResponseQuerySerialized.Fact, skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAResponseQuerySerialized.Fact.Builder, skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAResponseQuerySerialized.FactOrBuilder> factsBuilder_;

      /**
       * <code>repeated .CDOTAResponseQuerySerialized.Fact facts = 1;</code>
       */
      public java.util.List<skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAResponseQuerySerialized.Fact> getFactsList() {
        if (factsBuilder_ == null) {
          return java.util.Collections.unmodifiableList(facts_);
        } else {
          return factsBuilder_.getMessageList();
        }
      }
      /**
       * <code>repeated .CDOTAResponseQuerySerialized.Fact facts = 1;</code>
       */
      public int getFactsCount() {
        if (factsBuilder_ == null) {
          return facts_.size();
        } else {
          return factsBuilder_.getCount();
        }
      }
      /**
       * <code>repeated .CDOTAResponseQuerySerialized.Fact facts = 1;</code>
       */
      public skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAResponseQuerySerialized.Fact getFacts(int index) {
        if (factsBuilder_ == null) {
          return facts_.get(index);
        } else {
          return factsBuilder_.getMessage(index);
        }
      }
      /**
       * <code>repeated .CDOTAResponseQuerySerialized.Fact facts = 1;</code>
       */
      public Builder setFacts(
          int index, skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAResponseQuerySerialized.Fact value) {
        if (factsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureFactsIsMutable();
          facts_.set(index, value);
          onChanged();
        } else {
          factsBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .CDOTAResponseQuerySerialized.Fact facts = 1;</code>
       */
      public Builder setFacts(
          int index, skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAResponseQuerySerialized.Fact.Builder builderForValue) {
        if (factsBuilder_ == null) {
          ensureFactsIsMutable();
          facts_.set(index, builderForValue.build());
          onChanged();
        } else {
          factsBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .CDOTAResponseQuerySerialized.Fact facts = 1;</code>
       */
      public Builder addFacts(skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAResponseQuerySerialized.Fact value) {
        if (factsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureFactsIsMutable();
          facts_.add(value);
          onChanged();
        } else {
          factsBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <code>repeated .CDOTAResponseQuerySerialized.Fact facts = 1;</code>
       */
      public Builder addFacts(
          int index, skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAResponseQuerySerialized.Fact value) {
        if (factsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureFactsIsMutable();
          facts_.add(index, value);
          onChanged();
        } else {
          factsBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .CDOTAResponseQuerySerialized.Fact facts = 1;</code>
       */
      public Builder addFacts(
          skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAResponseQuerySerialized.Fact.Builder builderForValue) {
        if (factsBuilder_ == null) {
          ensureFactsIsMutable();
          facts_.add(builderForValue.build());
          onChanged();
        } else {
          factsBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .CDOTAResponseQuerySerialized.Fact facts = 1;</code>
       */
      public Builder addFacts(
          int index, skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAResponseQuerySerialized.Fact.Builder builderForValue) {
        if (factsBuilder_ == null) {
          ensureFactsIsMutable();
          facts_.add(index, builderForValue.build());
          onChanged();
        } else {
          factsBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .CDOTAResponseQuerySerialized.Fact facts = 1;</code>
       */
      public Builder addAllFacts(
          java.lang.Iterable<? extends skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAResponseQuerySerialized.Fact> values) {
        if (factsBuilder_ == null) {
          ensureFactsIsMutable();
          com.google.protobuf.AbstractMessageLite.Builder.addAll(
              values, facts_);
          onChanged();
        } else {
          factsBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <code>repeated .CDOTAResponseQuerySerialized.Fact facts = 1;</code>
       */
      public Builder clearFacts() {
        if (factsBuilder_ == null) {
          facts_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000001);
          onChanged();
        } else {
          factsBuilder_.clear();
        }
        return this;
      }
      /**
       * <code>repeated .CDOTAResponseQuerySerialized.Fact facts = 1;</code>
       */
      public Builder removeFacts(int index) {
        if (factsBuilder_ == null) {
          ensureFactsIsMutable();
          facts_.remove(index);
          onChanged();
        } else {
          factsBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <code>repeated .CDOTAResponseQuerySerialized.Fact facts = 1;</code>
       */
      public skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAResponseQuerySerialized.Fact.Builder getFactsBuilder(
          int index) {
        return getFactsFieldBuilder().getBuilder(index);
      }
      /**
       * <code>repeated .CDOTAResponseQuerySerialized.Fact facts = 1;</code>
       */
      public skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAResponseQuerySerialized.FactOrBuilder getFactsOrBuilder(
          int index) {
        if (factsBuilder_ == null) {
          return facts_.get(index);  } else {
          return factsBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <code>repeated .CDOTAResponseQuerySerialized.Fact facts = 1;</code>
       */
      public java.util.List<? extends skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAResponseQuerySerialized.FactOrBuilder> 
           getFactsOrBuilderList() {
        if (factsBuilder_ != null) {
          return factsBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(facts_);
        }
      }
      /**
       * <code>repeated .CDOTAResponseQuerySerialized.Fact facts = 1;</code>
       */
      public skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAResponseQuerySerialized.Fact.Builder addFactsBuilder() {
        return getFactsFieldBuilder().addBuilder(
            skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAResponseQuerySerialized.Fact.getDefaultInstance());
      }
      /**
       * <code>repeated .CDOTAResponseQuerySerialized.Fact facts = 1;</code>
       */
      public skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAResponseQuerySerialized.Fact.Builder addFactsBuilder(
          int index) {
        return getFactsFieldBuilder().addBuilder(
            index, skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAResponseQuerySerialized.Fact.getDefaultInstance());
      }
      /**
       * <code>repeated .CDOTAResponseQuerySerialized.Fact facts = 1;</code>
       */
      public java.util.List<skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAResponseQuerySerialized.Fact.Builder> 
           getFactsBuilderList() {
        return getFactsFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilder<
          skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAResponseQuerySerialized.Fact, skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAResponseQuerySerialized.Fact.Builder, skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAResponseQuerySerialized.FactOrBuilder> 
          getFactsFieldBuilder() {
        if (factsBuilder_ == null) {
          factsBuilder_ = new com.google.protobuf.RepeatedFieldBuilder<
              skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAResponseQuerySerialized.Fact, skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAResponseQuerySerialized.Fact.Builder, skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAResponseQuerySerialized.FactOrBuilder>(
                  facts_,
                  ((bitField0_ & 0x00000001) == 0x00000001),
                  getParentForChildren(),
                  isClean());
          facts_ = null;
        }
        return factsBuilder_;
      }

      // @@protoc_insertion_point(builder_scope:CDOTAResponseQuerySerialized)
    }

    static {
      defaultInstance = new CDOTAResponseQuerySerialized(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:CDOTAResponseQuerySerialized)
  }

  public interface CDOTASpeechMatchOnClientOrBuilder extends
      // @@protoc_insertion_point(interface_extends:CDOTASpeechMatchOnClient)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>optional int32 concept = 1;</code>
     */
    boolean hasConcept();
    /**
     * <code>optional int32 concept = 1;</code>
     */
    int getConcept();

    /**
     * <code>optional int32 recipient_type = 2;</code>
     */
    boolean hasRecipientType();
    /**
     * <code>optional int32 recipient_type = 2;</code>
     */
    int getRecipientType();

    /**
     * <code>optional .CDOTAResponseQuerySerialized responsequery = 3;</code>
     */
    boolean hasResponsequery();
    /**
     * <code>optional .CDOTAResponseQuerySerialized responsequery = 3;</code>
     */
    skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAResponseQuerySerialized getResponsequery();
    /**
     * <code>optional .CDOTAResponseQuerySerialized responsequery = 3;</code>
     */
    skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAResponseQuerySerializedOrBuilder getResponsequeryOrBuilder();

    /**
     * <code>optional sfixed32 randomseed = 4 [default = 0];</code>
     */
    boolean hasRandomseed();
    /**
     * <code>optional sfixed32 randomseed = 4 [default = 0];</code>
     */
    int getRandomseed();
  }
  /**
   * Protobuf type {@code CDOTASpeechMatchOnClient}
   */
  public static final class CDOTASpeechMatchOnClient extends
      com.google.protobuf.GeneratedMessage implements
      // @@protoc_insertion_point(message_implements:CDOTASpeechMatchOnClient)
      CDOTASpeechMatchOnClientOrBuilder {
    // Use CDOTASpeechMatchOnClient.newBuilder() to construct.
    private CDOTASpeechMatchOnClient(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private CDOTASpeechMatchOnClient(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final CDOTASpeechMatchOnClient defaultInstance;
    public static CDOTASpeechMatchOnClient getDefaultInstance() {
      return defaultInstance;
    }

    public CDOTASpeechMatchOnClient getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private CDOTASpeechMatchOnClient(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 8: {
              bitField0_ |= 0x00000001;
              concept_ = input.readInt32();
              break;
            }
            case 16: {
              bitField0_ |= 0x00000002;
              recipientType_ = input.readInt32();
              break;
            }
            case 26: {
              skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAResponseQuerySerialized.Builder subBuilder = null;
              if (((bitField0_ & 0x00000004) == 0x00000004)) {
                subBuilder = responsequery_.toBuilder();
              }
              responsequery_ = input.readMessage(skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAResponseQuerySerialized.PARSER, extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(responsequery_);
                responsequery_ = subBuilder.buildPartial();
              }
              bitField0_ |= 0x00000004;
              break;
            }
            case 37: {
              bitField0_ |= 0x00000008;
              randomseed_ = input.readSFixed32();
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return skadistats.clarity.wire.common.proto.DotaUserMessages.internal_static_CDOTASpeechMatchOnClient_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return skadistats.clarity.wire.common.proto.DotaUserMessages.internal_static_CDOTASpeechMatchOnClient_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTASpeechMatchOnClient.class, skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTASpeechMatchOnClient.Builder.class);
    }

    public static com.google.protobuf.Parser<CDOTASpeechMatchOnClient> PARSER =
        new com.google.protobuf.AbstractParser<CDOTASpeechMatchOnClient>() {
      public CDOTASpeechMatchOnClient parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new CDOTASpeechMatchOnClient(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<CDOTASpeechMatchOnClient> getParserForType() {
      return PARSER;
    }

    private int bitField0_;
    public static final int CONCEPT_FIELD_NUMBER = 1;
    private int concept_;
    /**
     * <code>optional int32 concept = 1;</code>
     */
    public boolean hasConcept() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>optional int32 concept = 1;</code>
     */
    public int getConcept() {
      return concept_;
    }

    public static final int RECIPIENT_TYPE_FIELD_NUMBER = 2;
    private int recipientType_;
    /**
     * <code>optional int32 recipient_type = 2;</code>
     */
    public boolean hasRecipientType() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>optional int32 recipient_type = 2;</code>
     */
    public int getRecipientType() {
      return recipientType_;
    }

    public static final int RESPONSEQUERY_FIELD_NUMBER = 3;
    private skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAResponseQuerySerialized responsequery_;
    /**
     * <code>optional .CDOTAResponseQuerySerialized responsequery = 3;</code>
     */
    public boolean hasResponsequery() {
      return ((bitField0_ & 0x00000004) == 0x00000004);
    }
    /**
     * <code>optional .CDOTAResponseQuerySerialized responsequery = 3;</code>
     */
    public skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAResponseQuerySerialized getResponsequery() {
      return responsequery_;
    }
    /**
     * <code>optional .CDOTAResponseQuerySerialized responsequery = 3;</code>
     */
    public skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAResponseQuerySerializedOrBuilder getResponsequeryOrBuilder() {
      return responsequery_;
    }

    public static final int RANDOMSEED_FIELD_NUMBER = 4;
    private int randomseed_;
    /**
     * <code>optional sfixed32 randomseed = 4 [default = 0];</code>
     */
    public boolean hasRandomseed() {
      return ((bitField0_ & 0x00000008) == 0x00000008);
    }
    /**
     * <code>optional sfixed32 randomseed = 4 [default = 0];</code>
     */
    public int getRandomseed() {
      return randomseed_;
    }

    private void initFields() {
      concept_ = 0;
      recipientType_ = 0;
      responsequery_ = skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAResponseQuerySerialized.getDefaultInstance();
      randomseed_ = 0;
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      if (hasResponsequery()) {
        if (!getResponsequery().isInitialized()) {
          memoizedIsInitialized = 0;
          return false;
        }
      }
      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeInt32(1, concept_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeInt32(2, recipientType_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        output.writeMessage(3, responsequery_);
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        output.writeSFixed32(4, randomseed_);
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(1, concept_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(2, recipientType_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(3, responsequery_);
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        size += com.google.protobuf.CodedOutputStream
          .computeSFixed32Size(4, randomseed_);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTASpeechMatchOnClient parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTASpeechMatchOnClient parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTASpeechMatchOnClient parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTASpeechMatchOnClient parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTASpeechMatchOnClient parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTASpeechMatchOnClient parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTASpeechMatchOnClient parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTASpeechMatchOnClient parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTASpeechMatchOnClient parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTASpeechMatchOnClient parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTASpeechMatchOnClient prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code CDOTASpeechMatchOnClient}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:CDOTASpeechMatchOnClient)
        skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTASpeechMatchOnClientOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return skadistats.clarity.wire.common.proto.DotaUserMessages.internal_static_CDOTASpeechMatchOnClient_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return skadistats.clarity.wire.common.proto.DotaUserMessages.internal_static_CDOTASpeechMatchOnClient_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTASpeechMatchOnClient.class, skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTASpeechMatchOnClient.Builder.class);
      }

      // Construct using skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTASpeechMatchOnClient.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
          getResponsequeryFieldBuilder();
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        concept_ = 0;
        bitField0_ = (bitField0_ & ~0x00000001);
        recipientType_ = 0;
        bitField0_ = (bitField0_ & ~0x00000002);
        if (responsequeryBuilder_ == null) {
          responsequery_ = skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAResponseQuerySerialized.getDefaultInstance();
        } else {
          responsequeryBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000004);
        randomseed_ = 0;
        bitField0_ = (bitField0_ & ~0x00000008);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return skadistats.clarity.wire.common.proto.DotaUserMessages.internal_static_CDOTASpeechMatchOnClient_descriptor;
      }

      public skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTASpeechMatchOnClient getDefaultInstanceForType() {
        return skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTASpeechMatchOnClient.getDefaultInstance();
      }

      public skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTASpeechMatchOnClient build() {
        skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTASpeechMatchOnClient result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTASpeechMatchOnClient buildPartial() {
        skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTASpeechMatchOnClient result = new skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTASpeechMatchOnClient(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.concept_ = concept_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.recipientType_ = recipientType_;
        if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
          to_bitField0_ |= 0x00000004;
        }
        if (responsequeryBuilder_ == null) {
          result.responsequery_ = responsequery_;
        } else {
          result.responsequery_ = responsequeryBuilder_.build();
        }
        if (((from_bitField0_ & 0x00000008) == 0x00000008)) {
          to_bitField0_ |= 0x00000008;
        }
        result.randomseed_ = randomseed_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTASpeechMatchOnClient) {
          return mergeFrom((skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTASpeechMatchOnClient)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTASpeechMatchOnClient other) {
        if (other == skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTASpeechMatchOnClient.getDefaultInstance()) return this;
        if (other.hasConcept()) {
          setConcept(other.getConcept());
        }
        if (other.hasRecipientType()) {
          setRecipientType(other.getRecipientType());
        }
        if (other.hasResponsequery()) {
          mergeResponsequery(other.getResponsequery());
        }
        if (other.hasRandomseed()) {
          setRandomseed(other.getRandomseed());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        if (hasResponsequery()) {
          if (!getResponsequery().isInitialized()) {
            
            return false;
          }
        }
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTASpeechMatchOnClient parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTASpeechMatchOnClient) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private int concept_ ;
      /**
       * <code>optional int32 concept = 1;</code>
       */
      public boolean hasConcept() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>optional int32 concept = 1;</code>
       */
      public int getConcept() {
        return concept_;
      }
      /**
       * <code>optional int32 concept = 1;</code>
       */
      public Builder setConcept(int value) {
        bitField0_ |= 0x00000001;
        concept_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 concept = 1;</code>
       */
      public Builder clearConcept() {
        bitField0_ = (bitField0_ & ~0x00000001);
        concept_ = 0;
        onChanged();
        return this;
      }

      private int recipientType_ ;
      /**
       * <code>optional int32 recipient_type = 2;</code>
       */
      public boolean hasRecipientType() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>optional int32 recipient_type = 2;</code>
       */
      public int getRecipientType() {
        return recipientType_;
      }
      /**
       * <code>optional int32 recipient_type = 2;</code>
       */
      public Builder setRecipientType(int value) {
        bitField0_ |= 0x00000002;
        recipientType_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 recipient_type = 2;</code>
       */
      public Builder clearRecipientType() {
        bitField0_ = (bitField0_ & ~0x00000002);
        recipientType_ = 0;
        onChanged();
        return this;
      }

      private skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAResponseQuerySerialized responsequery_ = skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAResponseQuerySerialized.getDefaultInstance();
      private com.google.protobuf.SingleFieldBuilder<
          skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAResponseQuerySerialized, skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAResponseQuerySerialized.Builder, skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAResponseQuerySerializedOrBuilder> responsequeryBuilder_;
      /**
       * <code>optional .CDOTAResponseQuerySerialized responsequery = 3;</code>
       */
      public boolean hasResponsequery() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }
      /**
       * <code>optional .CDOTAResponseQuerySerialized responsequery = 3;</code>
       */
      public skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAResponseQuerySerialized getResponsequery() {
        if (responsequeryBuilder_ == null) {
          return responsequery_;
        } else {
          return responsequeryBuilder_.getMessage();
        }
      }
      /**
       * <code>optional .CDOTAResponseQuerySerialized responsequery = 3;</code>
       */
      public Builder setResponsequery(skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAResponseQuerySerialized value) {
        if (responsequeryBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          responsequery_ = value;
          onChanged();
        } else {
          responsequeryBuilder_.setMessage(value);
        }
        bitField0_ |= 0x00000004;
        return this;
      }
      /**
       * <code>optional .CDOTAResponseQuerySerialized responsequery = 3;</code>
       */
      public Builder setResponsequery(
          skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAResponseQuerySerialized.Builder builderForValue) {
        if (responsequeryBuilder_ == null) {
          responsequery_ = builderForValue.build();
          onChanged();
        } else {
          responsequeryBuilder_.setMessage(builderForValue.build());
        }
        bitField0_ |= 0x00000004;
        return this;
      }
      /**
       * <code>optional .CDOTAResponseQuerySerialized responsequery = 3;</code>
       */
      public Builder mergeResponsequery(skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAResponseQuerySerialized value) {
        if (responsequeryBuilder_ == null) {
          if (((bitField0_ & 0x00000004) == 0x00000004) &&
              responsequery_ != skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAResponseQuerySerialized.getDefaultInstance()) {
            responsequery_ =
              skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAResponseQuerySerialized.newBuilder(responsequery_).mergeFrom(value).buildPartial();
          } else {
            responsequery_ = value;
          }
          onChanged();
        } else {
          responsequeryBuilder_.mergeFrom(value);
        }
        bitField0_ |= 0x00000004;
        return this;
      }
      /**
       * <code>optional .CDOTAResponseQuerySerialized responsequery = 3;</code>
       */
      public Builder clearResponsequery() {
        if (responsequeryBuilder_ == null) {
          responsequery_ = skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAResponseQuerySerialized.getDefaultInstance();
          onChanged();
        } else {
          responsequeryBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000004);
        return this;
      }
      /**
       * <code>optional .CDOTAResponseQuerySerialized responsequery = 3;</code>
       */
      public skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAResponseQuerySerialized.Builder getResponsequeryBuilder() {
        bitField0_ |= 0x00000004;
        onChanged();
        return getResponsequeryFieldBuilder().getBuilder();
      }
      /**
       * <code>optional .CDOTAResponseQuerySerialized responsequery = 3;</code>
       */
      public skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAResponseQuerySerializedOrBuilder getResponsequeryOrBuilder() {
        if (responsequeryBuilder_ != null) {
          return responsequeryBuilder_.getMessageOrBuilder();
        } else {
          return responsequery_;
        }
      }
      /**
       * <code>optional .CDOTAResponseQuerySerialized responsequery = 3;</code>
       */
      private com.google.protobuf.SingleFieldBuilder<
          skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAResponseQuerySerialized, skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAResponseQuerySerialized.Builder, skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAResponseQuerySerializedOrBuilder> 
          getResponsequeryFieldBuilder() {
        if (responsequeryBuilder_ == null) {
          responsequeryBuilder_ = new com.google.protobuf.SingleFieldBuilder<
              skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAResponseQuerySerialized, skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAResponseQuerySerialized.Builder, skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAResponseQuerySerializedOrBuilder>(
                  getResponsequery(),
                  getParentForChildren(),
                  isClean());
          responsequery_ = null;
        }
        return responsequeryBuilder_;
      }

      private int randomseed_ ;
      /**
       * <code>optional sfixed32 randomseed = 4 [default = 0];</code>
       */
      public boolean hasRandomseed() {
        return ((bitField0_ & 0x00000008) == 0x00000008);
      }
      /**
       * <code>optional sfixed32 randomseed = 4 [default = 0];</code>
       */
      public int getRandomseed() {
        return randomseed_;
      }
      /**
       * <code>optional sfixed32 randomseed = 4 [default = 0];</code>
       */
      public Builder setRandomseed(int value) {
        bitField0_ |= 0x00000008;
        randomseed_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional sfixed32 randomseed = 4 [default = 0];</code>
       */
      public Builder clearRandomseed() {
        bitField0_ = (bitField0_ & ~0x00000008);
        randomseed_ = 0;
        onChanged();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:CDOTASpeechMatchOnClient)
    }

    static {
      defaultInstance = new CDOTASpeechMatchOnClient(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:CDOTASpeechMatchOnClient)
  }

  public interface CDOTAUserMsg_UnitEventOrBuilder extends
      // @@protoc_insertion_point(interface_extends:CDOTAUserMsg_UnitEvent)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>required .EDotaEntityMessages msg_type = 1 [default = DOTA_UNIT_SPEECH];</code>
     */
    boolean hasMsgType();
    /**
     * <code>required .EDotaEntityMessages msg_type = 1 [default = DOTA_UNIT_SPEECH];</code>
     */
    skadistats.clarity.wire.common.proto.DotaUserMessages.EDotaEntityMessages getMsgType();

    /**
     * <code>required int32 entity_index = 2;</code>
     */
    boolean hasEntityIndex();
    /**
     * <code>required int32 entity_index = 2;</code>
     */
    int getEntityIndex();

    /**
     * <code>optional .CDOTAUserMsg_UnitEvent.Speech speech = 3;</code>
     */
    boolean hasSpeech();
    /**
     * <code>optional .CDOTAUserMsg_UnitEvent.Speech speech = 3;</code>
     */
    skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_UnitEvent.Speech getSpeech();
    /**
     * <code>optional .CDOTAUserMsg_UnitEvent.Speech speech = 3;</code>
     */
    skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_UnitEvent.SpeechOrBuilder getSpeechOrBuilder();

    /**
     * <code>optional .CDOTAUserMsg_UnitEvent.SpeechMute speech_mute = 4;</code>
     */
    boolean hasSpeechMute();
    /**
     * <code>optional .CDOTAUserMsg_UnitEvent.SpeechMute speech_mute = 4;</code>
     */
    skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_UnitEvent.SpeechMute getSpeechMute();
    /**
     * <code>optional .CDOTAUserMsg_UnitEvent.SpeechMute speech_mute = 4;</code>
     */
    skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_UnitEvent.SpeechMuteOrBuilder getSpeechMuteOrBuilder();

    /**
     * <code>optional .CDOTAUserMsg_UnitEvent.AddGesture add_gesture = 5;</code>
     */
    boolean hasAddGesture();
    /**
     * <code>optional .CDOTAUserMsg_UnitEvent.AddGesture add_gesture = 5;</code>
     */
    skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_UnitEvent.AddGesture getAddGesture();
    /**
     * <code>optional .CDOTAUserMsg_UnitEvent.AddGesture add_gesture = 5;</code>
     */
    skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_UnitEvent.AddGestureOrBuilder getAddGestureOrBuilder();

    /**
     * <code>optional .CDOTAUserMsg_UnitEvent.RemoveGesture remove_gesture = 6;</code>
     */
    boolean hasRemoveGesture();
    /**
     * <code>optional .CDOTAUserMsg_UnitEvent.RemoveGesture remove_gesture = 6;</code>
     */
    skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_UnitEvent.RemoveGesture getRemoveGesture();
    /**
     * <code>optional .CDOTAUserMsg_UnitEvent.RemoveGesture remove_gesture = 6;</code>
     */
    skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_UnitEvent.RemoveGestureOrBuilder getRemoveGestureOrBuilder();

    /**
     * <code>optional .CDOTAUserMsg_UnitEvent.BloodImpact blood_impact = 7;</code>
     */
    boolean hasBloodImpact();
    /**
     * <code>optional .CDOTAUserMsg_UnitEvent.BloodImpact blood_impact = 7;</code>
     */
    skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_UnitEvent.BloodImpact getBloodImpact();
    /**
     * <code>optional .CDOTAUserMsg_UnitEvent.BloodImpact blood_impact = 7;</code>
     */
    skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_UnitEvent.BloodImpactOrBuilder getBloodImpactOrBuilder();

    /**
     * <code>optional .CDOTAUserMsg_UnitEvent.FadeGesture fade_gesture = 8;</code>
     */
    boolean hasFadeGesture();
    /**
     * <code>optional .CDOTAUserMsg_UnitEvent.FadeGesture fade_gesture = 8;</code>
     */
    skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_UnitEvent.FadeGesture getFadeGesture();
    /**
     * <code>optional .CDOTAUserMsg_UnitEvent.FadeGesture fade_gesture = 8;</code>
     */
    skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_UnitEvent.FadeGestureOrBuilder getFadeGestureOrBuilder();

    /**
     * <code>optional .CDOTASpeechMatchOnClient speech_match_on_client = 9;</code>
     */
    boolean hasSpeechMatchOnClient();
    /**
     * <code>optional .CDOTASpeechMatchOnClient speech_match_on_client = 9;</code>
     */
    skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTASpeechMatchOnClient getSpeechMatchOnClient();
    /**
     * <code>optional .CDOTASpeechMatchOnClient speech_match_on_client = 9;</code>
     */
    skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTASpeechMatchOnClientOrBuilder getSpeechMatchOnClientOrBuilder();
  }
  /**
   * Protobuf type {@code CDOTAUserMsg_UnitEvent}
   */
  public static final class CDOTAUserMsg_UnitEvent extends
      com.google.protobuf.GeneratedMessage implements
      // @@protoc_insertion_point(message_implements:CDOTAUserMsg_UnitEvent)
      CDOTAUserMsg_UnitEventOrBuilder {
    // Use CDOTAUserMsg_UnitEvent.newBuilder() to construct.
    private CDOTAUserMsg_UnitEvent(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private CDOTAUserMsg_UnitEvent(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final CDOTAUserMsg_UnitEvent defaultInstance;
    public static CDOTAUserMsg_UnitEvent getDefaultInstance() {
      return defaultInstance;
    }

    public CDOTAUserMsg_UnitEvent getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private CDOTAUserMsg_UnitEvent(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 8: {
              int rawValue = input.readEnum();
              skadistats.clarity.wire.common.proto.DotaUserMessages.EDotaEntityMessages value = skadistats.clarity.wire.common.proto.DotaUserMessages.EDotaEntityMessages.valueOf(rawValue);
              if (value == null) {
                unknownFields.mergeVarintField(1, rawValue);
              } else {
                bitField0_ |= 0x00000001;
                msgType_ = value;
              }
              break;
            }
            case 16: {
              bitField0_ |= 0x00000002;
              entityIndex_ = input.readInt32();
              break;
            }
            case 26: {
              skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_UnitEvent.Speech.Builder subBuilder = null;
              if (((bitField0_ & 0x00000004) == 0x00000004)) {
                subBuilder = speech_.toBuilder();
              }
              speech_ = input.readMessage(skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_UnitEvent.Speech.PARSER, extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(speech_);
                speech_ = subBuilder.buildPartial();
              }
              bitField0_ |= 0x00000004;
              break;
            }
            case 34: {
              skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_UnitEvent.SpeechMute.Builder subBuilder = null;
              if (((bitField0_ & 0x00000008) == 0x00000008)) {
                subBuilder = speechMute_.toBuilder();
              }
              speechMute_ = input.readMessage(skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_UnitEvent.SpeechMute.PARSER, extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(speechMute_);
                speechMute_ = subBuilder.buildPartial();
              }
              bitField0_ |= 0x00000008;
              break;
            }
            case 42: {
              skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_UnitEvent.AddGesture.Builder subBuilder = null;
              if (((bitField0_ & 0x00000010) == 0x00000010)) {
                subBuilder = addGesture_.toBuilder();
              }
              addGesture_ = input.readMessage(skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_UnitEvent.AddGesture.PARSER, extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(addGesture_);
                addGesture_ = subBuilder.buildPartial();
              }
              bitField0_ |= 0x00000010;
              break;
            }
            case 50: {
              skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_UnitEvent.RemoveGesture.Builder subBuilder = null;
              if (((bitField0_ & 0x00000020) == 0x00000020)) {
                subBuilder = removeGesture_.toBuilder();
              }
              removeGesture_ = input.readMessage(skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_UnitEvent.RemoveGesture.PARSER, extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(removeGesture_);
                removeGesture_ = subBuilder.buildPartial();
              }
              bitField0_ |= 0x00000020;
              break;
            }
            case 58: {
              skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_UnitEvent.BloodImpact.Builder subBuilder = null;
              if (((bitField0_ & 0x00000040) == 0x00000040)) {
                subBuilder = bloodImpact_.toBuilder();
              }
              bloodImpact_ = input.readMessage(skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_UnitEvent.BloodImpact.PARSER, extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(bloodImpact_);
                bloodImpact_ = subBuilder.buildPartial();
              }
              bitField0_ |= 0x00000040;
              break;
            }
            case 66: {
              skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_UnitEvent.FadeGesture.Builder subBuilder = null;
              if (((bitField0_ & 0x00000080) == 0x00000080)) {
                subBuilder = fadeGesture_.toBuilder();
              }
              fadeGesture_ = input.readMessage(skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_UnitEvent.FadeGesture.PARSER, extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(fadeGesture_);
                fadeGesture_ = subBuilder.buildPartial();
              }
              bitField0_ |= 0x00000080;
              break;
            }
            case 74: {
              skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTASpeechMatchOnClient.Builder subBuilder = null;
              if (((bitField0_ & 0x00000100) == 0x00000100)) {
                subBuilder = speechMatchOnClient_.toBuilder();
              }
              speechMatchOnClient_ = input.readMessage(skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTASpeechMatchOnClient.PARSER, extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(speechMatchOnClient_);
                speechMatchOnClient_ = subBuilder.buildPartial();
              }
              bitField0_ |= 0x00000100;
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return skadistats.clarity.wire.common.proto.DotaUserMessages.internal_static_CDOTAUserMsg_UnitEvent_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return skadistats.clarity.wire.common.proto.DotaUserMessages.internal_static_CDOTAUserMsg_UnitEvent_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_UnitEvent.class, skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_UnitEvent.Builder.class);
    }

    public static com.google.protobuf.Parser<CDOTAUserMsg_UnitEvent> PARSER =
        new com.google.protobuf.AbstractParser<CDOTAUserMsg_UnitEvent>() {
      public CDOTAUserMsg_UnitEvent parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new CDOTAUserMsg_UnitEvent(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<CDOTAUserMsg_UnitEvent> getParserForType() {
      return PARSER;
    }

    public interface SpeechOrBuilder extends
        // @@protoc_insertion_point(interface_extends:CDOTAUserMsg_UnitEvent.Speech)
        com.google.protobuf.MessageOrBuilder {

      /**
       * <code>optional int32 concept = 1;</code>
       */
      boolean hasConcept();
      /**
       * <code>optional int32 concept = 1;</code>
       */
      int getConcept();

      /**
       * <code>optional string response = 2;</code>
       */
      boolean hasResponse();
      /**
       * <code>optional string response = 2;</code>
       */
      java.lang.String getResponse();
      /**
       * <code>optional string response = 2;</code>
       */
      com.google.protobuf.ByteString
          getResponseBytes();

      /**
       * <code>optional int32 recipient_type = 3;</code>
       */
      boolean hasRecipientType();
      /**
       * <code>optional int32 recipient_type = 3;</code>
       */
      int getRecipientType();

      /**
       * <code>optional int32 level = 4;</code>
       */
      boolean hasLevel();
      /**
       * <code>optional int32 level = 4;</code>
       */
      int getLevel();

      /**
       * <code>optional bool muteable = 5 [default = false];</code>
       */
      boolean hasMuteable();
      /**
       * <code>optional bool muteable = 5 [default = false];</code>
       */
      boolean getMuteable();
    }
    /**
     * Protobuf type {@code CDOTAUserMsg_UnitEvent.Speech}
     */
    public static final class Speech extends
        com.google.protobuf.GeneratedMessage implements
        // @@protoc_insertion_point(message_implements:CDOTAUserMsg_UnitEvent.Speech)
        SpeechOrBuilder {
      // Use Speech.newBuilder() to construct.
      private Speech(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
        super(builder);
        this.unknownFields = builder.getUnknownFields();
      }
      private Speech(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

      private static final Speech defaultInstance;
      public static Speech getDefaultInstance() {
        return defaultInstance;
      }

      public Speech getDefaultInstanceForType() {
        return defaultInstance;
      }

      private final com.google.protobuf.UnknownFieldSet unknownFields;
      @java.lang.Override
      public final com.google.protobuf.UnknownFieldSet
          getUnknownFields() {
        return this.unknownFields;
      }
      private Speech(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        initFields();
        int mutable_bitField0_ = 0;
        com.google.protobuf.UnknownFieldSet.Builder unknownFields =
            com.google.protobuf.UnknownFieldSet.newBuilder();
        try {
          boolean done = false;
          while (!done) {
            int tag = input.readTag();
            switch (tag) {
              case 0:
                done = true;
                break;
              default: {
                if (!parseUnknownField(input, unknownFields,
                                       extensionRegistry, tag)) {
                  done = true;
                }
                break;
              }
              case 8: {
                bitField0_ |= 0x00000001;
                concept_ = input.readInt32();
                break;
              }
              case 18: {
                com.google.protobuf.ByteString bs = input.readBytes();
                bitField0_ |= 0x00000002;
                response_ = bs;
                break;
              }
              case 24: {
                bitField0_ |= 0x00000004;
                recipientType_ = input.readInt32();
                break;
              }
              case 32: {
                bitField0_ |= 0x00000008;
                level_ = input.readInt32();
                break;
              }
              case 40: {
                bitField0_ |= 0x00000010;
                muteable_ = input.readBool();
                break;
              }
            }
          }
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.setUnfinishedMessage(this);
        } catch (java.io.IOException e) {
          throw new com.google.protobuf.InvalidProtocolBufferException(
              e.getMessage()).setUnfinishedMessage(this);
        } finally {
          this.unknownFields = unknownFields.build();
          makeExtensionsImmutable();
        }
      }
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return skadistats.clarity.wire.common.proto.DotaUserMessages.internal_static_CDOTAUserMsg_UnitEvent_Speech_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return skadistats.clarity.wire.common.proto.DotaUserMessages.internal_static_CDOTAUserMsg_UnitEvent_Speech_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_UnitEvent.Speech.class, skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_UnitEvent.Speech.Builder.class);
      }

      public static com.google.protobuf.Parser<Speech> PARSER =
          new com.google.protobuf.AbstractParser<Speech>() {
        public Speech parsePartialFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws com.google.protobuf.InvalidProtocolBufferException {
          return new Speech(input, extensionRegistry);
        }
      };

      @java.lang.Override
      public com.google.protobuf.Parser<Speech> getParserForType() {
        return PARSER;
      }

      private int bitField0_;
      public static final int CONCEPT_FIELD_NUMBER = 1;
      private int concept_;
      /**
       * <code>optional int32 concept = 1;</code>
       */
      public boolean hasConcept() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>optional int32 concept = 1;</code>
       */
      public int getConcept() {
        return concept_;
      }

      public static final int RESPONSE_FIELD_NUMBER = 2;
      private java.lang.Object response_;
      /**
       * <code>optional string response = 2;</code>
       */
      public boolean hasResponse() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>optional string response = 2;</code>
       */
      public java.lang.String getResponse() {
        java.lang.Object ref = response_;
        if (ref instanceof java.lang.String) {
          return (java.lang.String) ref;
        } else {
          com.google.protobuf.ByteString bs = 
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          if (bs.isValidUtf8()) {
            response_ = s;
          }
          return s;
        }
      }
      /**
       * <code>optional string response = 2;</code>
       */
      public com.google.protobuf.ByteString
          getResponseBytes() {
        java.lang.Object ref = response_;
        if (ref instanceof java.lang.String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          response_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }

      public static final int RECIPIENT_TYPE_FIELD_NUMBER = 3;
      private int recipientType_;
      /**
       * <code>optional int32 recipient_type = 3;</code>
       */
      public boolean hasRecipientType() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }
      /**
       * <code>optional int32 recipient_type = 3;</code>
       */
      public int getRecipientType() {
        return recipientType_;
      }

      public static final int LEVEL_FIELD_NUMBER = 4;
      private int level_;
      /**
       * <code>optional int32 level = 4;</code>
       */
      public boolean hasLevel() {
        return ((bitField0_ & 0x00000008) == 0x00000008);
      }
      /**
       * <code>optional int32 level = 4;</code>
       */
      public int getLevel() {
        return level_;
      }

      public static final int MUTEABLE_FIELD_NUMBER = 5;
      private boolean muteable_;
      /**
       * <code>optional bool muteable = 5 [default = false];</code>
       */
      public boolean hasMuteable() {
        return ((bitField0_ & 0x00000010) == 0x00000010);
      }
      /**
       * <code>optional bool muteable = 5 [default = false];</code>
       */
      public boolean getMuteable() {
        return muteable_;
      }

      private void initFields() {
        concept_ = 0;
        response_ = "";
        recipientType_ = 0;
        level_ = 0;
        muteable_ = false;
      }
      private byte memoizedIsInitialized = -1;
      public final boolean isInitialized() {
        byte isInitialized = memoizedIsInitialized;
        if (isInitialized == 1) return true;
        if (isInitialized == 0) return false;

        memoizedIsInitialized = 1;
        return true;
      }

      public void writeTo(com.google.protobuf.CodedOutputStream output)
                          throws java.io.IOException {
        getSerializedSize();
        if (((bitField0_ & 0x00000001) == 0x00000001)) {
          output.writeInt32(1, concept_);
        }
        if (((bitField0_ & 0x00000002) == 0x00000002)) {
          output.writeBytes(2, getResponseBytes());
        }
        if (((bitField0_ & 0x00000004) == 0x00000004)) {
          output.writeInt32(3, recipientType_);
        }
        if (((bitField0_ & 0x00000008) == 0x00000008)) {
          output.writeInt32(4, level_);
        }
        if (((bitField0_ & 0x00000010) == 0x00000010)) {
          output.writeBool(5, muteable_);
        }
        getUnknownFields().writeTo(output);
      }

      private int memoizedSerializedSize = -1;
      public int getSerializedSize() {
        int size = memoizedSerializedSize;
        if (size != -1) return size;

        size = 0;
        if (((bitField0_ & 0x00000001) == 0x00000001)) {
          size += com.google.protobuf.CodedOutputStream
            .computeInt32Size(1, concept_);
        }
        if (((bitField0_ & 0x00000002) == 0x00000002)) {
          size += com.google.protobuf.CodedOutputStream
            .computeBytesSize(2, getResponseBytes());
        }
        if (((bitField0_ & 0x00000004) == 0x00000004)) {
          size += com.google.protobuf.CodedOutputStream
            .computeInt32Size(3, recipientType_);
        }
        if (((bitField0_ & 0x00000008) == 0x00000008)) {
          size += com.google.protobuf.CodedOutputStream
            .computeInt32Size(4, level_);
        }
        if (((bitField0_ & 0x00000010) == 0x00000010)) {
          size += com.google.protobuf.CodedOutputStream
            .computeBoolSize(5, muteable_);
        }
        size += getUnknownFields().getSerializedSize();
        memoizedSerializedSize = size;
        return size;
      }

      private static final long serialVersionUID = 0L;
      @java.lang.Override
      protected java.lang.Object writeReplace()
          throws java.io.ObjectStreamException {
        return super.writeReplace();
      }

      public static skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_UnitEvent.Speech parseFrom(
          com.google.protobuf.ByteString data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_UnitEvent.Speech parseFrom(
          com.google.protobuf.ByteString data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_UnitEvent.Speech parseFrom(byte[] data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_UnitEvent.Speech parseFrom(
          byte[] data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_UnitEvent.Speech parseFrom(java.io.InputStream input)
          throws java.io.IOException {
        return PARSER.parseFrom(input);
      }
      public static skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_UnitEvent.Speech parseFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return PARSER.parseFrom(input, extensionRegistry);
      }
      public static skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_UnitEvent.Speech parseDelimitedFrom(java.io.InputStream input)
          throws java.io.IOException {
        return PARSER.parseDelimitedFrom(input);
      }
      public static skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_UnitEvent.Speech parseDelimitedFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return PARSER.parseDelimitedFrom(input, extensionRegistry);
      }
      public static skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_UnitEvent.Speech parseFrom(
          com.google.protobuf.CodedInputStream input)
          throws java.io.IOException {
        return PARSER.parseFrom(input);
      }
      public static skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_UnitEvent.Speech parseFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return PARSER.parseFrom(input, extensionRegistry);
      }

      public static Builder newBuilder() { return Builder.create(); }
      public Builder newBuilderForType() { return newBuilder(); }
      public static Builder newBuilder(skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_UnitEvent.Speech prototype) {
        return newBuilder().mergeFrom(prototype);
      }
      public Builder toBuilder() { return newBuilder(this); }

      @java.lang.Override
      protected Builder newBuilderForType(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        Builder builder = new Builder(parent);
        return builder;
      }
      /**
       * Protobuf type {@code CDOTAUserMsg_UnitEvent.Speech}
       */
      public static final class Builder extends
          com.google.protobuf.GeneratedMessage.Builder<Builder> implements
          // @@protoc_insertion_point(builder_implements:CDOTAUserMsg_UnitEvent.Speech)
          skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_UnitEvent.SpeechOrBuilder {
        public static final com.google.protobuf.Descriptors.Descriptor
            getDescriptor() {
          return skadistats.clarity.wire.common.proto.DotaUserMessages.internal_static_CDOTAUserMsg_UnitEvent_Speech_descriptor;
        }

        protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
            internalGetFieldAccessorTable() {
          return skadistats.clarity.wire.common.proto.DotaUserMessages.internal_static_CDOTAUserMsg_UnitEvent_Speech_fieldAccessorTable
              .ensureFieldAccessorsInitialized(
                  skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_UnitEvent.Speech.class, skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_UnitEvent.Speech.Builder.class);
        }

        // Construct using skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_UnitEvent.Speech.newBuilder()
        private Builder() {
          maybeForceBuilderInitialization();
        }

        private Builder(
            com.google.protobuf.GeneratedMessage.BuilderParent parent) {
          super(parent);
          maybeForceBuilderInitialization();
        }
        private void maybeForceBuilderInitialization() {
          if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
          }
        }
        private static Builder create() {
          return new Builder();
        }

        public Builder clear() {
          super.clear();
          concept_ = 0;
          bitField0_ = (bitField0_ & ~0x00000001);
          response_ = "";
          bitField0_ = (bitField0_ & ~0x00000002);
          recipientType_ = 0;
          bitField0_ = (bitField0_ & ~0x00000004);
          level_ = 0;
          bitField0_ = (bitField0_ & ~0x00000008);
          muteable_ = false;
          bitField0_ = (bitField0_ & ~0x00000010);
          return this;
        }

        public Builder clone() {
          return create().mergeFrom(buildPartial());
        }

        public com.google.protobuf.Descriptors.Descriptor
            getDescriptorForType() {
          return skadistats.clarity.wire.common.proto.DotaUserMessages.internal_static_CDOTAUserMsg_UnitEvent_Speech_descriptor;
        }

        public skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_UnitEvent.Speech getDefaultInstanceForType() {
          return skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_UnitEvent.Speech.getDefaultInstance();
        }

        public skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_UnitEvent.Speech build() {
          skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_UnitEvent.Speech result = buildPartial();
          if (!result.isInitialized()) {
            throw newUninitializedMessageException(result);
          }
          return result;
        }

        public skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_UnitEvent.Speech buildPartial() {
          skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_UnitEvent.Speech result = new skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_UnitEvent.Speech(this);
          int from_bitField0_ = bitField0_;
          int to_bitField0_ = 0;
          if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
            to_bitField0_ |= 0x00000001;
          }
          result.concept_ = concept_;
          if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
            to_bitField0_ |= 0x00000002;
          }
          result.response_ = response_;
          if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
            to_bitField0_ |= 0x00000004;
          }
          result.recipientType_ = recipientType_;
          if (((from_bitField0_ & 0x00000008) == 0x00000008)) {
            to_bitField0_ |= 0x00000008;
          }
          result.level_ = level_;
          if (((from_bitField0_ & 0x00000010) == 0x00000010)) {
            to_bitField0_ |= 0x00000010;
          }
          result.muteable_ = muteable_;
          result.bitField0_ = to_bitField0_;
          onBuilt();
          return result;
        }

        public Builder mergeFrom(com.google.protobuf.Message other) {
          if (other instanceof skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_UnitEvent.Speech) {
            return mergeFrom((skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_UnitEvent.Speech)other);
          } else {
            super.mergeFrom(other);
            return this;
          }
        }

        public Builder mergeFrom(skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_UnitEvent.Speech other) {
          if (other == skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_UnitEvent.Speech.getDefaultInstance()) return this;
          if (other.hasConcept()) {
            setConcept(other.getConcept());
          }
          if (other.hasResponse()) {
            bitField0_ |= 0x00000002;
            response_ = other.response_;
            onChanged();
          }
          if (other.hasRecipientType()) {
            setRecipientType(other.getRecipientType());
          }
          if (other.hasLevel()) {
            setLevel(other.getLevel());
          }
          if (other.hasMuteable()) {
            setMuteable(other.getMuteable());
          }
          this.mergeUnknownFields(other.getUnknownFields());
          return this;
        }

        public final boolean isInitialized() {
          return true;
        }

        public Builder mergeFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws java.io.IOException {
          skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_UnitEvent.Speech parsedMessage = null;
          try {
            parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
          } catch (com.google.protobuf.InvalidProtocolBufferException e) {
            parsedMessage = (skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_UnitEvent.Speech) e.getUnfinishedMessage();
            throw e;
          } finally {
            if (parsedMessage != null) {
              mergeFrom(parsedMessage);
            }
          }
          return this;
        }
        private int bitField0_;

        private int concept_ ;
        /**
         * <code>optional int32 concept = 1;</code>
         */
        public boolean hasConcept() {
          return ((bitField0_ & 0x00000001) == 0x00000001);
        }
        /**
         * <code>optional int32 concept = 1;</code>
         */
        public int getConcept() {
          return concept_;
        }
        /**
         * <code>optional int32 concept = 1;</code>
         */
        public Builder setConcept(int value) {
          bitField0_ |= 0x00000001;
          concept_ = value;
          onChanged();
          return this;
        }
        /**
         * <code>optional int32 concept = 1;</code>
         */
        public Builder clearConcept() {
          bitField0_ = (bitField0_ & ~0x00000001);
          concept_ = 0;
          onChanged();
          return this;
        }

        private java.lang.Object response_ = "";
        /**
         * <code>optional string response = 2;</code>
         */
        public boolean hasResponse() {
          return ((bitField0_ & 0x00000002) == 0x00000002);
        }
        /**
         * <code>optional string response = 2;</code>
         */
        public java.lang.String getResponse() {
          java.lang.Object ref = response_;
          if (!(ref instanceof java.lang.String)) {
            com.google.protobuf.ByteString bs =
                (com.google.protobuf.ByteString) ref;
            java.lang.String s = bs.toStringUtf8();
            if (bs.isValidUtf8()) {
              response_ = s;
            }
            return s;
          } else {
            return (java.lang.String) ref;
          }
        }
        /**
         * <code>optional string response = 2;</code>
         */
        public com.google.protobuf.ByteString
            getResponseBytes() {
          java.lang.Object ref = response_;
          if (ref instanceof String) {
            com.google.protobuf.ByteString b = 
                com.google.protobuf.ByteString.copyFromUtf8(
                    (java.lang.String) ref);
            response_ = b;
            return b;
          } else {
            return (com.google.protobuf.ByteString) ref;
          }
        }
        /**
         * <code>optional string response = 2;</code>
         */
        public Builder setResponse(
            java.lang.String value) {
          if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000002;
          response_ = value;
          onChanged();
          return this;
        }
        /**
         * <code>optional string response = 2;</code>
         */
        public Builder clearResponse() {
          bitField0_ = (bitField0_ & ~0x00000002);
          response_ = getDefaultInstance().getResponse();
          onChanged();
          return this;
        }
        /**
         * <code>optional string response = 2;</code>
         */
        public Builder setResponseBytes(
            com.google.protobuf.ByteString value) {
          if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000002;
          response_ = value;
          onChanged();
          return this;
        }

        private int recipientType_ ;
        /**
         * <code>optional int32 recipient_type = 3;</code>
         */
        public boolean hasRecipientType() {
          return ((bitField0_ & 0x00000004) == 0x00000004);
        }
        /**
         * <code>optional int32 recipient_type = 3;</code>
         */
        public int getRecipientType() {
          return recipientType_;
        }
        /**
         * <code>optional int32 recipient_type = 3;</code>
         */
        public Builder setRecipientType(int value) {
          bitField0_ |= 0x00000004;
          recipientType_ = value;
          onChanged();
          return this;
        }
        /**
         * <code>optional int32 recipient_type = 3;</code>
         */
        public Builder clearRecipientType() {
          bitField0_ = (bitField0_ & ~0x00000004);
          recipientType_ = 0;
          onChanged();
          return this;
        }

        private int level_ ;
        /**
         * <code>optional int32 level = 4;</code>
         */
        public boolean hasLevel() {
          return ((bitField0_ & 0x00000008) == 0x00000008);
        }
        /**
         * <code>optional int32 level = 4;</code>
         */
        public int getLevel() {
          return level_;
        }
        /**
         * <code>optional int32 level = 4;</code>
         */
        public Builder setLevel(int value) {
          bitField0_ |= 0x00000008;
          level_ = value;
          onChanged();
          return this;
        }
        /**
         * <code>optional int32 level = 4;</code>
         */
        public Builder clearLevel() {
          bitField0_ = (bitField0_ & ~0x00000008);
          level_ = 0;
          onChanged();
          return this;
        }

        private boolean muteable_ ;
        /**
         * <code>optional bool muteable = 5 [default = false];</code>
         */
        public boolean hasMuteable() {
          return ((bitField0_ & 0x00000010) == 0x00000010);
        }
        /**
         * <code>optional bool muteable = 5 [default = false];</code>
         */
        public boolean getMuteable() {
          return muteable_;
        }
        /**
         * <code>optional bool muteable = 5 [default = false];</code>
         */
        public Builder setMuteable(boolean value) {
          bitField0_ |= 0x00000010;
          muteable_ = value;
          onChanged();
          return this;
        }
        /**
         * <code>optional bool muteable = 5 [default = false];</code>
         */
        public Builder clearMuteable() {
          bitField0_ = (bitField0_ & ~0x00000010);
          muteable_ = false;
          onChanged();
          return this;
        }

        // @@protoc_insertion_point(builder_scope:CDOTAUserMsg_UnitEvent.Speech)
      }

      static {
        defaultInstance = new Speech(true);
        defaultInstance.initFields();
      }

      // @@protoc_insertion_point(class_scope:CDOTAUserMsg_UnitEvent.Speech)
    }

    public interface SpeechMuteOrBuilder extends
        // @@protoc_insertion_point(interface_extends:CDOTAUserMsg_UnitEvent.SpeechMute)
        com.google.protobuf.MessageOrBuilder {

      /**
       * <code>optional float delay = 1 [default = 0.5];</code>
       */
      boolean hasDelay();
      /**
       * <code>optional float delay = 1 [default = 0.5];</code>
       */
      float getDelay();
    }
    /**
     * Protobuf type {@code CDOTAUserMsg_UnitEvent.SpeechMute}
     */
    public static final class SpeechMute extends
        com.google.protobuf.GeneratedMessage implements
        // @@protoc_insertion_point(message_implements:CDOTAUserMsg_UnitEvent.SpeechMute)
        SpeechMuteOrBuilder {
      // Use SpeechMute.newBuilder() to construct.
      private SpeechMute(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
        super(builder);
        this.unknownFields = builder.getUnknownFields();
      }
      private SpeechMute(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

      private static final SpeechMute defaultInstance;
      public static SpeechMute getDefaultInstance() {
        return defaultInstance;
      }

      public SpeechMute getDefaultInstanceForType() {
        return defaultInstance;
      }

      private final com.google.protobuf.UnknownFieldSet unknownFields;
      @java.lang.Override
      public final com.google.protobuf.UnknownFieldSet
          getUnknownFields() {
        return this.unknownFields;
      }
      private SpeechMute(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        initFields();
        int mutable_bitField0_ = 0;
        com.google.protobuf.UnknownFieldSet.Builder unknownFields =
            com.google.protobuf.UnknownFieldSet.newBuilder();
        try {
          boolean done = false;
          while (!done) {
            int tag = input.readTag();
            switch (tag) {
              case 0:
                done = true;
                break;
              default: {
                if (!parseUnknownField(input, unknownFields,
                                       extensionRegistry, tag)) {
                  done = true;
                }
                break;
              }
              case 13: {
                bitField0_ |= 0x00000001;
                delay_ = input.readFloat();
                break;
              }
            }
          }
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.setUnfinishedMessage(this);
        } catch (java.io.IOException e) {
          throw new com.google.protobuf.InvalidProtocolBufferException(
              e.getMessage()).setUnfinishedMessage(this);
        } finally {
          this.unknownFields = unknownFields.build();
          makeExtensionsImmutable();
        }
      }
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return skadistats.clarity.wire.common.proto.DotaUserMessages.internal_static_CDOTAUserMsg_UnitEvent_SpeechMute_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return skadistats.clarity.wire.common.proto.DotaUserMessages.internal_static_CDOTAUserMsg_UnitEvent_SpeechMute_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_UnitEvent.SpeechMute.class, skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_UnitEvent.SpeechMute.Builder.class);
      }

      public static com.google.protobuf.Parser<SpeechMute> PARSER =
          new com.google.protobuf.AbstractParser<SpeechMute>() {
        public SpeechMute parsePartialFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws com.google.protobuf.InvalidProtocolBufferException {
          return new SpeechMute(input, extensionRegistry);
        }
      };

      @java.lang.Override
      public com.google.protobuf.Parser<SpeechMute> getParserForType() {
        return PARSER;
      }

      private int bitField0_;
      public static final int DELAY_FIELD_NUMBER = 1;
      private float delay_;
      /**
       * <code>optional float delay = 1 [default = 0.5];</code>
       */
      public boolean hasDelay() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>optional float delay = 1 [default = 0.5];</code>
       */
      public float getDelay() {
        return delay_;
      }

      private void initFields() {
        delay_ = 0.5F;
      }
      private byte memoizedIsInitialized = -1;
      public final boolean isInitialized() {
        byte isInitialized = memoizedIsInitialized;
        if (isInitialized == 1) return true;
        if (isInitialized == 0) return false;

        memoizedIsInitialized = 1;
        return true;
      }

      public void writeTo(com.google.protobuf.CodedOutputStream output)
                          throws java.io.IOException {
        getSerializedSize();
        if (((bitField0_ & 0x00000001) == 0x00000001)) {
          output.writeFloat(1, delay_);
        }
        getUnknownFields().writeTo(output);
      }

      private int memoizedSerializedSize = -1;
      public int getSerializedSize() {
        int size = memoizedSerializedSize;
        if (size != -1) return size;

        size = 0;
        if (((bitField0_ & 0x00000001) == 0x00000001)) {
          size += com.google.protobuf.CodedOutputStream
            .computeFloatSize(1, delay_);
        }
        size += getUnknownFields().getSerializedSize();
        memoizedSerializedSize = size;
        return size;
      }

      private static final long serialVersionUID = 0L;
      @java.lang.Override
      protected java.lang.Object writeReplace()
          throws java.io.ObjectStreamException {
        return super.writeReplace();
      }

      public static skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_UnitEvent.SpeechMute parseFrom(
          com.google.protobuf.ByteString data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_UnitEvent.SpeechMute parseFrom(
          com.google.protobuf.ByteString data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_UnitEvent.SpeechMute parseFrom(byte[] data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_UnitEvent.SpeechMute parseFrom(
          byte[] data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_UnitEvent.SpeechMute parseFrom(java.io.InputStream input)
          throws java.io.IOException {
        return PARSER.parseFrom(input);
      }
      public static skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_UnitEvent.SpeechMute parseFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return PARSER.parseFrom(input, extensionRegistry);
      }
      public static skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_UnitEvent.SpeechMute parseDelimitedFrom(java.io.InputStream input)
          throws java.io.IOException {
        return PARSER.parseDelimitedFrom(input);
      }
      public static skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_UnitEvent.SpeechMute parseDelimitedFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return PARSER.parseDelimitedFrom(input, extensionRegistry);
      }
      public static skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_UnitEvent.SpeechMute parseFrom(
          com.google.protobuf.CodedInputStream input)
          throws java.io.IOException {
        return PARSER.parseFrom(input);
      }
      public static skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_UnitEvent.SpeechMute parseFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return PARSER.parseFrom(input, extensionRegistry);
      }

      public static Builder newBuilder() { return Builder.create(); }
      public Builder newBuilderForType() { return newBuilder(); }
      public static Builder newBuilder(skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_UnitEvent.SpeechMute prototype) {
        return newBuilder().mergeFrom(prototype);
      }
      public Builder toBuilder() { return newBuilder(this); }

      @java.lang.Override
      protected Builder newBuilderForType(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        Builder builder = new Builder(parent);
        return builder;
      }
      /**
       * Protobuf type {@code CDOTAUserMsg_UnitEvent.SpeechMute}
       */
      public static final class Builder extends
          com.google.protobuf.GeneratedMessage.Builder<Builder> implements
          // @@protoc_insertion_point(builder_implements:CDOTAUserMsg_UnitEvent.SpeechMute)
          skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_UnitEvent.SpeechMuteOrBuilder {
        public static final com.google.protobuf.Descriptors.Descriptor
            getDescriptor() {
          return skadistats.clarity.wire.common.proto.DotaUserMessages.internal_static_CDOTAUserMsg_UnitEvent_SpeechMute_descriptor;
        }

        protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
            internalGetFieldAccessorTable() {
          return skadistats.clarity.wire.common.proto.DotaUserMessages.internal_static_CDOTAUserMsg_UnitEvent_SpeechMute_fieldAccessorTable
              .ensureFieldAccessorsInitialized(
                  skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_UnitEvent.SpeechMute.class, skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_UnitEvent.SpeechMute.Builder.class);
        }

        // Construct using skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_UnitEvent.SpeechMute.newBuilder()
        private Builder() {
          maybeForceBuilderInitialization();
        }

        private Builder(
            com.google.protobuf.GeneratedMessage.BuilderParent parent) {
          super(parent);
          maybeForceBuilderInitialization();
        }
        private void maybeForceBuilderInitialization() {
          if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
          }
        }
        private static Builder create() {
          return new Builder();
        }

        public Builder clear() {
          super.clear();
          delay_ = 0.5F;
          bitField0_ = (bitField0_ & ~0x00000001);
          return this;
        }

        public Builder clone() {
          return create().mergeFrom(buildPartial());
        }

        public com.google.protobuf.Descriptors.Descriptor
            getDescriptorForType() {
          return skadistats.clarity.wire.common.proto.DotaUserMessages.internal_static_CDOTAUserMsg_UnitEvent_SpeechMute_descriptor;
        }

        public skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_UnitEvent.SpeechMute getDefaultInstanceForType() {
          return skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_UnitEvent.SpeechMute.getDefaultInstance();
        }

        public skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_UnitEvent.SpeechMute build() {
          skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_UnitEvent.SpeechMute result = buildPartial();
          if (!result.isInitialized()) {
            throw newUninitializedMessageException(result);
          }
          return result;
        }

        public skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_UnitEvent.SpeechMute buildPartial() {
          skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_UnitEvent.SpeechMute result = new skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_UnitEvent.SpeechMute(this);
          int from_bitField0_ = bitField0_;
          int to_bitField0_ = 0;
          if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
            to_bitField0_ |= 0x00000001;
          }
          result.delay_ = delay_;
          result.bitField0_ = to_bitField0_;
          onBuilt();
          return result;
        }

        public Builder mergeFrom(com.google.protobuf.Message other) {
          if (other instanceof skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_UnitEvent.SpeechMute) {
            return mergeFrom((skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_UnitEvent.SpeechMute)other);
          } else {
            super.mergeFrom(other);
            return this;
          }
        }

        public Builder mergeFrom(skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_UnitEvent.SpeechMute other) {
          if (other == skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_UnitEvent.SpeechMute.getDefaultInstance()) return this;
          if (other.hasDelay()) {
            setDelay(other.getDelay());
          }
          this.mergeUnknownFields(other.getUnknownFields());
          return this;
        }

        public final boolean isInitialized() {
          return true;
        }

        public Builder mergeFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws java.io.IOException {
          skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_UnitEvent.SpeechMute parsedMessage = null;
          try {
            parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
          } catch (com.google.protobuf.InvalidProtocolBufferException e) {
            parsedMessage = (skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_UnitEvent.SpeechMute) e.getUnfinishedMessage();
            throw e;
          } finally {
            if (parsedMessage != null) {
              mergeFrom(parsedMessage);
            }
          }
          return this;
        }
        private int bitField0_;

        private float delay_ = 0.5F;
        /**
         * <code>optional float delay = 1 [default = 0.5];</code>
         */
        public boolean hasDelay() {
          return ((bitField0_ & 0x00000001) == 0x00000001);
        }
        /**
         * <code>optional float delay = 1 [default = 0.5];</code>
         */
        public float getDelay() {
          return delay_;
        }
        /**
         * <code>optional float delay = 1 [default = 0.5];</code>
         */
        public Builder setDelay(float value) {
          bitField0_ |= 0x00000001;
          delay_ = value;
          onChanged();
          return this;
        }
        /**
         * <code>optional float delay = 1 [default = 0.5];</code>
         */
        public Builder clearDelay() {
          bitField0_ = (bitField0_ & ~0x00000001);
          delay_ = 0.5F;
          onChanged();
          return this;
        }

        // @@protoc_insertion_point(builder_scope:CDOTAUserMsg_UnitEvent.SpeechMute)
      }

      static {
        defaultInstance = new SpeechMute(true);
        defaultInstance.initFields();
      }

      // @@protoc_insertion_point(class_scope:CDOTAUserMsg_UnitEvent.SpeechMute)
    }

    public interface AddGestureOrBuilder extends
        // @@protoc_insertion_point(interface_extends:CDOTAUserMsg_UnitEvent.AddGesture)
        com.google.protobuf.MessageOrBuilder {

      /**
       * <code>optional int32 activity = 1;</code>
       */
      boolean hasActivity();
      /**
       * <code>optional int32 activity = 1;</code>
       */
      int getActivity();

      /**
       * <code>optional int32 slot = 2;</code>
       */
      boolean hasSlot();
      /**
       * <code>optional int32 slot = 2;</code>
       */
      int getSlot();

      /**
       * <code>optional float fade_in = 3 [default = 0];</code>
       */
      boolean hasFadeIn();
      /**
       * <code>optional float fade_in = 3 [default = 0];</code>
       */
      float getFadeIn();

      /**
       * <code>optional float fade_out = 4 [default = 0.1];</code>
       */
      boolean hasFadeOut();
      /**
       * <code>optional float fade_out = 4 [default = 0.1];</code>
       */
      float getFadeOut();
    }
    /**
     * Protobuf type {@code CDOTAUserMsg_UnitEvent.AddGesture}
     */
    public static final class AddGesture extends
        com.google.protobuf.GeneratedMessage implements
        // @@protoc_insertion_point(message_implements:CDOTAUserMsg_UnitEvent.AddGesture)
        AddGestureOrBuilder {
      // Use AddGesture.newBuilder() to construct.
      private AddGesture(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
        super(builder);
        this.unknownFields = builder.getUnknownFields();
      }
      private AddGesture(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

      private static final AddGesture defaultInstance;
      public static AddGesture getDefaultInstance() {
        return defaultInstance;
      }

      public AddGesture getDefaultInstanceForType() {
        return defaultInstance;
      }

      private final com.google.protobuf.UnknownFieldSet unknownFields;
      @java.lang.Override
      public final com.google.protobuf.UnknownFieldSet
          getUnknownFields() {
        return this.unknownFields;
      }
      private AddGesture(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        initFields();
        int mutable_bitField0_ = 0;
        com.google.protobuf.UnknownFieldSet.Builder unknownFields =
            com.google.protobuf.UnknownFieldSet.newBuilder();
        try {
          boolean done = false;
          while (!done) {
            int tag = input.readTag();
            switch (tag) {
              case 0:
                done = true;
                break;
              default: {
                if (!parseUnknownField(input, unknownFields,
                                       extensionRegistry, tag)) {
                  done = true;
                }
                break;
              }
              case 8: {
                bitField0_ |= 0x00000001;
                activity_ = input.readInt32();
                break;
              }
              case 16: {
                bitField0_ |= 0x00000002;
                slot_ = input.readInt32();
                break;
              }
              case 29: {
                bitField0_ |= 0x00000004;
                fadeIn_ = input.readFloat();
                break;
              }
              case 37: {
                bitField0_ |= 0x00000008;
                fadeOut_ = input.readFloat();
                break;
              }
            }
          }
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.setUnfinishedMessage(this);
        } catch (java.io.IOException e) {
          throw new com.google.protobuf.InvalidProtocolBufferException(
              e.getMessage()).setUnfinishedMessage(this);
        } finally {
          this.unknownFields = unknownFields.build();
          makeExtensionsImmutable();
        }
      }
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return skadistats.clarity.wire.common.proto.DotaUserMessages.internal_static_CDOTAUserMsg_UnitEvent_AddGesture_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return skadistats.clarity.wire.common.proto.DotaUserMessages.internal_static_CDOTAUserMsg_UnitEvent_AddGesture_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_UnitEvent.AddGesture.class, skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_UnitEvent.AddGesture.Builder.class);
      }

      public static com.google.protobuf.Parser<AddGesture> PARSER =
          new com.google.protobuf.AbstractParser<AddGesture>() {
        public AddGesture parsePartialFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws com.google.protobuf.InvalidProtocolBufferException {
          return new AddGesture(input, extensionRegistry);
        }
      };

      @java.lang.Override
      public com.google.protobuf.Parser<AddGesture> getParserForType() {
        return PARSER;
      }

      private int bitField0_;
      public static final int ACTIVITY_FIELD_NUMBER = 1;
      private int activity_;
      /**
       * <code>optional int32 activity = 1;</code>
       */
      public boolean hasActivity() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>optional int32 activity = 1;</code>
       */
      public int getActivity() {
        return activity_;
      }

      public static final int SLOT_FIELD_NUMBER = 2;
      private int slot_;
      /**
       * <code>optional int32 slot = 2;</code>
       */
      public boolean hasSlot() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>optional int32 slot = 2;</code>
       */
      public int getSlot() {
        return slot_;
      }

      public static final int FADE_IN_FIELD_NUMBER = 3;
      private float fadeIn_;
      /**
       * <code>optional float fade_in = 3 [default = 0];</code>
       */
      public boolean hasFadeIn() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }
      /**
       * <code>optional float fade_in = 3 [default = 0];</code>
       */
      public float getFadeIn() {
        return fadeIn_;
      }

      public static final int FADE_OUT_FIELD_NUMBER = 4;
      private float fadeOut_;
      /**
       * <code>optional float fade_out = 4 [default = 0.1];</code>
       */
      public boolean hasFadeOut() {
        return ((bitField0_ & 0x00000008) == 0x00000008);
      }
      /**
       * <code>optional float fade_out = 4 [default = 0.1];</code>
       */
      public float getFadeOut() {
        return fadeOut_;
      }

      private void initFields() {
        activity_ = 0;
        slot_ = 0;
        fadeIn_ = 0F;
        fadeOut_ = 0.1F;
      }
      private byte memoizedIsInitialized = -1;
      public final boolean isInitialized() {
        byte isInitialized = memoizedIsInitialized;
        if (isInitialized == 1) return true;
        if (isInitialized == 0) return false;

        memoizedIsInitialized = 1;
        return true;
      }

      public void writeTo(com.google.protobuf.CodedOutputStream output)
                          throws java.io.IOException {
        getSerializedSize();
        if (((bitField0_ & 0x00000001) == 0x00000001)) {
          output.writeInt32(1, activity_);
        }
        if (((bitField0_ & 0x00000002) == 0x00000002)) {
          output.writeInt32(2, slot_);
        }
        if (((bitField0_ & 0x00000004) == 0x00000004)) {
          output.writeFloat(3, fadeIn_);
        }
        if (((bitField0_ & 0x00000008) == 0x00000008)) {
          output.writeFloat(4, fadeOut_);
        }
        getUnknownFields().writeTo(output);
      }

      private int memoizedSerializedSize = -1;
      public int getSerializedSize() {
        int size = memoizedSerializedSize;
        if (size != -1) return size;

        size = 0;
        if (((bitField0_ & 0x00000001) == 0x00000001)) {
          size += com.google.protobuf.CodedOutputStream
            .computeInt32Size(1, activity_);
        }
        if (((bitField0_ & 0x00000002) == 0x00000002)) {
          size += com.google.protobuf.CodedOutputStream
            .computeInt32Size(2, slot_);
        }
        if (((bitField0_ & 0x00000004) == 0x00000004)) {
          size += com.google.protobuf.CodedOutputStream
            .computeFloatSize(3, fadeIn_);
        }
        if (((bitField0_ & 0x00000008) == 0x00000008)) {
          size += com.google.protobuf.CodedOutputStream
            .computeFloatSize(4, fadeOut_);
        }
        size += getUnknownFields().getSerializedSize();
        memoizedSerializedSize = size;
        return size;
      }

      private static final long serialVersionUID = 0L;
      @java.lang.Override
      protected java.lang.Object writeReplace()
          throws java.io.ObjectStreamException {
        return super.writeReplace();
      }

      public static skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_UnitEvent.AddGesture parseFrom(
          com.google.protobuf.ByteString data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_UnitEvent.AddGesture parseFrom(
          com.google.protobuf.ByteString data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_UnitEvent.AddGesture parseFrom(byte[] data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_UnitEvent.AddGesture parseFrom(
          byte[] data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_UnitEvent.AddGesture parseFrom(java.io.InputStream input)
          throws java.io.IOException {
        return PARSER.parseFrom(input);
      }
      public static skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_UnitEvent.AddGesture parseFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return PARSER.parseFrom(input, extensionRegistry);
      }
      public static skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_UnitEvent.AddGesture parseDelimitedFrom(java.io.InputStream input)
          throws java.io.IOException {
        return PARSER.parseDelimitedFrom(input);
      }
      public static skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_UnitEvent.AddGesture parseDelimitedFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return PARSER.parseDelimitedFrom(input, extensionRegistry);
      }
      public static skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_UnitEvent.AddGesture parseFrom(
          com.google.protobuf.CodedInputStream input)
          throws java.io.IOException {
        return PARSER.parseFrom(input);
      }
      public static skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_UnitEvent.AddGesture parseFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return PARSER.parseFrom(input, extensionRegistry);
      }

      public static Builder newBuilder() { return Builder.create(); }
      public Builder newBuilderForType() { return newBuilder(); }
      public static Builder newBuilder(skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_UnitEvent.AddGesture prototype) {
        return newBuilder().mergeFrom(prototype);
      }
      public Builder toBuilder() { return newBuilder(this); }

      @java.lang.Override
      protected Builder newBuilderForType(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        Builder builder = new Builder(parent);
        return builder;
      }
      /**
       * Protobuf type {@code CDOTAUserMsg_UnitEvent.AddGesture}
       */
      public static final class Builder extends
          com.google.protobuf.GeneratedMessage.Builder<Builder> implements
          // @@protoc_insertion_point(builder_implements:CDOTAUserMsg_UnitEvent.AddGesture)
          skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_UnitEvent.AddGestureOrBuilder {
        public static final com.google.protobuf.Descriptors.Descriptor
            getDescriptor() {
          return skadistats.clarity.wire.common.proto.DotaUserMessages.internal_static_CDOTAUserMsg_UnitEvent_AddGesture_descriptor;
        }

        protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
            internalGetFieldAccessorTable() {
          return skadistats.clarity.wire.common.proto.DotaUserMessages.internal_static_CDOTAUserMsg_UnitEvent_AddGesture_fieldAccessorTable
              .ensureFieldAccessorsInitialized(
                  skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_UnitEvent.AddGesture.class, skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_UnitEvent.AddGesture.Builder.class);
        }

        // Construct using skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_UnitEvent.AddGesture.newBuilder()
        private Builder() {
          maybeForceBuilderInitialization();
        }

        private Builder(
            com.google.protobuf.GeneratedMessage.BuilderParent parent) {
          super(parent);
          maybeForceBuilderInitialization();
        }
        private void maybeForceBuilderInitialization() {
          if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
          }
        }
        private static Builder create() {
          return new Builder();
        }

        public Builder clear() {
          super.clear();
          activity_ = 0;
          bitField0_ = (bitField0_ & ~0x00000001);
          slot_ = 0;
          bitField0_ = (bitField0_ & ~0x00000002);
          fadeIn_ = 0F;
          bitField0_ = (bitField0_ & ~0x00000004);
          fadeOut_ = 0.1F;
          bitField0_ = (bitField0_ & ~0x00000008);
          return this;
        }

        public Builder clone() {
          return create().mergeFrom(buildPartial());
        }

        public com.google.protobuf.Descriptors.Descriptor
            getDescriptorForType() {
          return skadistats.clarity.wire.common.proto.DotaUserMessages.internal_static_CDOTAUserMsg_UnitEvent_AddGesture_descriptor;
        }

        public skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_UnitEvent.AddGesture getDefaultInstanceForType() {
          return skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_UnitEvent.AddGesture.getDefaultInstance();
        }

        public skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_UnitEvent.AddGesture build() {
          skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_UnitEvent.AddGesture result = buildPartial();
          if (!result.isInitialized()) {
            throw newUninitializedMessageException(result);
          }
          return result;
        }

        public skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_UnitEvent.AddGesture buildPartial() {
          skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_UnitEvent.AddGesture result = new skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_UnitEvent.AddGesture(this);
          int from_bitField0_ = bitField0_;
          int to_bitField0_ = 0;
          if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
            to_bitField0_ |= 0x00000001;
          }
          result.activity_ = activity_;
          if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
            to_bitField0_ |= 0x00000002;
          }
          result.slot_ = slot_;
          if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
            to_bitField0_ |= 0x00000004;
          }
          result.fadeIn_ = fadeIn_;
          if (((from_bitField0_ & 0x00000008) == 0x00000008)) {
            to_bitField0_ |= 0x00000008;
          }
          result.fadeOut_ = fadeOut_;
          result.bitField0_ = to_bitField0_;
          onBuilt();
          return result;
        }

        public Builder mergeFrom(com.google.protobuf.Message other) {
          if (other instanceof skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_UnitEvent.AddGesture) {
            return mergeFrom((skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_UnitEvent.AddGesture)other);
          } else {
            super.mergeFrom(other);
            return this;
          }
        }

        public Builder mergeFrom(skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_UnitEvent.AddGesture other) {
          if (other == skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_UnitEvent.AddGesture.getDefaultInstance()) return this;
          if (other.hasActivity()) {
            setActivity(other.getActivity());
          }
          if (other.hasSlot()) {
            setSlot(other.getSlot());
          }
          if (other.hasFadeIn()) {
            setFadeIn(other.getFadeIn());
          }
          if (other.hasFadeOut()) {
            setFadeOut(other.getFadeOut());
          }
          this.mergeUnknownFields(other.getUnknownFields());
          return this;
        }

        public final boolean isInitialized() {
          return true;
        }

        public Builder mergeFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws java.io.IOException {
          skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_UnitEvent.AddGesture parsedMessage = null;
          try {
            parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
          } catch (com.google.protobuf.InvalidProtocolBufferException e) {
            parsedMessage = (skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_UnitEvent.AddGesture) e.getUnfinishedMessage();
            throw e;
          } finally {
            if (parsedMessage != null) {
              mergeFrom(parsedMessage);
            }
          }
          return this;
        }
        private int bitField0_;

        private int activity_ ;
        /**
         * <code>optional int32 activity = 1;</code>
         */
        public boolean hasActivity() {
          return ((bitField0_ & 0x00000001) == 0x00000001);
        }
        /**
         * <code>optional int32 activity = 1;</code>
         */
        public int getActivity() {
          return activity_;
        }
        /**
         * <code>optional int32 activity = 1;</code>
         */
        public Builder setActivity(int value) {
          bitField0_ |= 0x00000001;
          activity_ = value;
          onChanged();
          return this;
        }
        /**
         * <code>optional int32 activity = 1;</code>
         */
        public Builder clearActivity() {
          bitField0_ = (bitField0_ & ~0x00000001);
          activity_ = 0;
          onChanged();
          return this;
        }

        private int slot_ ;
        /**
         * <code>optional int32 slot = 2;</code>
         */
        public boolean hasSlot() {
          return ((bitField0_ & 0x00000002) == 0x00000002);
        }
        /**
         * <code>optional int32 slot = 2;</code>
         */
        public int getSlot() {
          return slot_;
        }
        /**
         * <code>optional int32 slot = 2;</code>
         */
        public Builder setSlot(int value) {
          bitField0_ |= 0x00000002;
          slot_ = value;
          onChanged();
          return this;
        }
        /**
         * <code>optional int32 slot = 2;</code>
         */
        public Builder clearSlot() {
          bitField0_ = (bitField0_ & ~0x00000002);
          slot_ = 0;
          onChanged();
          return this;
        }

        private float fadeIn_ ;
        /**
         * <code>optional float fade_in = 3 [default = 0];</code>
         */
        public boolean hasFadeIn() {
          return ((bitField0_ & 0x00000004) == 0x00000004);
        }
        /**
         * <code>optional float fade_in = 3 [default = 0];</code>
         */
        public float getFadeIn() {
          return fadeIn_;
        }
        /**
         * <code>optional float fade_in = 3 [default = 0];</code>
         */
        public Builder setFadeIn(float value) {
          bitField0_ |= 0x00000004;
          fadeIn_ = value;
          onChanged();
          return this;
        }
        /**
         * <code>optional float fade_in = 3 [default = 0];</code>
         */
        public Builder clearFadeIn() {
          bitField0_ = (bitField0_ & ~0x00000004);
          fadeIn_ = 0F;
          onChanged();
          return this;
        }

        private float fadeOut_ = 0.1F;
        /**
         * <code>optional float fade_out = 4 [default = 0.1];</code>
         */
        public boolean hasFadeOut() {
          return ((bitField0_ & 0x00000008) == 0x00000008);
        }
        /**
         * <code>optional float fade_out = 4 [default = 0.1];</code>
         */
        public float getFadeOut() {
          return fadeOut_;
        }
        /**
         * <code>optional float fade_out = 4 [default = 0.1];</code>
         */
        public Builder setFadeOut(float value) {
          bitField0_ |= 0x00000008;
          fadeOut_ = value;
          onChanged();
          return this;
        }
        /**
         * <code>optional float fade_out = 4 [default = 0.1];</code>
         */
        public Builder clearFadeOut() {
          bitField0_ = (bitField0_ & ~0x00000008);
          fadeOut_ = 0.1F;
          onChanged();
          return this;
        }

        // @@protoc_insertion_point(builder_scope:CDOTAUserMsg_UnitEvent.AddGesture)
      }

      static {
        defaultInstance = new AddGesture(true);
        defaultInstance.initFields();
      }

      // @@protoc_insertion_point(class_scope:CDOTAUserMsg_UnitEvent.AddGesture)
    }

    public interface RemoveGestureOrBuilder extends
        // @@protoc_insertion_point(interface_extends:CDOTAUserMsg_UnitEvent.RemoveGesture)
        com.google.protobuf.MessageOrBuilder {

      /**
       * <code>optional int32 activity = 1;</code>
       */
      boolean hasActivity();
      /**
       * <code>optional int32 activity = 1;</code>
       */
      int getActivity();
    }
    /**
     * Protobuf type {@code CDOTAUserMsg_UnitEvent.RemoveGesture}
     */
    public static final class RemoveGesture extends
        com.google.protobuf.GeneratedMessage implements
        // @@protoc_insertion_point(message_implements:CDOTAUserMsg_UnitEvent.RemoveGesture)
        RemoveGestureOrBuilder {
      // Use RemoveGesture.newBuilder() to construct.
      private RemoveGesture(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
        super(builder);
        this.unknownFields = builder.getUnknownFields();
      }
      private RemoveGesture(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

      private static final RemoveGesture defaultInstance;
      public static RemoveGesture getDefaultInstance() {
        return defaultInstance;
      }

      public RemoveGesture getDefaultInstanceForType() {
        return defaultInstance;
      }

      private final com.google.protobuf.UnknownFieldSet unknownFields;
      @java.lang.Override
      public final com.google.protobuf.UnknownFieldSet
          getUnknownFields() {
        return this.unknownFields;
      }
      private RemoveGesture(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        initFields();
        int mutable_bitField0_ = 0;
        com.google.protobuf.UnknownFieldSet.Builder unknownFields =
            com.google.protobuf.UnknownFieldSet.newBuilder();
        try {
          boolean done = false;
          while (!done) {
            int tag = input.readTag();
            switch (tag) {
              case 0:
                done = true;
                break;
              default: {
                if (!parseUnknownField(input, unknownFields,
                                       extensionRegistry, tag)) {
                  done = true;
                }
                break;
              }
              case 8: {
                bitField0_ |= 0x00000001;
                activity_ = input.readInt32();
                break;
              }
            }
          }
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.setUnfinishedMessage(this);
        } catch (java.io.IOException e) {
          throw new com.google.protobuf.InvalidProtocolBufferException(
              e.getMessage()).setUnfinishedMessage(this);
        } finally {
          this.unknownFields = unknownFields.build();
          makeExtensionsImmutable();
        }
      }
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return skadistats.clarity.wire.common.proto.DotaUserMessages.internal_static_CDOTAUserMsg_UnitEvent_RemoveGesture_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return skadistats.clarity.wire.common.proto.DotaUserMessages.internal_static_CDOTAUserMsg_UnitEvent_RemoveGesture_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_UnitEvent.RemoveGesture.class, skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_UnitEvent.RemoveGesture.Builder.class);
      }

      public static com.google.protobuf.Parser<RemoveGesture> PARSER =
          new com.google.protobuf.AbstractParser<RemoveGesture>() {
        public RemoveGesture parsePartialFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws com.google.protobuf.InvalidProtocolBufferException {
          return new RemoveGesture(input, extensionRegistry);
        }
      };

      @java.lang.Override
      public com.google.protobuf.Parser<RemoveGesture> getParserForType() {
        return PARSER;
      }

      private int bitField0_;
      public static final int ACTIVITY_FIELD_NUMBER = 1;
      private int activity_;
      /**
       * <code>optional int32 activity = 1;</code>
       */
      public boolean hasActivity() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>optional int32 activity = 1;</code>
       */
      public int getActivity() {
        return activity_;
      }

      private void initFields() {
        activity_ = 0;
      }
      private byte memoizedIsInitialized = -1;
      public final boolean isInitialized() {
        byte isInitialized = memoizedIsInitialized;
        if (isInitialized == 1) return true;
        if (isInitialized == 0) return false;

        memoizedIsInitialized = 1;
        return true;
      }

      public void writeTo(com.google.protobuf.CodedOutputStream output)
                          throws java.io.IOException {
        getSerializedSize();
        if (((bitField0_ & 0x00000001) == 0x00000001)) {
          output.writeInt32(1, activity_);
        }
        getUnknownFields().writeTo(output);
      }

      private int memoizedSerializedSize = -1;
      public int getSerializedSize() {
        int size = memoizedSerializedSize;
        if (size != -1) return size;

        size = 0;
        if (((bitField0_ & 0x00000001) == 0x00000001)) {
          size += com.google.protobuf.CodedOutputStream
            .computeInt32Size(1, activity_);
        }
        size += getUnknownFields().getSerializedSize();
        memoizedSerializedSize = size;
        return size;
      }

      private static final long serialVersionUID = 0L;
      @java.lang.Override
      protected java.lang.Object writeReplace()
          throws java.io.ObjectStreamException {
        return super.writeReplace();
      }

      public static skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_UnitEvent.RemoveGesture parseFrom(
          com.google.protobuf.ByteString data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_UnitEvent.RemoveGesture parseFrom(
          com.google.protobuf.ByteString data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_UnitEvent.RemoveGesture parseFrom(byte[] data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_UnitEvent.RemoveGesture parseFrom(
          byte[] data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_UnitEvent.RemoveGesture parseFrom(java.io.InputStream input)
          throws java.io.IOException {
        return PARSER.parseFrom(input);
      }
      public static skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_UnitEvent.RemoveGesture parseFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return PARSER.parseFrom(input, extensionRegistry);
      }
      public static skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_UnitEvent.RemoveGesture parseDelimitedFrom(java.io.InputStream input)
          throws java.io.IOException {
        return PARSER.parseDelimitedFrom(input);
      }
      public static skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_UnitEvent.RemoveGesture parseDelimitedFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return PARSER.parseDelimitedFrom(input, extensionRegistry);
      }
      public static skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_UnitEvent.RemoveGesture parseFrom(
          com.google.protobuf.CodedInputStream input)
          throws java.io.IOException {
        return PARSER.parseFrom(input);
      }
      public static skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_UnitEvent.RemoveGesture parseFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return PARSER.parseFrom(input, extensionRegistry);
      }

      public static Builder newBuilder() { return Builder.create(); }
      public Builder newBuilderForType() { return newBuilder(); }
      public static Builder newBuilder(skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_UnitEvent.RemoveGesture prototype) {
        return newBuilder().mergeFrom(prototype);
      }
      public Builder toBuilder() { return newBuilder(this); }

      @java.lang.Override
      protected Builder newBuilderForType(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        Builder builder = new Builder(parent);
        return builder;
      }
      /**
       * Protobuf type {@code CDOTAUserMsg_UnitEvent.RemoveGesture}
       */
      public static final class Builder extends
          com.google.protobuf.GeneratedMessage.Builder<Builder> implements
          // @@protoc_insertion_point(builder_implements:CDOTAUserMsg_UnitEvent.RemoveGesture)
          skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_UnitEvent.RemoveGestureOrBuilder {
        public static final com.google.protobuf.Descriptors.Descriptor
            getDescriptor() {
          return skadistats.clarity.wire.common.proto.DotaUserMessages.internal_static_CDOTAUserMsg_UnitEvent_RemoveGesture_descriptor;
        }

        protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
            internalGetFieldAccessorTable() {
          return skadistats.clarity.wire.common.proto.DotaUserMessages.internal_static_CDOTAUserMsg_UnitEvent_RemoveGesture_fieldAccessorTable
              .ensureFieldAccessorsInitialized(
                  skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_UnitEvent.RemoveGesture.class, skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_UnitEvent.RemoveGesture.Builder.class);
        }

        // Construct using skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_UnitEvent.RemoveGesture.newBuilder()
        private Builder() {
          maybeForceBuilderInitialization();
        }

        private Builder(
            com.google.protobuf.GeneratedMessage.BuilderParent parent) {
          super(parent);
          maybeForceBuilderInitialization();
        }
        private void maybeForceBuilderInitialization() {
          if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
          }
        }
        private static Builder create() {
          return new Builder();
        }

        public Builder clear() {
          super.clear();
          activity_ = 0;
          bitField0_ = (bitField0_ & ~0x00000001);
          return this;
        }

        public Builder clone() {
          return create().mergeFrom(buildPartial());
        }

        public com.google.protobuf.Descriptors.Descriptor
            getDescriptorForType() {
          return skadistats.clarity.wire.common.proto.DotaUserMessages.internal_static_CDOTAUserMsg_UnitEvent_RemoveGesture_descriptor;
        }

        public skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_UnitEvent.RemoveGesture getDefaultInstanceForType() {
          return skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_UnitEvent.RemoveGesture.getDefaultInstance();
        }

        public skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_UnitEvent.RemoveGesture build() {
          skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_UnitEvent.RemoveGesture result = buildPartial();
          if (!result.isInitialized()) {
            throw newUninitializedMessageException(result);
          }
          return result;
        }

        public skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_UnitEvent.RemoveGesture buildPartial() {
          skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_UnitEvent.RemoveGesture result = new skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_UnitEvent.RemoveGesture(this);
          int from_bitField0_ = bitField0_;
          int to_bitField0_ = 0;
          if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
            to_bitField0_ |= 0x00000001;
          }
          result.activity_ = activity_;
          result.bitField0_ = to_bitField0_;
          onBuilt();
          return result;
        }

        public Builder mergeFrom(com.google.protobuf.Message other) {
          if (other instanceof skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_UnitEvent.RemoveGesture) {
            return mergeFrom((skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_UnitEvent.RemoveGesture)other);
          } else {
            super.mergeFrom(other);
            return this;
          }
        }

        public Builder mergeFrom(skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_UnitEvent.RemoveGesture other) {
          if (other == skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_UnitEvent.RemoveGesture.getDefaultInstance()) return this;
          if (other.hasActivity()) {
            setActivity(other.getActivity());
          }
          this.mergeUnknownFields(other.getUnknownFields());
          return this;
        }

        public final boolean isInitialized() {
          return true;
        }

        public Builder mergeFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws java.io.IOException {
          skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_UnitEvent.RemoveGesture parsedMessage = null;
          try {
            parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
          } catch (com.google.protobuf.InvalidProtocolBufferException e) {
            parsedMessage = (skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_UnitEvent.RemoveGesture) e.getUnfinishedMessage();
            throw e;
          } finally {
            if (parsedMessage != null) {
              mergeFrom(parsedMessage);
            }
          }
          return this;
        }
        private int bitField0_;

        private int activity_ ;
        /**
         * <code>optional int32 activity = 1;</code>
         */
        public boolean hasActivity() {
          return ((bitField0_ & 0x00000001) == 0x00000001);
        }
        /**
         * <code>optional int32 activity = 1;</code>
         */
        public int getActivity() {
          return activity_;
        }
        /**
         * <code>optional int32 activity = 1;</code>
         */
        public Builder setActivity(int value) {
          bitField0_ |= 0x00000001;
          activity_ = value;
          onChanged();
          return this;
        }
        /**
         * <code>optional int32 activity = 1;</code>
         */
        public Builder clearActivity() {
          bitField0_ = (bitField0_ & ~0x00000001);
          activity_ = 0;
          onChanged();
          return this;
        }

        // @@protoc_insertion_point(builder_scope:CDOTAUserMsg_UnitEvent.RemoveGesture)
      }

      static {
        defaultInstance = new RemoveGesture(true);
        defaultInstance.initFields();
      }

      // @@protoc_insertion_point(class_scope:CDOTAUserMsg_UnitEvent.RemoveGesture)
    }

    public interface BloodImpactOrBuilder extends
        // @@protoc_insertion_point(interface_extends:CDOTAUserMsg_UnitEvent.BloodImpact)
        com.google.protobuf.MessageOrBuilder {

      /**
       * <code>optional int32 scale = 1;</code>
       */
      boolean hasScale();
      /**
       * <code>optional int32 scale = 1;</code>
       */
      int getScale();

      /**
       * <code>optional int32 x_normal = 2;</code>
       */
      boolean hasXNormal();
      /**
       * <code>optional int32 x_normal = 2;</code>
       */
      int getXNormal();

      /**
       * <code>optional int32 y_normal = 3;</code>
       */
      boolean hasYNormal();
      /**
       * <code>optional int32 y_normal = 3;</code>
       */
      int getYNormal();
    }
    /**
     * Protobuf type {@code CDOTAUserMsg_UnitEvent.BloodImpact}
     */
    public static final class BloodImpact extends
        com.google.protobuf.GeneratedMessage implements
        // @@protoc_insertion_point(message_implements:CDOTAUserMsg_UnitEvent.BloodImpact)
        BloodImpactOrBuilder {
      // Use BloodImpact.newBuilder() to construct.
      private BloodImpact(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
        super(builder);
        this.unknownFields = builder.getUnknownFields();
      }
      private BloodImpact(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

      private static final BloodImpact defaultInstance;
      public static BloodImpact getDefaultInstance() {
        return defaultInstance;
      }

      public BloodImpact getDefaultInstanceForType() {
        return defaultInstance;
      }

      private final com.google.protobuf.UnknownFieldSet unknownFields;
      @java.lang.Override
      public final com.google.protobuf.UnknownFieldSet
          getUnknownFields() {
        return this.unknownFields;
      }
      private BloodImpact(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        initFields();
        int mutable_bitField0_ = 0;
        com.google.protobuf.UnknownFieldSet.Builder unknownFields =
            com.google.protobuf.UnknownFieldSet.newBuilder();
        try {
          boolean done = false;
          while (!done) {
            int tag = input.readTag();
            switch (tag) {
              case 0:
                done = true;
                break;
              default: {
                if (!parseUnknownField(input, unknownFields,
                                       extensionRegistry, tag)) {
                  done = true;
                }
                break;
              }
              case 8: {
                bitField0_ |= 0x00000001;
                scale_ = input.readInt32();
                break;
              }
              case 16: {
                bitField0_ |= 0x00000002;
                xNormal_ = input.readInt32();
                break;
              }
              case 24: {
                bitField0_ |= 0x00000004;
                yNormal_ = input.readInt32();
                break;
              }
            }
          }
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.setUnfinishedMessage(this);
        } catch (java.io.IOException e) {
          throw new com.google.protobuf.InvalidProtocolBufferException(
              e.getMessage()).setUnfinishedMessage(this);
        } finally {
          this.unknownFields = unknownFields.build();
          makeExtensionsImmutable();
        }
      }
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return skadistats.clarity.wire.common.proto.DotaUserMessages.internal_static_CDOTAUserMsg_UnitEvent_BloodImpact_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return skadistats.clarity.wire.common.proto.DotaUserMessages.internal_static_CDOTAUserMsg_UnitEvent_BloodImpact_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_UnitEvent.BloodImpact.class, skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_UnitEvent.BloodImpact.Builder.class);
      }

      public static com.google.protobuf.Parser<BloodImpact> PARSER =
          new com.google.protobuf.AbstractParser<BloodImpact>() {
        public BloodImpact parsePartialFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws com.google.protobuf.InvalidProtocolBufferException {
          return new BloodImpact(input, extensionRegistry);
        }
      };

      @java.lang.Override
      public com.google.protobuf.Parser<BloodImpact> getParserForType() {
        return PARSER;
      }

      private int bitField0_;
      public static final int SCALE_FIELD_NUMBER = 1;
      private int scale_;
      /**
       * <code>optional int32 scale = 1;</code>
       */
      public boolean hasScale() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>optional int32 scale = 1;</code>
       */
      public int getScale() {
        return scale_;
      }

      public static final int X_NORMAL_FIELD_NUMBER = 2;
      private int xNormal_;
      /**
       * <code>optional int32 x_normal = 2;</code>
       */
      public boolean hasXNormal() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>optional int32 x_normal = 2;</code>
       */
      public int getXNormal() {
        return xNormal_;
      }

      public static final int Y_NORMAL_FIELD_NUMBER = 3;
      private int yNormal_;
      /**
       * <code>optional int32 y_normal = 3;</code>
       */
      public boolean hasYNormal() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }
      /**
       * <code>optional int32 y_normal = 3;</code>
       */
      public int getYNormal() {
        return yNormal_;
      }

      private void initFields() {
        scale_ = 0;
        xNormal_ = 0;
        yNormal_ = 0;
      }
      private byte memoizedIsInitialized = -1;
      public final boolean isInitialized() {
        byte isInitialized = memoizedIsInitialized;
        if (isInitialized == 1) return true;
        if (isInitialized == 0) return false;

        memoizedIsInitialized = 1;
        return true;
      }

      public void writeTo(com.google.protobuf.CodedOutputStream output)
                          throws java.io.IOException {
        getSerializedSize();
        if (((bitField0_ & 0x00000001) == 0x00000001)) {
          output.writeInt32(1, scale_);
        }
        if (((bitField0_ & 0x00000002) == 0x00000002)) {
          output.writeInt32(2, xNormal_);
        }
        if (((bitField0_ & 0x00000004) == 0x00000004)) {
          output.writeInt32(3, yNormal_);
        }
        getUnknownFields().writeTo(output);
      }

      private int memoizedSerializedSize = -1;
      public int getSerializedSize() {
        int size = memoizedSerializedSize;
        if (size != -1) return size;

        size = 0;
        if (((bitField0_ & 0x00000001) == 0x00000001)) {
          size += com.google.protobuf.CodedOutputStream
            .computeInt32Size(1, scale_);
        }
        if (((bitField0_ & 0x00000002) == 0x00000002)) {
          size += com.google.protobuf.CodedOutputStream
            .computeInt32Size(2, xNormal_);
        }
        if (((bitField0_ & 0x00000004) == 0x00000004)) {
          size += com.google.protobuf.CodedOutputStream
            .computeInt32Size(3, yNormal_);
        }
        size += getUnknownFields().getSerializedSize();
        memoizedSerializedSize = size;
        return size;
      }

      private static final long serialVersionUID = 0L;
      @java.lang.Override
      protected java.lang.Object writeReplace()
          throws java.io.ObjectStreamException {
        return super.writeReplace();
      }

      public static skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_UnitEvent.BloodImpact parseFrom(
          com.google.protobuf.ByteString data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_UnitEvent.BloodImpact parseFrom(
          com.google.protobuf.ByteString data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_UnitEvent.BloodImpact parseFrom(byte[] data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_UnitEvent.BloodImpact parseFrom(
          byte[] data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_UnitEvent.BloodImpact parseFrom(java.io.InputStream input)
          throws java.io.IOException {
        return PARSER.parseFrom(input);
      }
      public static skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_UnitEvent.BloodImpact parseFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return PARSER.parseFrom(input, extensionRegistry);
      }
      public static skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_UnitEvent.BloodImpact parseDelimitedFrom(java.io.InputStream input)
          throws java.io.IOException {
        return PARSER.parseDelimitedFrom(input);
      }
      public static skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_UnitEvent.BloodImpact parseDelimitedFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return PARSER.parseDelimitedFrom(input, extensionRegistry);
      }
      public static skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_UnitEvent.BloodImpact parseFrom(
          com.google.protobuf.CodedInputStream input)
          throws java.io.IOException {
        return PARSER.parseFrom(input);
      }
      public static skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_UnitEvent.BloodImpact parseFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return PARSER.parseFrom(input, extensionRegistry);
      }

      public static Builder newBuilder() { return Builder.create(); }
      public Builder newBuilderForType() { return newBuilder(); }
      public static Builder newBuilder(skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_UnitEvent.BloodImpact prototype) {
        return newBuilder().mergeFrom(prototype);
      }
      public Builder toBuilder() { return newBuilder(this); }

      @java.lang.Override
      protected Builder newBuilderForType(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        Builder builder = new Builder(parent);
        return builder;
      }
      /**
       * Protobuf type {@code CDOTAUserMsg_UnitEvent.BloodImpact}
       */
      public static final class Builder extends
          com.google.protobuf.GeneratedMessage.Builder<Builder> implements
          // @@protoc_insertion_point(builder_implements:CDOTAUserMsg_UnitEvent.BloodImpact)
          skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_UnitEvent.BloodImpactOrBuilder {
        public static final com.google.protobuf.Descriptors.Descriptor
            getDescriptor() {
          return skadistats.clarity.wire.common.proto.DotaUserMessages.internal_static_CDOTAUserMsg_UnitEvent_BloodImpact_descriptor;
        }

        protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
            internalGetFieldAccessorTable() {
          return skadistats.clarity.wire.common.proto.DotaUserMessages.internal_static_CDOTAUserMsg_UnitEvent_BloodImpact_fieldAccessorTable
              .ensureFieldAccessorsInitialized(
                  skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_UnitEvent.BloodImpact.class, skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_UnitEvent.BloodImpact.Builder.class);
        }

        // Construct using skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_UnitEvent.BloodImpact.newBuilder()
        private Builder() {
          maybeForceBuilderInitialization();
        }

        private Builder(
            com.google.protobuf.GeneratedMessage.BuilderParent parent) {
          super(parent);
          maybeForceBuilderInitialization();
        }
        private void maybeForceBuilderInitialization() {
          if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
          }
        }
        private static Builder create() {
          return new Builder();
        }

        public Builder clear() {
          super.clear();
          scale_ = 0;
          bitField0_ = (bitField0_ & ~0x00000001);
          xNormal_ = 0;
          bitField0_ = (bitField0_ & ~0x00000002);
          yNormal_ = 0;
          bitField0_ = (bitField0_ & ~0x00000004);
          return this;
        }

        public Builder clone() {
          return create().mergeFrom(buildPartial());
        }

        public com.google.protobuf.Descriptors.Descriptor
            getDescriptorForType() {
          return skadistats.clarity.wire.common.proto.DotaUserMessages.internal_static_CDOTAUserMsg_UnitEvent_BloodImpact_descriptor;
        }

        public skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_UnitEvent.BloodImpact getDefaultInstanceForType() {
          return skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_UnitEvent.BloodImpact.getDefaultInstance();
        }

        public skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_UnitEvent.BloodImpact build() {
          skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_UnitEvent.BloodImpact result = buildPartial();
          if (!result.isInitialized()) {
            throw newUninitializedMessageException(result);
          }
          return result;
        }

        public skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_UnitEvent.BloodImpact buildPartial() {
          skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_UnitEvent.BloodImpact result = new skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_UnitEvent.BloodImpact(this);
          int from_bitField0_ = bitField0_;
          int to_bitField0_ = 0;
          if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
            to_bitField0_ |= 0x00000001;
          }
          result.scale_ = scale_;
          if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
            to_bitField0_ |= 0x00000002;
          }
          result.xNormal_ = xNormal_;
          if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
            to_bitField0_ |= 0x00000004;
          }
          result.yNormal_ = yNormal_;
          result.bitField0_ = to_bitField0_;
          onBuilt();
          return result;
        }

        public Builder mergeFrom(com.google.protobuf.Message other) {
          if (other instanceof skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_UnitEvent.BloodImpact) {
            return mergeFrom((skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_UnitEvent.BloodImpact)other);
          } else {
            super.mergeFrom(other);
            return this;
          }
        }

        public Builder mergeFrom(skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_UnitEvent.BloodImpact other) {
          if (other == skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_UnitEvent.BloodImpact.getDefaultInstance()) return this;
          if (other.hasScale()) {
            setScale(other.getScale());
          }
          if (other.hasXNormal()) {
            setXNormal(other.getXNormal());
          }
          if (other.hasYNormal()) {
            setYNormal(other.getYNormal());
          }
          this.mergeUnknownFields(other.getUnknownFields());
          return this;
        }

        public final boolean isInitialized() {
          return true;
        }

        public Builder mergeFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws java.io.IOException {
          skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_UnitEvent.BloodImpact parsedMessage = null;
          try {
            parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
          } catch (com.google.protobuf.InvalidProtocolBufferException e) {
            parsedMessage = (skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_UnitEvent.BloodImpact) e.getUnfinishedMessage();
            throw e;
          } finally {
            if (parsedMessage != null) {
              mergeFrom(parsedMessage);
            }
          }
          return this;
        }
        private int bitField0_;

        private int scale_ ;
        /**
         * <code>optional int32 scale = 1;</code>
         */
        public boolean hasScale() {
          return ((bitField0_ & 0x00000001) == 0x00000001);
        }
        /**
         * <code>optional int32 scale = 1;</code>
         */
        public int getScale() {
          return scale_;
        }
        /**
         * <code>optional int32 scale = 1;</code>
         */
        public Builder setScale(int value) {
          bitField0_ |= 0x00000001;
          scale_ = value;
          onChanged();
          return this;
        }
        /**
         * <code>optional int32 scale = 1;</code>
         */
        public Builder clearScale() {
          bitField0_ = (bitField0_ & ~0x00000001);
          scale_ = 0;
          onChanged();
          return this;
        }

        private int xNormal_ ;
        /**
         * <code>optional int32 x_normal = 2;</code>
         */
        public boolean hasXNormal() {
          return ((bitField0_ & 0x00000002) == 0x00000002);
        }
        /**
         * <code>optional int32 x_normal = 2;</code>
         */
        public int getXNormal() {
          return xNormal_;
        }
        /**
         * <code>optional int32 x_normal = 2;</code>
         */
        public Builder setXNormal(int value) {
          bitField0_ |= 0x00000002;
          xNormal_ = value;
          onChanged();
          return this;
        }
        /**
         * <code>optional int32 x_normal = 2;</code>
         */
        public Builder clearXNormal() {
          bitField0_ = (bitField0_ & ~0x00000002);
          xNormal_ = 0;
          onChanged();
          return this;
        }

        private int yNormal_ ;
        /**
         * <code>optional int32 y_normal = 3;</code>
         */
        public boolean hasYNormal() {
          return ((bitField0_ & 0x00000004) == 0x00000004);
        }
        /**
         * <code>optional int32 y_normal = 3;</code>
         */
        public int getYNormal() {
          return yNormal_;
        }
        /**
         * <code>optional int32 y_normal = 3;</code>
         */
        public Builder setYNormal(int value) {
          bitField0_ |= 0x00000004;
          yNormal_ = value;
          onChanged();
          return this;
        }
        /**
         * <code>optional int32 y_normal = 3;</code>
         */
        public Builder clearYNormal() {
          bitField0_ = (bitField0_ & ~0x00000004);
          yNormal_ = 0;
          onChanged();
          return this;
        }

        // @@protoc_insertion_point(builder_scope:CDOTAUserMsg_UnitEvent.BloodImpact)
      }

      static {
        defaultInstance = new BloodImpact(true);
        defaultInstance.initFields();
      }

      // @@protoc_insertion_point(class_scope:CDOTAUserMsg_UnitEvent.BloodImpact)
    }

    public interface FadeGestureOrBuilder extends
        // @@protoc_insertion_point(interface_extends:CDOTAUserMsg_UnitEvent.FadeGesture)
        com.google.protobuf.MessageOrBuilder {

      /**
       * <code>optional int32 activity = 1;</code>
       */
      boolean hasActivity();
      /**
       * <code>optional int32 activity = 1;</code>
       */
      int getActivity();
    }
    /**
     * Protobuf type {@code CDOTAUserMsg_UnitEvent.FadeGesture}
     */
    public static final class FadeGesture extends
        com.google.protobuf.GeneratedMessage implements
        // @@protoc_insertion_point(message_implements:CDOTAUserMsg_UnitEvent.FadeGesture)
        FadeGestureOrBuilder {
      // Use FadeGesture.newBuilder() to construct.
      private FadeGesture(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
        super(builder);
        this.unknownFields = builder.getUnknownFields();
      }
      private FadeGesture(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

      private static final FadeGesture defaultInstance;
      public static FadeGesture getDefaultInstance() {
        return defaultInstance;
      }

      public FadeGesture getDefaultInstanceForType() {
        return defaultInstance;
      }

      private final com.google.protobuf.UnknownFieldSet unknownFields;
      @java.lang.Override
      public final com.google.protobuf.UnknownFieldSet
          getUnknownFields() {
        return this.unknownFields;
      }
      private FadeGesture(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        initFields();
        int mutable_bitField0_ = 0;
        com.google.protobuf.UnknownFieldSet.Builder unknownFields =
            com.google.protobuf.UnknownFieldSet.newBuilder();
        try {
          boolean done = false;
          while (!done) {
            int tag = input.readTag();
            switch (tag) {
              case 0:
                done = true;
                break;
              default: {
                if (!parseUnknownField(input, unknownFields,
                                       extensionRegistry, tag)) {
                  done = true;
                }
                break;
              }
              case 8: {
                bitField0_ |= 0x00000001;
                activity_ = input.readInt32();
                break;
              }
            }
          }
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.setUnfinishedMessage(this);
        } catch (java.io.IOException e) {
          throw new com.google.protobuf.InvalidProtocolBufferException(
              e.getMessage()).setUnfinishedMessage(this);
        } finally {
          this.unknownFields = unknownFields.build();
          makeExtensionsImmutable();
        }
      }
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return skadistats.clarity.wire.common.proto.DotaUserMessages.internal_static_CDOTAUserMsg_UnitEvent_FadeGesture_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return skadistats.clarity.wire.common.proto.DotaUserMessages.internal_static_CDOTAUserMsg_UnitEvent_FadeGesture_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_UnitEvent.FadeGesture.class, skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_UnitEvent.FadeGesture.Builder.class);
      }

      public static com.google.protobuf.Parser<FadeGesture> PARSER =
          new com.google.protobuf.AbstractParser<FadeGesture>() {
        public FadeGesture parsePartialFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws com.google.protobuf.InvalidProtocolBufferException {
          return new FadeGesture(input, extensionRegistry);
        }
      };

      @java.lang.Override
      public com.google.protobuf.Parser<FadeGesture> getParserForType() {
        return PARSER;
      }

      private int bitField0_;
      public static final int ACTIVITY_FIELD_NUMBER = 1;
      private int activity_;
      /**
       * <code>optional int32 activity = 1;</code>
       */
      public boolean hasActivity() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>optional int32 activity = 1;</code>
       */
      public int getActivity() {
        return activity_;
      }

      private void initFields() {
        activity_ = 0;
      }
      private byte memoizedIsInitialized = -1;
      public final boolean isInitialized() {
        byte isInitialized = memoizedIsInitialized;
        if (isInitialized == 1) return true;
        if (isInitialized == 0) return false;

        memoizedIsInitialized = 1;
        return true;
      }

      public void writeTo(com.google.protobuf.CodedOutputStream output)
                          throws java.io.IOException {
        getSerializedSize();
        if (((bitField0_ & 0x00000001) == 0x00000001)) {
          output.writeInt32(1, activity_);
        }
        getUnknownFields().writeTo(output);
      }

      private int memoizedSerializedSize = -1;
      public int getSerializedSize() {
        int size = memoizedSerializedSize;
        if (size != -1) return size;

        size = 0;
        if (((bitField0_ & 0x00000001) == 0x00000001)) {
          size += com.google.protobuf.CodedOutputStream
            .computeInt32Size(1, activity_);
        }
        size += getUnknownFields().getSerializedSize();
        memoizedSerializedSize = size;
        return size;
      }

      private static final long serialVersionUID = 0L;
      @java.lang.Override
      protected java.lang.Object writeReplace()
          throws java.io.ObjectStreamException {
        return super.writeReplace();
      }

      public static skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_UnitEvent.FadeGesture parseFrom(
          com.google.protobuf.ByteString data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_UnitEvent.FadeGesture parseFrom(
          com.google.protobuf.ByteString data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_UnitEvent.FadeGesture parseFrom(byte[] data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_UnitEvent.FadeGesture parseFrom(
          byte[] data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_UnitEvent.FadeGesture parseFrom(java.io.InputStream input)
          throws java.io.IOException {
        return PARSER.parseFrom(input);
      }
      public static skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_UnitEvent.FadeGesture parseFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return PARSER.parseFrom(input, extensionRegistry);
      }
      public static skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_UnitEvent.FadeGesture parseDelimitedFrom(java.io.InputStream input)
          throws java.io.IOException {
        return PARSER.parseDelimitedFrom(input);
      }
      public static skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_UnitEvent.FadeGesture parseDelimitedFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return PARSER.parseDelimitedFrom(input, extensionRegistry);
      }
      public static skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_UnitEvent.FadeGesture parseFrom(
          com.google.protobuf.CodedInputStream input)
          throws java.io.IOException {
        return PARSER.parseFrom(input);
      }
      public static skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_UnitEvent.FadeGesture parseFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return PARSER.parseFrom(input, extensionRegistry);
      }

      public static Builder newBuilder() { return Builder.create(); }
      public Builder newBuilderForType() { return newBuilder(); }
      public static Builder newBuilder(skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_UnitEvent.FadeGesture prototype) {
        return newBuilder().mergeFrom(prototype);
      }
      public Builder toBuilder() { return newBuilder(this); }

      @java.lang.Override
      protected Builder newBuilderForType(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        Builder builder = new Builder(parent);
        return builder;
      }
      /**
       * Protobuf type {@code CDOTAUserMsg_UnitEvent.FadeGesture}
       */
      public static final class Builder extends
          com.google.protobuf.GeneratedMessage.Builder<Builder> implements
          // @@protoc_insertion_point(builder_implements:CDOTAUserMsg_UnitEvent.FadeGesture)
          skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_UnitEvent.FadeGestureOrBuilder {
        public static final com.google.protobuf.Descriptors.Descriptor
            getDescriptor() {
          return skadistats.clarity.wire.common.proto.DotaUserMessages.internal_static_CDOTAUserMsg_UnitEvent_FadeGesture_descriptor;
        }

        protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
            internalGetFieldAccessorTable() {
          return skadistats.clarity.wire.common.proto.DotaUserMessages.internal_static_CDOTAUserMsg_UnitEvent_FadeGesture_fieldAccessorTable
              .ensureFieldAccessorsInitialized(
                  skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_UnitEvent.FadeGesture.class, skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_UnitEvent.FadeGesture.Builder.class);
        }

        // Construct using skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_UnitEvent.FadeGesture.newBuilder()
        private Builder() {
          maybeForceBuilderInitialization();
        }

        private Builder(
            com.google.protobuf.GeneratedMessage.BuilderParent parent) {
          super(parent);
          maybeForceBuilderInitialization();
        }
        private void maybeForceBuilderInitialization() {
          if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
          }
        }
        private static Builder create() {
          return new Builder();
        }

        public Builder clear() {
          super.clear();
          activity_ = 0;
          bitField0_ = (bitField0_ & ~0x00000001);
          return this;
        }

        public Builder clone() {
          return create().mergeFrom(buildPartial());
        }

        public com.google.protobuf.Descriptors.Descriptor
            getDescriptorForType() {
          return skadistats.clarity.wire.common.proto.DotaUserMessages.internal_static_CDOTAUserMsg_UnitEvent_FadeGesture_descriptor;
        }

        public skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_UnitEvent.FadeGesture getDefaultInstanceForType() {
          return skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_UnitEvent.FadeGesture.getDefaultInstance();
        }

        public skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_UnitEvent.FadeGesture build() {
          skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_UnitEvent.FadeGesture result = buildPartial();
          if (!result.isInitialized()) {
            throw newUninitializedMessageException(result);
          }
          return result;
        }

        public skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_UnitEvent.FadeGesture buildPartial() {
          skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_UnitEvent.FadeGesture result = new skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_UnitEvent.FadeGesture(this);
          int from_bitField0_ = bitField0_;
          int to_bitField0_ = 0;
          if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
            to_bitField0_ |= 0x00000001;
          }
          result.activity_ = activity_;
          result.bitField0_ = to_bitField0_;
          onBuilt();
          return result;
        }

        public Builder mergeFrom(com.google.protobuf.Message other) {
          if (other instanceof skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_UnitEvent.FadeGesture) {
            return mergeFrom((skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_UnitEvent.FadeGesture)other);
          } else {
            super.mergeFrom(other);
            return this;
          }
        }

        public Builder mergeFrom(skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_UnitEvent.FadeGesture other) {
          if (other == skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_UnitEvent.FadeGesture.getDefaultInstance()) return this;
          if (other.hasActivity()) {
            setActivity(other.getActivity());
          }
          this.mergeUnknownFields(other.getUnknownFields());
          return this;
        }

        public final boolean isInitialized() {
          return true;
        }

        public Builder mergeFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws java.io.IOException {
          skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_UnitEvent.FadeGesture parsedMessage = null;
          try {
            parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
          } catch (com.google.protobuf.InvalidProtocolBufferException e) {
            parsedMessage = (skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_UnitEvent.FadeGesture) e.getUnfinishedMessage();
            throw e;
          } finally {
            if (parsedMessage != null) {
              mergeFrom(parsedMessage);
            }
          }
          return this;
        }
        private int bitField0_;

        private int activity_ ;
        /**
         * <code>optional int32 activity = 1;</code>
         */
        public boolean hasActivity() {
          return ((bitField0_ & 0x00000001) == 0x00000001);
        }
        /**
         * <code>optional int32 activity = 1;</code>
         */
        public int getActivity() {
          return activity_;
        }
        /**
         * <code>optional int32 activity = 1;</code>
         */
        public Builder setActivity(int value) {
          bitField0_ |= 0x00000001;
          activity_ = value;
          onChanged();
          return this;
        }
        /**
         * <code>optional int32 activity = 1;</code>
         */
        public Builder clearActivity() {
          bitField0_ = (bitField0_ & ~0x00000001);
          activity_ = 0;
          onChanged();
          return this;
        }

        // @@protoc_insertion_point(builder_scope:CDOTAUserMsg_UnitEvent.FadeGesture)
      }

      static {
        defaultInstance = new FadeGesture(true);
        defaultInstance.initFields();
      }

      // @@protoc_insertion_point(class_scope:CDOTAUserMsg_UnitEvent.FadeGesture)
    }

    private int bitField0_;
    public static final int MSG_TYPE_FIELD_NUMBER = 1;
    private skadistats.clarity.wire.common.proto.DotaUserMessages.EDotaEntityMessages msgType_;
    /**
     * <code>required .EDotaEntityMessages msg_type = 1 [default = DOTA_UNIT_SPEECH];</code>
     */
    public boolean hasMsgType() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>required .EDotaEntityMessages msg_type = 1 [default = DOTA_UNIT_SPEECH];</code>
     */
    public skadistats.clarity.wire.common.proto.DotaUserMessages.EDotaEntityMessages getMsgType() {
      return msgType_;
    }

    public static final int ENTITY_INDEX_FIELD_NUMBER = 2;
    private int entityIndex_;
    /**
     * <code>required int32 entity_index = 2;</code>
     */
    public boolean hasEntityIndex() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>required int32 entity_index = 2;</code>
     */
    public int getEntityIndex() {
      return entityIndex_;
    }

    public static final int SPEECH_FIELD_NUMBER = 3;
    private skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_UnitEvent.Speech speech_;
    /**
     * <code>optional .CDOTAUserMsg_UnitEvent.Speech speech = 3;</code>
     */
    public boolean hasSpeech() {
      return ((bitField0_ & 0x00000004) == 0x00000004);
    }
    /**
     * <code>optional .CDOTAUserMsg_UnitEvent.Speech speech = 3;</code>
     */
    public skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_UnitEvent.Speech getSpeech() {
      return speech_;
    }
    /**
     * <code>optional .CDOTAUserMsg_UnitEvent.Speech speech = 3;</code>
     */
    public skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_UnitEvent.SpeechOrBuilder getSpeechOrBuilder() {
      return speech_;
    }

    public static final int SPEECH_MUTE_FIELD_NUMBER = 4;
    private skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_UnitEvent.SpeechMute speechMute_;
    /**
     * <code>optional .CDOTAUserMsg_UnitEvent.SpeechMute speech_mute = 4;</code>
     */
    public boolean hasSpeechMute() {
      return ((bitField0_ & 0x00000008) == 0x00000008);
    }
    /**
     * <code>optional .CDOTAUserMsg_UnitEvent.SpeechMute speech_mute = 4;</code>
     */
    public skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_UnitEvent.SpeechMute getSpeechMute() {
      return speechMute_;
    }
    /**
     * <code>optional .CDOTAUserMsg_UnitEvent.SpeechMute speech_mute = 4;</code>
     */
    public skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_UnitEvent.SpeechMuteOrBuilder getSpeechMuteOrBuilder() {
      return speechMute_;
    }

    public static final int ADD_GESTURE_FIELD_NUMBER = 5;
    private skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_UnitEvent.AddGesture addGesture_;
    /**
     * <code>optional .CDOTAUserMsg_UnitEvent.AddGesture add_gesture = 5;</code>
     */
    public boolean hasAddGesture() {
      return ((bitField0_ & 0x00000010) == 0x00000010);
    }
    /**
     * <code>optional .CDOTAUserMsg_UnitEvent.AddGesture add_gesture = 5;</code>
     */
    public skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_UnitEvent.AddGesture getAddGesture() {
      return addGesture_;
    }
    /**
     * <code>optional .CDOTAUserMsg_UnitEvent.AddGesture add_gesture = 5;</code>
     */
    public skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_UnitEvent.AddGestureOrBuilder getAddGestureOrBuilder() {
      return addGesture_;
    }

    public static final int REMOVE_GESTURE_FIELD_NUMBER = 6;
    private skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_UnitEvent.RemoveGesture removeGesture_;
    /**
     * <code>optional .CDOTAUserMsg_UnitEvent.RemoveGesture remove_gesture = 6;</code>
     */
    public boolean hasRemoveGesture() {
      return ((bitField0_ & 0x00000020) == 0x00000020);
    }
    /**
     * <code>optional .CDOTAUserMsg_UnitEvent.RemoveGesture remove_gesture = 6;</code>
     */
    public skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_UnitEvent.RemoveGesture getRemoveGesture() {
      return removeGesture_;
    }
    /**
     * <code>optional .CDOTAUserMsg_UnitEvent.RemoveGesture remove_gesture = 6;</code>
     */
    public skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_UnitEvent.RemoveGestureOrBuilder getRemoveGestureOrBuilder() {
      return removeGesture_;
    }

    public static final int BLOOD_IMPACT_FIELD_NUMBER = 7;
    private skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_UnitEvent.BloodImpact bloodImpact_;
    /**
     * <code>optional .CDOTAUserMsg_UnitEvent.BloodImpact blood_impact = 7;</code>
     */
    public boolean hasBloodImpact() {
      return ((bitField0_ & 0x00000040) == 0x00000040);
    }
    /**
     * <code>optional .CDOTAUserMsg_UnitEvent.BloodImpact blood_impact = 7;</code>
     */
    public skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_UnitEvent.BloodImpact getBloodImpact() {
      return bloodImpact_;
    }
    /**
     * <code>optional .CDOTAUserMsg_UnitEvent.BloodImpact blood_impact = 7;</code>
     */
    public skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_UnitEvent.BloodImpactOrBuilder getBloodImpactOrBuilder() {
      return bloodImpact_;
    }

    public static final int FADE_GESTURE_FIELD_NUMBER = 8;
    private skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_UnitEvent.FadeGesture fadeGesture_;
    /**
     * <code>optional .CDOTAUserMsg_UnitEvent.FadeGesture fade_gesture = 8;</code>
     */
    public boolean hasFadeGesture() {
      return ((bitField0_ & 0x00000080) == 0x00000080);
    }
    /**
     * <code>optional .CDOTAUserMsg_UnitEvent.FadeGesture fade_gesture = 8;</code>
     */
    public skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_UnitEvent.FadeGesture getFadeGesture() {
      return fadeGesture_;
    }
    /**
     * <code>optional .CDOTAUserMsg_UnitEvent.FadeGesture fade_gesture = 8;</code>
     */
    public skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_UnitEvent.FadeGestureOrBuilder getFadeGestureOrBuilder() {
      return fadeGesture_;
    }

    public static final int SPEECH_MATCH_ON_CLIENT_FIELD_NUMBER = 9;
    private skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTASpeechMatchOnClient speechMatchOnClient_;
    /**
     * <code>optional .CDOTASpeechMatchOnClient speech_match_on_client = 9;</code>
     */
    public boolean hasSpeechMatchOnClient() {
      return ((bitField0_ & 0x00000100) == 0x00000100);
    }
    /**
     * <code>optional .CDOTASpeechMatchOnClient speech_match_on_client = 9;</code>
     */
    public skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTASpeechMatchOnClient getSpeechMatchOnClient() {
      return speechMatchOnClient_;
    }
    /**
     * <code>optional .CDOTASpeechMatchOnClient speech_match_on_client = 9;</code>
     */
    public skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTASpeechMatchOnClientOrBuilder getSpeechMatchOnClientOrBuilder() {
      return speechMatchOnClient_;
    }

    private void initFields() {
      msgType_ = skadistats.clarity.wire.common.proto.DotaUserMessages.EDotaEntityMessages.DOTA_UNIT_SPEECH;
      entityIndex_ = 0;
      speech_ = skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_UnitEvent.Speech.getDefaultInstance();
      speechMute_ = skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_UnitEvent.SpeechMute.getDefaultInstance();
      addGesture_ = skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_UnitEvent.AddGesture.getDefaultInstance();
      removeGesture_ = skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_UnitEvent.RemoveGesture.getDefaultInstance();
      bloodImpact_ = skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_UnitEvent.BloodImpact.getDefaultInstance();
      fadeGesture_ = skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_UnitEvent.FadeGesture.getDefaultInstance();
      speechMatchOnClient_ = skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTASpeechMatchOnClient.getDefaultInstance();
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      if (!hasMsgType()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasEntityIndex()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (hasSpeechMatchOnClient()) {
        if (!getSpeechMatchOnClient().isInitialized()) {
          memoizedIsInitialized = 0;
          return false;
        }
      }
      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeEnum(1, msgType_.getNumber());
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeInt32(2, entityIndex_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        output.writeMessage(3, speech_);
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        output.writeMessage(4, speechMute_);
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        output.writeMessage(5, addGesture_);
      }
      if (((bitField0_ & 0x00000020) == 0x00000020)) {
        output.writeMessage(6, removeGesture_);
      }
      if (((bitField0_ & 0x00000040) == 0x00000040)) {
        output.writeMessage(7, bloodImpact_);
      }
      if (((bitField0_ & 0x00000080) == 0x00000080)) {
        output.writeMessage(8, fadeGesture_);
      }
      if (((bitField0_ & 0x00000100) == 0x00000100)) {
        output.writeMessage(9, speechMatchOnClient_);
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeEnumSize(1, msgType_.getNumber());
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(2, entityIndex_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(3, speech_);
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(4, speechMute_);
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(5, addGesture_);
      }
      if (((bitField0_ & 0x00000020) == 0x00000020)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(6, removeGesture_);
      }
      if (((bitField0_ & 0x00000040) == 0x00000040)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(7, bloodImpact_);
      }
      if (((bitField0_ & 0x00000080) == 0x00000080)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(8, fadeGesture_);
      }
      if (((bitField0_ & 0x00000100) == 0x00000100)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(9, speechMatchOnClient_);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_UnitEvent parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_UnitEvent parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_UnitEvent parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_UnitEvent parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_UnitEvent parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_UnitEvent parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_UnitEvent parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_UnitEvent parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_UnitEvent parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_UnitEvent parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_UnitEvent prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code CDOTAUserMsg_UnitEvent}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:CDOTAUserMsg_UnitEvent)
        skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_UnitEventOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return skadistats.clarity.wire.common.proto.DotaUserMessages.internal_static_CDOTAUserMsg_UnitEvent_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return skadistats.clarity.wire.common.proto.DotaUserMessages.internal_static_CDOTAUserMsg_UnitEvent_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_UnitEvent.class, skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_UnitEvent.Builder.class);
      }

      // Construct using skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_UnitEvent.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
          getSpeechFieldBuilder();
          getSpeechMuteFieldBuilder();
          getAddGestureFieldBuilder();
          getRemoveGestureFieldBuilder();
          getBloodImpactFieldBuilder();
          getFadeGestureFieldBuilder();
          getSpeechMatchOnClientFieldBuilder();
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        msgType_ = skadistats.clarity.wire.common.proto.DotaUserMessages.EDotaEntityMessages.DOTA_UNIT_SPEECH;
        bitField0_ = (bitField0_ & ~0x00000001);
        entityIndex_ = 0;
        bitField0_ = (bitField0_ & ~0x00000002);
        if (speechBuilder_ == null) {
          speech_ = skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_UnitEvent.Speech.getDefaultInstance();
        } else {
          speechBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000004);
        if (speechMuteBuilder_ == null) {
          speechMute_ = skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_UnitEvent.SpeechMute.getDefaultInstance();
        } else {
          speechMuteBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000008);
        if (addGestureBuilder_ == null) {
          addGesture_ = skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_UnitEvent.AddGesture.getDefaultInstance();
        } else {
          addGestureBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000010);
        if (removeGestureBuilder_ == null) {
          removeGesture_ = skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_UnitEvent.RemoveGesture.getDefaultInstance();
        } else {
          removeGestureBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000020);
        if (bloodImpactBuilder_ == null) {
          bloodImpact_ = skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_UnitEvent.BloodImpact.getDefaultInstance();
        } else {
          bloodImpactBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000040);
        if (fadeGestureBuilder_ == null) {
          fadeGesture_ = skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_UnitEvent.FadeGesture.getDefaultInstance();
        } else {
          fadeGestureBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000080);
        if (speechMatchOnClientBuilder_ == null) {
          speechMatchOnClient_ = skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTASpeechMatchOnClient.getDefaultInstance();
        } else {
          speechMatchOnClientBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000100);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return skadistats.clarity.wire.common.proto.DotaUserMessages.internal_static_CDOTAUserMsg_UnitEvent_descriptor;
      }

      public skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_UnitEvent getDefaultInstanceForType() {
        return skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_UnitEvent.getDefaultInstance();
      }

      public skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_UnitEvent build() {
        skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_UnitEvent result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_UnitEvent buildPartial() {
        skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_UnitEvent result = new skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_UnitEvent(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.msgType_ = msgType_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.entityIndex_ = entityIndex_;
        if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
          to_bitField0_ |= 0x00000004;
        }
        if (speechBuilder_ == null) {
          result.speech_ = speech_;
        } else {
          result.speech_ = speechBuilder_.build();
        }
        if (((from_bitField0_ & 0x00000008) == 0x00000008)) {
          to_bitField0_ |= 0x00000008;
        }
        if (speechMuteBuilder_ == null) {
          result.speechMute_ = speechMute_;
        } else {
          result.speechMute_ = speechMuteBuilder_.build();
        }
        if (((from_bitField0_ & 0x00000010) == 0x00000010)) {
          to_bitField0_ |= 0x00000010;
        }
        if (addGestureBuilder_ == null) {
          result.addGesture_ = addGesture_;
        } else {
          result.addGesture_ = addGestureBuilder_.build();
        }
        if (((from_bitField0_ & 0x00000020) == 0x00000020)) {
          to_bitField0_ |= 0x00000020;
        }
        if (removeGestureBuilder_ == null) {
          result.removeGesture_ = removeGesture_;
        } else {
          result.removeGesture_ = removeGestureBuilder_.build();
        }
        if (((from_bitField0_ & 0x00000040) == 0x00000040)) {
          to_bitField0_ |= 0x00000040;
        }
        if (bloodImpactBuilder_ == null) {
          result.bloodImpact_ = bloodImpact_;
        } else {
          result.bloodImpact_ = bloodImpactBuilder_.build();
        }
        if (((from_bitField0_ & 0x00000080) == 0x00000080)) {
          to_bitField0_ |= 0x00000080;
        }
        if (fadeGestureBuilder_ == null) {
          result.fadeGesture_ = fadeGesture_;
        } else {
          result.fadeGesture_ = fadeGestureBuilder_.build();
        }
        if (((from_bitField0_ & 0x00000100) == 0x00000100)) {
          to_bitField0_ |= 0x00000100;
        }
        if (speechMatchOnClientBuilder_ == null) {
          result.speechMatchOnClient_ = speechMatchOnClient_;
        } else {
          result.speechMatchOnClient_ = speechMatchOnClientBuilder_.build();
        }
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_UnitEvent) {
          return mergeFrom((skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_UnitEvent)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_UnitEvent other) {
        if (other == skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_UnitEvent.getDefaultInstance()) return this;
        if (other.hasMsgType()) {
          setMsgType(other.getMsgType());
        }
        if (other.hasEntityIndex()) {
          setEntityIndex(other.getEntityIndex());
        }
        if (other.hasSpeech()) {
          mergeSpeech(other.getSpeech());
        }
        if (other.hasSpeechMute()) {
          mergeSpeechMute(other.getSpeechMute());
        }
        if (other.hasAddGesture()) {
          mergeAddGesture(other.getAddGesture());
        }
        if (other.hasRemoveGesture()) {
          mergeRemoveGesture(other.getRemoveGesture());
        }
        if (other.hasBloodImpact()) {
          mergeBloodImpact(other.getBloodImpact());
        }
        if (other.hasFadeGesture()) {
          mergeFadeGesture(other.getFadeGesture());
        }
        if (other.hasSpeechMatchOnClient()) {
          mergeSpeechMatchOnClient(other.getSpeechMatchOnClient());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        if (!hasMsgType()) {
          
          return false;
        }
        if (!hasEntityIndex()) {
          
          return false;
        }
        if (hasSpeechMatchOnClient()) {
          if (!getSpeechMatchOnClient().isInitialized()) {
            
            return false;
          }
        }
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_UnitEvent parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_UnitEvent) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private skadistats.clarity.wire.common.proto.DotaUserMessages.EDotaEntityMessages msgType_ = skadistats.clarity.wire.common.proto.DotaUserMessages.EDotaEntityMessages.DOTA_UNIT_SPEECH;
      /**
       * <code>required .EDotaEntityMessages msg_type = 1 [default = DOTA_UNIT_SPEECH];</code>
       */
      public boolean hasMsgType() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>required .EDotaEntityMessages msg_type = 1 [default = DOTA_UNIT_SPEECH];</code>
       */
      public skadistats.clarity.wire.common.proto.DotaUserMessages.EDotaEntityMessages getMsgType() {
        return msgType_;
      }
      /**
       * <code>required .EDotaEntityMessages msg_type = 1 [default = DOTA_UNIT_SPEECH];</code>
       */
      public Builder setMsgType(skadistats.clarity.wire.common.proto.DotaUserMessages.EDotaEntityMessages value) {
        if (value == null) {
          throw new NullPointerException();
        }
        bitField0_ |= 0x00000001;
        msgType_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required .EDotaEntityMessages msg_type = 1 [default = DOTA_UNIT_SPEECH];</code>
       */
      public Builder clearMsgType() {
        bitField0_ = (bitField0_ & ~0x00000001);
        msgType_ = skadistats.clarity.wire.common.proto.DotaUserMessages.EDotaEntityMessages.DOTA_UNIT_SPEECH;
        onChanged();
        return this;
      }

      private int entityIndex_ ;
      /**
       * <code>required int32 entity_index = 2;</code>
       */
      public boolean hasEntityIndex() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>required int32 entity_index = 2;</code>
       */
      public int getEntityIndex() {
        return entityIndex_;
      }
      /**
       * <code>required int32 entity_index = 2;</code>
       */
      public Builder setEntityIndex(int value) {
        bitField0_ |= 0x00000002;
        entityIndex_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required int32 entity_index = 2;</code>
       */
      public Builder clearEntityIndex() {
        bitField0_ = (bitField0_ & ~0x00000002);
        entityIndex_ = 0;
        onChanged();
        return this;
      }

      private skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_UnitEvent.Speech speech_ = skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_UnitEvent.Speech.getDefaultInstance();
      private com.google.protobuf.SingleFieldBuilder<
          skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_UnitEvent.Speech, skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_UnitEvent.Speech.Builder, skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_UnitEvent.SpeechOrBuilder> speechBuilder_;
      /**
       * <code>optional .CDOTAUserMsg_UnitEvent.Speech speech = 3;</code>
       */
      public boolean hasSpeech() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }
      /**
       * <code>optional .CDOTAUserMsg_UnitEvent.Speech speech = 3;</code>
       */
      public skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_UnitEvent.Speech getSpeech() {
        if (speechBuilder_ == null) {
          return speech_;
        } else {
          return speechBuilder_.getMessage();
        }
      }
      /**
       * <code>optional .CDOTAUserMsg_UnitEvent.Speech speech = 3;</code>
       */
      public Builder setSpeech(skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_UnitEvent.Speech value) {
        if (speechBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          speech_ = value;
          onChanged();
        } else {
          speechBuilder_.setMessage(value);
        }
        bitField0_ |= 0x00000004;
        return this;
      }
      /**
       * <code>optional .CDOTAUserMsg_UnitEvent.Speech speech = 3;</code>
       */
      public Builder setSpeech(
          skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_UnitEvent.Speech.Builder builderForValue) {
        if (speechBuilder_ == null) {
          speech_ = builderForValue.build();
          onChanged();
        } else {
          speechBuilder_.setMessage(builderForValue.build());
        }
        bitField0_ |= 0x00000004;
        return this;
      }
      /**
       * <code>optional .CDOTAUserMsg_UnitEvent.Speech speech = 3;</code>
       */
      public Builder mergeSpeech(skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_UnitEvent.Speech value) {
        if (speechBuilder_ == null) {
          if (((bitField0_ & 0x00000004) == 0x00000004) &&
              speech_ != skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_UnitEvent.Speech.getDefaultInstance()) {
            speech_ =
              skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_UnitEvent.Speech.newBuilder(speech_).mergeFrom(value).buildPartial();
          } else {
            speech_ = value;
          }
          onChanged();
        } else {
          speechBuilder_.mergeFrom(value);
        }
        bitField0_ |= 0x00000004;
        return this;
      }
      /**
       * <code>optional .CDOTAUserMsg_UnitEvent.Speech speech = 3;</code>
       */
      public Builder clearSpeech() {
        if (speechBuilder_ == null) {
          speech_ = skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_UnitEvent.Speech.getDefaultInstance();
          onChanged();
        } else {
          speechBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000004);
        return this;
      }
      /**
       * <code>optional .CDOTAUserMsg_UnitEvent.Speech speech = 3;</code>
       */
      public skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_UnitEvent.Speech.Builder getSpeechBuilder() {
        bitField0_ |= 0x00000004;
        onChanged();
        return getSpeechFieldBuilder().getBuilder();
      }
      /**
       * <code>optional .CDOTAUserMsg_UnitEvent.Speech speech = 3;</code>
       */
      public skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_UnitEvent.SpeechOrBuilder getSpeechOrBuilder() {
        if (speechBuilder_ != null) {
          return speechBuilder_.getMessageOrBuilder();
        } else {
          return speech_;
        }
      }
      /**
       * <code>optional .CDOTAUserMsg_UnitEvent.Speech speech = 3;</code>
       */
      private com.google.protobuf.SingleFieldBuilder<
          skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_UnitEvent.Speech, skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_UnitEvent.Speech.Builder, skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_UnitEvent.SpeechOrBuilder> 
          getSpeechFieldBuilder() {
        if (speechBuilder_ == null) {
          speechBuilder_ = new com.google.protobuf.SingleFieldBuilder<
              skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_UnitEvent.Speech, skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_UnitEvent.Speech.Builder, skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_UnitEvent.SpeechOrBuilder>(
                  getSpeech(),
                  getParentForChildren(),
                  isClean());
          speech_ = null;
        }
        return speechBuilder_;
      }

      private skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_UnitEvent.SpeechMute speechMute_ = skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_UnitEvent.SpeechMute.getDefaultInstance();
      private com.google.protobuf.SingleFieldBuilder<
          skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_UnitEvent.SpeechMute, skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_UnitEvent.SpeechMute.Builder, skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_UnitEvent.SpeechMuteOrBuilder> speechMuteBuilder_;
      /**
       * <code>optional .CDOTAUserMsg_UnitEvent.SpeechMute speech_mute = 4;</code>
       */
      public boolean hasSpeechMute() {
        return ((bitField0_ & 0x00000008) == 0x00000008);
      }
      /**
       * <code>optional .CDOTAUserMsg_UnitEvent.SpeechMute speech_mute = 4;</code>
       */
      public skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_UnitEvent.SpeechMute getSpeechMute() {
        if (speechMuteBuilder_ == null) {
          return speechMute_;
        } else {
          return speechMuteBuilder_.getMessage();
        }
      }
      /**
       * <code>optional .CDOTAUserMsg_UnitEvent.SpeechMute speech_mute = 4;</code>
       */
      public Builder setSpeechMute(skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_UnitEvent.SpeechMute value) {
        if (speechMuteBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          speechMute_ = value;
          onChanged();
        } else {
          speechMuteBuilder_.setMessage(value);
        }
        bitField0_ |= 0x00000008;
        return this;
      }
      /**
       * <code>optional .CDOTAUserMsg_UnitEvent.SpeechMute speech_mute = 4;</code>
       */
      public Builder setSpeechMute(
          skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_UnitEvent.SpeechMute.Builder builderForValue) {
        if (speechMuteBuilder_ == null) {
          speechMute_ = builderForValue.build();
          onChanged();
        } else {
          speechMuteBuilder_.setMessage(builderForValue.build());
        }
        bitField0_ |= 0x00000008;
        return this;
      }
      /**
       * <code>optional .CDOTAUserMsg_UnitEvent.SpeechMute speech_mute = 4;</code>
       */
      public Builder mergeSpeechMute(skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_UnitEvent.SpeechMute value) {
        if (speechMuteBuilder_ == null) {
          if (((bitField0_ & 0x00000008) == 0x00000008) &&
              speechMute_ != skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_UnitEvent.SpeechMute.getDefaultInstance()) {
            speechMute_ =
              skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_UnitEvent.SpeechMute.newBuilder(speechMute_).mergeFrom(value).buildPartial();
          } else {
            speechMute_ = value;
          }
          onChanged();
        } else {
          speechMuteBuilder_.mergeFrom(value);
        }
        bitField0_ |= 0x00000008;
        return this;
      }
      /**
       * <code>optional .CDOTAUserMsg_UnitEvent.SpeechMute speech_mute = 4;</code>
       */
      public Builder clearSpeechMute() {
        if (speechMuteBuilder_ == null) {
          speechMute_ = skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_UnitEvent.SpeechMute.getDefaultInstance();
          onChanged();
        } else {
          speechMuteBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000008);
        return this;
      }
      /**
       * <code>optional .CDOTAUserMsg_UnitEvent.SpeechMute speech_mute = 4;</code>
       */
      public skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_UnitEvent.SpeechMute.Builder getSpeechMuteBuilder() {
        bitField0_ |= 0x00000008;
        onChanged();
        return getSpeechMuteFieldBuilder().getBuilder();
      }
      /**
       * <code>optional .CDOTAUserMsg_UnitEvent.SpeechMute speech_mute = 4;</code>
       */
      public skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_UnitEvent.SpeechMuteOrBuilder getSpeechMuteOrBuilder() {
        if (speechMuteBuilder_ != null) {
          return speechMuteBuilder_.getMessageOrBuilder();
        } else {
          return speechMute_;
        }
      }
      /**
       * <code>optional .CDOTAUserMsg_UnitEvent.SpeechMute speech_mute = 4;</code>
       */
      private com.google.protobuf.SingleFieldBuilder<
          skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_UnitEvent.SpeechMute, skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_UnitEvent.SpeechMute.Builder, skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_UnitEvent.SpeechMuteOrBuilder> 
          getSpeechMuteFieldBuilder() {
        if (speechMuteBuilder_ == null) {
          speechMuteBuilder_ = new com.google.protobuf.SingleFieldBuilder<
              skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_UnitEvent.SpeechMute, skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_UnitEvent.SpeechMute.Builder, skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_UnitEvent.SpeechMuteOrBuilder>(
                  getSpeechMute(),
                  getParentForChildren(),
                  isClean());
          speechMute_ = null;
        }
        return speechMuteBuilder_;
      }

      private skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_UnitEvent.AddGesture addGesture_ = skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_UnitEvent.AddGesture.getDefaultInstance();
      private com.google.protobuf.SingleFieldBuilder<
          skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_UnitEvent.AddGesture, skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_UnitEvent.AddGesture.Builder, skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_UnitEvent.AddGestureOrBuilder> addGestureBuilder_;
      /**
       * <code>optional .CDOTAUserMsg_UnitEvent.AddGesture add_gesture = 5;</code>
       */
      public boolean hasAddGesture() {
        return ((bitField0_ & 0x00000010) == 0x00000010);
      }
      /**
       * <code>optional .CDOTAUserMsg_UnitEvent.AddGesture add_gesture = 5;</code>
       */
      public skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_UnitEvent.AddGesture getAddGesture() {
        if (addGestureBuilder_ == null) {
          return addGesture_;
        } else {
          return addGestureBuilder_.getMessage();
        }
      }
      /**
       * <code>optional .CDOTAUserMsg_UnitEvent.AddGesture add_gesture = 5;</code>
       */
      public Builder setAddGesture(skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_UnitEvent.AddGesture value) {
        if (addGestureBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          addGesture_ = value;
          onChanged();
        } else {
          addGestureBuilder_.setMessage(value);
        }
        bitField0_ |= 0x00000010;
        return this;
      }
      /**
       * <code>optional .CDOTAUserMsg_UnitEvent.AddGesture add_gesture = 5;</code>
       */
      public Builder setAddGesture(
          skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_UnitEvent.AddGesture.Builder builderForValue) {
        if (addGestureBuilder_ == null) {
          addGesture_ = builderForValue.build();
          onChanged();
        } else {
          addGestureBuilder_.setMessage(builderForValue.build());
        }
        bitField0_ |= 0x00000010;
        return this;
      }
      /**
       * <code>optional .CDOTAUserMsg_UnitEvent.AddGesture add_gesture = 5;</code>
       */
      public Builder mergeAddGesture(skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_UnitEvent.AddGesture value) {
        if (addGestureBuilder_ == null) {
          if (((bitField0_ & 0x00000010) == 0x00000010) &&
              addGesture_ != skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_UnitEvent.AddGesture.getDefaultInstance()) {
            addGesture_ =
              skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_UnitEvent.AddGesture.newBuilder(addGesture_).mergeFrom(value).buildPartial();
          } else {
            addGesture_ = value;
          }
          onChanged();
        } else {
          addGestureBuilder_.mergeFrom(value);
        }
        bitField0_ |= 0x00000010;
        return this;
      }
      /**
       * <code>optional .CDOTAUserMsg_UnitEvent.AddGesture add_gesture = 5;</code>
       */
      public Builder clearAddGesture() {
        if (addGestureBuilder_ == null) {
          addGesture_ = skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_UnitEvent.AddGesture.getDefaultInstance();
          onChanged();
        } else {
          addGestureBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000010);
        return this;
      }
      /**
       * <code>optional .CDOTAUserMsg_UnitEvent.AddGesture add_gesture = 5;</code>
       */
      public skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_UnitEvent.AddGesture.Builder getAddGestureBuilder() {
        bitField0_ |= 0x00000010;
        onChanged();
        return getAddGestureFieldBuilder().getBuilder();
      }
      /**
       * <code>optional .CDOTAUserMsg_UnitEvent.AddGesture add_gesture = 5;</code>
       */
      public skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_UnitEvent.AddGestureOrBuilder getAddGestureOrBuilder() {
        if (addGestureBuilder_ != null) {
          return addGestureBuilder_.getMessageOrBuilder();
        } else {
          return addGesture_;
        }
      }
      /**
       * <code>optional .CDOTAUserMsg_UnitEvent.AddGesture add_gesture = 5;</code>
       */
      private com.google.protobuf.SingleFieldBuilder<
          skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_UnitEvent.AddGesture, skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_UnitEvent.AddGesture.Builder, skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_UnitEvent.AddGestureOrBuilder> 
          getAddGestureFieldBuilder() {
        if (addGestureBuilder_ == null) {
          addGestureBuilder_ = new com.google.protobuf.SingleFieldBuilder<
              skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_UnitEvent.AddGesture, skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_UnitEvent.AddGesture.Builder, skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_UnitEvent.AddGestureOrBuilder>(
                  getAddGesture(),
                  getParentForChildren(),
                  isClean());
          addGesture_ = null;
        }
        return addGestureBuilder_;
      }

      private skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_UnitEvent.RemoveGesture removeGesture_ = skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_UnitEvent.RemoveGesture.getDefaultInstance();
      private com.google.protobuf.SingleFieldBuilder<
          skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_UnitEvent.RemoveGesture, skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_UnitEvent.RemoveGesture.Builder, skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_UnitEvent.RemoveGestureOrBuilder> removeGestureBuilder_;
      /**
       * <code>optional .CDOTAUserMsg_UnitEvent.RemoveGesture remove_gesture = 6;</code>
       */
      public boolean hasRemoveGesture() {
        return ((bitField0_ & 0x00000020) == 0x00000020);
      }
      /**
       * <code>optional .CDOTAUserMsg_UnitEvent.RemoveGesture remove_gesture = 6;</code>
       */
      public skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_UnitEvent.RemoveGesture getRemoveGesture() {
        if (removeGestureBuilder_ == null) {
          return removeGesture_;
        } else {
          return removeGestureBuilder_.getMessage();
        }
      }
      /**
       * <code>optional .CDOTAUserMsg_UnitEvent.RemoveGesture remove_gesture = 6;</code>
       */
      public Builder setRemoveGesture(skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_UnitEvent.RemoveGesture value) {
        if (removeGestureBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          removeGesture_ = value;
          onChanged();
        } else {
          removeGestureBuilder_.setMessage(value);
        }
        bitField0_ |= 0x00000020;
        return this;
      }
      /**
       * <code>optional .CDOTAUserMsg_UnitEvent.RemoveGesture remove_gesture = 6;</code>
       */
      public Builder setRemoveGesture(
          skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_UnitEvent.RemoveGesture.Builder builderForValue) {
        if (removeGestureBuilder_ == null) {
          removeGesture_ = builderForValue.build();
          onChanged();
        } else {
          removeGestureBuilder_.setMessage(builderForValue.build());
        }
        bitField0_ |= 0x00000020;
        return this;
      }
      /**
       * <code>optional .CDOTAUserMsg_UnitEvent.RemoveGesture remove_gesture = 6;</code>
       */
      public Builder mergeRemoveGesture(skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_UnitEvent.RemoveGesture value) {
        if (removeGestureBuilder_ == null) {
          if (((bitField0_ & 0x00000020) == 0x00000020) &&
              removeGesture_ != skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_UnitEvent.RemoveGesture.getDefaultInstance()) {
            removeGesture_ =
              skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_UnitEvent.RemoveGesture.newBuilder(removeGesture_).mergeFrom(value).buildPartial();
          } else {
            removeGesture_ = value;
          }
          onChanged();
        } else {
          removeGestureBuilder_.mergeFrom(value);
        }
        bitField0_ |= 0x00000020;
        return this;
      }
      /**
       * <code>optional .CDOTAUserMsg_UnitEvent.RemoveGesture remove_gesture = 6;</code>
       */
      public Builder clearRemoveGesture() {
        if (removeGestureBuilder_ == null) {
          removeGesture_ = skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_UnitEvent.RemoveGesture.getDefaultInstance();
          onChanged();
        } else {
          removeGestureBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000020);
        return this;
      }
      /**
       * <code>optional .CDOTAUserMsg_UnitEvent.RemoveGesture remove_gesture = 6;</code>
       */
      public skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_UnitEvent.RemoveGesture.Builder getRemoveGestureBuilder() {
        bitField0_ |= 0x00000020;
        onChanged();
        return getRemoveGestureFieldBuilder().getBuilder();
      }
      /**
       * <code>optional .CDOTAUserMsg_UnitEvent.RemoveGesture remove_gesture = 6;</code>
       */
      public skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_UnitEvent.RemoveGestureOrBuilder getRemoveGestureOrBuilder() {
        if (removeGestureBuilder_ != null) {
          return removeGestureBuilder_.getMessageOrBuilder();
        } else {
          return removeGesture_;
        }
      }
      /**
       * <code>optional .CDOTAUserMsg_UnitEvent.RemoveGesture remove_gesture = 6;</code>
       */
      private com.google.protobuf.SingleFieldBuilder<
          skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_UnitEvent.RemoveGesture, skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_UnitEvent.RemoveGesture.Builder, skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_UnitEvent.RemoveGestureOrBuilder> 
          getRemoveGestureFieldBuilder() {
        if (removeGestureBuilder_ == null) {
          removeGestureBuilder_ = new com.google.protobuf.SingleFieldBuilder<
              skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_UnitEvent.RemoveGesture, skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_UnitEvent.RemoveGesture.Builder, skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_UnitEvent.RemoveGestureOrBuilder>(
                  getRemoveGesture(),
                  getParentForChildren(),
                  isClean());
          removeGesture_ = null;
        }
        return removeGestureBuilder_;
      }

      private skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_UnitEvent.BloodImpact bloodImpact_ = skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_UnitEvent.BloodImpact.getDefaultInstance();
      private com.google.protobuf.SingleFieldBuilder<
          skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_UnitEvent.BloodImpact, skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_UnitEvent.BloodImpact.Builder, skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_UnitEvent.BloodImpactOrBuilder> bloodImpactBuilder_;
      /**
       * <code>optional .CDOTAUserMsg_UnitEvent.BloodImpact blood_impact = 7;</code>
       */
      public boolean hasBloodImpact() {
        return ((bitField0_ & 0x00000040) == 0x00000040);
      }
      /**
       * <code>optional .CDOTAUserMsg_UnitEvent.BloodImpact blood_impact = 7;</code>
       */
      public skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_UnitEvent.BloodImpact getBloodImpact() {
        if (bloodImpactBuilder_ == null) {
          return bloodImpact_;
        } else {
          return bloodImpactBuilder_.getMessage();
        }
      }
      /**
       * <code>optional .CDOTAUserMsg_UnitEvent.BloodImpact blood_impact = 7;</code>
       */
      public Builder setBloodImpact(skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_UnitEvent.BloodImpact value) {
        if (bloodImpactBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          bloodImpact_ = value;
          onChanged();
        } else {
          bloodImpactBuilder_.setMessage(value);
        }
        bitField0_ |= 0x00000040;
        return this;
      }
      /**
       * <code>optional .CDOTAUserMsg_UnitEvent.BloodImpact blood_impact = 7;</code>
       */
      public Builder setBloodImpact(
          skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_UnitEvent.BloodImpact.Builder builderForValue) {
        if (bloodImpactBuilder_ == null) {
          bloodImpact_ = builderForValue.build();
          onChanged();
        } else {
          bloodImpactBuilder_.setMessage(builderForValue.build());
        }
        bitField0_ |= 0x00000040;
        return this;
      }
      /**
       * <code>optional .CDOTAUserMsg_UnitEvent.BloodImpact blood_impact = 7;</code>
       */
      public Builder mergeBloodImpact(skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_UnitEvent.BloodImpact value) {
        if (bloodImpactBuilder_ == null) {
          if (((bitField0_ & 0x00000040) == 0x00000040) &&
              bloodImpact_ != skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_UnitEvent.BloodImpact.getDefaultInstance()) {
            bloodImpact_ =
              skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_UnitEvent.BloodImpact.newBuilder(bloodImpact_).mergeFrom(value).buildPartial();
          } else {
            bloodImpact_ = value;
          }
          onChanged();
        } else {
          bloodImpactBuilder_.mergeFrom(value);
        }
        bitField0_ |= 0x00000040;
        return this;
      }
      /**
       * <code>optional .CDOTAUserMsg_UnitEvent.BloodImpact blood_impact = 7;</code>
       */
      public Builder clearBloodImpact() {
        if (bloodImpactBuilder_ == null) {
          bloodImpact_ = skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_UnitEvent.BloodImpact.getDefaultInstance();
          onChanged();
        } else {
          bloodImpactBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000040);
        return this;
      }
      /**
       * <code>optional .CDOTAUserMsg_UnitEvent.BloodImpact blood_impact = 7;</code>
       */
      public skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_UnitEvent.BloodImpact.Builder getBloodImpactBuilder() {
        bitField0_ |= 0x00000040;
        onChanged();
        return getBloodImpactFieldBuilder().getBuilder();
      }
      /**
       * <code>optional .CDOTAUserMsg_UnitEvent.BloodImpact blood_impact = 7;</code>
       */
      public skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_UnitEvent.BloodImpactOrBuilder getBloodImpactOrBuilder() {
        if (bloodImpactBuilder_ != null) {
          return bloodImpactBuilder_.getMessageOrBuilder();
        } else {
          return bloodImpact_;
        }
      }
      /**
       * <code>optional .CDOTAUserMsg_UnitEvent.BloodImpact blood_impact = 7;</code>
       */
      private com.google.protobuf.SingleFieldBuilder<
          skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_UnitEvent.BloodImpact, skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_UnitEvent.BloodImpact.Builder, skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_UnitEvent.BloodImpactOrBuilder> 
          getBloodImpactFieldBuilder() {
        if (bloodImpactBuilder_ == null) {
          bloodImpactBuilder_ = new com.google.protobuf.SingleFieldBuilder<
              skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_UnitEvent.BloodImpact, skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_UnitEvent.BloodImpact.Builder, skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_UnitEvent.BloodImpactOrBuilder>(
                  getBloodImpact(),
                  getParentForChildren(),
                  isClean());
          bloodImpact_ = null;
        }
        return bloodImpactBuilder_;
      }

      private skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_UnitEvent.FadeGesture fadeGesture_ = skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_UnitEvent.FadeGesture.getDefaultInstance();
      private com.google.protobuf.SingleFieldBuilder<
          skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_UnitEvent.FadeGesture, skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_UnitEvent.FadeGesture.Builder, skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_UnitEvent.FadeGestureOrBuilder> fadeGestureBuilder_;
      /**
       * <code>optional .CDOTAUserMsg_UnitEvent.FadeGesture fade_gesture = 8;</code>
       */
      public boolean hasFadeGesture() {
        return ((bitField0_ & 0x00000080) == 0x00000080);
      }
      /**
       * <code>optional .CDOTAUserMsg_UnitEvent.FadeGesture fade_gesture = 8;</code>
       */
      public skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_UnitEvent.FadeGesture getFadeGesture() {
        if (fadeGestureBuilder_ == null) {
          return fadeGesture_;
        } else {
          return fadeGestureBuilder_.getMessage();
        }
      }
      /**
       * <code>optional .CDOTAUserMsg_UnitEvent.FadeGesture fade_gesture = 8;</code>
       */
      public Builder setFadeGesture(skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_UnitEvent.FadeGesture value) {
        if (fadeGestureBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          fadeGesture_ = value;
          onChanged();
        } else {
          fadeGestureBuilder_.setMessage(value);
        }
        bitField0_ |= 0x00000080;
        return this;
      }
      /**
       * <code>optional .CDOTAUserMsg_UnitEvent.FadeGesture fade_gesture = 8;</code>
       */
      public Builder setFadeGesture(
          skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_UnitEvent.FadeGesture.Builder builderForValue) {
        if (fadeGestureBuilder_ == null) {
          fadeGesture_ = builderForValue.build();
          onChanged();
        } else {
          fadeGestureBuilder_.setMessage(builderForValue.build());
        }
        bitField0_ |= 0x00000080;
        return this;
      }
      /**
       * <code>optional .CDOTAUserMsg_UnitEvent.FadeGesture fade_gesture = 8;</code>
       */
      public Builder mergeFadeGesture(skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_UnitEvent.FadeGesture value) {
        if (fadeGestureBuilder_ == null) {
          if (((bitField0_ & 0x00000080) == 0x00000080) &&
              fadeGesture_ != skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_UnitEvent.FadeGesture.getDefaultInstance()) {
            fadeGesture_ =
              skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_UnitEvent.FadeGesture.newBuilder(fadeGesture_).mergeFrom(value).buildPartial();
          } else {
            fadeGesture_ = value;
          }
          onChanged();
        } else {
          fadeGestureBuilder_.mergeFrom(value);
        }
        bitField0_ |= 0x00000080;
        return this;
      }
      /**
       * <code>optional .CDOTAUserMsg_UnitEvent.FadeGesture fade_gesture = 8;</code>
       */
      public Builder clearFadeGesture() {
        if (fadeGestureBuilder_ == null) {
          fadeGesture_ = skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_UnitEvent.FadeGesture.getDefaultInstance();
          onChanged();
        } else {
          fadeGestureBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000080);
        return this;
      }
      /**
       * <code>optional .CDOTAUserMsg_UnitEvent.FadeGesture fade_gesture = 8;</code>
       */
      public skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_UnitEvent.FadeGesture.Builder getFadeGestureBuilder() {
        bitField0_ |= 0x00000080;
        onChanged();
        return getFadeGestureFieldBuilder().getBuilder();
      }
      /**
       * <code>optional .CDOTAUserMsg_UnitEvent.FadeGesture fade_gesture = 8;</code>
       */
      public skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_UnitEvent.FadeGestureOrBuilder getFadeGestureOrBuilder() {
        if (fadeGestureBuilder_ != null) {
          return fadeGestureBuilder_.getMessageOrBuilder();
        } else {
          return fadeGesture_;
        }
      }
      /**
       * <code>optional .CDOTAUserMsg_UnitEvent.FadeGesture fade_gesture = 8;</code>
       */
      private com.google.protobuf.SingleFieldBuilder<
          skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_UnitEvent.FadeGesture, skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_UnitEvent.FadeGesture.Builder, skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_UnitEvent.FadeGestureOrBuilder> 
          getFadeGestureFieldBuilder() {
        if (fadeGestureBuilder_ == null) {
          fadeGestureBuilder_ = new com.google.protobuf.SingleFieldBuilder<
              skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_UnitEvent.FadeGesture, skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_UnitEvent.FadeGesture.Builder, skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_UnitEvent.FadeGestureOrBuilder>(
                  getFadeGesture(),
                  getParentForChildren(),
                  isClean());
          fadeGesture_ = null;
        }
        return fadeGestureBuilder_;
      }

      private skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTASpeechMatchOnClient speechMatchOnClient_ = skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTASpeechMatchOnClient.getDefaultInstance();
      private com.google.protobuf.SingleFieldBuilder<
          skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTASpeechMatchOnClient, skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTASpeechMatchOnClient.Builder, skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTASpeechMatchOnClientOrBuilder> speechMatchOnClientBuilder_;
      /**
       * <code>optional .CDOTASpeechMatchOnClient speech_match_on_client = 9;</code>
       */
      public boolean hasSpeechMatchOnClient() {
        return ((bitField0_ & 0x00000100) == 0x00000100);
      }
      /**
       * <code>optional .CDOTASpeechMatchOnClient speech_match_on_client = 9;</code>
       */
      public skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTASpeechMatchOnClient getSpeechMatchOnClient() {
        if (speechMatchOnClientBuilder_ == null) {
          return speechMatchOnClient_;
        } else {
          return speechMatchOnClientBuilder_.getMessage();
        }
      }
      /**
       * <code>optional .CDOTASpeechMatchOnClient speech_match_on_client = 9;</code>
       */
      public Builder setSpeechMatchOnClient(skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTASpeechMatchOnClient value) {
        if (speechMatchOnClientBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          speechMatchOnClient_ = value;
          onChanged();
        } else {
          speechMatchOnClientBuilder_.setMessage(value);
        }
        bitField0_ |= 0x00000100;
        return this;
      }
      /**
       * <code>optional .CDOTASpeechMatchOnClient speech_match_on_client = 9;</code>
       */
      public Builder setSpeechMatchOnClient(
          skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTASpeechMatchOnClient.Builder builderForValue) {
        if (speechMatchOnClientBuilder_ == null) {
          speechMatchOnClient_ = builderForValue.build();
          onChanged();
        } else {
          speechMatchOnClientBuilder_.setMessage(builderForValue.build());
        }
        bitField0_ |= 0x00000100;
        return this;
      }
      /**
       * <code>optional .CDOTASpeechMatchOnClient speech_match_on_client = 9;</code>
       */
      public Builder mergeSpeechMatchOnClient(skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTASpeechMatchOnClient value) {
        if (speechMatchOnClientBuilder_ == null) {
          if (((bitField0_ & 0x00000100) == 0x00000100) &&
              speechMatchOnClient_ != skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTASpeechMatchOnClient.getDefaultInstance()) {
            speechMatchOnClient_ =
              skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTASpeechMatchOnClient.newBuilder(speechMatchOnClient_).mergeFrom(value).buildPartial();
          } else {
            speechMatchOnClient_ = value;
          }
          onChanged();
        } else {
          speechMatchOnClientBuilder_.mergeFrom(value);
        }
        bitField0_ |= 0x00000100;
        return this;
      }
      /**
       * <code>optional .CDOTASpeechMatchOnClient speech_match_on_client = 9;</code>
       */
      public Builder clearSpeechMatchOnClient() {
        if (speechMatchOnClientBuilder_ == null) {
          speechMatchOnClient_ = skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTASpeechMatchOnClient.getDefaultInstance();
          onChanged();
        } else {
          speechMatchOnClientBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000100);
        return this;
      }
      /**
       * <code>optional .CDOTASpeechMatchOnClient speech_match_on_client = 9;</code>
       */
      public skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTASpeechMatchOnClient.Builder getSpeechMatchOnClientBuilder() {
        bitField0_ |= 0x00000100;
        onChanged();
        return getSpeechMatchOnClientFieldBuilder().getBuilder();
      }
      /**
       * <code>optional .CDOTASpeechMatchOnClient speech_match_on_client = 9;</code>
       */
      public skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTASpeechMatchOnClientOrBuilder getSpeechMatchOnClientOrBuilder() {
        if (speechMatchOnClientBuilder_ != null) {
          return speechMatchOnClientBuilder_.getMessageOrBuilder();
        } else {
          return speechMatchOnClient_;
        }
      }
      /**
       * <code>optional .CDOTASpeechMatchOnClient speech_match_on_client = 9;</code>
       */
      private com.google.protobuf.SingleFieldBuilder<
          skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTASpeechMatchOnClient, skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTASpeechMatchOnClient.Builder, skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTASpeechMatchOnClientOrBuilder> 
          getSpeechMatchOnClientFieldBuilder() {
        if (speechMatchOnClientBuilder_ == null) {
          speechMatchOnClientBuilder_ = new com.google.protobuf.SingleFieldBuilder<
              skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTASpeechMatchOnClient, skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTASpeechMatchOnClient.Builder, skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTASpeechMatchOnClientOrBuilder>(
                  getSpeechMatchOnClient(),
                  getParentForChildren(),
                  isClean());
          speechMatchOnClient_ = null;
        }
        return speechMatchOnClientBuilder_;
      }

      // @@protoc_insertion_point(builder_scope:CDOTAUserMsg_UnitEvent)
    }

    static {
      defaultInstance = new CDOTAUserMsg_UnitEvent(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:CDOTAUserMsg_UnitEvent)
  }

  public interface CDOTAUserMsg_ItemPurchasedOrBuilder extends
      // @@protoc_insertion_point(interface_extends:CDOTAUserMsg_ItemPurchased)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>optional int32 item_index = 1;</code>
     */
    boolean hasItemIndex();
    /**
     * <code>optional int32 item_index = 1;</code>
     */
    int getItemIndex();
  }
  /**
   * Protobuf type {@code CDOTAUserMsg_ItemPurchased}
   */
  public static final class CDOTAUserMsg_ItemPurchased extends
      com.google.protobuf.GeneratedMessage implements
      // @@protoc_insertion_point(message_implements:CDOTAUserMsg_ItemPurchased)
      CDOTAUserMsg_ItemPurchasedOrBuilder {
    // Use CDOTAUserMsg_ItemPurchased.newBuilder() to construct.
    private CDOTAUserMsg_ItemPurchased(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private CDOTAUserMsg_ItemPurchased(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final CDOTAUserMsg_ItemPurchased defaultInstance;
    public static CDOTAUserMsg_ItemPurchased getDefaultInstance() {
      return defaultInstance;
    }

    public CDOTAUserMsg_ItemPurchased getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private CDOTAUserMsg_ItemPurchased(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 8: {
              bitField0_ |= 0x00000001;
              itemIndex_ = input.readInt32();
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return skadistats.clarity.wire.common.proto.DotaUserMessages.internal_static_CDOTAUserMsg_ItemPurchased_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return skadistats.clarity.wire.common.proto.DotaUserMessages.internal_static_CDOTAUserMsg_ItemPurchased_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_ItemPurchased.class, skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_ItemPurchased.Builder.class);
    }

    public static com.google.protobuf.Parser<CDOTAUserMsg_ItemPurchased> PARSER =
        new com.google.protobuf.AbstractParser<CDOTAUserMsg_ItemPurchased>() {
      public CDOTAUserMsg_ItemPurchased parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new CDOTAUserMsg_ItemPurchased(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<CDOTAUserMsg_ItemPurchased> getParserForType() {
      return PARSER;
    }

    private int bitField0_;
    public static final int ITEM_INDEX_FIELD_NUMBER = 1;
    private int itemIndex_;
    /**
     * <code>optional int32 item_index = 1;</code>
     */
    public boolean hasItemIndex() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>optional int32 item_index = 1;</code>
     */
    public int getItemIndex() {
      return itemIndex_;
    }

    private void initFields() {
      itemIndex_ = 0;
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeInt32(1, itemIndex_);
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(1, itemIndex_);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_ItemPurchased parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_ItemPurchased parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_ItemPurchased parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_ItemPurchased parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_ItemPurchased parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_ItemPurchased parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_ItemPurchased parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_ItemPurchased parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_ItemPurchased parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_ItemPurchased parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_ItemPurchased prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code CDOTAUserMsg_ItemPurchased}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:CDOTAUserMsg_ItemPurchased)
        skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_ItemPurchasedOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return skadistats.clarity.wire.common.proto.DotaUserMessages.internal_static_CDOTAUserMsg_ItemPurchased_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return skadistats.clarity.wire.common.proto.DotaUserMessages.internal_static_CDOTAUserMsg_ItemPurchased_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_ItemPurchased.class, skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_ItemPurchased.Builder.class);
      }

      // Construct using skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_ItemPurchased.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        itemIndex_ = 0;
        bitField0_ = (bitField0_ & ~0x00000001);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return skadistats.clarity.wire.common.proto.DotaUserMessages.internal_static_CDOTAUserMsg_ItemPurchased_descriptor;
      }

      public skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_ItemPurchased getDefaultInstanceForType() {
        return skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_ItemPurchased.getDefaultInstance();
      }

      public skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_ItemPurchased build() {
        skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_ItemPurchased result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_ItemPurchased buildPartial() {
        skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_ItemPurchased result = new skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_ItemPurchased(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.itemIndex_ = itemIndex_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_ItemPurchased) {
          return mergeFrom((skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_ItemPurchased)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_ItemPurchased other) {
        if (other == skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_ItemPurchased.getDefaultInstance()) return this;
        if (other.hasItemIndex()) {
          setItemIndex(other.getItemIndex());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_ItemPurchased parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_ItemPurchased) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private int itemIndex_ ;
      /**
       * <code>optional int32 item_index = 1;</code>
       */
      public boolean hasItemIndex() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>optional int32 item_index = 1;</code>
       */
      public int getItemIndex() {
        return itemIndex_;
      }
      /**
       * <code>optional int32 item_index = 1;</code>
       */
      public Builder setItemIndex(int value) {
        bitField0_ |= 0x00000001;
        itemIndex_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 item_index = 1;</code>
       */
      public Builder clearItemIndex() {
        bitField0_ = (bitField0_ & ~0x00000001);
        itemIndex_ = 0;
        onChanged();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:CDOTAUserMsg_ItemPurchased)
    }

    static {
      defaultInstance = new CDOTAUserMsg_ItemPurchased(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:CDOTAUserMsg_ItemPurchased)
  }

  public interface CDOTAUserMsg_ItemFoundOrBuilder extends
      // @@protoc_insertion_point(interface_extends:CDOTAUserMsg_ItemFound)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>optional int32 player = 1;</code>
     */
    boolean hasPlayer();
    /**
     * <code>optional int32 player = 1;</code>
     */
    int getPlayer();

    /**
     * <code>optional int32 quality = 2;</code>
     */
    boolean hasQuality();
    /**
     * <code>optional int32 quality = 2;</code>
     */
    int getQuality();

    /**
     * <code>optional int32 rarity = 3;</code>
     */
    boolean hasRarity();
    /**
     * <code>optional int32 rarity = 3;</code>
     */
    int getRarity();

    /**
     * <code>optional int32 method = 4;</code>
     */
    boolean hasMethod();
    /**
     * <code>optional int32 method = 4;</code>
     */
    int getMethod();

    /**
     * <code>optional int32 itemdef = 5;</code>
     */
    boolean hasItemdef();
    /**
     * <code>optional int32 itemdef = 5;</code>
     */
    int getItemdef();
  }
  /**
   * Protobuf type {@code CDOTAUserMsg_ItemFound}
   */
  public static final class CDOTAUserMsg_ItemFound extends
      com.google.protobuf.GeneratedMessage implements
      // @@protoc_insertion_point(message_implements:CDOTAUserMsg_ItemFound)
      CDOTAUserMsg_ItemFoundOrBuilder {
    // Use CDOTAUserMsg_ItemFound.newBuilder() to construct.
    private CDOTAUserMsg_ItemFound(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private CDOTAUserMsg_ItemFound(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final CDOTAUserMsg_ItemFound defaultInstance;
    public static CDOTAUserMsg_ItemFound getDefaultInstance() {
      return defaultInstance;
    }

    public CDOTAUserMsg_ItemFound getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private CDOTAUserMsg_ItemFound(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 8: {
              bitField0_ |= 0x00000001;
              player_ = input.readInt32();
              break;
            }
            case 16: {
              bitField0_ |= 0x00000002;
              quality_ = input.readInt32();
              break;
            }
            case 24: {
              bitField0_ |= 0x00000004;
              rarity_ = input.readInt32();
              break;
            }
            case 32: {
              bitField0_ |= 0x00000008;
              method_ = input.readInt32();
              break;
            }
            case 40: {
              bitField0_ |= 0x00000010;
              itemdef_ = input.readInt32();
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return skadistats.clarity.wire.common.proto.DotaUserMessages.internal_static_CDOTAUserMsg_ItemFound_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return skadistats.clarity.wire.common.proto.DotaUserMessages.internal_static_CDOTAUserMsg_ItemFound_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_ItemFound.class, skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_ItemFound.Builder.class);
    }

    public static com.google.protobuf.Parser<CDOTAUserMsg_ItemFound> PARSER =
        new com.google.protobuf.AbstractParser<CDOTAUserMsg_ItemFound>() {
      public CDOTAUserMsg_ItemFound parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new CDOTAUserMsg_ItemFound(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<CDOTAUserMsg_ItemFound> getParserForType() {
      return PARSER;
    }

    private int bitField0_;
    public static final int PLAYER_FIELD_NUMBER = 1;
    private int player_;
    /**
     * <code>optional int32 player = 1;</code>
     */
    public boolean hasPlayer() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>optional int32 player = 1;</code>
     */
    public int getPlayer() {
      return player_;
    }

    public static final int QUALITY_FIELD_NUMBER = 2;
    private int quality_;
    /**
     * <code>optional int32 quality = 2;</code>
     */
    public boolean hasQuality() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>optional int32 quality = 2;</code>
     */
    public int getQuality() {
      return quality_;
    }

    public static final int RARITY_FIELD_NUMBER = 3;
    private int rarity_;
    /**
     * <code>optional int32 rarity = 3;</code>
     */
    public boolean hasRarity() {
      return ((bitField0_ & 0x00000004) == 0x00000004);
    }
    /**
     * <code>optional int32 rarity = 3;</code>
     */
    public int getRarity() {
      return rarity_;
    }

    public static final int METHOD_FIELD_NUMBER = 4;
    private int method_;
    /**
     * <code>optional int32 method = 4;</code>
     */
    public boolean hasMethod() {
      return ((bitField0_ & 0x00000008) == 0x00000008);
    }
    /**
     * <code>optional int32 method = 4;</code>
     */
    public int getMethod() {
      return method_;
    }

    public static final int ITEMDEF_FIELD_NUMBER = 5;
    private int itemdef_;
    /**
     * <code>optional int32 itemdef = 5;</code>
     */
    public boolean hasItemdef() {
      return ((bitField0_ & 0x00000010) == 0x00000010);
    }
    /**
     * <code>optional int32 itemdef = 5;</code>
     */
    public int getItemdef() {
      return itemdef_;
    }

    private void initFields() {
      player_ = 0;
      quality_ = 0;
      rarity_ = 0;
      method_ = 0;
      itemdef_ = 0;
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeInt32(1, player_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeInt32(2, quality_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        output.writeInt32(3, rarity_);
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        output.writeInt32(4, method_);
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        output.writeInt32(5, itemdef_);
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(1, player_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(2, quality_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(3, rarity_);
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(4, method_);
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(5, itemdef_);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_ItemFound parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_ItemFound parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_ItemFound parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_ItemFound parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_ItemFound parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_ItemFound parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_ItemFound parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_ItemFound parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_ItemFound parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_ItemFound parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_ItemFound prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code CDOTAUserMsg_ItemFound}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:CDOTAUserMsg_ItemFound)
        skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_ItemFoundOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return skadistats.clarity.wire.common.proto.DotaUserMessages.internal_static_CDOTAUserMsg_ItemFound_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return skadistats.clarity.wire.common.proto.DotaUserMessages.internal_static_CDOTAUserMsg_ItemFound_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_ItemFound.class, skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_ItemFound.Builder.class);
      }

      // Construct using skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_ItemFound.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        player_ = 0;
        bitField0_ = (bitField0_ & ~0x00000001);
        quality_ = 0;
        bitField0_ = (bitField0_ & ~0x00000002);
        rarity_ = 0;
        bitField0_ = (bitField0_ & ~0x00000004);
        method_ = 0;
        bitField0_ = (bitField0_ & ~0x00000008);
        itemdef_ = 0;
        bitField0_ = (bitField0_ & ~0x00000010);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return skadistats.clarity.wire.common.proto.DotaUserMessages.internal_static_CDOTAUserMsg_ItemFound_descriptor;
      }

      public skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_ItemFound getDefaultInstanceForType() {
        return skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_ItemFound.getDefaultInstance();
      }

      public skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_ItemFound build() {
        skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_ItemFound result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_ItemFound buildPartial() {
        skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_ItemFound result = new skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_ItemFound(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.player_ = player_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.quality_ = quality_;
        if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
          to_bitField0_ |= 0x00000004;
        }
        result.rarity_ = rarity_;
        if (((from_bitField0_ & 0x00000008) == 0x00000008)) {
          to_bitField0_ |= 0x00000008;
        }
        result.method_ = method_;
        if (((from_bitField0_ & 0x00000010) == 0x00000010)) {
          to_bitField0_ |= 0x00000010;
        }
        result.itemdef_ = itemdef_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_ItemFound) {
          return mergeFrom((skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_ItemFound)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_ItemFound other) {
        if (other == skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_ItemFound.getDefaultInstance()) return this;
        if (other.hasPlayer()) {
          setPlayer(other.getPlayer());
        }
        if (other.hasQuality()) {
          setQuality(other.getQuality());
        }
        if (other.hasRarity()) {
          setRarity(other.getRarity());
        }
        if (other.hasMethod()) {
          setMethod(other.getMethod());
        }
        if (other.hasItemdef()) {
          setItemdef(other.getItemdef());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_ItemFound parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_ItemFound) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private int player_ ;
      /**
       * <code>optional int32 player = 1;</code>
       */
      public boolean hasPlayer() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>optional int32 player = 1;</code>
       */
      public int getPlayer() {
        return player_;
      }
      /**
       * <code>optional int32 player = 1;</code>
       */
      public Builder setPlayer(int value) {
        bitField0_ |= 0x00000001;
        player_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 player = 1;</code>
       */
      public Builder clearPlayer() {
        bitField0_ = (bitField0_ & ~0x00000001);
        player_ = 0;
        onChanged();
        return this;
      }

      private int quality_ ;
      /**
       * <code>optional int32 quality = 2;</code>
       */
      public boolean hasQuality() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>optional int32 quality = 2;</code>
       */
      public int getQuality() {
        return quality_;
      }
      /**
       * <code>optional int32 quality = 2;</code>
       */
      public Builder setQuality(int value) {
        bitField0_ |= 0x00000002;
        quality_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 quality = 2;</code>
       */
      public Builder clearQuality() {
        bitField0_ = (bitField0_ & ~0x00000002);
        quality_ = 0;
        onChanged();
        return this;
      }

      private int rarity_ ;
      /**
       * <code>optional int32 rarity = 3;</code>
       */
      public boolean hasRarity() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }
      /**
       * <code>optional int32 rarity = 3;</code>
       */
      public int getRarity() {
        return rarity_;
      }
      /**
       * <code>optional int32 rarity = 3;</code>
       */
      public Builder setRarity(int value) {
        bitField0_ |= 0x00000004;
        rarity_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 rarity = 3;</code>
       */
      public Builder clearRarity() {
        bitField0_ = (bitField0_ & ~0x00000004);
        rarity_ = 0;
        onChanged();
        return this;
      }

      private int method_ ;
      /**
       * <code>optional int32 method = 4;</code>
       */
      public boolean hasMethod() {
        return ((bitField0_ & 0x00000008) == 0x00000008);
      }
      /**
       * <code>optional int32 method = 4;</code>
       */
      public int getMethod() {
        return method_;
      }
      /**
       * <code>optional int32 method = 4;</code>
       */
      public Builder setMethod(int value) {
        bitField0_ |= 0x00000008;
        method_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 method = 4;</code>
       */
      public Builder clearMethod() {
        bitField0_ = (bitField0_ & ~0x00000008);
        method_ = 0;
        onChanged();
        return this;
      }

      private int itemdef_ ;
      /**
       * <code>optional int32 itemdef = 5;</code>
       */
      public boolean hasItemdef() {
        return ((bitField0_ & 0x00000010) == 0x00000010);
      }
      /**
       * <code>optional int32 itemdef = 5;</code>
       */
      public int getItemdef() {
        return itemdef_;
      }
      /**
       * <code>optional int32 itemdef = 5;</code>
       */
      public Builder setItemdef(int value) {
        bitField0_ |= 0x00000010;
        itemdef_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 itemdef = 5;</code>
       */
      public Builder clearItemdef() {
        bitField0_ = (bitField0_ & ~0x00000010);
        itemdef_ = 0;
        onChanged();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:CDOTAUserMsg_ItemFound)
    }

    static {
      defaultInstance = new CDOTAUserMsg_ItemFound(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:CDOTAUserMsg_ItemFound)
  }

  public interface CDOTAUserMsg_ParticleManagerOrBuilder extends
      // @@protoc_insertion_point(interface_extends:CDOTAUserMsg_ParticleManager)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>optional .DOTA_PARTICLE_MESSAGE type = 1 [default = DOTA_PARTICLE_MANAGER_EVENT_CREATE];</code>
     */
    boolean hasType();
    /**
     * <code>optional .DOTA_PARTICLE_MESSAGE type = 1 [default = DOTA_PARTICLE_MANAGER_EVENT_CREATE];</code>
     */
    skadistats.clarity.wire.common.proto.DotaUserMessages.DOTA_PARTICLE_MESSAGE getType();

    /**
     * <code>required uint32 index = 2;</code>
     */
    boolean hasIndex();
    /**
     * <code>required uint32 index = 2;</code>
     */
    int getIndex();

    /**
     * <code>optional .CDOTAUserMsg_ParticleManager.ReleaseParticleIndex release_particle_index = 3;</code>
     */
    boolean hasReleaseParticleIndex();
    /**
     * <code>optional .CDOTAUserMsg_ParticleManager.ReleaseParticleIndex release_particle_index = 3;</code>
     */
    skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_ParticleManager.ReleaseParticleIndex getReleaseParticleIndex();
    /**
     * <code>optional .CDOTAUserMsg_ParticleManager.ReleaseParticleIndex release_particle_index = 3;</code>
     */
    skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_ParticleManager.ReleaseParticleIndexOrBuilder getReleaseParticleIndexOrBuilder();

    /**
     * <code>optional .CDOTAUserMsg_ParticleManager.CreateParticle create_particle = 4;</code>
     */
    boolean hasCreateParticle();
    /**
     * <code>optional .CDOTAUserMsg_ParticleManager.CreateParticle create_particle = 4;</code>
     */
    skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_ParticleManager.CreateParticle getCreateParticle();
    /**
     * <code>optional .CDOTAUserMsg_ParticleManager.CreateParticle create_particle = 4;</code>
     */
    skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_ParticleManager.CreateParticleOrBuilder getCreateParticleOrBuilder();

    /**
     * <code>optional .CDOTAUserMsg_ParticleManager.DestroyParticle destroy_particle = 5;</code>
     */
    boolean hasDestroyParticle();
    /**
     * <code>optional .CDOTAUserMsg_ParticleManager.DestroyParticle destroy_particle = 5;</code>
     */
    skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_ParticleManager.DestroyParticle getDestroyParticle();
    /**
     * <code>optional .CDOTAUserMsg_ParticleManager.DestroyParticle destroy_particle = 5;</code>
     */
    skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_ParticleManager.DestroyParticleOrBuilder getDestroyParticleOrBuilder();

    /**
     * <code>optional .CDOTAUserMsg_ParticleManager.DestroyParticleInvolving destroy_particle_involving = 6;</code>
     */
    boolean hasDestroyParticleInvolving();
    /**
     * <code>optional .CDOTAUserMsg_ParticleManager.DestroyParticleInvolving destroy_particle_involving = 6;</code>
     */
    skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_ParticleManager.DestroyParticleInvolving getDestroyParticleInvolving();
    /**
     * <code>optional .CDOTAUserMsg_ParticleManager.DestroyParticleInvolving destroy_particle_involving = 6;</code>
     */
    skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_ParticleManager.DestroyParticleInvolvingOrBuilder getDestroyParticleInvolvingOrBuilder();

    /**
     * <code>optional .CDOTAUserMsg_ParticleManager.UpdateParticle update_particle = 7;</code>
     */
    boolean hasUpdateParticle();
    /**
     * <code>optional .CDOTAUserMsg_ParticleManager.UpdateParticle update_particle = 7;</code>
     */
    skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_ParticleManager.UpdateParticle getUpdateParticle();
    /**
     * <code>optional .CDOTAUserMsg_ParticleManager.UpdateParticle update_particle = 7;</code>
     */
    skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_ParticleManager.UpdateParticleOrBuilder getUpdateParticleOrBuilder();

    /**
     * <code>optional .CDOTAUserMsg_ParticleManager.UpdateParticleFwd update_particle_fwd = 8;</code>
     */
    boolean hasUpdateParticleFwd();
    /**
     * <code>optional .CDOTAUserMsg_ParticleManager.UpdateParticleFwd update_particle_fwd = 8;</code>
     */
    skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_ParticleManager.UpdateParticleFwd getUpdateParticleFwd();
    /**
     * <code>optional .CDOTAUserMsg_ParticleManager.UpdateParticleFwd update_particle_fwd = 8;</code>
     */
    skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_ParticleManager.UpdateParticleFwdOrBuilder getUpdateParticleFwdOrBuilder();

    /**
     * <code>optional .CDOTAUserMsg_ParticleManager.UpdateParticleOrient update_particle_orient = 9;</code>
     */
    boolean hasUpdateParticleOrient();
    /**
     * <code>optional .CDOTAUserMsg_ParticleManager.UpdateParticleOrient update_particle_orient = 9;</code>
     */
    skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_ParticleManager.UpdateParticleOrient getUpdateParticleOrient();
    /**
     * <code>optional .CDOTAUserMsg_ParticleManager.UpdateParticleOrient update_particle_orient = 9;</code>
     */
    skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_ParticleManager.UpdateParticleOrientOrBuilder getUpdateParticleOrientOrBuilder();

    /**
     * <code>optional .CDOTAUserMsg_ParticleManager.UpdateParticleFallback update_particle_fallback = 10;</code>
     */
    boolean hasUpdateParticleFallback();
    /**
     * <code>optional .CDOTAUserMsg_ParticleManager.UpdateParticleFallback update_particle_fallback = 10;</code>
     */
    skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_ParticleManager.UpdateParticleFallback getUpdateParticleFallback();
    /**
     * <code>optional .CDOTAUserMsg_ParticleManager.UpdateParticleFallback update_particle_fallback = 10;</code>
     */
    skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_ParticleManager.UpdateParticleFallbackOrBuilder getUpdateParticleFallbackOrBuilder();

    /**
     * <code>optional .CDOTAUserMsg_ParticleManager.UpdateParticleOffset update_particle_offset = 11;</code>
     */
    boolean hasUpdateParticleOffset();
    /**
     * <code>optional .CDOTAUserMsg_ParticleManager.UpdateParticleOffset update_particle_offset = 11;</code>
     */
    skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_ParticleManager.UpdateParticleOffset getUpdateParticleOffset();
    /**
     * <code>optional .CDOTAUserMsg_ParticleManager.UpdateParticleOffset update_particle_offset = 11;</code>
     */
    skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_ParticleManager.UpdateParticleOffsetOrBuilder getUpdateParticleOffsetOrBuilder();

    /**
     * <code>optional .CDOTAUserMsg_ParticleManager.UpdateParticleEnt update_particle_ent = 12;</code>
     */
    boolean hasUpdateParticleEnt();
    /**
     * <code>optional .CDOTAUserMsg_ParticleManager.UpdateParticleEnt update_particle_ent = 12;</code>
     */
    skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_ParticleManager.UpdateParticleEnt getUpdateParticleEnt();
    /**
     * <code>optional .CDOTAUserMsg_ParticleManager.UpdateParticleEnt update_particle_ent = 12;</code>
     */
    skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_ParticleManager.UpdateParticleEntOrBuilder getUpdateParticleEntOrBuilder();

    /**
     * <code>optional .CDOTAUserMsg_ParticleManager.UpdateParticleShouldDraw update_particle_should_draw = 14;</code>
     */
    boolean hasUpdateParticleShouldDraw();
    /**
     * <code>optional .CDOTAUserMsg_ParticleManager.UpdateParticleShouldDraw update_particle_should_draw = 14;</code>
     */
    skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_ParticleManager.UpdateParticleShouldDraw getUpdateParticleShouldDraw();
    /**
     * <code>optional .CDOTAUserMsg_ParticleManager.UpdateParticleShouldDraw update_particle_should_draw = 14;</code>
     */
    skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_ParticleManager.UpdateParticleShouldDrawOrBuilder getUpdateParticleShouldDrawOrBuilder();

    /**
     * <code>optional .CDOTAUserMsg_ParticleManager.UpdateParticleSetFrozen update_particle_set_frozen = 15;</code>
     */
    boolean hasUpdateParticleSetFrozen();
    /**
     * <code>optional .CDOTAUserMsg_ParticleManager.UpdateParticleSetFrozen update_particle_set_frozen = 15;</code>
     */
    skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_ParticleManager.UpdateParticleSetFrozen getUpdateParticleSetFrozen();
    /**
     * <code>optional .CDOTAUserMsg_ParticleManager.UpdateParticleSetFrozen update_particle_set_frozen = 15;</code>
     */
    skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_ParticleManager.UpdateParticleSetFrozenOrBuilder getUpdateParticleSetFrozenOrBuilder();

    /**
     * <code>optional .CDOTAUserMsg_ParticleManager.ChangeControlPointAttachment change_control_point_attachment = 16;</code>
     */
    boolean hasChangeControlPointAttachment();
    /**
     * <code>optional .CDOTAUserMsg_ParticleManager.ChangeControlPointAttachment change_control_point_attachment = 16;</code>
     */
    skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_ParticleManager.ChangeControlPointAttachment getChangeControlPointAttachment();
    /**
     * <code>optional .CDOTAUserMsg_ParticleManager.ChangeControlPointAttachment change_control_point_attachment = 16;</code>
     */
    skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_ParticleManager.ChangeControlPointAttachmentOrBuilder getChangeControlPointAttachmentOrBuilder();

    /**
     * <code>optional .CDOTAUserMsg_ParticleManager.UpdateEntityPosition update_entity_position = 17;</code>
     */
    boolean hasUpdateEntityPosition();
    /**
     * <code>optional .CDOTAUserMsg_ParticleManager.UpdateEntityPosition update_entity_position = 17;</code>
     */
    skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_ParticleManager.UpdateEntityPosition getUpdateEntityPosition();
    /**
     * <code>optional .CDOTAUserMsg_ParticleManager.UpdateEntityPosition update_entity_position = 17;</code>
     */
    skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_ParticleManager.UpdateEntityPositionOrBuilder getUpdateEntityPositionOrBuilder();
  }
  /**
   * Protobuf type {@code CDOTAUserMsg_ParticleManager}
   */
  public static final class CDOTAUserMsg_ParticleManager extends
      com.google.protobuf.GeneratedMessage implements
      // @@protoc_insertion_point(message_implements:CDOTAUserMsg_ParticleManager)
      CDOTAUserMsg_ParticleManagerOrBuilder {
    // Use CDOTAUserMsg_ParticleManager.newBuilder() to construct.
    private CDOTAUserMsg_ParticleManager(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private CDOTAUserMsg_ParticleManager(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final CDOTAUserMsg_ParticleManager defaultInstance;
    public static CDOTAUserMsg_ParticleManager getDefaultInstance() {
      return defaultInstance;
    }

    public CDOTAUserMsg_ParticleManager getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private CDOTAUserMsg_ParticleManager(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 8: {
              int rawValue = input.readEnum();
              skadistats.clarity.wire.common.proto.DotaUserMessages.DOTA_PARTICLE_MESSAGE value = skadistats.clarity.wire.common.proto.DotaUserMessages.DOTA_PARTICLE_MESSAGE.valueOf(rawValue);
              if (value == null) {
                unknownFields.mergeVarintField(1, rawValue);
              } else {
                bitField0_ |= 0x00000001;
                type_ = value;
              }
              break;
            }
            case 16: {
              bitField0_ |= 0x00000002;
              index_ = input.readUInt32();
              break;
            }
            case 26: {
              skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_ParticleManager.ReleaseParticleIndex.Builder subBuilder = null;
              if (((bitField0_ & 0x00000004) == 0x00000004)) {
                subBuilder = releaseParticleIndex_.toBuilder();
              }
              releaseParticleIndex_ = input.readMessage(skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_ParticleManager.ReleaseParticleIndex.PARSER, extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(releaseParticleIndex_);
                releaseParticleIndex_ = subBuilder.buildPartial();
              }
              bitField0_ |= 0x00000004;
              break;
            }
            case 34: {
              skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_ParticleManager.CreateParticle.Builder subBuilder = null;
              if (((bitField0_ & 0x00000008) == 0x00000008)) {
                subBuilder = createParticle_.toBuilder();
              }
              createParticle_ = input.readMessage(skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_ParticleManager.CreateParticle.PARSER, extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(createParticle_);
                createParticle_ = subBuilder.buildPartial();
              }
              bitField0_ |= 0x00000008;
              break;
            }
            case 42: {
              skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_ParticleManager.DestroyParticle.Builder subBuilder = null;
              if (((bitField0_ & 0x00000010) == 0x00000010)) {
                subBuilder = destroyParticle_.toBuilder();
              }
              destroyParticle_ = input.readMessage(skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_ParticleManager.DestroyParticle.PARSER, extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(destroyParticle_);
                destroyParticle_ = subBuilder.buildPartial();
              }
              bitField0_ |= 0x00000010;
              break;
            }
            case 50: {
              skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_ParticleManager.DestroyParticleInvolving.Builder subBuilder = null;
              if (((bitField0_ & 0x00000020) == 0x00000020)) {
                subBuilder = destroyParticleInvolving_.toBuilder();
              }
              destroyParticleInvolving_ = input.readMessage(skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_ParticleManager.DestroyParticleInvolving.PARSER, extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(destroyParticleInvolving_);
                destroyParticleInvolving_ = subBuilder.buildPartial();
              }
              bitField0_ |= 0x00000020;
              break;
            }
            case 58: {
              skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_ParticleManager.UpdateParticle.Builder subBuilder = null;
              if (((bitField0_ & 0x00000040) == 0x00000040)) {
                subBuilder = updateParticle_.toBuilder();
              }
              updateParticle_ = input.readMessage(skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_ParticleManager.UpdateParticle.PARSER, extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(updateParticle_);
                updateParticle_ = subBuilder.buildPartial();
              }
              bitField0_ |= 0x00000040;
              break;
            }
            case 66: {
              skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_ParticleManager.UpdateParticleFwd.Builder subBuilder = null;
              if (((bitField0_ & 0x00000080) == 0x00000080)) {
                subBuilder = updateParticleFwd_.toBuilder();
              }
              updateParticleFwd_ = input.readMessage(skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_ParticleManager.UpdateParticleFwd.PARSER, extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(updateParticleFwd_);
                updateParticleFwd_ = subBuilder.buildPartial();
              }
              bitField0_ |= 0x00000080;
              break;
            }
            case 74: {
              skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_ParticleManager.UpdateParticleOrient.Builder subBuilder = null;
              if (((bitField0_ & 0x00000100) == 0x00000100)) {
                subBuilder = updateParticleOrient_.toBuilder();
              }
              updateParticleOrient_ = input.readMessage(skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_ParticleManager.UpdateParticleOrient.PARSER, extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(updateParticleOrient_);
                updateParticleOrient_ = subBuilder.buildPartial();
              }
              bitField0_ |= 0x00000100;
              break;
            }
            case 82: {
              skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_ParticleManager.UpdateParticleFallback.Builder subBuilder = null;
              if (((bitField0_ & 0x00000200) == 0x00000200)) {
                subBuilder = updateParticleFallback_.toBuilder();
              }
              updateParticleFallback_ = input.readMessage(skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_ParticleManager.UpdateParticleFallback.PARSER, extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(updateParticleFallback_);
                updateParticleFallback_ = subBuilder.buildPartial();
              }
              bitField0_ |= 0x00000200;
              break;
            }
            case 90: {
              skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_ParticleManager.UpdateParticleOffset.Builder subBuilder = null;
              if (((bitField0_ & 0x00000400) == 0x00000400)) {
                subBuilder = updateParticleOffset_.toBuilder();
              }
              updateParticleOffset_ = input.readMessage(skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_ParticleManager.UpdateParticleOffset.PARSER, extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(updateParticleOffset_);
                updateParticleOffset_ = subBuilder.buildPartial();
              }
              bitField0_ |= 0x00000400;
              break;
            }
            case 98: {
              skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_ParticleManager.UpdateParticleEnt.Builder subBuilder = null;
              if (((bitField0_ & 0x00000800) == 0x00000800)) {
                subBuilder = updateParticleEnt_.toBuilder();
              }
              updateParticleEnt_ = input.readMessage(skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_ParticleManager.UpdateParticleEnt.PARSER, extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(updateParticleEnt_);
                updateParticleEnt_ = subBuilder.buildPartial();
              }
              bitField0_ |= 0x00000800;
              break;
            }
            case 114: {
              skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_ParticleManager.UpdateParticleShouldDraw.Builder subBuilder = null;
              if (((bitField0_ & 0x00001000) == 0x00001000)) {
                subBuilder = updateParticleShouldDraw_.toBuilder();
              }
              updateParticleShouldDraw_ = input.readMessage(skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_ParticleManager.UpdateParticleShouldDraw.PARSER, extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(updateParticleShouldDraw_);
                updateParticleShouldDraw_ = subBuilder.buildPartial();
              }
              bitField0_ |= 0x00001000;
              break;
            }
            case 122: {
              skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_ParticleManager.UpdateParticleSetFrozen.Builder subBuilder = null;
              if (((bitField0_ & 0x00002000) == 0x00002000)) {
                subBuilder = updateParticleSetFrozen_.toBuilder();
              }
              updateParticleSetFrozen_ = input.readMessage(skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_ParticleManager.UpdateParticleSetFrozen.PARSER, extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(updateParticleSetFrozen_);
                updateParticleSetFrozen_ = subBuilder.buildPartial();
              }
              bitField0_ |= 0x00002000;
              break;
            }
            case 130: {
              skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_ParticleManager.ChangeControlPointAttachment.Builder subBuilder = null;
              if (((bitField0_ & 0x00004000) == 0x00004000)) {
                subBuilder = changeControlPointAttachment_.toBuilder();
              }
              changeControlPointAttachment_ = input.readMessage(skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_ParticleManager.ChangeControlPointAttachment.PARSER, extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(changeControlPointAttachment_);
                changeControlPointAttachment_ = subBuilder.buildPartial();
              }
              bitField0_ |= 0x00004000;
              break;
            }
            case 138: {
              skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_ParticleManager.UpdateEntityPosition.Builder subBuilder = null;
              if (((bitField0_ & 0x00008000) == 0x00008000)) {
                subBuilder = updateEntityPosition_.toBuilder();
              }
              updateEntityPosition_ = input.readMessage(skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_ParticleManager.UpdateEntityPosition.PARSER, extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(updateEntityPosition_);
                updateEntityPosition_ = subBuilder.buildPartial();
              }
              bitField0_ |= 0x00008000;
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return skadistats.clarity.wire.common.proto.DotaUserMessages.internal_static_CDOTAUserMsg_ParticleManager_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return skadistats.clarity.wire.common.proto.DotaUserMessages.internal_static_CDOTAUserMsg_ParticleManager_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_ParticleManager.class, skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_ParticleManager.Builder.class);
    }

    public static com.google.protobuf.Parser<CDOTAUserMsg_ParticleManager> PARSER =
        new com.google.protobuf.AbstractParser<CDOTAUserMsg_ParticleManager>() {
      public CDOTAUserMsg_ParticleManager parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new CDOTAUserMsg_ParticleManager(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<CDOTAUserMsg_ParticleManager> getParserForType() {
      return PARSER;
    }

    public interface ReleaseParticleIndexOrBuilder extends
        // @@protoc_insertion_point(interface_extends:CDOTAUserMsg_ParticleManager.ReleaseParticleIndex)
        com.google.protobuf.MessageOrBuilder {
    }
    /**
     * Protobuf type {@code CDOTAUserMsg_ParticleManager.ReleaseParticleIndex}
     */
    public static final class ReleaseParticleIndex extends
        com.google.protobuf.GeneratedMessage implements
        // @@protoc_insertion_point(message_implements:CDOTAUserMsg_ParticleManager.ReleaseParticleIndex)
        ReleaseParticleIndexOrBuilder {
      // Use ReleaseParticleIndex.newBuilder() to construct.
      private ReleaseParticleIndex(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
        super(builder);
        this.unknownFields = builder.getUnknownFields();
      }
      private ReleaseParticleIndex(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

      private static final ReleaseParticleIndex defaultInstance;
      public static ReleaseParticleIndex getDefaultInstance() {
        return defaultInstance;
      }

      public ReleaseParticleIndex getDefaultInstanceForType() {
        return defaultInstance;
      }

      private final com.google.protobuf.UnknownFieldSet unknownFields;
      @java.lang.Override
      public final com.google.protobuf.UnknownFieldSet
          getUnknownFields() {
        return this.unknownFields;
      }
      private ReleaseParticleIndex(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        initFields();
        com.google.protobuf.UnknownFieldSet.Builder unknownFields =
            com.google.protobuf.UnknownFieldSet.newBuilder();
        try {
          boolean done = false;
          while (!done) {
            int tag = input.readTag();
            switch (tag) {
              case 0:
                done = true;
                break;
              default: {
                if (!parseUnknownField(input, unknownFields,
                                       extensionRegistry, tag)) {
                  done = true;
                }
                break;
              }
            }
          }
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.setUnfinishedMessage(this);
        } catch (java.io.IOException e) {
          throw new com.google.protobuf.InvalidProtocolBufferException(
              e.getMessage()).setUnfinishedMessage(this);
        } finally {
          this.unknownFields = unknownFields.build();
          makeExtensionsImmutable();
        }
      }
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return skadistats.clarity.wire.common.proto.DotaUserMessages.internal_static_CDOTAUserMsg_ParticleManager_ReleaseParticleIndex_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return skadistats.clarity.wire.common.proto.DotaUserMessages.internal_static_CDOTAUserMsg_ParticleManager_ReleaseParticleIndex_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_ParticleManager.ReleaseParticleIndex.class, skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_ParticleManager.ReleaseParticleIndex.Builder.class);
      }

      public static com.google.protobuf.Parser<ReleaseParticleIndex> PARSER =
          new com.google.protobuf.AbstractParser<ReleaseParticleIndex>() {
        public ReleaseParticleIndex parsePartialFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws com.google.protobuf.InvalidProtocolBufferException {
          return new ReleaseParticleIndex(input, extensionRegistry);
        }
      };

      @java.lang.Override
      public com.google.protobuf.Parser<ReleaseParticleIndex> getParserForType() {
        return PARSER;
      }

      private void initFields() {
      }
      private byte memoizedIsInitialized = -1;
      public final boolean isInitialized() {
        byte isInitialized = memoizedIsInitialized;
        if (isInitialized == 1) return true;
        if (isInitialized == 0) return false;

        memoizedIsInitialized = 1;
        return true;
      }

      public void writeTo(com.google.protobuf.CodedOutputStream output)
                          throws java.io.IOException {
        getSerializedSize();
        getUnknownFields().writeTo(output);
      }

      private int memoizedSerializedSize = -1;
      public int getSerializedSize() {
        int size = memoizedSerializedSize;
        if (size != -1) return size;

        size = 0;
        size += getUnknownFields().getSerializedSize();
        memoizedSerializedSize = size;
        return size;
      }

      private static final long serialVersionUID = 0L;
      @java.lang.Override
      protected java.lang.Object writeReplace()
          throws java.io.ObjectStreamException {
        return super.writeReplace();
      }

      public static skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_ParticleManager.ReleaseParticleIndex parseFrom(
          com.google.protobuf.ByteString data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_ParticleManager.ReleaseParticleIndex parseFrom(
          com.google.protobuf.ByteString data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_ParticleManager.ReleaseParticleIndex parseFrom(byte[] data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_ParticleManager.ReleaseParticleIndex parseFrom(
          byte[] data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_ParticleManager.ReleaseParticleIndex parseFrom(java.io.InputStream input)
          throws java.io.IOException {
        return PARSER.parseFrom(input);
      }
      public static skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_ParticleManager.ReleaseParticleIndex parseFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return PARSER.parseFrom(input, extensionRegistry);
      }
      public static skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_ParticleManager.ReleaseParticleIndex parseDelimitedFrom(java.io.InputStream input)
          throws java.io.IOException {
        return PARSER.parseDelimitedFrom(input);
      }
      public static skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_ParticleManager.ReleaseParticleIndex parseDelimitedFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return PARSER.parseDelimitedFrom(input, extensionRegistry);
      }
      public static skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_ParticleManager.ReleaseParticleIndex parseFrom(
          com.google.protobuf.CodedInputStream input)
          throws java.io.IOException {
        return PARSER.parseFrom(input);
      }
      public static skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_ParticleManager.ReleaseParticleIndex parseFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return PARSER.parseFrom(input, extensionRegistry);
      }

      public static Builder newBuilder() { return Builder.create(); }
      public Builder newBuilderForType() { return newBuilder(); }
      public static Builder newBuilder(skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_ParticleManager.ReleaseParticleIndex prototype) {
        return newBuilder().mergeFrom(prototype);
      }
      public Builder toBuilder() { return newBuilder(this); }

      @java.lang.Override
      protected Builder newBuilderForType(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        Builder builder = new Builder(parent);
        return builder;
      }
      /**
       * Protobuf type {@code CDOTAUserMsg_ParticleManager.ReleaseParticleIndex}
       */
      public static final class Builder extends
          com.google.protobuf.GeneratedMessage.Builder<Builder> implements
          // @@protoc_insertion_point(builder_implements:CDOTAUserMsg_ParticleManager.ReleaseParticleIndex)
          skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_ParticleManager.ReleaseParticleIndexOrBuilder {
        public static final com.google.protobuf.Descriptors.Descriptor
            getDescriptor() {
          return skadistats.clarity.wire.common.proto.DotaUserMessages.internal_static_CDOTAUserMsg_ParticleManager_ReleaseParticleIndex_descriptor;
        }

        protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
            internalGetFieldAccessorTable() {
          return skadistats.clarity.wire.common.proto.DotaUserMessages.internal_static_CDOTAUserMsg_ParticleManager_ReleaseParticleIndex_fieldAccessorTable
              .ensureFieldAccessorsInitialized(
                  skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_ParticleManager.ReleaseParticleIndex.class, skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_ParticleManager.ReleaseParticleIndex.Builder.class);
        }

        // Construct using skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_ParticleManager.ReleaseParticleIndex.newBuilder()
        private Builder() {
          maybeForceBuilderInitialization();
        }

        private Builder(
            com.google.protobuf.GeneratedMessage.BuilderParent parent) {
          super(parent);
          maybeForceBuilderInitialization();
        }
        private void maybeForceBuilderInitialization() {
          if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
          }
        }
        private static Builder create() {
          return new Builder();
        }

        public Builder clear() {
          super.clear();
          return this;
        }

        public Builder clone() {
          return create().mergeFrom(buildPartial());
        }

        public com.google.protobuf.Descriptors.Descriptor
            getDescriptorForType() {
          return skadistats.clarity.wire.common.proto.DotaUserMessages.internal_static_CDOTAUserMsg_ParticleManager_ReleaseParticleIndex_descriptor;
        }

        public skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_ParticleManager.ReleaseParticleIndex getDefaultInstanceForType() {
          return skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_ParticleManager.ReleaseParticleIndex.getDefaultInstance();
        }

        public skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_ParticleManager.ReleaseParticleIndex build() {
          skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_ParticleManager.ReleaseParticleIndex result = buildPartial();
          if (!result.isInitialized()) {
            throw newUninitializedMessageException(result);
          }
          return result;
        }

        public skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_ParticleManager.ReleaseParticleIndex buildPartial() {
          skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_ParticleManager.ReleaseParticleIndex result = new skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_ParticleManager.ReleaseParticleIndex(this);
          onBuilt();
          return result;
        }

        public Builder mergeFrom(com.google.protobuf.Message other) {
          if (other instanceof skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_ParticleManager.ReleaseParticleIndex) {
            return mergeFrom((skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_ParticleManager.ReleaseParticleIndex)other);
          } else {
            super.mergeFrom(other);
            return this;
          }
        }

        public Builder mergeFrom(skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_ParticleManager.ReleaseParticleIndex other) {
          if (other == skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_ParticleManager.ReleaseParticleIndex.getDefaultInstance()) return this;
          this.mergeUnknownFields(other.getUnknownFields());
          return this;
        }

        public final boolean isInitialized() {
          return true;
        }

        public Builder mergeFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws java.io.IOException {
          skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_ParticleManager.ReleaseParticleIndex parsedMessage = null;
          try {
            parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
          } catch (com.google.protobuf.InvalidProtocolBufferException e) {
            parsedMessage = (skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_ParticleManager.ReleaseParticleIndex) e.getUnfinishedMessage();
            throw e;
          } finally {
            if (parsedMessage != null) {
              mergeFrom(parsedMessage);
            }
          }
          return this;
        }

        // @@protoc_insertion_point(builder_scope:CDOTAUserMsg_ParticleManager.ReleaseParticleIndex)
      }

      static {
        defaultInstance = new ReleaseParticleIndex(true);
        defaultInstance.initFields();
      }

      // @@protoc_insertion_point(class_scope:CDOTAUserMsg_ParticleManager.ReleaseParticleIndex)
    }

    public interface CreateParticleOrBuilder extends
        // @@protoc_insertion_point(interface_extends:CDOTAUserMsg_ParticleManager.CreateParticle)
        com.google.protobuf.MessageOrBuilder {

      /**
       * <code>optional fixed64 particle_name_index = 1;</code>
       */
      boolean hasParticleNameIndex();
      /**
       * <code>optional fixed64 particle_name_index = 1;</code>
       */
      long getParticleNameIndex();

      /**
       * <code>optional int32 attach_type = 2;</code>
       */
      boolean hasAttachType();
      /**
       * <code>optional int32 attach_type = 2;</code>
       */
      int getAttachType();

      /**
       * <code>optional int32 entity_handle = 3;</code>
       */
      boolean hasEntityHandle();
      /**
       * <code>optional int32 entity_handle = 3;</code>
       */
      int getEntityHandle();

      /**
       * <code>optional int32 entity_handle_for_modifiers = 4;</code>
       */
      boolean hasEntityHandleForModifiers();
      /**
       * <code>optional int32 entity_handle_for_modifiers = 4;</code>
       */
      int getEntityHandleForModifiers();
    }
    /**
     * Protobuf type {@code CDOTAUserMsg_ParticleManager.CreateParticle}
     */
    public static final class CreateParticle extends
        com.google.protobuf.GeneratedMessage implements
        // @@protoc_insertion_point(message_implements:CDOTAUserMsg_ParticleManager.CreateParticle)
        CreateParticleOrBuilder {
      // Use CreateParticle.newBuilder() to construct.
      private CreateParticle(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
        super(builder);
        this.unknownFields = builder.getUnknownFields();
      }
      private CreateParticle(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

      private static final CreateParticle defaultInstance;
      public static CreateParticle getDefaultInstance() {
        return defaultInstance;
      }

      public CreateParticle getDefaultInstanceForType() {
        return defaultInstance;
      }

      private final com.google.protobuf.UnknownFieldSet unknownFields;
      @java.lang.Override
      public final com.google.protobuf.UnknownFieldSet
          getUnknownFields() {
        return this.unknownFields;
      }
      private CreateParticle(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        initFields();
        int mutable_bitField0_ = 0;
        com.google.protobuf.UnknownFieldSet.Builder unknownFields =
            com.google.protobuf.UnknownFieldSet.newBuilder();
        try {
          boolean done = false;
          while (!done) {
            int tag = input.readTag();
            switch (tag) {
              case 0:
                done = true;
                break;
              default: {
                if (!parseUnknownField(input, unknownFields,
                                       extensionRegistry, tag)) {
                  done = true;
                }
                break;
              }
              case 9: {
                bitField0_ |= 0x00000001;
                particleNameIndex_ = input.readFixed64();
                break;
              }
              case 16: {
                bitField0_ |= 0x00000002;
                attachType_ = input.readInt32();
                break;
              }
              case 24: {
                bitField0_ |= 0x00000004;
                entityHandle_ = input.readInt32();
                break;
              }
              case 32: {
                bitField0_ |= 0x00000008;
                entityHandleForModifiers_ = input.readInt32();
                break;
              }
            }
          }
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.setUnfinishedMessage(this);
        } catch (java.io.IOException e) {
          throw new com.google.protobuf.InvalidProtocolBufferException(
              e.getMessage()).setUnfinishedMessage(this);
        } finally {
          this.unknownFields = unknownFields.build();
          makeExtensionsImmutable();
        }
      }
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return skadistats.clarity.wire.common.proto.DotaUserMessages.internal_static_CDOTAUserMsg_ParticleManager_CreateParticle_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return skadistats.clarity.wire.common.proto.DotaUserMessages.internal_static_CDOTAUserMsg_ParticleManager_CreateParticle_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_ParticleManager.CreateParticle.class, skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_ParticleManager.CreateParticle.Builder.class);
      }

      public static com.google.protobuf.Parser<CreateParticle> PARSER =
          new com.google.protobuf.AbstractParser<CreateParticle>() {
        public CreateParticle parsePartialFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws com.google.protobuf.InvalidProtocolBufferException {
          return new CreateParticle(input, extensionRegistry);
        }
      };

      @java.lang.Override
      public com.google.protobuf.Parser<CreateParticle> getParserForType() {
        return PARSER;
      }

      private int bitField0_;
      public static final int PARTICLE_NAME_INDEX_FIELD_NUMBER = 1;
      private long particleNameIndex_;
      /**
       * <code>optional fixed64 particle_name_index = 1;</code>
       */
      public boolean hasParticleNameIndex() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>optional fixed64 particle_name_index = 1;</code>
       */
      public long getParticleNameIndex() {
        return particleNameIndex_;
      }

      public static final int ATTACH_TYPE_FIELD_NUMBER = 2;
      private int attachType_;
      /**
       * <code>optional int32 attach_type = 2;</code>
       */
      public boolean hasAttachType() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>optional int32 attach_type = 2;</code>
       */
      public int getAttachType() {
        return attachType_;
      }

      public static final int ENTITY_HANDLE_FIELD_NUMBER = 3;
      private int entityHandle_;
      /**
       * <code>optional int32 entity_handle = 3;</code>
       */
      public boolean hasEntityHandle() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }
      /**
       * <code>optional int32 entity_handle = 3;</code>
       */
      public int getEntityHandle() {
        return entityHandle_;
      }

      public static final int ENTITY_HANDLE_FOR_MODIFIERS_FIELD_NUMBER = 4;
      private int entityHandleForModifiers_;
      /**
       * <code>optional int32 entity_handle_for_modifiers = 4;</code>
       */
      public boolean hasEntityHandleForModifiers() {
        return ((bitField0_ & 0x00000008) == 0x00000008);
      }
      /**
       * <code>optional int32 entity_handle_for_modifiers = 4;</code>
       */
      public int getEntityHandleForModifiers() {
        return entityHandleForModifiers_;
      }

      private void initFields() {
        particleNameIndex_ = 0L;
        attachType_ = 0;
        entityHandle_ = 0;
        entityHandleForModifiers_ = 0;
      }
      private byte memoizedIsInitialized = -1;
      public final boolean isInitialized() {
        byte isInitialized = memoizedIsInitialized;
        if (isInitialized == 1) return true;
        if (isInitialized == 0) return false;

        memoizedIsInitialized = 1;
        return true;
      }

      public void writeTo(com.google.protobuf.CodedOutputStream output)
                          throws java.io.IOException {
        getSerializedSize();
        if (((bitField0_ & 0x00000001) == 0x00000001)) {
          output.writeFixed64(1, particleNameIndex_);
        }
        if (((bitField0_ & 0x00000002) == 0x00000002)) {
          output.writeInt32(2, attachType_);
        }
        if (((bitField0_ & 0x00000004) == 0x00000004)) {
          output.writeInt32(3, entityHandle_);
        }
        if (((bitField0_ & 0x00000008) == 0x00000008)) {
          output.writeInt32(4, entityHandleForModifiers_);
        }
        getUnknownFields().writeTo(output);
      }

      private int memoizedSerializedSize = -1;
      public int getSerializedSize() {
        int size = memoizedSerializedSize;
        if (size != -1) return size;

        size = 0;
        if (((bitField0_ & 0x00000001) == 0x00000001)) {
          size += com.google.protobuf.CodedOutputStream
            .computeFixed64Size(1, particleNameIndex_);
        }
        if (((bitField0_ & 0x00000002) == 0x00000002)) {
          size += com.google.protobuf.CodedOutputStream
            .computeInt32Size(2, attachType_);
        }
        if (((bitField0_ & 0x00000004) == 0x00000004)) {
          size += com.google.protobuf.CodedOutputStream
            .computeInt32Size(3, entityHandle_);
        }
        if (((bitField0_ & 0x00000008) == 0x00000008)) {
          size += com.google.protobuf.CodedOutputStream
            .computeInt32Size(4, entityHandleForModifiers_);
        }
        size += getUnknownFields().getSerializedSize();
        memoizedSerializedSize = size;
        return size;
      }

      private static final long serialVersionUID = 0L;
      @java.lang.Override
      protected java.lang.Object writeReplace()
          throws java.io.ObjectStreamException {
        return super.writeReplace();
      }

      public static skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_ParticleManager.CreateParticle parseFrom(
          com.google.protobuf.ByteString data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_ParticleManager.CreateParticle parseFrom(
          com.google.protobuf.ByteString data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_ParticleManager.CreateParticle parseFrom(byte[] data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_ParticleManager.CreateParticle parseFrom(
          byte[] data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_ParticleManager.CreateParticle parseFrom(java.io.InputStream input)
          throws java.io.IOException {
        return PARSER.parseFrom(input);
      }
      public static skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_ParticleManager.CreateParticle parseFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return PARSER.parseFrom(input, extensionRegistry);
      }
      public static skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_ParticleManager.CreateParticle parseDelimitedFrom(java.io.InputStream input)
          throws java.io.IOException {
        return PARSER.parseDelimitedFrom(input);
      }
      public static skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_ParticleManager.CreateParticle parseDelimitedFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return PARSER.parseDelimitedFrom(input, extensionRegistry);
      }
      public static skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_ParticleManager.CreateParticle parseFrom(
          com.google.protobuf.CodedInputStream input)
          throws java.io.IOException {
        return PARSER.parseFrom(input);
      }
      public static skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_ParticleManager.CreateParticle parseFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return PARSER.parseFrom(input, extensionRegistry);
      }

      public static Builder newBuilder() { return Builder.create(); }
      public Builder newBuilderForType() { return newBuilder(); }
      public static Builder newBuilder(skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_ParticleManager.CreateParticle prototype) {
        return newBuilder().mergeFrom(prototype);
      }
      public Builder toBuilder() { return newBuilder(this); }

      @java.lang.Override
      protected Builder newBuilderForType(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        Builder builder = new Builder(parent);
        return builder;
      }
      /**
       * Protobuf type {@code CDOTAUserMsg_ParticleManager.CreateParticle}
       */
      public static final class Builder extends
          com.google.protobuf.GeneratedMessage.Builder<Builder> implements
          // @@protoc_insertion_point(builder_implements:CDOTAUserMsg_ParticleManager.CreateParticle)
          skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_ParticleManager.CreateParticleOrBuilder {
        public static final com.google.protobuf.Descriptors.Descriptor
            getDescriptor() {
          return skadistats.clarity.wire.common.proto.DotaUserMessages.internal_static_CDOTAUserMsg_ParticleManager_CreateParticle_descriptor;
        }

        protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
            internalGetFieldAccessorTable() {
          return skadistats.clarity.wire.common.proto.DotaUserMessages.internal_static_CDOTAUserMsg_ParticleManager_CreateParticle_fieldAccessorTable
              .ensureFieldAccessorsInitialized(
                  skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_ParticleManager.CreateParticle.class, skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_ParticleManager.CreateParticle.Builder.class);
        }

        // Construct using skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_ParticleManager.CreateParticle.newBuilder()
        private Builder() {
          maybeForceBuilderInitialization();
        }

        private Builder(
            com.google.protobuf.GeneratedMessage.BuilderParent parent) {
          super(parent);
          maybeForceBuilderInitialization();
        }
        private void maybeForceBuilderInitialization() {
          if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
          }
        }
        private static Builder create() {
          return new Builder();
        }

        public Builder clear() {
          super.clear();
          particleNameIndex_ = 0L;
          bitField0_ = (bitField0_ & ~0x00000001);
          attachType_ = 0;
          bitField0_ = (bitField0_ & ~0x00000002);
          entityHandle_ = 0;
          bitField0_ = (bitField0_ & ~0x00000004);
          entityHandleForModifiers_ = 0;
          bitField0_ = (bitField0_ & ~0x00000008);
          return this;
        }

        public Builder clone() {
          return create().mergeFrom(buildPartial());
        }

        public com.google.protobuf.Descriptors.Descriptor
            getDescriptorForType() {
          return skadistats.clarity.wire.common.proto.DotaUserMessages.internal_static_CDOTAUserMsg_ParticleManager_CreateParticle_descriptor;
        }

        public skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_ParticleManager.CreateParticle getDefaultInstanceForType() {
          return skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_ParticleManager.CreateParticle.getDefaultInstance();
        }

        public skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_ParticleManager.CreateParticle build() {
          skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_ParticleManager.CreateParticle result = buildPartial();
          if (!result.isInitialized()) {
            throw newUninitializedMessageException(result);
          }
          return result;
        }

        public skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_ParticleManager.CreateParticle buildPartial() {
          skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_ParticleManager.CreateParticle result = new skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_ParticleManager.CreateParticle(this);
          int from_bitField0_ = bitField0_;
          int to_bitField0_ = 0;
          if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
            to_bitField0_ |= 0x00000001;
          }
          result.particleNameIndex_ = particleNameIndex_;
          if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
            to_bitField0_ |= 0x00000002;
          }
          result.attachType_ = attachType_;
          if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
            to_bitField0_ |= 0x00000004;
          }
          result.entityHandle_ = entityHandle_;
          if (((from_bitField0_ & 0x00000008) == 0x00000008)) {
            to_bitField0_ |= 0x00000008;
          }
          result.entityHandleForModifiers_ = entityHandleForModifiers_;
          result.bitField0_ = to_bitField0_;
          onBuilt();
          return result;
        }

        public Builder mergeFrom(com.google.protobuf.Message other) {
          if (other instanceof skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_ParticleManager.CreateParticle) {
            return mergeFrom((skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_ParticleManager.CreateParticle)other);
          } else {
            super.mergeFrom(other);
            return this;
          }
        }

        public Builder mergeFrom(skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_ParticleManager.CreateParticle other) {
          if (other == skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_ParticleManager.CreateParticle.getDefaultInstance()) return this;
          if (other.hasParticleNameIndex()) {
            setParticleNameIndex(other.getParticleNameIndex());
          }
          if (other.hasAttachType()) {
            setAttachType(other.getAttachType());
          }
          if (other.hasEntityHandle()) {
            setEntityHandle(other.getEntityHandle());
          }
          if (other.hasEntityHandleForModifiers()) {
            setEntityHandleForModifiers(other.getEntityHandleForModifiers());
          }
          this.mergeUnknownFields(other.getUnknownFields());
          return this;
        }

        public final boolean isInitialized() {
          return true;
        }

        public Builder mergeFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws java.io.IOException {
          skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_ParticleManager.CreateParticle parsedMessage = null;
          try {
            parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
          } catch (com.google.protobuf.InvalidProtocolBufferException e) {
            parsedMessage = (skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_ParticleManager.CreateParticle) e.getUnfinishedMessage();
            throw e;
          } finally {
            if (parsedMessage != null) {
              mergeFrom(parsedMessage);
            }
          }
          return this;
        }
        private int bitField0_;

        private long particleNameIndex_ ;
        /**
         * <code>optional fixed64 particle_name_index = 1;</code>
         */
        public boolean hasParticleNameIndex() {
          return ((bitField0_ & 0x00000001) == 0x00000001);
        }
        /**
         * <code>optional fixed64 particle_name_index = 1;</code>
         */
        public long getParticleNameIndex() {
          return particleNameIndex_;
        }
        /**
         * <code>optional fixed64 particle_name_index = 1;</code>
         */
        public Builder setParticleNameIndex(long value) {
          bitField0_ |= 0x00000001;
          particleNameIndex_ = value;
          onChanged();
          return this;
        }
        /**
         * <code>optional fixed64 particle_name_index = 1;</code>
         */
        public Builder clearParticleNameIndex() {
          bitField0_ = (bitField0_ & ~0x00000001);
          particleNameIndex_ = 0L;
          onChanged();
          return this;
        }

        private int attachType_ ;
        /**
         * <code>optional int32 attach_type = 2;</code>
         */
        public boolean hasAttachType() {
          return ((bitField0_ & 0x00000002) == 0x00000002);
        }
        /**
         * <code>optional int32 attach_type = 2;</code>
         */
        public int getAttachType() {
          return attachType_;
        }
        /**
         * <code>optional int32 attach_type = 2;</code>
         */
        public Builder setAttachType(int value) {
          bitField0_ |= 0x00000002;
          attachType_ = value;
          onChanged();
          return this;
        }
        /**
         * <code>optional int32 attach_type = 2;</code>
         */
        public Builder clearAttachType() {
          bitField0_ = (bitField0_ & ~0x00000002);
          attachType_ = 0;
          onChanged();
          return this;
        }

        private int entityHandle_ ;
        /**
         * <code>optional int32 entity_handle = 3;</code>
         */
        public boolean hasEntityHandle() {
          return ((bitField0_ & 0x00000004) == 0x00000004);
        }
        /**
         * <code>optional int32 entity_handle = 3;</code>
         */
        public int getEntityHandle() {
          return entityHandle_;
        }
        /**
         * <code>optional int32 entity_handle = 3;</code>
         */
        public Builder setEntityHandle(int value) {
          bitField0_ |= 0x00000004;
          entityHandle_ = value;
          onChanged();
          return this;
        }
        /**
         * <code>optional int32 entity_handle = 3;</code>
         */
        public Builder clearEntityHandle() {
          bitField0_ = (bitField0_ & ~0x00000004);
          entityHandle_ = 0;
          onChanged();
          return this;
        }

        private int entityHandleForModifiers_ ;
        /**
         * <code>optional int32 entity_handle_for_modifiers = 4;</code>
         */
        public boolean hasEntityHandleForModifiers() {
          return ((bitField0_ & 0x00000008) == 0x00000008);
        }
        /**
         * <code>optional int32 entity_handle_for_modifiers = 4;</code>
         */
        public int getEntityHandleForModifiers() {
          return entityHandleForModifiers_;
        }
        /**
         * <code>optional int32 entity_handle_for_modifiers = 4;</code>
         */
        public Builder setEntityHandleForModifiers(int value) {
          bitField0_ |= 0x00000008;
          entityHandleForModifiers_ = value;
          onChanged();
          return this;
        }
        /**
         * <code>optional int32 entity_handle_for_modifiers = 4;</code>
         */
        public Builder clearEntityHandleForModifiers() {
          bitField0_ = (bitField0_ & ~0x00000008);
          entityHandleForModifiers_ = 0;
          onChanged();
          return this;
        }

        // @@protoc_insertion_point(builder_scope:CDOTAUserMsg_ParticleManager.CreateParticle)
      }

      static {
        defaultInstance = new CreateParticle(true);
        defaultInstance.initFields();
      }

      // @@protoc_insertion_point(class_scope:CDOTAUserMsg_ParticleManager.CreateParticle)
    }

    public interface DestroyParticleOrBuilder extends
        // @@protoc_insertion_point(interface_extends:CDOTAUserMsg_ParticleManager.DestroyParticle)
        com.google.protobuf.MessageOrBuilder {

      /**
       * <code>optional bool destroy_immediately = 1;</code>
       */
      boolean hasDestroyImmediately();
      /**
       * <code>optional bool destroy_immediately = 1;</code>
       */
      boolean getDestroyImmediately();
    }
    /**
     * Protobuf type {@code CDOTAUserMsg_ParticleManager.DestroyParticle}
     */
    public static final class DestroyParticle extends
        com.google.protobuf.GeneratedMessage implements
        // @@protoc_insertion_point(message_implements:CDOTAUserMsg_ParticleManager.DestroyParticle)
        DestroyParticleOrBuilder {
      // Use DestroyParticle.newBuilder() to construct.
      private DestroyParticle(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
        super(builder);
        this.unknownFields = builder.getUnknownFields();
      }
      private DestroyParticle(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

      private static final DestroyParticle defaultInstance;
      public static DestroyParticle getDefaultInstance() {
        return defaultInstance;
      }

      public DestroyParticle getDefaultInstanceForType() {
        return defaultInstance;
      }

      private final com.google.protobuf.UnknownFieldSet unknownFields;
      @java.lang.Override
      public final com.google.protobuf.UnknownFieldSet
          getUnknownFields() {
        return this.unknownFields;
      }
      private DestroyParticle(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        initFields();
        int mutable_bitField0_ = 0;
        com.google.protobuf.UnknownFieldSet.Builder unknownFields =
            com.google.protobuf.UnknownFieldSet.newBuilder();
        try {
          boolean done = false;
          while (!done) {
            int tag = input.readTag();
            switch (tag) {
              case 0:
                done = true;
                break;
              default: {
                if (!parseUnknownField(input, unknownFields,
                                       extensionRegistry, tag)) {
                  done = true;
                }
                break;
              }
              case 8: {
                bitField0_ |= 0x00000001;
                destroyImmediately_ = input.readBool();
                break;
              }
            }
          }
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.setUnfinishedMessage(this);
        } catch (java.io.IOException e) {
          throw new com.google.protobuf.InvalidProtocolBufferException(
              e.getMessage()).setUnfinishedMessage(this);
        } finally {
          this.unknownFields = unknownFields.build();
          makeExtensionsImmutable();
        }
      }
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return skadistats.clarity.wire.common.proto.DotaUserMessages.internal_static_CDOTAUserMsg_ParticleManager_DestroyParticle_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return skadistats.clarity.wire.common.proto.DotaUserMessages.internal_static_CDOTAUserMsg_ParticleManager_DestroyParticle_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_ParticleManager.DestroyParticle.class, skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_ParticleManager.DestroyParticle.Builder.class);
      }

      public static com.google.protobuf.Parser<DestroyParticle> PARSER =
          new com.google.protobuf.AbstractParser<DestroyParticle>() {
        public DestroyParticle parsePartialFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws com.google.protobuf.InvalidProtocolBufferException {
          return new DestroyParticle(input, extensionRegistry);
        }
      };

      @java.lang.Override
      public com.google.protobuf.Parser<DestroyParticle> getParserForType() {
        return PARSER;
      }

      private int bitField0_;
      public static final int DESTROY_IMMEDIATELY_FIELD_NUMBER = 1;
      private boolean destroyImmediately_;
      /**
       * <code>optional bool destroy_immediately = 1;</code>
       */
      public boolean hasDestroyImmediately() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>optional bool destroy_immediately = 1;</code>
       */
      public boolean getDestroyImmediately() {
        return destroyImmediately_;
      }

      private void initFields() {
        destroyImmediately_ = false;
      }
      private byte memoizedIsInitialized = -1;
      public final boolean isInitialized() {
        byte isInitialized = memoizedIsInitialized;
        if (isInitialized == 1) return true;
        if (isInitialized == 0) return false;

        memoizedIsInitialized = 1;
        return true;
      }

      public void writeTo(com.google.protobuf.CodedOutputStream output)
                          throws java.io.IOException {
        getSerializedSize();
        if (((bitField0_ & 0x00000001) == 0x00000001)) {
          output.writeBool(1, destroyImmediately_);
        }
        getUnknownFields().writeTo(output);
      }

      private int memoizedSerializedSize = -1;
      public int getSerializedSize() {
        int size = memoizedSerializedSize;
        if (size != -1) return size;

        size = 0;
        if (((bitField0_ & 0x00000001) == 0x00000001)) {
          size += com.google.protobuf.CodedOutputStream
            .computeBoolSize(1, destroyImmediately_);
        }
        size += getUnknownFields().getSerializedSize();
        memoizedSerializedSize = size;
        return size;
      }

      private static final long serialVersionUID = 0L;
      @java.lang.Override
      protected java.lang.Object writeReplace()
          throws java.io.ObjectStreamException {
        return super.writeReplace();
      }

      public static skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_ParticleManager.DestroyParticle parseFrom(
          com.google.protobuf.ByteString data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_ParticleManager.DestroyParticle parseFrom(
          com.google.protobuf.ByteString data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_ParticleManager.DestroyParticle parseFrom(byte[] data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_ParticleManager.DestroyParticle parseFrom(
          byte[] data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_ParticleManager.DestroyParticle parseFrom(java.io.InputStream input)
          throws java.io.IOException {
        return PARSER.parseFrom(input);
      }
      public static skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_ParticleManager.DestroyParticle parseFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return PARSER.parseFrom(input, extensionRegistry);
      }
      public static skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_ParticleManager.DestroyParticle parseDelimitedFrom(java.io.InputStream input)
          throws java.io.IOException {
        return PARSER.parseDelimitedFrom(input);
      }
      public static skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_ParticleManager.DestroyParticle parseDelimitedFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return PARSER.parseDelimitedFrom(input, extensionRegistry);
      }
      public static skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_ParticleManager.DestroyParticle parseFrom(
          com.google.protobuf.CodedInputStream input)
          throws java.io.IOException {
        return PARSER.parseFrom(input);
      }
      public static skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_ParticleManager.DestroyParticle parseFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return PARSER.parseFrom(input, extensionRegistry);
      }

      public static Builder newBuilder() { return Builder.create(); }
      public Builder newBuilderForType() { return newBuilder(); }
      public static Builder newBuilder(skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_ParticleManager.DestroyParticle prototype) {
        return newBuilder().mergeFrom(prototype);
      }
      public Builder toBuilder() { return newBuilder(this); }

      @java.lang.Override
      protected Builder newBuilderForType(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        Builder builder = new Builder(parent);
        return builder;
      }
      /**
       * Protobuf type {@code CDOTAUserMsg_ParticleManager.DestroyParticle}
       */
      public static final class Builder extends
          com.google.protobuf.GeneratedMessage.Builder<Builder> implements
          // @@protoc_insertion_point(builder_implements:CDOTAUserMsg_ParticleManager.DestroyParticle)
          skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_ParticleManager.DestroyParticleOrBuilder {
        public static final com.google.protobuf.Descriptors.Descriptor
            getDescriptor() {
          return skadistats.clarity.wire.common.proto.DotaUserMessages.internal_static_CDOTAUserMsg_ParticleManager_DestroyParticle_descriptor;
        }

        protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
            internalGetFieldAccessorTable() {
          return skadistats.clarity.wire.common.proto.DotaUserMessages.internal_static_CDOTAUserMsg_ParticleManager_DestroyParticle_fieldAccessorTable
              .ensureFieldAccessorsInitialized(
                  skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_ParticleManager.DestroyParticle.class, skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_ParticleManager.DestroyParticle.Builder.class);
        }

        // Construct using skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_ParticleManager.DestroyParticle.newBuilder()
        private Builder() {
          maybeForceBuilderInitialization();
        }

        private Builder(
            com.google.protobuf.GeneratedMessage.BuilderParent parent) {
          super(parent);
          maybeForceBuilderInitialization();
        }
        private void maybeForceBuilderInitialization() {
          if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
          }
        }
        private static Builder create() {
          return new Builder();
        }

        public Builder clear() {
          super.clear();
          destroyImmediately_ = false;
          bitField0_ = (bitField0_ & ~0x00000001);
          return this;
        }

        public Builder clone() {
          return create().mergeFrom(buildPartial());
        }

        public com.google.protobuf.Descriptors.Descriptor
            getDescriptorForType() {
          return skadistats.clarity.wire.common.proto.DotaUserMessages.internal_static_CDOTAUserMsg_ParticleManager_DestroyParticle_descriptor;
        }

        public skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_ParticleManager.DestroyParticle getDefaultInstanceForType() {
          return skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_ParticleManager.DestroyParticle.getDefaultInstance();
        }

        public skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_ParticleManager.DestroyParticle build() {
          skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_ParticleManager.DestroyParticle result = buildPartial();
          if (!result.isInitialized()) {
            throw newUninitializedMessageException(result);
          }
          return result;
        }

        public skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_ParticleManager.DestroyParticle buildPartial() {
          skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_ParticleManager.DestroyParticle result = new skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_ParticleManager.DestroyParticle(this);
          int from_bitField0_ = bitField0_;
          int to_bitField0_ = 0;
          if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
            to_bitField0_ |= 0x00000001;
          }
          result.destroyImmediately_ = destroyImmediately_;
          result.bitField0_ = to_bitField0_;
          onBuilt();
          return result;
        }

        public Builder mergeFrom(com.google.protobuf.Message other) {
          if (other instanceof skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_ParticleManager.DestroyParticle) {
            return mergeFrom((skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_ParticleManager.DestroyParticle)other);
          } else {
            super.mergeFrom(other);
            return this;
          }
        }

        public Builder mergeFrom(skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_ParticleManager.DestroyParticle other) {
          if (other == skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_ParticleManager.DestroyParticle.getDefaultInstance()) return this;
          if (other.hasDestroyImmediately()) {
            setDestroyImmediately(other.getDestroyImmediately());
          }
          this.mergeUnknownFields(other.getUnknownFields());
          return this;
        }

        public final boolean isInitialized() {
          return true;
        }

        public Builder mergeFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws java.io.IOException {
          skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_ParticleManager.DestroyParticle parsedMessage = null;
          try {
            parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
          } catch (com.google.protobuf.InvalidProtocolBufferException e) {
            parsedMessage = (skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_ParticleManager.DestroyParticle) e.getUnfinishedMessage();
            throw e;
          } finally {
            if (parsedMessage != null) {
              mergeFrom(parsedMessage);
            }
          }
          return this;
        }
        private int bitField0_;

        private boolean destroyImmediately_ ;
        /**
         * <code>optional bool destroy_immediately = 1;</code>
         */
        public boolean hasDestroyImmediately() {
          return ((bitField0_ & 0x00000001) == 0x00000001);
        }
        /**
         * <code>optional bool destroy_immediately = 1;</code>
         */
        public boolean getDestroyImmediately() {
          return destroyImmediately_;
        }
        /**
         * <code>optional bool destroy_immediately = 1;</code>
         */
        public Builder setDestroyImmediately(boolean value) {
          bitField0_ |= 0x00000001;
          destroyImmediately_ = value;
          onChanged();
          return this;
        }
        /**
         * <code>optional bool destroy_immediately = 1;</code>
         */
        public Builder clearDestroyImmediately() {
          bitField0_ = (bitField0_ & ~0x00000001);
          destroyImmediately_ = false;
          onChanged();
          return this;
        }

        // @@protoc_insertion_point(builder_scope:CDOTAUserMsg_ParticleManager.DestroyParticle)
      }

      static {
        defaultInstance = new DestroyParticle(true);
        defaultInstance.initFields();
      }

      // @@protoc_insertion_point(class_scope:CDOTAUserMsg_ParticleManager.DestroyParticle)
    }

    public interface DestroyParticleInvolvingOrBuilder extends
        // @@protoc_insertion_point(interface_extends:CDOTAUserMsg_ParticleManager.DestroyParticleInvolving)
        com.google.protobuf.MessageOrBuilder {

      /**
       * <code>optional bool destroy_immediately = 1;</code>
       */
      boolean hasDestroyImmediately();
      /**
       * <code>optional bool destroy_immediately = 1;</code>
       */
      boolean getDestroyImmediately();

      /**
       * <code>optional int32 entity_handle = 3;</code>
       */
      boolean hasEntityHandle();
      /**
       * <code>optional int32 entity_handle = 3;</code>
       */
      int getEntityHandle();
    }
    /**
     * Protobuf type {@code CDOTAUserMsg_ParticleManager.DestroyParticleInvolving}
     */
    public static final class DestroyParticleInvolving extends
        com.google.protobuf.GeneratedMessage implements
        // @@protoc_insertion_point(message_implements:CDOTAUserMsg_ParticleManager.DestroyParticleInvolving)
        DestroyParticleInvolvingOrBuilder {
      // Use DestroyParticleInvolving.newBuilder() to construct.
      private DestroyParticleInvolving(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
        super(builder);
        this.unknownFields = builder.getUnknownFields();
      }
      private DestroyParticleInvolving(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

      private static final DestroyParticleInvolving defaultInstance;
      public static DestroyParticleInvolving getDefaultInstance() {
        return defaultInstance;
      }

      public DestroyParticleInvolving getDefaultInstanceForType() {
        return defaultInstance;
      }

      private final com.google.protobuf.UnknownFieldSet unknownFields;
      @java.lang.Override
      public final com.google.protobuf.UnknownFieldSet
          getUnknownFields() {
        return this.unknownFields;
      }
      private DestroyParticleInvolving(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        initFields();
        int mutable_bitField0_ = 0;
        com.google.protobuf.UnknownFieldSet.Builder unknownFields =
            com.google.protobuf.UnknownFieldSet.newBuilder();
        try {
          boolean done = false;
          while (!done) {
            int tag = input.readTag();
            switch (tag) {
              case 0:
                done = true;
                break;
              default: {
                if (!parseUnknownField(input, unknownFields,
                                       extensionRegistry, tag)) {
                  done = true;
                }
                break;
              }
              case 8: {
                bitField0_ |= 0x00000001;
                destroyImmediately_ = input.readBool();
                break;
              }
              case 24: {
                bitField0_ |= 0x00000002;
                entityHandle_ = input.readInt32();
                break;
              }
            }
          }
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.setUnfinishedMessage(this);
        } catch (java.io.IOException e) {
          throw new com.google.protobuf.InvalidProtocolBufferException(
              e.getMessage()).setUnfinishedMessage(this);
        } finally {
          this.unknownFields = unknownFields.build();
          makeExtensionsImmutable();
        }
      }
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return skadistats.clarity.wire.common.proto.DotaUserMessages.internal_static_CDOTAUserMsg_ParticleManager_DestroyParticleInvolving_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return skadistats.clarity.wire.common.proto.DotaUserMessages.internal_static_CDOTAUserMsg_ParticleManager_DestroyParticleInvolving_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_ParticleManager.DestroyParticleInvolving.class, skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_ParticleManager.DestroyParticleInvolving.Builder.class);
      }

      public static com.google.protobuf.Parser<DestroyParticleInvolving> PARSER =
          new com.google.protobuf.AbstractParser<DestroyParticleInvolving>() {
        public DestroyParticleInvolving parsePartialFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws com.google.protobuf.InvalidProtocolBufferException {
          return new DestroyParticleInvolving(input, extensionRegistry);
        }
      };

      @java.lang.Override
      public com.google.protobuf.Parser<DestroyParticleInvolving> getParserForType() {
        return PARSER;
      }

      private int bitField0_;
      public static final int DESTROY_IMMEDIATELY_FIELD_NUMBER = 1;
      private boolean destroyImmediately_;
      /**
       * <code>optional bool destroy_immediately = 1;</code>
       */
      public boolean hasDestroyImmediately() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>optional bool destroy_immediately = 1;</code>
       */
      public boolean getDestroyImmediately() {
        return destroyImmediately_;
      }

      public static final int ENTITY_HANDLE_FIELD_NUMBER = 3;
      private int entityHandle_;
      /**
       * <code>optional int32 entity_handle = 3;</code>
       */
      public boolean hasEntityHandle() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>optional int32 entity_handle = 3;</code>
       */
      public int getEntityHandle() {
        return entityHandle_;
      }

      private void initFields() {
        destroyImmediately_ = false;
        entityHandle_ = 0;
      }
      private byte memoizedIsInitialized = -1;
      public final boolean isInitialized() {
        byte isInitialized = memoizedIsInitialized;
        if (isInitialized == 1) return true;
        if (isInitialized == 0) return false;

        memoizedIsInitialized = 1;
        return true;
      }

      public void writeTo(com.google.protobuf.CodedOutputStream output)
                          throws java.io.IOException {
        getSerializedSize();
        if (((bitField0_ & 0x00000001) == 0x00000001)) {
          output.writeBool(1, destroyImmediately_);
        }
        if (((bitField0_ & 0x00000002) == 0x00000002)) {
          output.writeInt32(3, entityHandle_);
        }
        getUnknownFields().writeTo(output);
      }

      private int memoizedSerializedSize = -1;
      public int getSerializedSize() {
        int size = memoizedSerializedSize;
        if (size != -1) return size;

        size = 0;
        if (((bitField0_ & 0x00000001) == 0x00000001)) {
          size += com.google.protobuf.CodedOutputStream
            .computeBoolSize(1, destroyImmediately_);
        }
        if (((bitField0_ & 0x00000002) == 0x00000002)) {
          size += com.google.protobuf.CodedOutputStream
            .computeInt32Size(3, entityHandle_);
        }
        size += getUnknownFields().getSerializedSize();
        memoizedSerializedSize = size;
        return size;
      }

      private static final long serialVersionUID = 0L;
      @java.lang.Override
      protected java.lang.Object writeReplace()
          throws java.io.ObjectStreamException {
        return super.writeReplace();
      }

      public static skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_ParticleManager.DestroyParticleInvolving parseFrom(
          com.google.protobuf.ByteString data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_ParticleManager.DestroyParticleInvolving parseFrom(
          com.google.protobuf.ByteString data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_ParticleManager.DestroyParticleInvolving parseFrom(byte[] data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_ParticleManager.DestroyParticleInvolving parseFrom(
          byte[] data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_ParticleManager.DestroyParticleInvolving parseFrom(java.io.InputStream input)
          throws java.io.IOException {
        return PARSER.parseFrom(input);
      }
      public static skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_ParticleManager.DestroyParticleInvolving parseFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return PARSER.parseFrom(input, extensionRegistry);
      }
      public static skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_ParticleManager.DestroyParticleInvolving parseDelimitedFrom(java.io.InputStream input)
          throws java.io.IOException {
        return PARSER.parseDelimitedFrom(input);
      }
      public static skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_ParticleManager.DestroyParticleInvolving parseDelimitedFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return PARSER.parseDelimitedFrom(input, extensionRegistry);
      }
      public static skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_ParticleManager.DestroyParticleInvolving parseFrom(
          com.google.protobuf.CodedInputStream input)
          throws java.io.IOException {
        return PARSER.parseFrom(input);
      }
      public static skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_ParticleManager.DestroyParticleInvolving parseFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return PARSER.parseFrom(input, extensionRegistry);
      }

      public static Builder newBuilder() { return Builder.create(); }
      public Builder newBuilderForType() { return newBuilder(); }
      public static Builder newBuilder(skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_ParticleManager.DestroyParticleInvolving prototype) {
        return newBuilder().mergeFrom(prototype);
      }
      public Builder toBuilder() { return newBuilder(this); }

      @java.lang.Override
      protected Builder newBuilderForType(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        Builder builder = new Builder(parent);
        return builder;
      }
      /**
       * Protobuf type {@code CDOTAUserMsg_ParticleManager.DestroyParticleInvolving}
       */
      public static final class Builder extends
          com.google.protobuf.GeneratedMessage.Builder<Builder> implements
          // @@protoc_insertion_point(builder_implements:CDOTAUserMsg_ParticleManager.DestroyParticleInvolving)
          skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_ParticleManager.DestroyParticleInvolvingOrBuilder {
        public static final com.google.protobuf.Descriptors.Descriptor
            getDescriptor() {
          return skadistats.clarity.wire.common.proto.DotaUserMessages.internal_static_CDOTAUserMsg_ParticleManager_DestroyParticleInvolving_descriptor;
        }

        protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
            internalGetFieldAccessorTable() {
          return skadistats.clarity.wire.common.proto.DotaUserMessages.internal_static_CDOTAUserMsg_ParticleManager_DestroyParticleInvolving_fieldAccessorTable
              .ensureFieldAccessorsInitialized(
                  skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_ParticleManager.DestroyParticleInvolving.class, skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_ParticleManager.DestroyParticleInvolving.Builder.class);
        }

        // Construct using skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_ParticleManager.DestroyParticleInvolving.newBuilder()
        private Builder() {
          maybeForceBuilderInitialization();
        }

        private Builder(
            com.google.protobuf.GeneratedMessage.BuilderParent parent) {
          super(parent);
          maybeForceBuilderInitialization();
        }
        private void maybeForceBuilderInitialization() {
          if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
          }
        }
        private static Builder create() {
          return new Builder();
        }

        public Builder clear() {
          super.clear();
          destroyImmediately_ = false;
          bitField0_ = (bitField0_ & ~0x00000001);
          entityHandle_ = 0;
          bitField0_ = (bitField0_ & ~0x00000002);
          return this;
        }

        public Builder clone() {
          return create().mergeFrom(buildPartial());
        }

        public com.google.protobuf.Descriptors.Descriptor
            getDescriptorForType() {
          return skadistats.clarity.wire.common.proto.DotaUserMessages.internal_static_CDOTAUserMsg_ParticleManager_DestroyParticleInvolving_descriptor;
        }

        public skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_ParticleManager.DestroyParticleInvolving getDefaultInstanceForType() {
          return skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_ParticleManager.DestroyParticleInvolving.getDefaultInstance();
        }

        public skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_ParticleManager.DestroyParticleInvolving build() {
          skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_ParticleManager.DestroyParticleInvolving result = buildPartial();
          if (!result.isInitialized()) {
            throw newUninitializedMessageException(result);
          }
          return result;
        }

        public skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_ParticleManager.DestroyParticleInvolving buildPartial() {
          skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_ParticleManager.DestroyParticleInvolving result = new skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_ParticleManager.DestroyParticleInvolving(this);
          int from_bitField0_ = bitField0_;
          int to_bitField0_ = 0;
          if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
            to_bitField0_ |= 0x00000001;
          }
          result.destroyImmediately_ = destroyImmediately_;
          if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
            to_bitField0_ |= 0x00000002;
          }
          result.entityHandle_ = entityHandle_;
          result.bitField0_ = to_bitField0_;
          onBuilt();
          return result;
        }

        public Builder mergeFrom(com.google.protobuf.Message other) {
          if (other instanceof skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_ParticleManager.DestroyParticleInvolving) {
            return mergeFrom((skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_ParticleManager.DestroyParticleInvolving)other);
          } else {
            super.mergeFrom(other);
            return this;
          }
        }

        public Builder mergeFrom(skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_ParticleManager.DestroyParticleInvolving other) {
          if (other == skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_ParticleManager.DestroyParticleInvolving.getDefaultInstance()) return this;
          if (other.hasDestroyImmediately()) {
            setDestroyImmediately(other.getDestroyImmediately());
          }
          if (other.hasEntityHandle()) {
            setEntityHandle(other.getEntityHandle());
          }
          this.mergeUnknownFields(other.getUnknownFields());
          return this;
        }

        public final boolean isInitialized() {
          return true;
        }

        public Builder mergeFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws java.io.IOException {
          skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_ParticleManager.DestroyParticleInvolving parsedMessage = null;
          try {
            parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
          } catch (com.google.protobuf.InvalidProtocolBufferException e) {
            parsedMessage = (skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_ParticleManager.DestroyParticleInvolving) e.getUnfinishedMessage();
            throw e;
          } finally {
            if (parsedMessage != null) {
              mergeFrom(parsedMessage);
            }
          }
          return this;
        }
        private int bitField0_;

        private boolean destroyImmediately_ ;
        /**
         * <code>optional bool destroy_immediately = 1;</code>
         */
        public boolean hasDestroyImmediately() {
          return ((bitField0_ & 0x00000001) == 0x00000001);
        }
        /**
         * <code>optional bool destroy_immediately = 1;</code>
         */
        public boolean getDestroyImmediately() {
          return destroyImmediately_;
        }
        /**
         * <code>optional bool destroy_immediately = 1;</code>
         */
        public Builder setDestroyImmediately(boolean value) {
          bitField0_ |= 0x00000001;
          destroyImmediately_ = value;
          onChanged();
          return this;
        }
        /**
         * <code>optional bool destroy_immediately = 1;</code>
         */
        public Builder clearDestroyImmediately() {
          bitField0_ = (bitField0_ & ~0x00000001);
          destroyImmediately_ = false;
          onChanged();
          return this;
        }

        private int entityHandle_ ;
        /**
         * <code>optional int32 entity_handle = 3;</code>
         */
        public boolean hasEntityHandle() {
          return ((bitField0_ & 0x00000002) == 0x00000002);
        }
        /**
         * <code>optional int32 entity_handle = 3;</code>
         */
        public int getEntityHandle() {
          return entityHandle_;
        }
        /**
         * <code>optional int32 entity_handle = 3;</code>
         */
        public Builder setEntityHandle(int value) {
          bitField0_ |= 0x00000002;
          entityHandle_ = value;
          onChanged();
          return this;
        }
        /**
         * <code>optional int32 entity_handle = 3;</code>
         */
        public Builder clearEntityHandle() {
          bitField0_ = (bitField0_ & ~0x00000002);
          entityHandle_ = 0;
          onChanged();
          return this;
        }

        // @@protoc_insertion_point(builder_scope:CDOTAUserMsg_ParticleManager.DestroyParticleInvolving)
      }

      static {
        defaultInstance = new DestroyParticleInvolving(true);
        defaultInstance.initFields();
      }

      // @@protoc_insertion_point(class_scope:CDOTAUserMsg_ParticleManager.DestroyParticleInvolving)
    }

    public interface UpdateParticleOrBuilder extends
        // @@protoc_insertion_point(interface_extends:CDOTAUserMsg_ParticleManager.UpdateParticle)
        com.google.protobuf.MessageOrBuilder {

      /**
       * <code>optional int32 control_point = 1;</code>
       */
      boolean hasControlPoint();
      /**
       * <code>optional int32 control_point = 1;</code>
       */
      int getControlPoint();

      /**
       * <code>optional .CMsgVector position = 2;</code>
       */
      boolean hasPosition();
      /**
       * <code>optional .CMsgVector position = 2;</code>
       */
      skadistats.clarity.wire.common.proto.NetworkBaseTypes.CMsgVector getPosition();
      /**
       * <code>optional .CMsgVector position = 2;</code>
       */
      skadistats.clarity.wire.common.proto.NetworkBaseTypes.CMsgVectorOrBuilder getPositionOrBuilder();
    }
    /**
     * Protobuf type {@code CDOTAUserMsg_ParticleManager.UpdateParticle}
     */
    public static final class UpdateParticle extends
        com.google.protobuf.GeneratedMessage implements
        // @@protoc_insertion_point(message_implements:CDOTAUserMsg_ParticleManager.UpdateParticle)
        UpdateParticleOrBuilder {
      // Use UpdateParticle.newBuilder() to construct.
      private UpdateParticle(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
        super(builder);
        this.unknownFields = builder.getUnknownFields();
      }
      private UpdateParticle(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

      private static final UpdateParticle defaultInstance;
      public static UpdateParticle getDefaultInstance() {
        return defaultInstance;
      }

      public UpdateParticle getDefaultInstanceForType() {
        return defaultInstance;
      }

      private final com.google.protobuf.UnknownFieldSet unknownFields;
      @java.lang.Override
      public final com.google.protobuf.UnknownFieldSet
          getUnknownFields() {
        return this.unknownFields;
      }
      private UpdateParticle(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        initFields();
        int mutable_bitField0_ = 0;
        com.google.protobuf.UnknownFieldSet.Builder unknownFields =
            com.google.protobuf.UnknownFieldSet.newBuilder();
        try {
          boolean done = false;
          while (!done) {
            int tag = input.readTag();
            switch (tag) {
              case 0:
                done = true;
                break;
              default: {
                if (!parseUnknownField(input, unknownFields,
                                       extensionRegistry, tag)) {
                  done = true;
                }
                break;
              }
              case 8: {
                bitField0_ |= 0x00000001;
                controlPoint_ = input.readInt32();
                break;
              }
              case 18: {
                skadistats.clarity.wire.common.proto.NetworkBaseTypes.CMsgVector.Builder subBuilder = null;
                if (((bitField0_ & 0x00000002) == 0x00000002)) {
                  subBuilder = position_.toBuilder();
                }
                position_ = input.readMessage(skadistats.clarity.wire.common.proto.NetworkBaseTypes.CMsgVector.PARSER, extensionRegistry);
                if (subBuilder != null) {
                  subBuilder.mergeFrom(position_);
                  position_ = subBuilder.buildPartial();
                }
                bitField0_ |= 0x00000002;
                break;
              }
            }
          }
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.setUnfinishedMessage(this);
        } catch (java.io.IOException e) {
          throw new com.google.protobuf.InvalidProtocolBufferException(
              e.getMessage()).setUnfinishedMessage(this);
        } finally {
          this.unknownFields = unknownFields.build();
          makeExtensionsImmutable();
        }
      }
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return skadistats.clarity.wire.common.proto.DotaUserMessages.internal_static_CDOTAUserMsg_ParticleManager_UpdateParticle_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return skadistats.clarity.wire.common.proto.DotaUserMessages.internal_static_CDOTAUserMsg_ParticleManager_UpdateParticle_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_ParticleManager.UpdateParticle.class, skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_ParticleManager.UpdateParticle.Builder.class);
      }

      public static com.google.protobuf.Parser<UpdateParticle> PARSER =
          new com.google.protobuf.AbstractParser<UpdateParticle>() {
        public UpdateParticle parsePartialFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws com.google.protobuf.InvalidProtocolBufferException {
          return new UpdateParticle(input, extensionRegistry);
        }
      };

      @java.lang.Override
      public com.google.protobuf.Parser<UpdateParticle> getParserForType() {
        return PARSER;
      }

      private int bitField0_;
      public static final int CONTROL_POINT_FIELD_NUMBER = 1;
      private int controlPoint_;
      /**
       * <code>optional int32 control_point = 1;</code>
       */
      public boolean hasControlPoint() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>optional int32 control_point = 1;</code>
       */
      public int getControlPoint() {
        return controlPoint_;
      }

      public static final int POSITION_FIELD_NUMBER = 2;
      private skadistats.clarity.wire.common.proto.NetworkBaseTypes.CMsgVector position_;
      /**
       * <code>optional .CMsgVector position = 2;</code>
       */
      public boolean hasPosition() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>optional .CMsgVector position = 2;</code>
       */
      public skadistats.clarity.wire.common.proto.NetworkBaseTypes.CMsgVector getPosition() {
        return position_;
      }
      /**
       * <code>optional .CMsgVector position = 2;</code>
       */
      public skadistats.clarity.wire.common.proto.NetworkBaseTypes.CMsgVectorOrBuilder getPositionOrBuilder() {
        return position_;
      }

      private void initFields() {
        controlPoint_ = 0;
        position_ = skadistats.clarity.wire.common.proto.NetworkBaseTypes.CMsgVector.getDefaultInstance();
      }
      private byte memoizedIsInitialized = -1;
      public final boolean isInitialized() {
        byte isInitialized = memoizedIsInitialized;
        if (isInitialized == 1) return true;
        if (isInitialized == 0) return false;

        memoizedIsInitialized = 1;
        return true;
      }

      public void writeTo(com.google.protobuf.CodedOutputStream output)
                          throws java.io.IOException {
        getSerializedSize();
        if (((bitField0_ & 0x00000001) == 0x00000001)) {
          output.writeInt32(1, controlPoint_);
        }
        if (((bitField0_ & 0x00000002) == 0x00000002)) {
          output.writeMessage(2, position_);
        }
        getUnknownFields().writeTo(output);
      }

      private int memoizedSerializedSize = -1;
      public int getSerializedSize() {
        int size = memoizedSerializedSize;
        if (size != -1) return size;

        size = 0;
        if (((bitField0_ & 0x00000001) == 0x00000001)) {
          size += com.google.protobuf.CodedOutputStream
            .computeInt32Size(1, controlPoint_);
        }
        if (((bitField0_ & 0x00000002) == 0x00000002)) {
          size += com.google.protobuf.CodedOutputStream
            .computeMessageSize(2, position_);
        }
        size += getUnknownFields().getSerializedSize();
        memoizedSerializedSize = size;
        return size;
      }

      private static final long serialVersionUID = 0L;
      @java.lang.Override
      protected java.lang.Object writeReplace()
          throws java.io.ObjectStreamException {
        return super.writeReplace();
      }

      public static skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_ParticleManager.UpdateParticle parseFrom(
          com.google.protobuf.ByteString data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_ParticleManager.UpdateParticle parseFrom(
          com.google.protobuf.ByteString data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_ParticleManager.UpdateParticle parseFrom(byte[] data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_ParticleManager.UpdateParticle parseFrom(
          byte[] data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_ParticleManager.UpdateParticle parseFrom(java.io.InputStream input)
          throws java.io.IOException {
        return PARSER.parseFrom(input);
      }
      public static skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_ParticleManager.UpdateParticle parseFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return PARSER.parseFrom(input, extensionRegistry);
      }
      public static skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_ParticleManager.UpdateParticle parseDelimitedFrom(java.io.InputStream input)
          throws java.io.IOException {
        return PARSER.parseDelimitedFrom(input);
      }
      public static skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_ParticleManager.UpdateParticle parseDelimitedFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return PARSER.parseDelimitedFrom(input, extensionRegistry);
      }
      public static skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_ParticleManager.UpdateParticle parseFrom(
          com.google.protobuf.CodedInputStream input)
          throws java.io.IOException {
        return PARSER.parseFrom(input);
      }
      public static skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_ParticleManager.UpdateParticle parseFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return PARSER.parseFrom(input, extensionRegistry);
      }

      public static Builder newBuilder() { return Builder.create(); }
      public Builder newBuilderForType() { return newBuilder(); }
      public static Builder newBuilder(skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_ParticleManager.UpdateParticle prototype) {
        return newBuilder().mergeFrom(prototype);
      }
      public Builder toBuilder() { return newBuilder(this); }

      @java.lang.Override
      protected Builder newBuilderForType(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        Builder builder = new Builder(parent);
        return builder;
      }
      /**
       * Protobuf type {@code CDOTAUserMsg_ParticleManager.UpdateParticle}
       */
      public static final class Builder extends
          com.google.protobuf.GeneratedMessage.Builder<Builder> implements
          // @@protoc_insertion_point(builder_implements:CDOTAUserMsg_ParticleManager.UpdateParticle)
          skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_ParticleManager.UpdateParticleOrBuilder {
        public static final com.google.protobuf.Descriptors.Descriptor
            getDescriptor() {
          return skadistats.clarity.wire.common.proto.DotaUserMessages.internal_static_CDOTAUserMsg_ParticleManager_UpdateParticle_descriptor;
        }

        protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
            internalGetFieldAccessorTable() {
          return skadistats.clarity.wire.common.proto.DotaUserMessages.internal_static_CDOTAUserMsg_ParticleManager_UpdateParticle_fieldAccessorTable
              .ensureFieldAccessorsInitialized(
                  skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_ParticleManager.UpdateParticle.class, skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_ParticleManager.UpdateParticle.Builder.class);
        }

        // Construct using skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_ParticleManager.UpdateParticle.newBuilder()
        private Builder() {
          maybeForceBuilderInitialization();
        }

        private Builder(
            com.google.protobuf.GeneratedMessage.BuilderParent parent) {
          super(parent);
          maybeForceBuilderInitialization();
        }
        private void maybeForceBuilderInitialization() {
          if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
            getPositionFieldBuilder();
          }
        }
        private static Builder create() {
          return new Builder();
        }

        public Builder clear() {
          super.clear();
          controlPoint_ = 0;
          bitField0_ = (bitField0_ & ~0x00000001);
          if (positionBuilder_ == null) {
            position_ = skadistats.clarity.wire.common.proto.NetworkBaseTypes.CMsgVector.getDefaultInstance();
          } else {
            positionBuilder_.clear();
          }
          bitField0_ = (bitField0_ & ~0x00000002);
          return this;
        }

        public Builder clone() {
          return create().mergeFrom(buildPartial());
        }

        public com.google.protobuf.Descriptors.Descriptor
            getDescriptorForType() {
          return skadistats.clarity.wire.common.proto.DotaUserMessages.internal_static_CDOTAUserMsg_ParticleManager_UpdateParticle_descriptor;
        }

        public skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_ParticleManager.UpdateParticle getDefaultInstanceForType() {
          return skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_ParticleManager.UpdateParticle.getDefaultInstance();
        }

        public skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_ParticleManager.UpdateParticle build() {
          skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_ParticleManager.UpdateParticle result = buildPartial();
          if (!result.isInitialized()) {
            throw newUninitializedMessageException(result);
          }
          return result;
        }

        public skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_ParticleManager.UpdateParticle buildPartial() {
          skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_ParticleManager.UpdateParticle result = new skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_ParticleManager.UpdateParticle(this);
          int from_bitField0_ = bitField0_;
          int to_bitField0_ = 0;
          if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
            to_bitField0_ |= 0x00000001;
          }
          result.controlPoint_ = controlPoint_;
          if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
            to_bitField0_ |= 0x00000002;
          }
          if (positionBuilder_ == null) {
            result.position_ = position_;
          } else {
            result.position_ = positionBuilder_.build();
          }
          result.bitField0_ = to_bitField0_;
          onBuilt();
          return result;
        }

        public Builder mergeFrom(com.google.protobuf.Message other) {
          if (other instanceof skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_ParticleManager.UpdateParticle) {
            return mergeFrom((skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_ParticleManager.UpdateParticle)other);
          } else {
            super.mergeFrom(other);
            return this;
          }
        }

        public Builder mergeFrom(skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_ParticleManager.UpdateParticle other) {
          if (other == skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_ParticleManager.UpdateParticle.getDefaultInstance()) return this;
          if (other.hasControlPoint()) {
            setControlPoint(other.getControlPoint());
          }
          if (other.hasPosition()) {
            mergePosition(other.getPosition());
          }
          this.mergeUnknownFields(other.getUnknownFields());
          return this;
        }

        public final boolean isInitialized() {
          return true;
        }

        public Builder mergeFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws java.io.IOException {
          skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_ParticleManager.UpdateParticle parsedMessage = null;
          try {
            parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
          } catch (com.google.protobuf.InvalidProtocolBufferException e) {
            parsedMessage = (skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_ParticleManager.UpdateParticle) e.getUnfinishedMessage();
            throw e;
          } finally {
            if (parsedMessage != null) {
              mergeFrom(parsedMessage);
            }
          }
          return this;
        }
        private int bitField0_;

        private int controlPoint_ ;
        /**
         * <code>optional int32 control_point = 1;</code>
         */
        public boolean hasControlPoint() {
          return ((bitField0_ & 0x00000001) == 0x00000001);
        }
        /**
         * <code>optional int32 control_point = 1;</code>
         */
        public int getControlPoint() {
          return controlPoint_;
        }
        /**
         * <code>optional int32 control_point = 1;</code>
         */
        public Builder setControlPoint(int value) {
          bitField0_ |= 0x00000001;
          controlPoint_ = value;
          onChanged();
          return this;
        }
        /**
         * <code>optional int32 control_point = 1;</code>
         */
        public Builder clearControlPoint() {
          bitField0_ = (bitField0_ & ~0x00000001);
          controlPoint_ = 0;
          onChanged();
          return this;
        }

        private skadistats.clarity.wire.common.proto.NetworkBaseTypes.CMsgVector position_ = skadistats.clarity.wire.common.proto.NetworkBaseTypes.CMsgVector.getDefaultInstance();
        private com.google.protobuf.SingleFieldBuilder<
            skadistats.clarity.wire.common.proto.NetworkBaseTypes.CMsgVector, skadistats.clarity.wire.common.proto.NetworkBaseTypes.CMsgVector.Builder, skadistats.clarity.wire.common.proto.NetworkBaseTypes.CMsgVectorOrBuilder> positionBuilder_;
        /**
         * <code>optional .CMsgVector position = 2;</code>
         */
        public boolean hasPosition() {
          return ((bitField0_ & 0x00000002) == 0x00000002);
        }
        /**
         * <code>optional .CMsgVector position = 2;</code>
         */
        public skadistats.clarity.wire.common.proto.NetworkBaseTypes.CMsgVector getPosition() {
          if (positionBuilder_ == null) {
            return position_;
          } else {
            return positionBuilder_.getMessage();
          }
        }
        /**
         * <code>optional .CMsgVector position = 2;</code>
         */
        public Builder setPosition(skadistats.clarity.wire.common.proto.NetworkBaseTypes.CMsgVector value) {
          if (positionBuilder_ == null) {
            if (value == null) {
              throw new NullPointerException();
            }
            position_ = value;
            onChanged();
          } else {
            positionBuilder_.setMessage(value);
          }
          bitField0_ |= 0x00000002;
          return this;
        }
        /**
         * <code>optional .CMsgVector position = 2;</code>
         */
        public Builder setPosition(
            skadistats.clarity.wire.common.proto.NetworkBaseTypes.CMsgVector.Builder builderForValue) {
          if (positionBuilder_ == null) {
            position_ = builderForValue.build();
            onChanged();
          } else {
            positionBuilder_.setMessage(builderForValue.build());
          }
          bitField0_ |= 0x00000002;
          return this;
        }
        /**
         * <code>optional .CMsgVector position = 2;</code>
         */
        public Builder mergePosition(skadistats.clarity.wire.common.proto.NetworkBaseTypes.CMsgVector value) {
          if (positionBuilder_ == null) {
            if (((bitField0_ & 0x00000002) == 0x00000002) &&
                position_ != skadistats.clarity.wire.common.proto.NetworkBaseTypes.CMsgVector.getDefaultInstance()) {
              position_ =
                skadistats.clarity.wire.common.proto.NetworkBaseTypes.CMsgVector.newBuilder(position_).mergeFrom(value).buildPartial();
            } else {
              position_ = value;
            }
            onChanged();
          } else {
            positionBuilder_.mergeFrom(value);
          }
          bitField0_ |= 0x00000002;
          return this;
        }
        /**
         * <code>optional .CMsgVector position = 2;</code>
         */
        public Builder clearPosition() {
          if (positionBuilder_ == null) {
            position_ = skadistats.clarity.wire.common.proto.NetworkBaseTypes.CMsgVector.getDefaultInstance();
            onChanged();
          } else {
            positionBuilder_.clear();
          }
          bitField0_ = (bitField0_ & ~0x00000002);
          return this;
        }
        /**
         * <code>optional .CMsgVector position = 2;</code>
         */
        public skadistats.clarity.wire.common.proto.NetworkBaseTypes.CMsgVector.Builder getPositionBuilder() {
          bitField0_ |= 0x00000002;
          onChanged();
          return getPositionFieldBuilder().getBuilder();
        }
        /**
         * <code>optional .CMsgVector position = 2;</code>
         */
        public skadistats.clarity.wire.common.proto.NetworkBaseTypes.CMsgVectorOrBuilder getPositionOrBuilder() {
          if (positionBuilder_ != null) {
            return positionBuilder_.getMessageOrBuilder();
          } else {
            return position_;
          }
        }
        /**
         * <code>optional .CMsgVector position = 2;</code>
         */
        private com.google.protobuf.SingleFieldBuilder<
            skadistats.clarity.wire.common.proto.NetworkBaseTypes.CMsgVector, skadistats.clarity.wire.common.proto.NetworkBaseTypes.CMsgVector.Builder, skadistats.clarity.wire.common.proto.NetworkBaseTypes.CMsgVectorOrBuilder> 
            getPositionFieldBuilder() {
          if (positionBuilder_ == null) {
            positionBuilder_ = new com.google.protobuf.SingleFieldBuilder<
                skadistats.clarity.wire.common.proto.NetworkBaseTypes.CMsgVector, skadistats.clarity.wire.common.proto.NetworkBaseTypes.CMsgVector.Builder, skadistats.clarity.wire.common.proto.NetworkBaseTypes.CMsgVectorOrBuilder>(
                    getPosition(),
                    getParentForChildren(),
                    isClean());
            position_ = null;
          }
          return positionBuilder_;
        }

        // @@protoc_insertion_point(builder_scope:CDOTAUserMsg_ParticleManager.UpdateParticle)
      }

      static {
        defaultInstance = new UpdateParticle(true);
        defaultInstance.initFields();
      }

      // @@protoc_insertion_point(class_scope:CDOTAUserMsg_ParticleManager.UpdateParticle)
    }

    public interface UpdateParticleFwdOrBuilder extends
        // @@protoc_insertion_point(interface_extends:CDOTAUserMsg_ParticleManager.UpdateParticleFwd)
        com.google.protobuf.MessageOrBuilder {

      /**
       * <code>optional int32 control_point = 1;</code>
       */
      boolean hasControlPoint();
      /**
       * <code>optional int32 control_point = 1;</code>
       */
      int getControlPoint();

      /**
       * <code>optional .CMsgVector forward = 2;</code>
       */
      boolean hasForward();
      /**
       * <code>optional .CMsgVector forward = 2;</code>
       */
      skadistats.clarity.wire.common.proto.NetworkBaseTypes.CMsgVector getForward();
      /**
       * <code>optional .CMsgVector forward = 2;</code>
       */
      skadistats.clarity.wire.common.proto.NetworkBaseTypes.CMsgVectorOrBuilder getForwardOrBuilder();
    }
    /**
     * Protobuf type {@code CDOTAUserMsg_ParticleManager.UpdateParticleFwd}
     */
    public static final class UpdateParticleFwd extends
        com.google.protobuf.GeneratedMessage implements
        // @@protoc_insertion_point(message_implements:CDOTAUserMsg_ParticleManager.UpdateParticleFwd)
        UpdateParticleFwdOrBuilder {
      // Use UpdateParticleFwd.newBuilder() to construct.
      private UpdateParticleFwd(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
        super(builder);
        this.unknownFields = builder.getUnknownFields();
      }
      private UpdateParticleFwd(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

      private static final UpdateParticleFwd defaultInstance;
      public static UpdateParticleFwd getDefaultInstance() {
        return defaultInstance;
      }

      public UpdateParticleFwd getDefaultInstanceForType() {
        return defaultInstance;
      }

      private final com.google.protobuf.UnknownFieldSet unknownFields;
      @java.lang.Override
      public final com.google.protobuf.UnknownFieldSet
          getUnknownFields() {
        return this.unknownFields;
      }
      private UpdateParticleFwd(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        initFields();
        int mutable_bitField0_ = 0;
        com.google.protobuf.UnknownFieldSet.Builder unknownFields =
            com.google.protobuf.UnknownFieldSet.newBuilder();
        try {
          boolean done = false;
          while (!done) {
            int tag = input.readTag();
            switch (tag) {
              case 0:
                done = true;
                break;
              default: {
                if (!parseUnknownField(input, unknownFields,
                                       extensionRegistry, tag)) {
                  done = true;
                }
                break;
              }
              case 8: {
                bitField0_ |= 0x00000001;
                controlPoint_ = input.readInt32();
                break;
              }
              case 18: {
                skadistats.clarity.wire.common.proto.NetworkBaseTypes.CMsgVector.Builder subBuilder = null;
                if (((bitField0_ & 0x00000002) == 0x00000002)) {
                  subBuilder = forward_.toBuilder();
                }
                forward_ = input.readMessage(skadistats.clarity.wire.common.proto.NetworkBaseTypes.CMsgVector.PARSER, extensionRegistry);
                if (subBuilder != null) {
                  subBuilder.mergeFrom(forward_);
                  forward_ = subBuilder.buildPartial();
                }
                bitField0_ |= 0x00000002;
                break;
              }
            }
          }
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.setUnfinishedMessage(this);
        } catch (java.io.IOException e) {
          throw new com.google.protobuf.InvalidProtocolBufferException(
              e.getMessage()).setUnfinishedMessage(this);
        } finally {
          this.unknownFields = unknownFields.build();
          makeExtensionsImmutable();
        }
      }
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return skadistats.clarity.wire.common.proto.DotaUserMessages.internal_static_CDOTAUserMsg_ParticleManager_UpdateParticleFwd_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return skadistats.clarity.wire.common.proto.DotaUserMessages.internal_static_CDOTAUserMsg_ParticleManager_UpdateParticleFwd_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_ParticleManager.UpdateParticleFwd.class, skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_ParticleManager.UpdateParticleFwd.Builder.class);
      }

      public static com.google.protobuf.Parser<UpdateParticleFwd> PARSER =
          new com.google.protobuf.AbstractParser<UpdateParticleFwd>() {
        public UpdateParticleFwd parsePartialFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws com.google.protobuf.InvalidProtocolBufferException {
          return new UpdateParticleFwd(input, extensionRegistry);
        }
      };

      @java.lang.Override
      public com.google.protobuf.Parser<UpdateParticleFwd> getParserForType() {
        return PARSER;
      }

      private int bitField0_;
      public static final int CONTROL_POINT_FIELD_NUMBER = 1;
      private int controlPoint_;
      /**
       * <code>optional int32 control_point = 1;</code>
       */
      public boolean hasControlPoint() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>optional int32 control_point = 1;</code>
       */
      public int getControlPoint() {
        return controlPoint_;
      }

      public static final int FORWARD_FIELD_NUMBER = 2;
      private skadistats.clarity.wire.common.proto.NetworkBaseTypes.CMsgVector forward_;
      /**
       * <code>optional .CMsgVector forward = 2;</code>
       */
      public boolean hasForward() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>optional .CMsgVector forward = 2;</code>
       */
      public skadistats.clarity.wire.common.proto.NetworkBaseTypes.CMsgVector getForward() {
        return forward_;
      }
      /**
       * <code>optional .CMsgVector forward = 2;</code>
       */
      public skadistats.clarity.wire.common.proto.NetworkBaseTypes.CMsgVectorOrBuilder getForwardOrBuilder() {
        return forward_;
      }

      private void initFields() {
        controlPoint_ = 0;
        forward_ = skadistats.clarity.wire.common.proto.NetworkBaseTypes.CMsgVector.getDefaultInstance();
      }
      private byte memoizedIsInitialized = -1;
      public final boolean isInitialized() {
        byte isInitialized = memoizedIsInitialized;
        if (isInitialized == 1) return true;
        if (isInitialized == 0) return false;

        memoizedIsInitialized = 1;
        return true;
      }

      public void writeTo(com.google.protobuf.CodedOutputStream output)
                          throws java.io.IOException {
        getSerializedSize();
        if (((bitField0_ & 0x00000001) == 0x00000001)) {
          output.writeInt32(1, controlPoint_);
        }
        if (((bitField0_ & 0x00000002) == 0x00000002)) {
          output.writeMessage(2, forward_);
        }
        getUnknownFields().writeTo(output);
      }

      private int memoizedSerializedSize = -1;
      public int getSerializedSize() {
        int size = memoizedSerializedSize;
        if (size != -1) return size;

        size = 0;
        if (((bitField0_ & 0x00000001) == 0x00000001)) {
          size += com.google.protobuf.CodedOutputStream
            .computeInt32Size(1, controlPoint_);
        }
        if (((bitField0_ & 0x00000002) == 0x00000002)) {
          size += com.google.protobuf.CodedOutputStream
            .computeMessageSize(2, forward_);
        }
        size += getUnknownFields().getSerializedSize();
        memoizedSerializedSize = size;
        return size;
      }

      private static final long serialVersionUID = 0L;
      @java.lang.Override
      protected java.lang.Object writeReplace()
          throws java.io.ObjectStreamException {
        return super.writeReplace();
      }

      public static skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_ParticleManager.UpdateParticleFwd parseFrom(
          com.google.protobuf.ByteString data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_ParticleManager.UpdateParticleFwd parseFrom(
          com.google.protobuf.ByteString data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_ParticleManager.UpdateParticleFwd parseFrom(byte[] data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_ParticleManager.UpdateParticleFwd parseFrom(
          byte[] data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_ParticleManager.UpdateParticleFwd parseFrom(java.io.InputStream input)
          throws java.io.IOException {
        return PARSER.parseFrom(input);
      }
      public static skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_ParticleManager.UpdateParticleFwd parseFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return PARSER.parseFrom(input, extensionRegistry);
      }
      public static skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_ParticleManager.UpdateParticleFwd parseDelimitedFrom(java.io.InputStream input)
          throws java.io.IOException {
        return PARSER.parseDelimitedFrom(input);
      }
      public static skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_ParticleManager.UpdateParticleFwd parseDelimitedFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return PARSER.parseDelimitedFrom(input, extensionRegistry);
      }
      public static skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_ParticleManager.UpdateParticleFwd parseFrom(
          com.google.protobuf.CodedInputStream input)
          throws java.io.IOException {
        return PARSER.parseFrom(input);
      }
      public static skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_ParticleManager.UpdateParticleFwd parseFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return PARSER.parseFrom(input, extensionRegistry);
      }

      public static Builder newBuilder() { return Builder.create(); }
      public Builder newBuilderForType() { return newBuilder(); }
      public static Builder newBuilder(skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_ParticleManager.UpdateParticleFwd prototype) {
        return newBuilder().mergeFrom(prototype);
      }
      public Builder toBuilder() { return newBuilder(this); }

      @java.lang.Override
      protected Builder newBuilderForType(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        Builder builder = new Builder(parent);
        return builder;
      }
      /**
       * Protobuf type {@code CDOTAUserMsg_ParticleManager.UpdateParticleFwd}
       */
      public static final class Builder extends
          com.google.protobuf.GeneratedMessage.Builder<Builder> implements
          // @@protoc_insertion_point(builder_implements:CDOTAUserMsg_ParticleManager.UpdateParticleFwd)
          skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_ParticleManager.UpdateParticleFwdOrBuilder {
        public static final com.google.protobuf.Descriptors.Descriptor
            getDescriptor() {
          return skadistats.clarity.wire.common.proto.DotaUserMessages.internal_static_CDOTAUserMsg_ParticleManager_UpdateParticleFwd_descriptor;
        }

        protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
            internalGetFieldAccessorTable() {
          return skadistats.clarity.wire.common.proto.DotaUserMessages.internal_static_CDOTAUserMsg_ParticleManager_UpdateParticleFwd_fieldAccessorTable
              .ensureFieldAccessorsInitialized(
                  skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_ParticleManager.UpdateParticleFwd.class, skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_ParticleManager.UpdateParticleFwd.Builder.class);
        }

        // Construct using skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_ParticleManager.UpdateParticleFwd.newBuilder()
        private Builder() {
          maybeForceBuilderInitialization();
        }

        private Builder(
            com.google.protobuf.GeneratedMessage.BuilderParent parent) {
          super(parent);
          maybeForceBuilderInitialization();
        }
        private void maybeForceBuilderInitialization() {
          if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
            getForwardFieldBuilder();
          }
        }
        private static Builder create() {
          return new Builder();
        }

        public Builder clear() {
          super.clear();
          controlPoint_ = 0;
          bitField0_ = (bitField0_ & ~0x00000001);
          if (forwardBuilder_ == null) {
            forward_ = skadistats.clarity.wire.common.proto.NetworkBaseTypes.CMsgVector.getDefaultInstance();
          } else {
            forwardBuilder_.clear();
          }
          bitField0_ = (bitField0_ & ~0x00000002);
          return this;
        }

        public Builder clone() {
          return create().mergeFrom(buildPartial());
        }

        public com.google.protobuf.Descriptors.Descriptor
            getDescriptorForType() {
          return skadistats.clarity.wire.common.proto.DotaUserMessages.internal_static_CDOTAUserMsg_ParticleManager_UpdateParticleFwd_descriptor;
        }

        public skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_ParticleManager.UpdateParticleFwd getDefaultInstanceForType() {
          return skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_ParticleManager.UpdateParticleFwd.getDefaultInstance();
        }

        public skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_ParticleManager.UpdateParticleFwd build() {
          skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_ParticleManager.UpdateParticleFwd result = buildPartial();
          if (!result.isInitialized()) {
            throw newUninitializedMessageException(result);
          }
          return result;
        }

        public skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_ParticleManager.UpdateParticleFwd buildPartial() {
          skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_ParticleManager.UpdateParticleFwd result = new skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_ParticleManager.UpdateParticleFwd(this);
          int from_bitField0_ = bitField0_;
          int to_bitField0_ = 0;
          if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
            to_bitField0_ |= 0x00000001;
          }
          result.controlPoint_ = controlPoint_;
          if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
            to_bitField0_ |= 0x00000002;
          }
          if (forwardBuilder_ == null) {
            result.forward_ = forward_;
          } else {
            result.forward_ = forwardBuilder_.build();
          }
          result.bitField0_ = to_bitField0_;
          onBuilt();
          return result;
        }

        public Builder mergeFrom(com.google.protobuf.Message other) {
          if (other instanceof skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_ParticleManager.UpdateParticleFwd) {
            return mergeFrom((skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_ParticleManager.UpdateParticleFwd)other);
          } else {
            super.mergeFrom(other);
            return this;
          }
        }

        public Builder mergeFrom(skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_ParticleManager.UpdateParticleFwd other) {
          if (other == skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_ParticleManager.UpdateParticleFwd.getDefaultInstance()) return this;
          if (other.hasControlPoint()) {
            setControlPoint(other.getControlPoint());
          }
          if (other.hasForward()) {
            mergeForward(other.getForward());
          }
          this.mergeUnknownFields(other.getUnknownFields());
          return this;
        }

        public final boolean isInitialized() {
          return true;
        }

        public Builder mergeFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws java.io.IOException {
          skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_ParticleManager.UpdateParticleFwd parsedMessage = null;
          try {
            parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
          } catch (com.google.protobuf.InvalidProtocolBufferException e) {
            parsedMessage = (skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_ParticleManager.UpdateParticleFwd) e.getUnfinishedMessage();
            throw e;
          } finally {
            if (parsedMessage != null) {
              mergeFrom(parsedMessage);
            }
          }
          return this;
        }
        private int bitField0_;

        private int controlPoint_ ;
        /**
         * <code>optional int32 control_point = 1;</code>
         */
        public boolean hasControlPoint() {
          return ((bitField0_ & 0x00000001) == 0x00000001);
        }
        /**
         * <code>optional int32 control_point = 1;</code>
         */
        public int getControlPoint() {
          return controlPoint_;
        }
        /**
         * <code>optional int32 control_point = 1;</code>
         */
        public Builder setControlPoint(int value) {
          bitField0_ |= 0x00000001;
          controlPoint_ = value;
          onChanged();
          return this;
        }
        /**
         * <code>optional int32 control_point = 1;</code>
         */
        public Builder clearControlPoint() {
          bitField0_ = (bitField0_ & ~0x00000001);
          controlPoint_ = 0;
          onChanged();
          return this;
        }

        private skadistats.clarity.wire.common.proto.NetworkBaseTypes.CMsgVector forward_ = skadistats.clarity.wire.common.proto.NetworkBaseTypes.CMsgVector.getDefaultInstance();
        private com.google.protobuf.SingleFieldBuilder<
            skadistats.clarity.wire.common.proto.NetworkBaseTypes.CMsgVector, skadistats.clarity.wire.common.proto.NetworkBaseTypes.CMsgVector.Builder, skadistats.clarity.wire.common.proto.NetworkBaseTypes.CMsgVectorOrBuilder> forwardBuilder_;
        /**
         * <code>optional .CMsgVector forward = 2;</code>
         */
        public boolean hasForward() {
          return ((bitField0_ & 0x00000002) == 0x00000002);
        }
        /**
         * <code>optional .CMsgVector forward = 2;</code>
         */
        public skadistats.clarity.wire.common.proto.NetworkBaseTypes.CMsgVector getForward() {
          if (forwardBuilder_ == null) {
            return forward_;
          } else {
            return forwardBuilder_.getMessage();
          }
        }
        /**
         * <code>optional .CMsgVector forward = 2;</code>
         */
        public Builder setForward(skadistats.clarity.wire.common.proto.NetworkBaseTypes.CMsgVector value) {
          if (forwardBuilder_ == null) {
            if (value == null) {
              throw new NullPointerException();
            }
            forward_ = value;
            onChanged();
          } else {
            forwardBuilder_.setMessage(value);
          }
          bitField0_ |= 0x00000002;
          return this;
        }
        /**
         * <code>optional .CMsgVector forward = 2;</code>
         */
        public Builder setForward(
            skadistats.clarity.wire.common.proto.NetworkBaseTypes.CMsgVector.Builder builderForValue) {
          if (forwardBuilder_ == null) {
            forward_ = builderForValue.build();
            onChanged();
          } else {
            forwardBuilder_.setMessage(builderForValue.build());
          }
          bitField0_ |= 0x00000002;
          return this;
        }
        /**
         * <code>optional .CMsgVector forward = 2;</code>
         */
        public Builder mergeForward(skadistats.clarity.wire.common.proto.NetworkBaseTypes.CMsgVector value) {
          if (forwardBuilder_ == null) {
            if (((bitField0_ & 0x00000002) == 0x00000002) &&
                forward_ != skadistats.clarity.wire.common.proto.NetworkBaseTypes.CMsgVector.getDefaultInstance()) {
              forward_ =
                skadistats.clarity.wire.common.proto.NetworkBaseTypes.CMsgVector.newBuilder(forward_).mergeFrom(value).buildPartial();
            } else {
              forward_ = value;
            }
            onChanged();
          } else {
            forwardBuilder_.mergeFrom(value);
          }
          bitField0_ |= 0x00000002;
          return this;
        }
        /**
         * <code>optional .CMsgVector forward = 2;</code>
         */
        public Builder clearForward() {
          if (forwardBuilder_ == null) {
            forward_ = skadistats.clarity.wire.common.proto.NetworkBaseTypes.CMsgVector.getDefaultInstance();
            onChanged();
          } else {
            forwardBuilder_.clear();
          }
          bitField0_ = (bitField0_ & ~0x00000002);
          return this;
        }
        /**
         * <code>optional .CMsgVector forward = 2;</code>
         */
        public skadistats.clarity.wire.common.proto.NetworkBaseTypes.CMsgVector.Builder getForwardBuilder() {
          bitField0_ |= 0x00000002;
          onChanged();
          return getForwardFieldBuilder().getBuilder();
        }
        /**
         * <code>optional .CMsgVector forward = 2;</code>
         */
        public skadistats.clarity.wire.common.proto.NetworkBaseTypes.CMsgVectorOrBuilder getForwardOrBuilder() {
          if (forwardBuilder_ != null) {
            return forwardBuilder_.getMessageOrBuilder();
          } else {
            return forward_;
          }
        }
        /**
         * <code>optional .CMsgVector forward = 2;</code>
         */
        private com.google.protobuf.SingleFieldBuilder<
            skadistats.clarity.wire.common.proto.NetworkBaseTypes.CMsgVector, skadistats.clarity.wire.common.proto.NetworkBaseTypes.CMsgVector.Builder, skadistats.clarity.wire.common.proto.NetworkBaseTypes.CMsgVectorOrBuilder> 
            getForwardFieldBuilder() {
          if (forwardBuilder_ == null) {
            forwardBuilder_ = new com.google.protobuf.SingleFieldBuilder<
                skadistats.clarity.wire.common.proto.NetworkBaseTypes.CMsgVector, skadistats.clarity.wire.common.proto.NetworkBaseTypes.CMsgVector.Builder, skadistats.clarity.wire.common.proto.NetworkBaseTypes.CMsgVectorOrBuilder>(
                    getForward(),
                    getParentForChildren(),
                    isClean());
            forward_ = null;
          }
          return forwardBuilder_;
        }

        // @@protoc_insertion_point(builder_scope:CDOTAUserMsg_ParticleManager.UpdateParticleFwd)
      }

      static {
        defaultInstance = new UpdateParticleFwd(true);
        defaultInstance.initFields();
      }

      // @@protoc_insertion_point(class_scope:CDOTAUserMsg_ParticleManager.UpdateParticleFwd)
    }

    public interface UpdateParticleOrientOrBuilder extends
        // @@protoc_insertion_point(interface_extends:CDOTAUserMsg_ParticleManager.UpdateParticleOrient)
        com.google.protobuf.MessageOrBuilder {

      /**
       * <code>optional int32 control_point = 1;</code>
       */
      boolean hasControlPoint();
      /**
       * <code>optional int32 control_point = 1;</code>
       */
      int getControlPoint();

      /**
       * <code>optional .CMsgVector forward = 2;</code>
       */
      boolean hasForward();
      /**
       * <code>optional .CMsgVector forward = 2;</code>
       */
      skadistats.clarity.wire.common.proto.NetworkBaseTypes.CMsgVector getForward();
      /**
       * <code>optional .CMsgVector forward = 2;</code>
       */
      skadistats.clarity.wire.common.proto.NetworkBaseTypes.CMsgVectorOrBuilder getForwardOrBuilder();

      /**
       * <code>optional .CMsgVector right = 3;</code>
       */
      boolean hasRight();
      /**
       * <code>optional .CMsgVector right = 3;</code>
       */
      skadistats.clarity.wire.common.proto.NetworkBaseTypes.CMsgVector getRight();
      /**
       * <code>optional .CMsgVector right = 3;</code>
       */
      skadistats.clarity.wire.common.proto.NetworkBaseTypes.CMsgVectorOrBuilder getRightOrBuilder();

      /**
       * <code>optional .CMsgVector up = 4;</code>
       */
      boolean hasUp();
      /**
       * <code>optional .CMsgVector up = 4;</code>
       */
      skadistats.clarity.wire.common.proto.NetworkBaseTypes.CMsgVector getUp();
      /**
       * <code>optional .CMsgVector up = 4;</code>
       */
      skadistats.clarity.wire.common.proto.NetworkBaseTypes.CMsgVectorOrBuilder getUpOrBuilder();
    }
    /**
     * Protobuf type {@code CDOTAUserMsg_ParticleManager.UpdateParticleOrient}
     */
    public static final class UpdateParticleOrient extends
        com.google.protobuf.GeneratedMessage implements
        // @@protoc_insertion_point(message_implements:CDOTAUserMsg_ParticleManager.UpdateParticleOrient)
        UpdateParticleOrientOrBuilder {
      // Use UpdateParticleOrient.newBuilder() to construct.
      private UpdateParticleOrient(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
        super(builder);
        this.unknownFields = builder.getUnknownFields();
      }
      private UpdateParticleOrient(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

      private static final UpdateParticleOrient defaultInstance;
      public static UpdateParticleOrient getDefaultInstance() {
        return defaultInstance;
      }

      public UpdateParticleOrient getDefaultInstanceForType() {
        return defaultInstance;
      }

      private final com.google.protobuf.UnknownFieldSet unknownFields;
      @java.lang.Override
      public final com.google.protobuf.UnknownFieldSet
          getUnknownFields() {
        return this.unknownFields;
      }
      private UpdateParticleOrient(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        initFields();
        int mutable_bitField0_ = 0;
        com.google.protobuf.UnknownFieldSet.Builder unknownFields =
            com.google.protobuf.UnknownFieldSet.newBuilder();
        try {
          boolean done = false;
          while (!done) {
            int tag = input.readTag();
            switch (tag) {
              case 0:
                done = true;
                break;
              default: {
                if (!parseUnknownField(input, unknownFields,
                                       extensionRegistry, tag)) {
                  done = true;
                }
                break;
              }
              case 8: {
                bitField0_ |= 0x00000001;
                controlPoint_ = input.readInt32();
                break;
              }
              case 18: {
                skadistats.clarity.wire.common.proto.NetworkBaseTypes.CMsgVector.Builder subBuilder = null;
                if (((bitField0_ & 0x00000002) == 0x00000002)) {
                  subBuilder = forward_.toBuilder();
                }
                forward_ = input.readMessage(skadistats.clarity.wire.common.proto.NetworkBaseTypes.CMsgVector.PARSER, extensionRegistry);
                if (subBuilder != null) {
                  subBuilder.mergeFrom(forward_);
                  forward_ = subBuilder.buildPartial();
                }
                bitField0_ |= 0x00000002;
                break;
              }
              case 26: {
                skadistats.clarity.wire.common.proto.NetworkBaseTypes.CMsgVector.Builder subBuilder = null;
                if (((bitField0_ & 0x00000004) == 0x00000004)) {
                  subBuilder = right_.toBuilder();
                }
                right_ = input.readMessage(skadistats.clarity.wire.common.proto.NetworkBaseTypes.CMsgVector.PARSER, extensionRegistry);
                if (subBuilder != null) {
                  subBuilder.mergeFrom(right_);
                  right_ = subBuilder.buildPartial();
                }
                bitField0_ |= 0x00000004;
                break;
              }
              case 34: {
                skadistats.clarity.wire.common.proto.NetworkBaseTypes.CMsgVector.Builder subBuilder = null;
                if (((bitField0_ & 0x00000008) == 0x00000008)) {
                  subBuilder = up_.toBuilder();
                }
                up_ = input.readMessage(skadistats.clarity.wire.common.proto.NetworkBaseTypes.CMsgVector.PARSER, extensionRegistry);
                if (subBuilder != null) {
                  subBuilder.mergeFrom(up_);
                  up_ = subBuilder.buildPartial();
                }
                bitField0_ |= 0x00000008;
                break;
              }
            }
          }
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.setUnfinishedMessage(this);
        } catch (java.io.IOException e) {
          throw new com.google.protobuf.InvalidProtocolBufferException(
              e.getMessage()).setUnfinishedMessage(this);
        } finally {
          this.unknownFields = unknownFields.build();
          makeExtensionsImmutable();
        }
      }
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return skadistats.clarity.wire.common.proto.DotaUserMessages.internal_static_CDOTAUserMsg_ParticleManager_UpdateParticleOrient_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return skadistats.clarity.wire.common.proto.DotaUserMessages.internal_static_CDOTAUserMsg_ParticleManager_UpdateParticleOrient_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_ParticleManager.UpdateParticleOrient.class, skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_ParticleManager.UpdateParticleOrient.Builder.class);
      }

      public static com.google.protobuf.Parser<UpdateParticleOrient> PARSER =
          new com.google.protobuf.AbstractParser<UpdateParticleOrient>() {
        public UpdateParticleOrient parsePartialFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws com.google.protobuf.InvalidProtocolBufferException {
          return new UpdateParticleOrient(input, extensionRegistry);
        }
      };

      @java.lang.Override
      public com.google.protobuf.Parser<UpdateParticleOrient> getParserForType() {
        return PARSER;
      }

      private int bitField0_;
      public static final int CONTROL_POINT_FIELD_NUMBER = 1;
      private int controlPoint_;
      /**
       * <code>optional int32 control_point = 1;</code>
       */
      public boolean hasControlPoint() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>optional int32 control_point = 1;</code>
       */
      public int getControlPoint() {
        return controlPoint_;
      }

      public static final int FORWARD_FIELD_NUMBER = 2;
      private skadistats.clarity.wire.common.proto.NetworkBaseTypes.CMsgVector forward_;
      /**
       * <code>optional .CMsgVector forward = 2;</code>
       */
      public boolean hasForward() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>optional .CMsgVector forward = 2;</code>
       */
      public skadistats.clarity.wire.common.proto.NetworkBaseTypes.CMsgVector getForward() {
        return forward_;
      }
      /**
       * <code>optional .CMsgVector forward = 2;</code>
       */
      public skadistats.clarity.wire.common.proto.NetworkBaseTypes.CMsgVectorOrBuilder getForwardOrBuilder() {
        return forward_;
      }

      public static final int RIGHT_FIELD_NUMBER = 3;
      private skadistats.clarity.wire.common.proto.NetworkBaseTypes.CMsgVector right_;
      /**
       * <code>optional .CMsgVector right = 3;</code>
       */
      public boolean hasRight() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }
      /**
       * <code>optional .CMsgVector right = 3;</code>
       */
      public skadistats.clarity.wire.common.proto.NetworkBaseTypes.CMsgVector getRight() {
        return right_;
      }
      /**
       * <code>optional .CMsgVector right = 3;</code>
       */
      public skadistats.clarity.wire.common.proto.NetworkBaseTypes.CMsgVectorOrBuilder getRightOrBuilder() {
        return right_;
      }

      public static final int UP_FIELD_NUMBER = 4;
      private skadistats.clarity.wire.common.proto.NetworkBaseTypes.CMsgVector up_;
      /**
       * <code>optional .CMsgVector up = 4;</code>
       */
      public boolean hasUp() {
        return ((bitField0_ & 0x00000008) == 0x00000008);
      }
      /**
       * <code>optional .CMsgVector up = 4;</code>
       */
      public skadistats.clarity.wire.common.proto.NetworkBaseTypes.CMsgVector getUp() {
        return up_;
      }
      /**
       * <code>optional .CMsgVector up = 4;</code>
       */
      public skadistats.clarity.wire.common.proto.NetworkBaseTypes.CMsgVectorOrBuilder getUpOrBuilder() {
        return up_;
      }

      private void initFields() {
        controlPoint_ = 0;
        forward_ = skadistats.clarity.wire.common.proto.NetworkBaseTypes.CMsgVector.getDefaultInstance();
        right_ = skadistats.clarity.wire.common.proto.NetworkBaseTypes.CMsgVector.getDefaultInstance();
        up_ = skadistats.clarity.wire.common.proto.NetworkBaseTypes.CMsgVector.getDefaultInstance();
      }
      private byte memoizedIsInitialized = -1;
      public final boolean isInitialized() {
        byte isInitialized = memoizedIsInitialized;
        if (isInitialized == 1) return true;
        if (isInitialized == 0) return false;

        memoizedIsInitialized = 1;
        return true;
      }

      public void writeTo(com.google.protobuf.CodedOutputStream output)
                          throws java.io.IOException {
        getSerializedSize();
        if (((bitField0_ & 0x00000001) == 0x00000001)) {
          output.writeInt32(1, controlPoint_);
        }
        if (((bitField0_ & 0x00000002) == 0x00000002)) {
          output.writeMessage(2, forward_);
        }
        if (((bitField0_ & 0x00000004) == 0x00000004)) {
          output.writeMessage(3, right_);
        }
        if (((bitField0_ & 0x00000008) == 0x00000008)) {
          output.writeMessage(4, up_);
        }
        getUnknownFields().writeTo(output);
      }

      private int memoizedSerializedSize = -1;
      public int getSerializedSize() {
        int size = memoizedSerializedSize;
        if (size != -1) return size;

        size = 0;
        if (((bitField0_ & 0x00000001) == 0x00000001)) {
          size += com.google.protobuf.CodedOutputStream
            .computeInt32Size(1, controlPoint_);
        }
        if (((bitField0_ & 0x00000002) == 0x00000002)) {
          size += com.google.protobuf.CodedOutputStream
            .computeMessageSize(2, forward_);
        }
        if (((bitField0_ & 0x00000004) == 0x00000004)) {
          size += com.google.protobuf.CodedOutputStream
            .computeMessageSize(3, right_);
        }
        if (((bitField0_ & 0x00000008) == 0x00000008)) {
          size += com.google.protobuf.CodedOutputStream
            .computeMessageSize(4, up_);
        }
        size += getUnknownFields().getSerializedSize();
        memoizedSerializedSize = size;
        return size;
      }

      private static final long serialVersionUID = 0L;
      @java.lang.Override
      protected java.lang.Object writeReplace()
          throws java.io.ObjectStreamException {
        return super.writeReplace();
      }

      public static skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_ParticleManager.UpdateParticleOrient parseFrom(
          com.google.protobuf.ByteString data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_ParticleManager.UpdateParticleOrient parseFrom(
          com.google.protobuf.ByteString data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_ParticleManager.UpdateParticleOrient parseFrom(byte[] data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_ParticleManager.UpdateParticleOrient parseFrom(
          byte[] data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_ParticleManager.UpdateParticleOrient parseFrom(java.io.InputStream input)
          throws java.io.IOException {
        return PARSER.parseFrom(input);
      }
      public static skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_ParticleManager.UpdateParticleOrient parseFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return PARSER.parseFrom(input, extensionRegistry);
      }
      public static skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_ParticleManager.UpdateParticleOrient parseDelimitedFrom(java.io.InputStream input)
          throws java.io.IOException {
        return PARSER.parseDelimitedFrom(input);
      }
      public static skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_ParticleManager.UpdateParticleOrient parseDelimitedFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return PARSER.parseDelimitedFrom(input, extensionRegistry);
      }
      public static skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_ParticleManager.UpdateParticleOrient parseFrom(
          com.google.protobuf.CodedInputStream input)
          throws java.io.IOException {
        return PARSER.parseFrom(input);
      }
      public static skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_ParticleManager.UpdateParticleOrient parseFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return PARSER.parseFrom(input, extensionRegistry);
      }

      public static Builder newBuilder() { return Builder.create(); }
      public Builder newBuilderForType() { return newBuilder(); }
      public static Builder newBuilder(skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_ParticleManager.UpdateParticleOrient prototype) {
        return newBuilder().mergeFrom(prototype);
      }
      public Builder toBuilder() { return newBuilder(this); }

      @java.lang.Override
      protected Builder newBuilderForType(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        Builder builder = new Builder(parent);
        return builder;
      }
      /**
       * Protobuf type {@code CDOTAUserMsg_ParticleManager.UpdateParticleOrient}
       */
      public static final class Builder extends
          com.google.protobuf.GeneratedMessage.Builder<Builder> implements
          // @@protoc_insertion_point(builder_implements:CDOTAUserMsg_ParticleManager.UpdateParticleOrient)
          skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_ParticleManager.UpdateParticleOrientOrBuilder {
        public static final com.google.protobuf.Descriptors.Descriptor
            getDescriptor() {
          return skadistats.clarity.wire.common.proto.DotaUserMessages.internal_static_CDOTAUserMsg_ParticleManager_UpdateParticleOrient_descriptor;
        }

        protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
            internalGetFieldAccessorTable() {
          return skadistats.clarity.wire.common.proto.DotaUserMessages.internal_static_CDOTAUserMsg_ParticleManager_UpdateParticleOrient_fieldAccessorTable
              .ensureFieldAccessorsInitialized(
                  skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_ParticleManager.UpdateParticleOrient.class, skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_ParticleManager.UpdateParticleOrient.Builder.class);
        }

        // Construct using skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_ParticleManager.UpdateParticleOrient.newBuilder()
        private Builder() {
          maybeForceBuilderInitialization();
        }

        private Builder(
            com.google.protobuf.GeneratedMessage.BuilderParent parent) {
          super(parent);
          maybeForceBuilderInitialization();
        }
        private void maybeForceBuilderInitialization() {
          if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
            getForwardFieldBuilder();
            getRightFieldBuilder();
            getUpFieldBuilder();
          }
        }
        private static Builder create() {
          return new Builder();
        }

        public Builder clear() {
          super.clear();
          controlPoint_ = 0;
          bitField0_ = (bitField0_ & ~0x00000001);
          if (forwardBuilder_ == null) {
            forward_ = skadistats.clarity.wire.common.proto.NetworkBaseTypes.CMsgVector.getDefaultInstance();
          } else {
            forwardBuilder_.clear();
          }
          bitField0_ = (bitField0_ & ~0x00000002);
          if (rightBuilder_ == null) {
            right_ = skadistats.clarity.wire.common.proto.NetworkBaseTypes.CMsgVector.getDefaultInstance();
          } else {
            rightBuilder_.clear();
          }
          bitField0_ = (bitField0_ & ~0x00000004);
          if (upBuilder_ == null) {
            up_ = skadistats.clarity.wire.common.proto.NetworkBaseTypes.CMsgVector.getDefaultInstance();
          } else {
            upBuilder_.clear();
          }
          bitField0_ = (bitField0_ & ~0x00000008);
          return this;
        }

        public Builder clone() {
          return create().mergeFrom(buildPartial());
        }

        public com.google.protobuf.Descriptors.Descriptor
            getDescriptorForType() {
          return skadistats.clarity.wire.common.proto.DotaUserMessages.internal_static_CDOTAUserMsg_ParticleManager_UpdateParticleOrient_descriptor;
        }

        public skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_ParticleManager.UpdateParticleOrient getDefaultInstanceForType() {
          return skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_ParticleManager.UpdateParticleOrient.getDefaultInstance();
        }

        public skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_ParticleManager.UpdateParticleOrient build() {
          skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_ParticleManager.UpdateParticleOrient result = buildPartial();
          if (!result.isInitialized()) {
            throw newUninitializedMessageException(result);
          }
          return result;
        }

        public skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_ParticleManager.UpdateParticleOrient buildPartial() {
          skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_ParticleManager.UpdateParticleOrient result = new skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_ParticleManager.UpdateParticleOrient(this);
          int from_bitField0_ = bitField0_;
          int to_bitField0_ = 0;
          if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
            to_bitField0_ |= 0x00000001;
          }
          result.controlPoint_ = controlPoint_;
          if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
            to_bitField0_ |= 0x00000002;
          }
          if (forwardBuilder_ == null) {
            result.forward_ = forward_;
          } else {
            result.forward_ = forwardBuilder_.build();
          }
          if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
            to_bitField0_ |= 0x00000004;
          }
          if (rightBuilder_ == null) {
            result.right_ = right_;
          } else {
            result.right_ = rightBuilder_.build();
          }
          if (((from_bitField0_ & 0x00000008) == 0x00000008)) {
            to_bitField0_ |= 0x00000008;
          }
          if (upBuilder_ == null) {
            result.up_ = up_;
          } else {
            result.up_ = upBuilder_.build();
          }
          result.bitField0_ = to_bitField0_;
          onBuilt();
          return result;
        }

        public Builder mergeFrom(com.google.protobuf.Message other) {
          if (other instanceof skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_ParticleManager.UpdateParticleOrient) {
            return mergeFrom((skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_ParticleManager.UpdateParticleOrient)other);
          } else {
            super.mergeFrom(other);
            return this;
          }
        }

        public Builder mergeFrom(skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_ParticleManager.UpdateParticleOrient other) {
          if (other == skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_ParticleManager.UpdateParticleOrient.getDefaultInstance()) return this;
          if (other.hasControlPoint()) {
            setControlPoint(other.getControlPoint());
          }
          if (other.hasForward()) {
            mergeForward(other.getForward());
          }
          if (other.hasRight()) {
            mergeRight(other.getRight());
          }
          if (other.hasUp()) {
            mergeUp(other.getUp());
          }
          this.mergeUnknownFields(other.getUnknownFields());
          return this;
        }

        public final boolean isInitialized() {
          return true;
        }

        public Builder mergeFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws java.io.IOException {
          skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_ParticleManager.UpdateParticleOrient parsedMessage = null;
          try {
            parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
          } catch (com.google.protobuf.InvalidProtocolBufferException e) {
            parsedMessage = (skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_ParticleManager.UpdateParticleOrient) e.getUnfinishedMessage();
            throw e;
          } finally {
            if (parsedMessage != null) {
              mergeFrom(parsedMessage);
            }
          }
          return this;
        }
        private int bitField0_;

        private int controlPoint_ ;
        /**
         * <code>optional int32 control_point = 1;</code>
         */
        public boolean hasControlPoint() {
          return ((bitField0_ & 0x00000001) == 0x00000001);
        }
        /**
         * <code>optional int32 control_point = 1;</code>
         */
        public int getControlPoint() {
          return controlPoint_;
        }
        /**
         * <code>optional int32 control_point = 1;</code>
         */
        public Builder setControlPoint(int value) {
          bitField0_ |= 0x00000001;
          controlPoint_ = value;
          onChanged();
          return this;
        }
        /**
         * <code>optional int32 control_point = 1;</code>
         */
        public Builder clearControlPoint() {
          bitField0_ = (bitField0_ & ~0x00000001);
          controlPoint_ = 0;
          onChanged();
          return this;
        }

        private skadistats.clarity.wire.common.proto.NetworkBaseTypes.CMsgVector forward_ = skadistats.clarity.wire.common.proto.NetworkBaseTypes.CMsgVector.getDefaultInstance();
        private com.google.protobuf.SingleFieldBuilder<
            skadistats.clarity.wire.common.proto.NetworkBaseTypes.CMsgVector, skadistats.clarity.wire.common.proto.NetworkBaseTypes.CMsgVector.Builder, skadistats.clarity.wire.common.proto.NetworkBaseTypes.CMsgVectorOrBuilder> forwardBuilder_;
        /**
         * <code>optional .CMsgVector forward = 2;</code>
         */
        public boolean hasForward() {
          return ((bitField0_ & 0x00000002) == 0x00000002);
        }
        /**
         * <code>optional .CMsgVector forward = 2;</code>
         */
        public skadistats.clarity.wire.common.proto.NetworkBaseTypes.CMsgVector getForward() {
          if (forwardBuilder_ == null) {
            return forward_;
          } else {
            return forwardBuilder_.getMessage();
          }
        }
        /**
         * <code>optional .CMsgVector forward = 2;</code>
         */
        public Builder setForward(skadistats.clarity.wire.common.proto.NetworkBaseTypes.CMsgVector value) {
          if (forwardBuilder_ == null) {
            if (value == null) {
              throw new NullPointerException();
            }
            forward_ = value;
            onChanged();
          } else {
            forwardBuilder_.setMessage(value);
          }
          bitField0_ |= 0x00000002;
          return this;
        }
        /**
         * <code>optional .CMsgVector forward = 2;</code>
         */
        public Builder setForward(
            skadistats.clarity.wire.common.proto.NetworkBaseTypes.CMsgVector.Builder builderForValue) {
          if (forwardBuilder_ == null) {
            forward_ = builderForValue.build();
            onChanged();
          } else {
            forwardBuilder_.setMessage(builderForValue.build());
          }
          bitField0_ |= 0x00000002;
          return this;
        }
        /**
         * <code>optional .CMsgVector forward = 2;</code>
         */
        public Builder mergeForward(skadistats.clarity.wire.common.proto.NetworkBaseTypes.CMsgVector value) {
          if (forwardBuilder_ == null) {
            if (((bitField0_ & 0x00000002) == 0x00000002) &&
                forward_ != skadistats.clarity.wire.common.proto.NetworkBaseTypes.CMsgVector.getDefaultInstance()) {
              forward_ =
                skadistats.clarity.wire.common.proto.NetworkBaseTypes.CMsgVector.newBuilder(forward_).mergeFrom(value).buildPartial();
            } else {
              forward_ = value;
            }
            onChanged();
          } else {
            forwardBuilder_.mergeFrom(value);
          }
          bitField0_ |= 0x00000002;
          return this;
        }
        /**
         * <code>optional .CMsgVector forward = 2;</code>
         */
        public Builder clearForward() {
          if (forwardBuilder_ == null) {
            forward_ = skadistats.clarity.wire.common.proto.NetworkBaseTypes.CMsgVector.getDefaultInstance();
            onChanged();
          } else {
            forwardBuilder_.clear();
          }
          bitField0_ = (bitField0_ & ~0x00000002);
          return this;
        }
        /**
         * <code>optional .CMsgVector forward = 2;</code>
         */
        public skadistats.clarity.wire.common.proto.NetworkBaseTypes.CMsgVector.Builder getForwardBuilder() {
          bitField0_ |= 0x00000002;
          onChanged();
          return getForwardFieldBuilder().getBuilder();
        }
        /**
         * <code>optional .CMsgVector forward = 2;</code>
         */
        public skadistats.clarity.wire.common.proto.NetworkBaseTypes.CMsgVectorOrBuilder getForwardOrBuilder() {
          if (forwardBuilder_ != null) {
            return forwardBuilder_.getMessageOrBuilder();
          } else {
            return forward_;
          }
        }
        /**
         * <code>optional .CMsgVector forward = 2;</code>
         */
        private com.google.protobuf.SingleFieldBuilder<
            skadistats.clarity.wire.common.proto.NetworkBaseTypes.CMsgVector, skadistats.clarity.wire.common.proto.NetworkBaseTypes.CMsgVector.Builder, skadistats.clarity.wire.common.proto.NetworkBaseTypes.CMsgVectorOrBuilder> 
            getForwardFieldBuilder() {
          if (forwardBuilder_ == null) {
            forwardBuilder_ = new com.google.protobuf.SingleFieldBuilder<
                skadistats.clarity.wire.common.proto.NetworkBaseTypes.CMsgVector, skadistats.clarity.wire.common.proto.NetworkBaseTypes.CMsgVector.Builder, skadistats.clarity.wire.common.proto.NetworkBaseTypes.CMsgVectorOrBuilder>(
                    getForward(),
                    getParentForChildren(),
                    isClean());
            forward_ = null;
          }
          return forwardBuilder_;
        }

        private skadistats.clarity.wire.common.proto.NetworkBaseTypes.CMsgVector right_ = skadistats.clarity.wire.common.proto.NetworkBaseTypes.CMsgVector.getDefaultInstance();
        private com.google.protobuf.SingleFieldBuilder<
            skadistats.clarity.wire.common.proto.NetworkBaseTypes.CMsgVector, skadistats.clarity.wire.common.proto.NetworkBaseTypes.CMsgVector.Builder, skadistats.clarity.wire.common.proto.NetworkBaseTypes.CMsgVectorOrBuilder> rightBuilder_;
        /**
         * <code>optional .CMsgVector right = 3;</code>
         */
        public boolean hasRight() {
          return ((bitField0_ & 0x00000004) == 0x00000004);
        }
        /**
         * <code>optional .CMsgVector right = 3;</code>
         */
        public skadistats.clarity.wire.common.proto.NetworkBaseTypes.CMsgVector getRight() {
          if (rightBuilder_ == null) {
            return right_;
          } else {
            return rightBuilder_.getMessage();
          }
        }
        /**
         * <code>optional .CMsgVector right = 3;</code>
         */
        public Builder setRight(skadistats.clarity.wire.common.proto.NetworkBaseTypes.CMsgVector value) {
          if (rightBuilder_ == null) {
            if (value == null) {
              throw new NullPointerException();
            }
            right_ = value;
            onChanged();
          } else {
            rightBuilder_.setMessage(value);
          }
          bitField0_ |= 0x00000004;
          return this;
        }
        /**
         * <code>optional .CMsgVector right = 3;</code>
         */
        public Builder setRight(
            skadistats.clarity.wire.common.proto.NetworkBaseTypes.CMsgVector.Builder builderForValue) {
          if (rightBuilder_ == null) {
            right_ = builderForValue.build();
            onChanged();
          } else {
            rightBuilder_.setMessage(builderForValue.build());
          }
          bitField0_ |= 0x00000004;
          return this;
        }
        /**
         * <code>optional .CMsgVector right = 3;</code>
         */
        public Builder mergeRight(skadistats.clarity.wire.common.proto.NetworkBaseTypes.CMsgVector value) {
          if (rightBuilder_ == null) {
            if (((bitField0_ & 0x00000004) == 0x00000004) &&
                right_ != skadistats.clarity.wire.common.proto.NetworkBaseTypes.CMsgVector.getDefaultInstance()) {
              right_ =
                skadistats.clarity.wire.common.proto.NetworkBaseTypes.CMsgVector.newBuilder(right_).mergeFrom(value).buildPartial();
            } else {
              right_ = value;
            }
            onChanged();
          } else {
            rightBuilder_.mergeFrom(value);
          }
          bitField0_ |= 0x00000004;
          return this;
        }
        /**
         * <code>optional .CMsgVector right = 3;</code>
         */
        public Builder clearRight() {
          if (rightBuilder_ == null) {
            right_ = skadistats.clarity.wire.common.proto.NetworkBaseTypes.CMsgVector.getDefaultInstance();
            onChanged();
          } else {
            rightBuilder_.clear();
          }
          bitField0_ = (bitField0_ & ~0x00000004);
          return this;
        }
        /**
         * <code>optional .CMsgVector right = 3;</code>
         */
        public skadistats.clarity.wire.common.proto.NetworkBaseTypes.CMsgVector.Builder getRightBuilder() {
          bitField0_ |= 0x00000004;
          onChanged();
          return getRightFieldBuilder().getBuilder();
        }
        /**
         * <code>optional .CMsgVector right = 3;</code>
         */
        public skadistats.clarity.wire.common.proto.NetworkBaseTypes.CMsgVectorOrBuilder getRightOrBuilder() {
          if (rightBuilder_ != null) {
            return rightBuilder_.getMessageOrBuilder();
          } else {
            return right_;
          }
        }
        /**
         * <code>optional .CMsgVector right = 3;</code>
         */
        private com.google.protobuf.SingleFieldBuilder<
            skadistats.clarity.wire.common.proto.NetworkBaseTypes.CMsgVector, skadistats.clarity.wire.common.proto.NetworkBaseTypes.CMsgVector.Builder, skadistats.clarity.wire.common.proto.NetworkBaseTypes.CMsgVectorOrBuilder> 
            getRightFieldBuilder() {
          if (rightBuilder_ == null) {
            rightBuilder_ = new com.google.protobuf.SingleFieldBuilder<
                skadistats.clarity.wire.common.proto.NetworkBaseTypes.CMsgVector, skadistats.clarity.wire.common.proto.NetworkBaseTypes.CMsgVector.Builder, skadistats.clarity.wire.common.proto.NetworkBaseTypes.CMsgVectorOrBuilder>(
                    getRight(),
                    getParentForChildren(),
                    isClean());
            right_ = null;
          }
          return rightBuilder_;
        }

        private skadistats.clarity.wire.common.proto.NetworkBaseTypes.CMsgVector up_ = skadistats.clarity.wire.common.proto.NetworkBaseTypes.CMsgVector.getDefaultInstance();
        private com.google.protobuf.SingleFieldBuilder<
            skadistats.clarity.wire.common.proto.NetworkBaseTypes.CMsgVector, skadistats.clarity.wire.common.proto.NetworkBaseTypes.CMsgVector.Builder, skadistats.clarity.wire.common.proto.NetworkBaseTypes.CMsgVectorOrBuilder> upBuilder_;
        /**
         * <code>optional .CMsgVector up = 4;</code>
         */
        public boolean hasUp() {
          return ((bitField0_ & 0x00000008) == 0x00000008);
        }
        /**
         * <code>optional .CMsgVector up = 4;</code>
         */
        public skadistats.clarity.wire.common.proto.NetworkBaseTypes.CMsgVector getUp() {
          if (upBuilder_ == null) {
            return up_;
          } else {
            return upBuilder_.getMessage();
          }
        }
        /**
         * <code>optional .CMsgVector up = 4;</code>
         */
        public Builder setUp(skadistats.clarity.wire.common.proto.NetworkBaseTypes.CMsgVector value) {
          if (upBuilder_ == null) {
            if (value == null) {
              throw new NullPointerException();
            }
            up_ = value;
            onChanged();
          } else {
            upBuilder_.setMessage(value);
          }
          bitField0_ |= 0x00000008;
          return this;
        }
        /**
         * <code>optional .CMsgVector up = 4;</code>
         */
        public Builder setUp(
            skadistats.clarity.wire.common.proto.NetworkBaseTypes.CMsgVector.Builder builderForValue) {
          if (upBuilder_ == null) {
            up_ = builderForValue.build();
            onChanged();
          } else {
            upBuilder_.setMessage(builderForValue.build());
          }
          bitField0_ |= 0x00000008;
          return this;
        }
        /**
         * <code>optional .CMsgVector up = 4;</code>
         */
        public Builder mergeUp(skadistats.clarity.wire.common.proto.NetworkBaseTypes.CMsgVector value) {
          if (upBuilder_ == null) {
            if (((bitField0_ & 0x00000008) == 0x00000008) &&
                up_ != skadistats.clarity.wire.common.proto.NetworkBaseTypes.CMsgVector.getDefaultInstance()) {
              up_ =
                skadistats.clarity.wire.common.proto.NetworkBaseTypes.CMsgVector.newBuilder(up_).mergeFrom(value).buildPartial();
            } else {
              up_ = value;
            }
            onChanged();
          } else {
            upBuilder_.mergeFrom(value);
          }
          bitField0_ |= 0x00000008;
          return this;
        }
        /**
         * <code>optional .CMsgVector up = 4;</code>
         */
        public Builder clearUp() {
          if (upBuilder_ == null) {
            up_ = skadistats.clarity.wire.common.proto.NetworkBaseTypes.CMsgVector.getDefaultInstance();
            onChanged();
          } else {
            upBuilder_.clear();
          }
          bitField0_ = (bitField0_ & ~0x00000008);
          return this;
        }
        /**
         * <code>optional .CMsgVector up = 4;</code>
         */
        public skadistats.clarity.wire.common.proto.NetworkBaseTypes.CMsgVector.Builder getUpBuilder() {
          bitField0_ |= 0x00000008;
          onChanged();
          return getUpFieldBuilder().getBuilder();
        }
        /**
         * <code>optional .CMsgVector up = 4;</code>
         */
        public skadistats.clarity.wire.common.proto.NetworkBaseTypes.CMsgVectorOrBuilder getUpOrBuilder() {
          if (upBuilder_ != null) {
            return upBuilder_.getMessageOrBuilder();
          } else {
            return up_;
          }
        }
        /**
         * <code>optional .CMsgVector up = 4;</code>
         */
        private com.google.protobuf.SingleFieldBuilder<
            skadistats.clarity.wire.common.proto.NetworkBaseTypes.CMsgVector, skadistats.clarity.wire.common.proto.NetworkBaseTypes.CMsgVector.Builder, skadistats.clarity.wire.common.proto.NetworkBaseTypes.CMsgVectorOrBuilder> 
            getUpFieldBuilder() {
          if (upBuilder_ == null) {
            upBuilder_ = new com.google.protobuf.SingleFieldBuilder<
                skadistats.clarity.wire.common.proto.NetworkBaseTypes.CMsgVector, skadistats.clarity.wire.common.proto.NetworkBaseTypes.CMsgVector.Builder, skadistats.clarity.wire.common.proto.NetworkBaseTypes.CMsgVectorOrBuilder>(
                    getUp(),
                    getParentForChildren(),
                    isClean());
            up_ = null;
          }
          return upBuilder_;
        }

        // @@protoc_insertion_point(builder_scope:CDOTAUserMsg_ParticleManager.UpdateParticleOrient)
      }

      static {
        defaultInstance = new UpdateParticleOrient(true);
        defaultInstance.initFields();
      }

      // @@protoc_insertion_point(class_scope:CDOTAUserMsg_ParticleManager.UpdateParticleOrient)
    }

    public interface UpdateParticleFallbackOrBuilder extends
        // @@protoc_insertion_point(interface_extends:CDOTAUserMsg_ParticleManager.UpdateParticleFallback)
        com.google.protobuf.MessageOrBuilder {

      /**
       * <code>optional int32 control_point = 1;</code>
       */
      boolean hasControlPoint();
      /**
       * <code>optional int32 control_point = 1;</code>
       */
      int getControlPoint();

      /**
       * <code>optional .CMsgVector position = 2;</code>
       */
      boolean hasPosition();
      /**
       * <code>optional .CMsgVector position = 2;</code>
       */
      skadistats.clarity.wire.common.proto.NetworkBaseTypes.CMsgVector getPosition();
      /**
       * <code>optional .CMsgVector position = 2;</code>
       */
      skadistats.clarity.wire.common.proto.NetworkBaseTypes.CMsgVectorOrBuilder getPositionOrBuilder();
    }
    /**
     * Protobuf type {@code CDOTAUserMsg_ParticleManager.UpdateParticleFallback}
     */
    public static final class UpdateParticleFallback extends
        com.google.protobuf.GeneratedMessage implements
        // @@protoc_insertion_point(message_implements:CDOTAUserMsg_ParticleManager.UpdateParticleFallback)
        UpdateParticleFallbackOrBuilder {
      // Use UpdateParticleFallback.newBuilder() to construct.
      private UpdateParticleFallback(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
        super(builder);
        this.unknownFields = builder.getUnknownFields();
      }
      private UpdateParticleFallback(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

      private static final UpdateParticleFallback defaultInstance;
      public static UpdateParticleFallback getDefaultInstance() {
        return defaultInstance;
      }

      public UpdateParticleFallback getDefaultInstanceForType() {
        return defaultInstance;
      }

      private final com.google.protobuf.UnknownFieldSet unknownFields;
      @java.lang.Override
      public final com.google.protobuf.UnknownFieldSet
          getUnknownFields() {
        return this.unknownFields;
      }
      private UpdateParticleFallback(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        initFields();
        int mutable_bitField0_ = 0;
        com.google.protobuf.UnknownFieldSet.Builder unknownFields =
            com.google.protobuf.UnknownFieldSet.newBuilder();
        try {
          boolean done = false;
          while (!done) {
            int tag = input.readTag();
            switch (tag) {
              case 0:
                done = true;
                break;
              default: {
                if (!parseUnknownField(input, unknownFields,
                                       extensionRegistry, tag)) {
                  done = true;
                }
                break;
              }
              case 8: {
                bitField0_ |= 0x00000001;
                controlPoint_ = input.readInt32();
                break;
              }
              case 18: {
                skadistats.clarity.wire.common.proto.NetworkBaseTypes.CMsgVector.Builder subBuilder = null;
                if (((bitField0_ & 0x00000002) == 0x00000002)) {
                  subBuilder = position_.toBuilder();
                }
                position_ = input.readMessage(skadistats.clarity.wire.common.proto.NetworkBaseTypes.CMsgVector.PARSER, extensionRegistry);
                if (subBuilder != null) {
                  subBuilder.mergeFrom(position_);
                  position_ = subBuilder.buildPartial();
                }
                bitField0_ |= 0x00000002;
                break;
              }
            }
          }
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.setUnfinishedMessage(this);
        } catch (java.io.IOException e) {
          throw new com.google.protobuf.InvalidProtocolBufferException(
              e.getMessage()).setUnfinishedMessage(this);
        } finally {
          this.unknownFields = unknownFields.build();
          makeExtensionsImmutable();
        }
      }
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return skadistats.clarity.wire.common.proto.DotaUserMessages.internal_static_CDOTAUserMsg_ParticleManager_UpdateParticleFallback_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return skadistats.clarity.wire.common.proto.DotaUserMessages.internal_static_CDOTAUserMsg_ParticleManager_UpdateParticleFallback_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_ParticleManager.UpdateParticleFallback.class, skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_ParticleManager.UpdateParticleFallback.Builder.class);
      }

      public static com.google.protobuf.Parser<UpdateParticleFallback> PARSER =
          new com.google.protobuf.AbstractParser<UpdateParticleFallback>() {
        public UpdateParticleFallback parsePartialFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws com.google.protobuf.InvalidProtocolBufferException {
          return new UpdateParticleFallback(input, extensionRegistry);
        }
      };

      @java.lang.Override
      public com.google.protobuf.Parser<UpdateParticleFallback> getParserForType() {
        return PARSER;
      }

      private int bitField0_;
      public static final int CONTROL_POINT_FIELD_NUMBER = 1;
      private int controlPoint_;
      /**
       * <code>optional int32 control_point = 1;</code>
       */
      public boolean hasControlPoint() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>optional int32 control_point = 1;</code>
       */
      public int getControlPoint() {
        return controlPoint_;
      }

      public static final int POSITION_FIELD_NUMBER = 2;
      private skadistats.clarity.wire.common.proto.NetworkBaseTypes.CMsgVector position_;
      /**
       * <code>optional .CMsgVector position = 2;</code>
       */
      public boolean hasPosition() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>optional .CMsgVector position = 2;</code>
       */
      public skadistats.clarity.wire.common.proto.NetworkBaseTypes.CMsgVector getPosition() {
        return position_;
      }
      /**
       * <code>optional .CMsgVector position = 2;</code>
       */
      public skadistats.clarity.wire.common.proto.NetworkBaseTypes.CMsgVectorOrBuilder getPositionOrBuilder() {
        return position_;
      }

      private void initFields() {
        controlPoint_ = 0;
        position_ = skadistats.clarity.wire.common.proto.NetworkBaseTypes.CMsgVector.getDefaultInstance();
      }
      private byte memoizedIsInitialized = -1;
      public final boolean isInitialized() {
        byte isInitialized = memoizedIsInitialized;
        if (isInitialized == 1) return true;
        if (isInitialized == 0) return false;

        memoizedIsInitialized = 1;
        return true;
      }

      public void writeTo(com.google.protobuf.CodedOutputStream output)
                          throws java.io.IOException {
        getSerializedSize();
        if (((bitField0_ & 0x00000001) == 0x00000001)) {
          output.writeInt32(1, controlPoint_);
        }
        if (((bitField0_ & 0x00000002) == 0x00000002)) {
          output.writeMessage(2, position_);
        }
        getUnknownFields().writeTo(output);
      }

      private int memoizedSerializedSize = -1;
      public int getSerializedSize() {
        int size = memoizedSerializedSize;
        if (size != -1) return size;

        size = 0;
        if (((bitField0_ & 0x00000001) == 0x00000001)) {
          size += com.google.protobuf.CodedOutputStream
            .computeInt32Size(1, controlPoint_);
        }
        if (((bitField0_ & 0x00000002) == 0x00000002)) {
          size += com.google.protobuf.CodedOutputStream
            .computeMessageSize(2, position_);
        }
        size += getUnknownFields().getSerializedSize();
        memoizedSerializedSize = size;
        return size;
      }

      private static final long serialVersionUID = 0L;
      @java.lang.Override
      protected java.lang.Object writeReplace()
          throws java.io.ObjectStreamException {
        return super.writeReplace();
      }

      public static skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_ParticleManager.UpdateParticleFallback parseFrom(
          com.google.protobuf.ByteString data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_ParticleManager.UpdateParticleFallback parseFrom(
          com.google.protobuf.ByteString data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_ParticleManager.UpdateParticleFallback parseFrom(byte[] data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_ParticleManager.UpdateParticleFallback parseFrom(
          byte[] data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_ParticleManager.UpdateParticleFallback parseFrom(java.io.InputStream input)
          throws java.io.IOException {
        return PARSER.parseFrom(input);
      }
      public static skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_ParticleManager.UpdateParticleFallback parseFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return PARSER.parseFrom(input, extensionRegistry);
      }
      public static skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_ParticleManager.UpdateParticleFallback parseDelimitedFrom(java.io.InputStream input)
          throws java.io.IOException {
        return PARSER.parseDelimitedFrom(input);
      }
      public static skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_ParticleManager.UpdateParticleFallback parseDelimitedFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return PARSER.parseDelimitedFrom(input, extensionRegistry);
      }
      public static skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_ParticleManager.UpdateParticleFallback parseFrom(
          com.google.protobuf.CodedInputStream input)
          throws java.io.IOException {
        return PARSER.parseFrom(input);
      }
      public static skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_ParticleManager.UpdateParticleFallback parseFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return PARSER.parseFrom(input, extensionRegistry);
      }

      public static Builder newBuilder() { return Builder.create(); }
      public Builder newBuilderForType() { return newBuilder(); }
      public static Builder newBuilder(skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_ParticleManager.UpdateParticleFallback prototype) {
        return newBuilder().mergeFrom(prototype);
      }
      public Builder toBuilder() { return newBuilder(this); }

      @java.lang.Override
      protected Builder newBuilderForType(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        Builder builder = new Builder(parent);
        return builder;
      }
      /**
       * Protobuf type {@code CDOTAUserMsg_ParticleManager.UpdateParticleFallback}
       */
      public static final class Builder extends
          com.google.protobuf.GeneratedMessage.Builder<Builder> implements
          // @@protoc_insertion_point(builder_implements:CDOTAUserMsg_ParticleManager.UpdateParticleFallback)
          skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_ParticleManager.UpdateParticleFallbackOrBuilder {
        public static final com.google.protobuf.Descriptors.Descriptor
            getDescriptor() {
          return skadistats.clarity.wire.common.proto.DotaUserMessages.internal_static_CDOTAUserMsg_ParticleManager_UpdateParticleFallback_descriptor;
        }

        protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
            internalGetFieldAccessorTable() {
          return skadistats.clarity.wire.common.proto.DotaUserMessages.internal_static_CDOTAUserMsg_ParticleManager_UpdateParticleFallback_fieldAccessorTable
              .ensureFieldAccessorsInitialized(
                  skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_ParticleManager.UpdateParticleFallback.class, skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_ParticleManager.UpdateParticleFallback.Builder.class);
        }

        // Construct using skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_ParticleManager.UpdateParticleFallback.newBuilder()
        private Builder() {
          maybeForceBuilderInitialization();
        }

        private Builder(
            com.google.protobuf.GeneratedMessage.BuilderParent parent) {
          super(parent);
          maybeForceBuilderInitialization();
        }
        private void maybeForceBuilderInitialization() {
          if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
            getPositionFieldBuilder();
          }
        }
        private static Builder create() {
          return new Builder();
        }

        public Builder clear() {
          super.clear();
          controlPoint_ = 0;
          bitField0_ = (bitField0_ & ~0x00000001);
          if (positionBuilder_ == null) {
            position_ = skadistats.clarity.wire.common.proto.NetworkBaseTypes.CMsgVector.getDefaultInstance();
          } else {
            positionBuilder_.clear();
          }
          bitField0_ = (bitField0_ & ~0x00000002);
          return this;
        }

        public Builder clone() {
          return create().mergeFrom(buildPartial());
        }

        public com.google.protobuf.Descriptors.Descriptor
            getDescriptorForType() {
          return skadistats.clarity.wire.common.proto.DotaUserMessages.internal_static_CDOTAUserMsg_ParticleManager_UpdateParticleFallback_descriptor;
        }

        public skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_ParticleManager.UpdateParticleFallback getDefaultInstanceForType() {
          return skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_ParticleManager.UpdateParticleFallback.getDefaultInstance();
        }

        public skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_ParticleManager.UpdateParticleFallback build() {
          skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_ParticleManager.UpdateParticleFallback result = buildPartial();
          if (!result.isInitialized()) {
            throw newUninitializedMessageException(result);
          }
          return result;
        }

        public skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_ParticleManager.UpdateParticleFallback buildPartial() {
          skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_ParticleManager.UpdateParticleFallback result = new skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_ParticleManager.UpdateParticleFallback(this);
          int from_bitField0_ = bitField0_;
          int to_bitField0_ = 0;
          if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
            to_bitField0_ |= 0x00000001;
          }
          result.controlPoint_ = controlPoint_;
          if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
            to_bitField0_ |= 0x00000002;
          }
          if (positionBuilder_ == null) {
            result.position_ = position_;
          } else {
            result.position_ = positionBuilder_.build();
          }
          result.bitField0_ = to_bitField0_;
          onBuilt();
          return result;
        }

        public Builder mergeFrom(com.google.protobuf.Message other) {
          if (other instanceof skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_ParticleManager.UpdateParticleFallback) {
            return mergeFrom((skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_ParticleManager.UpdateParticleFallback)other);
          } else {
            super.mergeFrom(other);
            return this;
          }
        }

        public Builder mergeFrom(skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_ParticleManager.UpdateParticleFallback other) {
          if (other == skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_ParticleManager.UpdateParticleFallback.getDefaultInstance()) return this;
          if (other.hasControlPoint()) {
            setControlPoint(other.getControlPoint());
          }
          if (other.hasPosition()) {
            mergePosition(other.getPosition());
          }
          this.mergeUnknownFields(other.getUnknownFields());
          return this;
        }

        public final boolean isInitialized() {
          return true;
        }

        public Builder mergeFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws java.io.IOException {
          skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_ParticleManager.UpdateParticleFallback parsedMessage = null;
          try {
            parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
          } catch (com.google.protobuf.InvalidProtocolBufferException e) {
            parsedMessage = (skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_ParticleManager.UpdateParticleFallback) e.getUnfinishedMessage();
            throw e;
          } finally {
            if (parsedMessage != null) {
              mergeFrom(parsedMessage);
            }
          }
          return this;
        }
        private int bitField0_;

        private int controlPoint_ ;
        /**
         * <code>optional int32 control_point = 1;</code>
         */
        public boolean hasControlPoint() {
          return ((bitField0_ & 0x00000001) == 0x00000001);
        }
        /**
         * <code>optional int32 control_point = 1;</code>
         */
        public int getControlPoint() {
          return controlPoint_;
        }
        /**
         * <code>optional int32 control_point = 1;</code>
         */
        public Builder setControlPoint(int value) {
          bitField0_ |= 0x00000001;
          controlPoint_ = value;
          onChanged();
          return this;
        }
        /**
         * <code>optional int32 control_point = 1;</code>
         */
        public Builder clearControlPoint() {
          bitField0_ = (bitField0_ & ~0x00000001);
          controlPoint_ = 0;
          onChanged();
          return this;
        }

        private skadistats.clarity.wire.common.proto.NetworkBaseTypes.CMsgVector position_ = skadistats.clarity.wire.common.proto.NetworkBaseTypes.CMsgVector.getDefaultInstance();
        private com.google.protobuf.SingleFieldBuilder<
            skadistats.clarity.wire.common.proto.NetworkBaseTypes.CMsgVector, skadistats.clarity.wire.common.proto.NetworkBaseTypes.CMsgVector.Builder, skadistats.clarity.wire.common.proto.NetworkBaseTypes.CMsgVectorOrBuilder> positionBuilder_;
        /**
         * <code>optional .CMsgVector position = 2;</code>
         */
        public boolean hasPosition() {
          return ((bitField0_ & 0x00000002) == 0x00000002);
        }
        /**
         * <code>optional .CMsgVector position = 2;</code>
         */
        public skadistats.clarity.wire.common.proto.NetworkBaseTypes.CMsgVector getPosition() {
          if (positionBuilder_ == null) {
            return position_;
          } else {
            return positionBuilder_.getMessage();
          }
        }
        /**
         * <code>optional .CMsgVector position = 2;</code>
         */
        public Builder setPosition(skadistats.clarity.wire.common.proto.NetworkBaseTypes.CMsgVector value) {
          if (positionBuilder_ == null) {
            if (value == null) {
              throw new NullPointerException();
            }
            position_ = value;
            onChanged();
          } else {
            positionBuilder_.setMessage(value);
          }
          bitField0_ |= 0x00000002;
          return this;
        }
        /**
         * <code>optional .CMsgVector position = 2;</code>
         */
        public Builder setPosition(
            skadistats.clarity.wire.common.proto.NetworkBaseTypes.CMsgVector.Builder builderForValue) {
          if (positionBuilder_ == null) {
            position_ = builderForValue.build();
            onChanged();
          } else {
            positionBuilder_.setMessage(builderForValue.build());
          }
          bitField0_ |= 0x00000002;
          return this;
        }
        /**
         * <code>optional .CMsgVector position = 2;</code>
         */
        public Builder mergePosition(skadistats.clarity.wire.common.proto.NetworkBaseTypes.CMsgVector value) {
          if (positionBuilder_ == null) {
            if (((bitField0_ & 0x00000002) == 0x00000002) &&
                position_ != skadistats.clarity.wire.common.proto.NetworkBaseTypes.CMsgVector.getDefaultInstance()) {
              position_ =
                skadistats.clarity.wire.common.proto.NetworkBaseTypes.CMsgVector.newBuilder(position_).mergeFrom(value).buildPartial();
            } else {
              position_ = value;
            }
            onChanged();
          } else {
            positionBuilder_.mergeFrom(value);
          }
          bitField0_ |= 0x00000002;
          return this;
        }
        /**
         * <code>optional .CMsgVector position = 2;</code>
         */
        public Builder clearPosition() {
          if (positionBuilder_ == null) {
            position_ = skadistats.clarity.wire.common.proto.NetworkBaseTypes.CMsgVector.getDefaultInstance();
            onChanged();
          } else {
            positionBuilder_.clear();
          }
          bitField0_ = (bitField0_ & ~0x00000002);
          return this;
        }
        /**
         * <code>optional .CMsgVector position = 2;</code>
         */
        public skadistats.clarity.wire.common.proto.NetworkBaseTypes.CMsgVector.Builder getPositionBuilder() {
          bitField0_ |= 0x00000002;
          onChanged();
          return getPositionFieldBuilder().getBuilder();
        }
        /**
         * <code>optional .CMsgVector position = 2;</code>
         */
        public skadistats.clarity.wire.common.proto.NetworkBaseTypes.CMsgVectorOrBuilder getPositionOrBuilder() {
          if (positionBuilder_ != null) {
            return positionBuilder_.getMessageOrBuilder();
          } else {
            return position_;
          }
        }
        /**
         * <code>optional .CMsgVector position = 2;</code>
         */
        private com.google.protobuf.SingleFieldBuilder<
            skadistats.clarity.wire.common.proto.NetworkBaseTypes.CMsgVector, skadistats.clarity.wire.common.proto.NetworkBaseTypes.CMsgVector.Builder, skadistats.clarity.wire.common.proto.NetworkBaseTypes.CMsgVectorOrBuilder> 
            getPositionFieldBuilder() {
          if (positionBuilder_ == null) {
            positionBuilder_ = new com.google.protobuf.SingleFieldBuilder<
                skadistats.clarity.wire.common.proto.NetworkBaseTypes.CMsgVector, skadistats.clarity.wire.common.proto.NetworkBaseTypes.CMsgVector.Builder, skadistats.clarity.wire.common.proto.NetworkBaseTypes.CMsgVectorOrBuilder>(
                    getPosition(),
                    getParentForChildren(),
                    isClean());
            position_ = null;
          }
          return positionBuilder_;
        }

        // @@protoc_insertion_point(builder_scope:CDOTAUserMsg_ParticleManager.UpdateParticleFallback)
      }

      static {
        defaultInstance = new UpdateParticleFallback(true);
        defaultInstance.initFields();
      }

      // @@protoc_insertion_point(class_scope:CDOTAUserMsg_ParticleManager.UpdateParticleFallback)
    }

    public interface UpdateParticleOffsetOrBuilder extends
        // @@protoc_insertion_point(interface_extends:CDOTAUserMsg_ParticleManager.UpdateParticleOffset)
        com.google.protobuf.MessageOrBuilder {

      /**
       * <code>optional int32 control_point = 1;</code>
       */
      boolean hasControlPoint();
      /**
       * <code>optional int32 control_point = 1;</code>
       */
      int getControlPoint();

      /**
       * <code>optional .CMsgVector origin_offset = 2;</code>
       */
      boolean hasOriginOffset();
      /**
       * <code>optional .CMsgVector origin_offset = 2;</code>
       */
      skadistats.clarity.wire.common.proto.NetworkBaseTypes.CMsgVector getOriginOffset();
      /**
       * <code>optional .CMsgVector origin_offset = 2;</code>
       */
      skadistats.clarity.wire.common.proto.NetworkBaseTypes.CMsgVectorOrBuilder getOriginOffsetOrBuilder();
    }
    /**
     * Protobuf type {@code CDOTAUserMsg_ParticleManager.UpdateParticleOffset}
     */
    public static final class UpdateParticleOffset extends
        com.google.protobuf.GeneratedMessage implements
        // @@protoc_insertion_point(message_implements:CDOTAUserMsg_ParticleManager.UpdateParticleOffset)
        UpdateParticleOffsetOrBuilder {
      // Use UpdateParticleOffset.newBuilder() to construct.
      private UpdateParticleOffset(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
        super(builder);
        this.unknownFields = builder.getUnknownFields();
      }
      private UpdateParticleOffset(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

      private static final UpdateParticleOffset defaultInstance;
      public static UpdateParticleOffset getDefaultInstance() {
        return defaultInstance;
      }

      public UpdateParticleOffset getDefaultInstanceForType() {
        return defaultInstance;
      }

      private final com.google.protobuf.UnknownFieldSet unknownFields;
      @java.lang.Override
      public final com.google.protobuf.UnknownFieldSet
          getUnknownFields() {
        return this.unknownFields;
      }
      private UpdateParticleOffset(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        initFields();
        int mutable_bitField0_ = 0;
        com.google.protobuf.UnknownFieldSet.Builder unknownFields =
            com.google.protobuf.UnknownFieldSet.newBuilder();
        try {
          boolean done = false;
          while (!done) {
            int tag = input.readTag();
            switch (tag) {
              case 0:
                done = true;
                break;
              default: {
                if (!parseUnknownField(input, unknownFields,
                                       extensionRegistry, tag)) {
                  done = true;
                }
                break;
              }
              case 8: {
                bitField0_ |= 0x00000001;
                controlPoint_ = input.readInt32();
                break;
              }
              case 18: {
                skadistats.clarity.wire.common.proto.NetworkBaseTypes.CMsgVector.Builder subBuilder = null;
                if (((bitField0_ & 0x00000002) == 0x00000002)) {
                  subBuilder = originOffset_.toBuilder();
                }
                originOffset_ = input.readMessage(skadistats.clarity.wire.common.proto.NetworkBaseTypes.CMsgVector.PARSER, extensionRegistry);
                if (subBuilder != null) {
                  subBuilder.mergeFrom(originOffset_);
                  originOffset_ = subBuilder.buildPartial();
                }
                bitField0_ |= 0x00000002;
                break;
              }
            }
          }
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.setUnfinishedMessage(this);
        } catch (java.io.IOException e) {
          throw new com.google.protobuf.InvalidProtocolBufferException(
              e.getMessage()).setUnfinishedMessage(this);
        } finally {
          this.unknownFields = unknownFields.build();
          makeExtensionsImmutable();
        }
      }
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return skadistats.clarity.wire.common.proto.DotaUserMessages.internal_static_CDOTAUserMsg_ParticleManager_UpdateParticleOffset_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return skadistats.clarity.wire.common.proto.DotaUserMessages.internal_static_CDOTAUserMsg_ParticleManager_UpdateParticleOffset_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_ParticleManager.UpdateParticleOffset.class, skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_ParticleManager.UpdateParticleOffset.Builder.class);
      }

      public static com.google.protobuf.Parser<UpdateParticleOffset> PARSER =
          new com.google.protobuf.AbstractParser<UpdateParticleOffset>() {
        public UpdateParticleOffset parsePartialFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws com.google.protobuf.InvalidProtocolBufferException {
          return new UpdateParticleOffset(input, extensionRegistry);
        }
      };

      @java.lang.Override
      public com.google.protobuf.Parser<UpdateParticleOffset> getParserForType() {
        return PARSER;
      }

      private int bitField0_;
      public static final int CONTROL_POINT_FIELD_NUMBER = 1;
      private int controlPoint_;
      /**
       * <code>optional int32 control_point = 1;</code>
       */
      public boolean hasControlPoint() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>optional int32 control_point = 1;</code>
       */
      public int getControlPoint() {
        return controlPoint_;
      }

      public static final int ORIGIN_OFFSET_FIELD_NUMBER = 2;
      private skadistats.clarity.wire.common.proto.NetworkBaseTypes.CMsgVector originOffset_;
      /**
       * <code>optional .CMsgVector origin_offset = 2;</code>
       */
      public boolean hasOriginOffset() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>optional .CMsgVector origin_offset = 2;</code>
       */
      public skadistats.clarity.wire.common.proto.NetworkBaseTypes.CMsgVector getOriginOffset() {
        return originOffset_;
      }
      /**
       * <code>optional .CMsgVector origin_offset = 2;</code>
       */
      public skadistats.clarity.wire.common.proto.NetworkBaseTypes.CMsgVectorOrBuilder getOriginOffsetOrBuilder() {
        return originOffset_;
      }

      private void initFields() {
        controlPoint_ = 0;
        originOffset_ = skadistats.clarity.wire.common.proto.NetworkBaseTypes.CMsgVector.getDefaultInstance();
      }
      private byte memoizedIsInitialized = -1;
      public final boolean isInitialized() {
        byte isInitialized = memoizedIsInitialized;
        if (isInitialized == 1) return true;
        if (isInitialized == 0) return false;

        memoizedIsInitialized = 1;
        return true;
      }

      public void writeTo(com.google.protobuf.CodedOutputStream output)
                          throws java.io.IOException {
        getSerializedSize();
        if (((bitField0_ & 0x00000001) == 0x00000001)) {
          output.writeInt32(1, controlPoint_);
        }
        if (((bitField0_ & 0x00000002) == 0x00000002)) {
          output.writeMessage(2, originOffset_);
        }
        getUnknownFields().writeTo(output);
      }

      private int memoizedSerializedSize = -1;
      public int getSerializedSize() {
        int size = memoizedSerializedSize;
        if (size != -1) return size;

        size = 0;
        if (((bitField0_ & 0x00000001) == 0x00000001)) {
          size += com.google.protobuf.CodedOutputStream
            .computeInt32Size(1, controlPoint_);
        }
        if (((bitField0_ & 0x00000002) == 0x00000002)) {
          size += com.google.protobuf.CodedOutputStream
            .computeMessageSize(2, originOffset_);
        }
        size += getUnknownFields().getSerializedSize();
        memoizedSerializedSize = size;
        return size;
      }

      private static final long serialVersionUID = 0L;
      @java.lang.Override
      protected java.lang.Object writeReplace()
          throws java.io.ObjectStreamException {
        return super.writeReplace();
      }

      public static skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_ParticleManager.UpdateParticleOffset parseFrom(
          com.google.protobuf.ByteString data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_ParticleManager.UpdateParticleOffset parseFrom(
          com.google.protobuf.ByteString data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_ParticleManager.UpdateParticleOffset parseFrom(byte[] data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_ParticleManager.UpdateParticleOffset parseFrom(
          byte[] data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_ParticleManager.UpdateParticleOffset parseFrom(java.io.InputStream input)
          throws java.io.IOException {
        return PARSER.parseFrom(input);
      }
      public static skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_ParticleManager.UpdateParticleOffset parseFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return PARSER.parseFrom(input, extensionRegistry);
      }
      public static skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_ParticleManager.UpdateParticleOffset parseDelimitedFrom(java.io.InputStream input)
          throws java.io.IOException {
        return PARSER.parseDelimitedFrom(input);
      }
      public static skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_ParticleManager.UpdateParticleOffset parseDelimitedFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return PARSER.parseDelimitedFrom(input, extensionRegistry);
      }
      public static skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_ParticleManager.UpdateParticleOffset parseFrom(
          com.google.protobuf.CodedInputStream input)
          throws java.io.IOException {
        return PARSER.parseFrom(input);
      }
      public static skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_ParticleManager.UpdateParticleOffset parseFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return PARSER.parseFrom(input, extensionRegistry);
      }

      public static Builder newBuilder() { return Builder.create(); }
      public Builder newBuilderForType() { return newBuilder(); }
      public static Builder newBuilder(skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_ParticleManager.UpdateParticleOffset prototype) {
        return newBuilder().mergeFrom(prototype);
      }
      public Builder toBuilder() { return newBuilder(this); }

      @java.lang.Override
      protected Builder newBuilderForType(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        Builder builder = new Builder(parent);
        return builder;
      }
      /**
       * Protobuf type {@code CDOTAUserMsg_ParticleManager.UpdateParticleOffset}
       */
      public static final class Builder extends
          com.google.protobuf.GeneratedMessage.Builder<Builder> implements
          // @@protoc_insertion_point(builder_implements:CDOTAUserMsg_ParticleManager.UpdateParticleOffset)
          skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_ParticleManager.UpdateParticleOffsetOrBuilder {
        public static final com.google.protobuf.Descriptors.Descriptor
            getDescriptor() {
          return skadistats.clarity.wire.common.proto.DotaUserMessages.internal_static_CDOTAUserMsg_ParticleManager_UpdateParticleOffset_descriptor;
        }

        protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
            internalGetFieldAccessorTable() {
          return skadistats.clarity.wire.common.proto.DotaUserMessages.internal_static_CDOTAUserMsg_ParticleManager_UpdateParticleOffset_fieldAccessorTable
              .ensureFieldAccessorsInitialized(
                  skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_ParticleManager.UpdateParticleOffset.class, skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_ParticleManager.UpdateParticleOffset.Builder.class);
        }

        // Construct using skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_ParticleManager.UpdateParticleOffset.newBuilder()
        private Builder() {
          maybeForceBuilderInitialization();
        }

        private Builder(
            com.google.protobuf.GeneratedMessage.BuilderParent parent) {
          super(parent);
          maybeForceBuilderInitialization();
        }
        private void maybeForceBuilderInitialization() {
          if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
            getOriginOffsetFieldBuilder();
          }
        }
        private static Builder create() {
          return new Builder();
        }

        public Builder clear() {
          super.clear();
          controlPoint_ = 0;
          bitField0_ = (bitField0_ & ~0x00000001);
          if (originOffsetBuilder_ == null) {
            originOffset_ = skadistats.clarity.wire.common.proto.NetworkBaseTypes.CMsgVector.getDefaultInstance();
          } else {
            originOffsetBuilder_.clear();
          }
          bitField0_ = (bitField0_ & ~0x00000002);
          return this;
        }

        public Builder clone() {
          return create().mergeFrom(buildPartial());
        }

        public com.google.protobuf.Descriptors.Descriptor
            getDescriptorForType() {
          return skadistats.clarity.wire.common.proto.DotaUserMessages.internal_static_CDOTAUserMsg_ParticleManager_UpdateParticleOffset_descriptor;
        }

        public skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_ParticleManager.UpdateParticleOffset getDefaultInstanceForType() {
          return skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_ParticleManager.UpdateParticleOffset.getDefaultInstance();
        }

        public skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_ParticleManager.UpdateParticleOffset build() {
          skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_ParticleManager.UpdateParticleOffset result = buildPartial();
          if (!result.isInitialized()) {
            throw newUninitializedMessageException(result);
          }
          return result;
        }

        public skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_ParticleManager.UpdateParticleOffset buildPartial() {
          skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_ParticleManager.UpdateParticleOffset result = new skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_ParticleManager.UpdateParticleOffset(this);
          int from_bitField0_ = bitField0_;
          int to_bitField0_ = 0;
          if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
            to_bitField0_ |= 0x00000001;
          }
          result.controlPoint_ = controlPoint_;
          if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
            to_bitField0_ |= 0x00000002;
          }
          if (originOffsetBuilder_ == null) {
            result.originOffset_ = originOffset_;
          } else {
            result.originOffset_ = originOffsetBuilder_.build();
          }
          result.bitField0_ = to_bitField0_;
          onBuilt();
          return result;
        }

        public Builder mergeFrom(com.google.protobuf.Message other) {
          if (other instanceof skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_ParticleManager.UpdateParticleOffset) {
            return mergeFrom((skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_ParticleManager.UpdateParticleOffset)other);
          } else {
            super.mergeFrom(other);
            return this;
          }
        }

        public Builder mergeFrom(skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_ParticleManager.UpdateParticleOffset other) {
          if (other == skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_ParticleManager.UpdateParticleOffset.getDefaultInstance()) return this;
          if (other.hasControlPoint()) {
            setControlPoint(other.getControlPoint());
          }
          if (other.hasOriginOffset()) {
            mergeOriginOffset(other.getOriginOffset());
          }
          this.mergeUnknownFields(other.getUnknownFields());
          return this;
        }

        public final boolean isInitialized() {
          return true;
        }

        public Builder mergeFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws java.io.IOException {
          skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_ParticleManager.UpdateParticleOffset parsedMessage = null;
          try {
            parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
          } catch (com.google.protobuf.InvalidProtocolBufferException e) {
            parsedMessage = (skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_ParticleManager.UpdateParticleOffset) e.getUnfinishedMessage();
            throw e;
          } finally {
            if (parsedMessage != null) {
              mergeFrom(parsedMessage);
            }
          }
          return this;
        }
        private int bitField0_;

        private int controlPoint_ ;
        /**
         * <code>optional int32 control_point = 1;</code>
         */
        public boolean hasControlPoint() {
          return ((bitField0_ & 0x00000001) == 0x00000001);
        }
        /**
         * <code>optional int32 control_point = 1;</code>
         */
        public int getControlPoint() {
          return controlPoint_;
        }
        /**
         * <code>optional int32 control_point = 1;</code>
         */
        public Builder setControlPoint(int value) {
          bitField0_ |= 0x00000001;
          controlPoint_ = value;
          onChanged();
          return this;
        }
        /**
         * <code>optional int32 control_point = 1;</code>
         */
        public Builder clearControlPoint() {
          bitField0_ = (bitField0_ & ~0x00000001);
          controlPoint_ = 0;
          onChanged();
          return this;
        }

        private skadistats.clarity.wire.common.proto.NetworkBaseTypes.CMsgVector originOffset_ = skadistats.clarity.wire.common.proto.NetworkBaseTypes.CMsgVector.getDefaultInstance();
        private com.google.protobuf.SingleFieldBuilder<
            skadistats.clarity.wire.common.proto.NetworkBaseTypes.CMsgVector, skadistats.clarity.wire.common.proto.NetworkBaseTypes.CMsgVector.Builder, skadistats.clarity.wire.common.proto.NetworkBaseTypes.CMsgVectorOrBuilder> originOffsetBuilder_;
        /**
         * <code>optional .CMsgVector origin_offset = 2;</code>
         */
        public boolean hasOriginOffset() {
          return ((bitField0_ & 0x00000002) == 0x00000002);
        }
        /**
         * <code>optional .CMsgVector origin_offset = 2;</code>
         */
        public skadistats.clarity.wire.common.proto.NetworkBaseTypes.CMsgVector getOriginOffset() {
          if (originOffsetBuilder_ == null) {
            return originOffset_;
          } else {
            return originOffsetBuilder_.getMessage();
          }
        }
        /**
         * <code>optional .CMsgVector origin_offset = 2;</code>
         */
        public Builder setOriginOffset(skadistats.clarity.wire.common.proto.NetworkBaseTypes.CMsgVector value) {
          if (originOffsetBuilder_ == null) {
            if (value == null) {
              throw new NullPointerException();
            }
            originOffset_ = value;
            onChanged();
          } else {
            originOffsetBuilder_.setMessage(value);
          }
          bitField0_ |= 0x00000002;
          return this;
        }
        /**
         * <code>optional .CMsgVector origin_offset = 2;</code>
         */
        public Builder setOriginOffset(
            skadistats.clarity.wire.common.proto.NetworkBaseTypes.CMsgVector.Builder builderForValue) {
          if (originOffsetBuilder_ == null) {
            originOffset_ = builderForValue.build();
            onChanged();
          } else {
            originOffsetBuilder_.setMessage(builderForValue.build());
          }
          bitField0_ |= 0x00000002;
          return this;
        }
        /**
         * <code>optional .CMsgVector origin_offset = 2;</code>
         */
        public Builder mergeOriginOffset(skadistats.clarity.wire.common.proto.NetworkBaseTypes.CMsgVector value) {
          if (originOffsetBuilder_ == null) {
            if (((bitField0_ & 0x00000002) == 0x00000002) &&
                originOffset_ != skadistats.clarity.wire.common.proto.NetworkBaseTypes.CMsgVector.getDefaultInstance()) {
              originOffset_ =
                skadistats.clarity.wire.common.proto.NetworkBaseTypes.CMsgVector.newBuilder(originOffset_).mergeFrom(value).buildPartial();
            } else {
              originOffset_ = value;
            }
            onChanged();
          } else {
            originOffsetBuilder_.mergeFrom(value);
          }
          bitField0_ |= 0x00000002;
          return this;
        }
        /**
         * <code>optional .CMsgVector origin_offset = 2;</code>
         */
        public Builder clearOriginOffset() {
          if (originOffsetBuilder_ == null) {
            originOffset_ = skadistats.clarity.wire.common.proto.NetworkBaseTypes.CMsgVector.getDefaultInstance();
            onChanged();
          } else {
            originOffsetBuilder_.clear();
          }
          bitField0_ = (bitField0_ & ~0x00000002);
          return this;
        }
        /**
         * <code>optional .CMsgVector origin_offset = 2;</code>
         */
        public skadistats.clarity.wire.common.proto.NetworkBaseTypes.CMsgVector.Builder getOriginOffsetBuilder() {
          bitField0_ |= 0x00000002;
          onChanged();
          return getOriginOffsetFieldBuilder().getBuilder();
        }
        /**
         * <code>optional .CMsgVector origin_offset = 2;</code>
         */
        public skadistats.clarity.wire.common.proto.NetworkBaseTypes.CMsgVectorOrBuilder getOriginOffsetOrBuilder() {
          if (originOffsetBuilder_ != null) {
            return originOffsetBuilder_.getMessageOrBuilder();
          } else {
            return originOffset_;
          }
        }
        /**
         * <code>optional .CMsgVector origin_offset = 2;</code>
         */
        private com.google.protobuf.SingleFieldBuilder<
            skadistats.clarity.wire.common.proto.NetworkBaseTypes.CMsgVector, skadistats.clarity.wire.common.proto.NetworkBaseTypes.CMsgVector.Builder, skadistats.clarity.wire.common.proto.NetworkBaseTypes.CMsgVectorOrBuilder> 
            getOriginOffsetFieldBuilder() {
          if (originOffsetBuilder_ == null) {
            originOffsetBuilder_ = new com.google.protobuf.SingleFieldBuilder<
                skadistats.clarity.wire.common.proto.NetworkBaseTypes.CMsgVector, skadistats.clarity.wire.common.proto.NetworkBaseTypes.CMsgVector.Builder, skadistats.clarity.wire.common.proto.NetworkBaseTypes.CMsgVectorOrBuilder>(
                    getOriginOffset(),
                    getParentForChildren(),
                    isClean());
            originOffset_ = null;
          }
          return originOffsetBuilder_;
        }

        // @@protoc_insertion_point(builder_scope:CDOTAUserMsg_ParticleManager.UpdateParticleOffset)
      }

      static {
        defaultInstance = new UpdateParticleOffset(true);
        defaultInstance.initFields();
      }

      // @@protoc_insertion_point(class_scope:CDOTAUserMsg_ParticleManager.UpdateParticleOffset)
    }

    public interface UpdateParticleEntOrBuilder extends
        // @@protoc_insertion_point(interface_extends:CDOTAUserMsg_ParticleManager.UpdateParticleEnt)
        com.google.protobuf.MessageOrBuilder {

      /**
       * <code>optional int32 control_point = 1;</code>
       */
      boolean hasControlPoint();
      /**
       * <code>optional int32 control_point = 1;</code>
       */
      int getControlPoint();

      /**
       * <code>optional int32 entity_handle = 2;</code>
       */
      boolean hasEntityHandle();
      /**
       * <code>optional int32 entity_handle = 2;</code>
       */
      int getEntityHandle();

      /**
       * <code>optional int32 attach_type = 3;</code>
       */
      boolean hasAttachType();
      /**
       * <code>optional int32 attach_type = 3;</code>
       */
      int getAttachType();

      /**
       * <code>optional int32 attachment = 4;</code>
       */
      boolean hasAttachment();
      /**
       * <code>optional int32 attachment = 4;</code>
       */
      int getAttachment();

      /**
       * <code>optional .CMsgVector fallback_position = 5;</code>
       */
      boolean hasFallbackPosition();
      /**
       * <code>optional .CMsgVector fallback_position = 5;</code>
       */
      skadistats.clarity.wire.common.proto.NetworkBaseTypes.CMsgVector getFallbackPosition();
      /**
       * <code>optional .CMsgVector fallback_position = 5;</code>
       */
      skadistats.clarity.wire.common.proto.NetworkBaseTypes.CMsgVectorOrBuilder getFallbackPositionOrBuilder();

      /**
       * <code>optional bool include_wearables = 6;</code>
       */
      boolean hasIncludeWearables();
      /**
       * <code>optional bool include_wearables = 6;</code>
       */
      boolean getIncludeWearables();
    }
    /**
     * Protobuf type {@code CDOTAUserMsg_ParticleManager.UpdateParticleEnt}
     */
    public static final class UpdateParticleEnt extends
        com.google.protobuf.GeneratedMessage implements
        // @@protoc_insertion_point(message_implements:CDOTAUserMsg_ParticleManager.UpdateParticleEnt)
        UpdateParticleEntOrBuilder {
      // Use UpdateParticleEnt.newBuilder() to construct.
      private UpdateParticleEnt(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
        super(builder);
        this.unknownFields = builder.getUnknownFields();
      }
      private UpdateParticleEnt(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

      private static final UpdateParticleEnt defaultInstance;
      public static UpdateParticleEnt getDefaultInstance() {
        return defaultInstance;
      }

      public UpdateParticleEnt getDefaultInstanceForType() {
        return defaultInstance;
      }

      private final com.google.protobuf.UnknownFieldSet unknownFields;
      @java.lang.Override
      public final com.google.protobuf.UnknownFieldSet
          getUnknownFields() {
        return this.unknownFields;
      }
      private UpdateParticleEnt(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        initFields();
        int mutable_bitField0_ = 0;
        com.google.protobuf.UnknownFieldSet.Builder unknownFields =
            com.google.protobuf.UnknownFieldSet.newBuilder();
        try {
          boolean done = false;
          while (!done) {
            int tag = input.readTag();
            switch (tag) {
              case 0:
                done = true;
                break;
              default: {
                if (!parseUnknownField(input, unknownFields,
                                       extensionRegistry, tag)) {
                  done = true;
                }
                break;
              }
              case 8: {
                bitField0_ |= 0x00000001;
                controlPoint_ = input.readInt32();
                break;
              }
              case 16: {
                bitField0_ |= 0x00000002;
                entityHandle_ = input.readInt32();
                break;
              }
              case 24: {
                bitField0_ |= 0x00000004;
                attachType_ = input.readInt32();
                break;
              }
              case 32: {
                bitField0_ |= 0x00000008;
                attachment_ = input.readInt32();
                break;
              }
              case 42: {
                skadistats.clarity.wire.common.proto.NetworkBaseTypes.CMsgVector.Builder subBuilder = null;
                if (((bitField0_ & 0x00000010) == 0x00000010)) {
                  subBuilder = fallbackPosition_.toBuilder();
                }
                fallbackPosition_ = input.readMessage(skadistats.clarity.wire.common.proto.NetworkBaseTypes.CMsgVector.PARSER, extensionRegistry);
                if (subBuilder != null) {
                  subBuilder.mergeFrom(fallbackPosition_);
                  fallbackPosition_ = subBuilder.buildPartial();
                }
                bitField0_ |= 0x00000010;
                break;
              }
              case 48: {
                bitField0_ |= 0x00000020;
                includeWearables_ = input.readBool();
                break;
              }
            }
          }
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.setUnfinishedMessage(this);
        } catch (java.io.IOException e) {
          throw new com.google.protobuf.InvalidProtocolBufferException(
              e.getMessage()).setUnfinishedMessage(this);
        } finally {
          this.unknownFields = unknownFields.build();
          makeExtensionsImmutable();
        }
      }
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return skadistats.clarity.wire.common.proto.DotaUserMessages.internal_static_CDOTAUserMsg_ParticleManager_UpdateParticleEnt_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return skadistats.clarity.wire.common.proto.DotaUserMessages.internal_static_CDOTAUserMsg_ParticleManager_UpdateParticleEnt_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_ParticleManager.UpdateParticleEnt.class, skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_ParticleManager.UpdateParticleEnt.Builder.class);
      }

      public static com.google.protobuf.Parser<UpdateParticleEnt> PARSER =
          new com.google.protobuf.AbstractParser<UpdateParticleEnt>() {
        public UpdateParticleEnt parsePartialFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws com.google.protobuf.InvalidProtocolBufferException {
          return new UpdateParticleEnt(input, extensionRegistry);
        }
      };

      @java.lang.Override
      public com.google.protobuf.Parser<UpdateParticleEnt> getParserForType() {
        return PARSER;
      }

      private int bitField0_;
      public static final int CONTROL_POINT_FIELD_NUMBER = 1;
      private int controlPoint_;
      /**
       * <code>optional int32 control_point = 1;</code>
       */
      public boolean hasControlPoint() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>optional int32 control_point = 1;</code>
       */
      public int getControlPoint() {
        return controlPoint_;
      }

      public static final int ENTITY_HANDLE_FIELD_NUMBER = 2;
      private int entityHandle_;
      /**
       * <code>optional int32 entity_handle = 2;</code>
       */
      public boolean hasEntityHandle() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>optional int32 entity_handle = 2;</code>
       */
      public int getEntityHandle() {
        return entityHandle_;
      }

      public static final int ATTACH_TYPE_FIELD_NUMBER = 3;
      private int attachType_;
      /**
       * <code>optional int32 attach_type = 3;</code>
       */
      public boolean hasAttachType() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }
      /**
       * <code>optional int32 attach_type = 3;</code>
       */
      public int getAttachType() {
        return attachType_;
      }

      public static final int ATTACHMENT_FIELD_NUMBER = 4;
      private int attachment_;
      /**
       * <code>optional int32 attachment = 4;</code>
       */
      public boolean hasAttachment() {
        return ((bitField0_ & 0x00000008) == 0x00000008);
      }
      /**
       * <code>optional int32 attachment = 4;</code>
       */
      public int getAttachment() {
        return attachment_;
      }

      public static final int FALLBACK_POSITION_FIELD_NUMBER = 5;
      private skadistats.clarity.wire.common.proto.NetworkBaseTypes.CMsgVector fallbackPosition_;
      /**
       * <code>optional .CMsgVector fallback_position = 5;</code>
       */
      public boolean hasFallbackPosition() {
        return ((bitField0_ & 0x00000010) == 0x00000010);
      }
      /**
       * <code>optional .CMsgVector fallback_position = 5;</code>
       */
      public skadistats.clarity.wire.common.proto.NetworkBaseTypes.CMsgVector getFallbackPosition() {
        return fallbackPosition_;
      }
      /**
       * <code>optional .CMsgVector fallback_position = 5;</code>
       */
      public skadistats.clarity.wire.common.proto.NetworkBaseTypes.CMsgVectorOrBuilder getFallbackPositionOrBuilder() {
        return fallbackPosition_;
      }

      public static final int INCLUDE_WEARABLES_FIELD_NUMBER = 6;
      private boolean includeWearables_;
      /**
       * <code>optional bool include_wearables = 6;</code>
       */
      public boolean hasIncludeWearables() {
        return ((bitField0_ & 0x00000020) == 0x00000020);
      }
      /**
       * <code>optional bool include_wearables = 6;</code>
       */
      public boolean getIncludeWearables() {
        return includeWearables_;
      }

      private void initFields() {
        controlPoint_ = 0;
        entityHandle_ = 0;
        attachType_ = 0;
        attachment_ = 0;
        fallbackPosition_ = skadistats.clarity.wire.common.proto.NetworkBaseTypes.CMsgVector.getDefaultInstance();
        includeWearables_ = false;
      }
      private byte memoizedIsInitialized = -1;
      public final boolean isInitialized() {
        byte isInitialized = memoizedIsInitialized;
        if (isInitialized == 1) return true;
        if (isInitialized == 0) return false;

        memoizedIsInitialized = 1;
        return true;
      }

      public void writeTo(com.google.protobuf.CodedOutputStream output)
                          throws java.io.IOException {
        getSerializedSize();
        if (((bitField0_ & 0x00000001) == 0x00000001)) {
          output.writeInt32(1, controlPoint_);
        }
        if (((bitField0_ & 0x00000002) == 0x00000002)) {
          output.writeInt32(2, entityHandle_);
        }
        if (((bitField0_ & 0x00000004) == 0x00000004)) {
          output.writeInt32(3, attachType_);
        }
        if (((bitField0_ & 0x00000008) == 0x00000008)) {
          output.writeInt32(4, attachment_);
        }
        if (((bitField0_ & 0x00000010) == 0x00000010)) {
          output.writeMessage(5, fallbackPosition_);
        }
        if (((bitField0_ & 0x00000020) == 0x00000020)) {
          output.writeBool(6, includeWearables_);
        }
        getUnknownFields().writeTo(output);
      }

      private int memoizedSerializedSize = -1;
      public int getSerializedSize() {
        int size = memoizedSerializedSize;
        if (size != -1) return size;

        size = 0;
        if (((bitField0_ & 0x00000001) == 0x00000001)) {
          size += com.google.protobuf.CodedOutputStream
            .computeInt32Size(1, controlPoint_);
        }
        if (((bitField0_ & 0x00000002) == 0x00000002)) {
          size += com.google.protobuf.CodedOutputStream
            .computeInt32Size(2, entityHandle_);
        }
        if (((bitField0_ & 0x00000004) == 0x00000004)) {
          size += com.google.protobuf.CodedOutputStream
            .computeInt32Size(3, attachType_);
        }
        if (((bitField0_ & 0x00000008) == 0x00000008)) {
          size += com.google.protobuf.CodedOutputStream
            .computeInt32Size(4, attachment_);
        }
        if (((bitField0_ & 0x00000010) == 0x00000010)) {
          size += com.google.protobuf.CodedOutputStream
            .computeMessageSize(5, fallbackPosition_);
        }
        if (((bitField0_ & 0x00000020) == 0x00000020)) {
          size += com.google.protobuf.CodedOutputStream
            .computeBoolSize(6, includeWearables_);
        }
        size += getUnknownFields().getSerializedSize();
        memoizedSerializedSize = size;
        return size;
      }

      private static final long serialVersionUID = 0L;
      @java.lang.Override
      protected java.lang.Object writeReplace()
          throws java.io.ObjectStreamException {
        return super.writeReplace();
      }

      public static skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_ParticleManager.UpdateParticleEnt parseFrom(
          com.google.protobuf.ByteString data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_ParticleManager.UpdateParticleEnt parseFrom(
          com.google.protobuf.ByteString data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_ParticleManager.UpdateParticleEnt parseFrom(byte[] data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_ParticleManager.UpdateParticleEnt parseFrom(
          byte[] data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_ParticleManager.UpdateParticleEnt parseFrom(java.io.InputStream input)
          throws java.io.IOException {
        return PARSER.parseFrom(input);
      }
      public static skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_ParticleManager.UpdateParticleEnt parseFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return PARSER.parseFrom(input, extensionRegistry);
      }
      public static skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_ParticleManager.UpdateParticleEnt parseDelimitedFrom(java.io.InputStream input)
          throws java.io.IOException {
        return PARSER.parseDelimitedFrom(input);
      }
      public static skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_ParticleManager.UpdateParticleEnt parseDelimitedFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return PARSER.parseDelimitedFrom(input, extensionRegistry);
      }
      public static skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_ParticleManager.UpdateParticleEnt parseFrom(
          com.google.protobuf.CodedInputStream input)
          throws java.io.IOException {
        return PARSER.parseFrom(input);
      }
      public static skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_ParticleManager.UpdateParticleEnt parseFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return PARSER.parseFrom(input, extensionRegistry);
      }

      public static Builder newBuilder() { return Builder.create(); }
      public Builder newBuilderForType() { return newBuilder(); }
      public static Builder newBuilder(skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_ParticleManager.UpdateParticleEnt prototype) {
        return newBuilder().mergeFrom(prototype);
      }
      public Builder toBuilder() { return newBuilder(this); }

      @java.lang.Override
      protected Builder newBuilderForType(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        Builder builder = new Builder(parent);
        return builder;
      }
      /**
       * Protobuf type {@code CDOTAUserMsg_ParticleManager.UpdateParticleEnt}
       */
      public static final class Builder extends
          com.google.protobuf.GeneratedMessage.Builder<Builder> implements
          // @@protoc_insertion_point(builder_implements:CDOTAUserMsg_ParticleManager.UpdateParticleEnt)
          skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_ParticleManager.UpdateParticleEntOrBuilder {
        public static final com.google.protobuf.Descriptors.Descriptor
            getDescriptor() {
          return skadistats.clarity.wire.common.proto.DotaUserMessages.internal_static_CDOTAUserMsg_ParticleManager_UpdateParticleEnt_descriptor;
        }

        protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
            internalGetFieldAccessorTable() {
          return skadistats.clarity.wire.common.proto.DotaUserMessages.internal_static_CDOTAUserMsg_ParticleManager_UpdateParticleEnt_fieldAccessorTable
              .ensureFieldAccessorsInitialized(
                  skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_ParticleManager.UpdateParticleEnt.class, skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_ParticleManager.UpdateParticleEnt.Builder.class);
        }

        // Construct using skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_ParticleManager.UpdateParticleEnt.newBuilder()
        private Builder() {
          maybeForceBuilderInitialization();
        }

        private Builder(
            com.google.protobuf.GeneratedMessage.BuilderParent parent) {
          super(parent);
          maybeForceBuilderInitialization();
        }
        private void maybeForceBuilderInitialization() {
          if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
            getFallbackPositionFieldBuilder();
          }
        }
        private static Builder create() {
          return new Builder();
        }

        public Builder clear() {
          super.clear();
          controlPoint_ = 0;
          bitField0_ = (bitField0_ & ~0x00000001);
          entityHandle_ = 0;
          bitField0_ = (bitField0_ & ~0x00000002);
          attachType_ = 0;
          bitField0_ = (bitField0_ & ~0x00000004);
          attachment_ = 0;
          bitField0_ = (bitField0_ & ~0x00000008);
          if (fallbackPositionBuilder_ == null) {
            fallbackPosition_ = skadistats.clarity.wire.common.proto.NetworkBaseTypes.CMsgVector.getDefaultInstance();
          } else {
            fallbackPositionBuilder_.clear();
          }
          bitField0_ = (bitField0_ & ~0x00000010);
          includeWearables_ = false;
          bitField0_ = (bitField0_ & ~0x00000020);
          return this;
        }

        public Builder clone() {
          return create().mergeFrom(buildPartial());
        }

        public com.google.protobuf.Descriptors.Descriptor
            getDescriptorForType() {
          return skadistats.clarity.wire.common.proto.DotaUserMessages.internal_static_CDOTAUserMsg_ParticleManager_UpdateParticleEnt_descriptor;
        }

        public skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_ParticleManager.UpdateParticleEnt getDefaultInstanceForType() {
          return skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_ParticleManager.UpdateParticleEnt.getDefaultInstance();
        }

        public skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_ParticleManager.UpdateParticleEnt build() {
          skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_ParticleManager.UpdateParticleEnt result = buildPartial();
          if (!result.isInitialized()) {
            throw newUninitializedMessageException(result);
          }
          return result;
        }

        public skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_ParticleManager.UpdateParticleEnt buildPartial() {
          skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_ParticleManager.UpdateParticleEnt result = new skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_ParticleManager.UpdateParticleEnt(this);
          int from_bitField0_ = bitField0_;
          int to_bitField0_ = 0;
          if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
            to_bitField0_ |= 0x00000001;
          }
          result.controlPoint_ = controlPoint_;
          if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
            to_bitField0_ |= 0x00000002;
          }
          result.entityHandle_ = entityHandle_;
          if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
            to_bitField0_ |= 0x00000004;
          }
          result.attachType_ = attachType_;
          if (((from_bitField0_ & 0x00000008) == 0x00000008)) {
            to_bitField0_ |= 0x00000008;
          }
          result.attachment_ = attachment_;
          if (((from_bitField0_ & 0x00000010) == 0x00000010)) {
            to_bitField0_ |= 0x00000010;
          }
          if (fallbackPositionBuilder_ == null) {
            result.fallbackPosition_ = fallbackPosition_;
          } else {
            result.fallbackPosition_ = fallbackPositionBuilder_.build();
          }
          if (((from_bitField0_ & 0x00000020) == 0x00000020)) {
            to_bitField0_ |= 0x00000020;
          }
          result.includeWearables_ = includeWearables_;
          result.bitField0_ = to_bitField0_;
          onBuilt();
          return result;
        }

        public Builder mergeFrom(com.google.protobuf.Message other) {
          if (other instanceof skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_ParticleManager.UpdateParticleEnt) {
            return mergeFrom((skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_ParticleManager.UpdateParticleEnt)other);
          } else {
            super.mergeFrom(other);
            return this;
          }
        }

        public Builder mergeFrom(skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_ParticleManager.UpdateParticleEnt other) {
          if (other == skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_ParticleManager.UpdateParticleEnt.getDefaultInstance()) return this;
          if (other.hasControlPoint()) {
            setControlPoint(other.getControlPoint());
          }
          if (other.hasEntityHandle()) {
            setEntityHandle(other.getEntityHandle());
          }
          if (other.hasAttachType()) {
            setAttachType(other.getAttachType());
          }
          if (other.hasAttachment()) {
            setAttachment(other.getAttachment());
          }
          if (other.hasFallbackPosition()) {
            mergeFallbackPosition(other.getFallbackPosition());
          }
          if (other.hasIncludeWearables()) {
            setIncludeWearables(other.getIncludeWearables());
          }
          this.mergeUnknownFields(other.getUnknownFields());
          return this;
        }

        public final boolean isInitialized() {
          return true;
        }

        public Builder mergeFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws java.io.IOException {
          skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_ParticleManager.UpdateParticleEnt parsedMessage = null;
          try {
            parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
          } catch (com.google.protobuf.InvalidProtocolBufferException e) {
            parsedMessage = (skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_ParticleManager.UpdateParticleEnt) e.getUnfinishedMessage();
            throw e;
          } finally {
            if (parsedMessage != null) {
              mergeFrom(parsedMessage);
            }
          }
          return this;
        }
        private int bitField0_;

        private int controlPoint_ ;
        /**
         * <code>optional int32 control_point = 1;</code>
         */
        public boolean hasControlPoint() {
          return ((bitField0_ & 0x00000001) == 0x00000001);
        }
        /**
         * <code>optional int32 control_point = 1;</code>
         */
        public int getControlPoint() {
          return controlPoint_;
        }
        /**
         * <code>optional int32 control_point = 1;</code>
         */
        public Builder setControlPoint(int value) {
          bitField0_ |= 0x00000001;
          controlPoint_ = value;
          onChanged();
          return this;
        }
        /**
         * <code>optional int32 control_point = 1;</code>
         */
        public Builder clearControlPoint() {
          bitField0_ = (bitField0_ & ~0x00000001);
          controlPoint_ = 0;
          onChanged();
          return this;
        }

        private int entityHandle_ ;
        /**
         * <code>optional int32 entity_handle = 2;</code>
         */
        public boolean hasEntityHandle() {
          return ((bitField0_ & 0x00000002) == 0x00000002);
        }
        /**
         * <code>optional int32 entity_handle = 2;</code>
         */
        public int getEntityHandle() {
          return entityHandle_;
        }
        /**
         * <code>optional int32 entity_handle = 2;</code>
         */
        public Builder setEntityHandle(int value) {
          bitField0_ |= 0x00000002;
          entityHandle_ = value;
          onChanged();
          return this;
        }
        /**
         * <code>optional int32 entity_handle = 2;</code>
         */
        public Builder clearEntityHandle() {
          bitField0_ = (bitField0_ & ~0x00000002);
          entityHandle_ = 0;
          onChanged();
          return this;
        }

        private int attachType_ ;
        /**
         * <code>optional int32 attach_type = 3;</code>
         */
        public boolean hasAttachType() {
          return ((bitField0_ & 0x00000004) == 0x00000004);
        }
        /**
         * <code>optional int32 attach_type = 3;</code>
         */
        public int getAttachType() {
          return attachType_;
        }
        /**
         * <code>optional int32 attach_type = 3;</code>
         */
        public Builder setAttachType(int value) {
          bitField0_ |= 0x00000004;
          attachType_ = value;
          onChanged();
          return this;
        }
        /**
         * <code>optional int32 attach_type = 3;</code>
         */
        public Builder clearAttachType() {
          bitField0_ = (bitField0_ & ~0x00000004);
          attachType_ = 0;
          onChanged();
          return this;
        }

        private int attachment_ ;
        /**
         * <code>optional int32 attachment = 4;</code>
         */
        public boolean hasAttachment() {
          return ((bitField0_ & 0x00000008) == 0x00000008);
        }
        /**
         * <code>optional int32 attachment = 4;</code>
         */
        public int getAttachment() {
          return attachment_;
        }
        /**
         * <code>optional int32 attachment = 4;</code>
         */
        public Builder setAttachment(int value) {
          bitField0_ |= 0x00000008;
          attachment_ = value;
          onChanged();
          return this;
        }
        /**
         * <code>optional int32 attachment = 4;</code>
         */
        public Builder clearAttachment() {
          bitField0_ = (bitField0_ & ~0x00000008);
          attachment_ = 0;
          onChanged();
          return this;
        }

        private skadistats.clarity.wire.common.proto.NetworkBaseTypes.CMsgVector fallbackPosition_ = skadistats.clarity.wire.common.proto.NetworkBaseTypes.CMsgVector.getDefaultInstance();
        private com.google.protobuf.SingleFieldBuilder<
            skadistats.clarity.wire.common.proto.NetworkBaseTypes.CMsgVector, skadistats.clarity.wire.common.proto.NetworkBaseTypes.CMsgVector.Builder, skadistats.clarity.wire.common.proto.NetworkBaseTypes.CMsgVectorOrBuilder> fallbackPositionBuilder_;
        /**
         * <code>optional .CMsgVector fallback_position = 5;</code>
         */
        public boolean hasFallbackPosition() {
          return ((bitField0_ & 0x00000010) == 0x00000010);
        }
        /**
         * <code>optional .CMsgVector fallback_position = 5;</code>
         */
        public skadistats.clarity.wire.common.proto.NetworkBaseTypes.CMsgVector getFallbackPosition() {
          if (fallbackPositionBuilder_ == null) {
            return fallbackPosition_;
          } else {
            return fallbackPositionBuilder_.getMessage();
          }
        }
        /**
         * <code>optional .CMsgVector fallback_position = 5;</code>
         */
        public Builder setFallbackPosition(skadistats.clarity.wire.common.proto.NetworkBaseTypes.CMsgVector value) {
          if (fallbackPositionBuilder_ == null) {
            if (value == null) {
              throw new NullPointerException();
            }
            fallbackPosition_ = value;
            onChanged();
          } else {
            fallbackPositionBuilder_.setMessage(value);
          }
          bitField0_ |= 0x00000010;
          return this;
        }
        /**
         * <code>optional .CMsgVector fallback_position = 5;</code>
         */
        public Builder setFallbackPosition(
            skadistats.clarity.wire.common.proto.NetworkBaseTypes.CMsgVector.Builder builderForValue) {
          if (fallbackPositionBuilder_ == null) {
            fallbackPosition_ = builderForValue.build();
            onChanged();
          } else {
            fallbackPositionBuilder_.setMessage(builderForValue.build());
          }
          bitField0_ |= 0x00000010;
          return this;
        }
        /**
         * <code>optional .CMsgVector fallback_position = 5;</code>
         */
        public Builder mergeFallbackPosition(skadistats.clarity.wire.common.proto.NetworkBaseTypes.CMsgVector value) {
          if (fallbackPositionBuilder_ == null) {
            if (((bitField0_ & 0x00000010) == 0x00000010) &&
                fallbackPosition_ != skadistats.clarity.wire.common.proto.NetworkBaseTypes.CMsgVector.getDefaultInstance()) {
              fallbackPosition_ =
                skadistats.clarity.wire.common.proto.NetworkBaseTypes.CMsgVector.newBuilder(fallbackPosition_).mergeFrom(value).buildPartial();
            } else {
              fallbackPosition_ = value;
            }
            onChanged();
          } else {
            fallbackPositionBuilder_.mergeFrom(value);
          }
          bitField0_ |= 0x00000010;
          return this;
        }
        /**
         * <code>optional .CMsgVector fallback_position = 5;</code>
         */
        public Builder clearFallbackPosition() {
          if (fallbackPositionBuilder_ == null) {
            fallbackPosition_ = skadistats.clarity.wire.common.proto.NetworkBaseTypes.CMsgVector.getDefaultInstance();
            onChanged();
          } else {
            fallbackPositionBuilder_.clear();
          }
          bitField0_ = (bitField0_ & ~0x00000010);
          return this;
        }
        /**
         * <code>optional .CMsgVector fallback_position = 5;</code>
         */
        public skadistats.clarity.wire.common.proto.NetworkBaseTypes.CMsgVector.Builder getFallbackPositionBuilder() {
          bitField0_ |= 0x00000010;
          onChanged();
          return getFallbackPositionFieldBuilder().getBuilder();
        }
        /**
         * <code>optional .CMsgVector fallback_position = 5;</code>
         */
        public skadistats.clarity.wire.common.proto.NetworkBaseTypes.CMsgVectorOrBuilder getFallbackPositionOrBuilder() {
          if (fallbackPositionBuilder_ != null) {
            return fallbackPositionBuilder_.getMessageOrBuilder();
          } else {
            return fallbackPosition_;
          }
        }
        /**
         * <code>optional .CMsgVector fallback_position = 5;</code>
         */
        private com.google.protobuf.SingleFieldBuilder<
            skadistats.clarity.wire.common.proto.NetworkBaseTypes.CMsgVector, skadistats.clarity.wire.common.proto.NetworkBaseTypes.CMsgVector.Builder, skadistats.clarity.wire.common.proto.NetworkBaseTypes.CMsgVectorOrBuilder> 
            getFallbackPositionFieldBuilder() {
          if (fallbackPositionBuilder_ == null) {
            fallbackPositionBuilder_ = new com.google.protobuf.SingleFieldBuilder<
                skadistats.clarity.wire.common.proto.NetworkBaseTypes.CMsgVector, skadistats.clarity.wire.common.proto.NetworkBaseTypes.CMsgVector.Builder, skadistats.clarity.wire.common.proto.NetworkBaseTypes.CMsgVectorOrBuilder>(
                    getFallbackPosition(),
                    getParentForChildren(),
                    isClean());
            fallbackPosition_ = null;
          }
          return fallbackPositionBuilder_;
        }

        private boolean includeWearables_ ;
        /**
         * <code>optional bool include_wearables = 6;</code>
         */
        public boolean hasIncludeWearables() {
          return ((bitField0_ & 0x00000020) == 0x00000020);
        }
        /**
         * <code>optional bool include_wearables = 6;</code>
         */
        public boolean getIncludeWearables() {
          return includeWearables_;
        }
        /**
         * <code>optional bool include_wearables = 6;</code>
         */
        public Builder setIncludeWearables(boolean value) {
          bitField0_ |= 0x00000020;
          includeWearables_ = value;
          onChanged();
          return this;
        }
        /**
         * <code>optional bool include_wearables = 6;</code>
         */
        public Builder clearIncludeWearables() {
          bitField0_ = (bitField0_ & ~0x00000020);
          includeWearables_ = false;
          onChanged();
          return this;
        }

        // @@protoc_insertion_point(builder_scope:CDOTAUserMsg_ParticleManager.UpdateParticleEnt)
      }

      static {
        defaultInstance = new UpdateParticleEnt(true);
        defaultInstance.initFields();
      }

      // @@protoc_insertion_point(class_scope:CDOTAUserMsg_ParticleManager.UpdateParticleEnt)
    }

    public interface UpdateParticleSetFrozenOrBuilder extends
        // @@protoc_insertion_point(interface_extends:CDOTAUserMsg_ParticleManager.UpdateParticleSetFrozen)
        com.google.protobuf.MessageOrBuilder {

      /**
       * <code>optional bool set_frozen = 1;</code>
       */
      boolean hasSetFrozen();
      /**
       * <code>optional bool set_frozen = 1;</code>
       */
      boolean getSetFrozen();
    }
    /**
     * Protobuf type {@code CDOTAUserMsg_ParticleManager.UpdateParticleSetFrozen}
     */
    public static final class UpdateParticleSetFrozen extends
        com.google.protobuf.GeneratedMessage implements
        // @@protoc_insertion_point(message_implements:CDOTAUserMsg_ParticleManager.UpdateParticleSetFrozen)
        UpdateParticleSetFrozenOrBuilder {
      // Use UpdateParticleSetFrozen.newBuilder() to construct.
      private UpdateParticleSetFrozen(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
        super(builder);
        this.unknownFields = builder.getUnknownFields();
      }
      private UpdateParticleSetFrozen(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

      private static final UpdateParticleSetFrozen defaultInstance;
      public static UpdateParticleSetFrozen getDefaultInstance() {
        return defaultInstance;
      }

      public UpdateParticleSetFrozen getDefaultInstanceForType() {
        return defaultInstance;
      }

      private final com.google.protobuf.UnknownFieldSet unknownFields;
      @java.lang.Override
      public final com.google.protobuf.UnknownFieldSet
          getUnknownFields() {
        return this.unknownFields;
      }
      private UpdateParticleSetFrozen(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        initFields();
        int mutable_bitField0_ = 0;
        com.google.protobuf.UnknownFieldSet.Builder unknownFields =
            com.google.protobuf.UnknownFieldSet.newBuilder();
        try {
          boolean done = false;
          while (!done) {
            int tag = input.readTag();
            switch (tag) {
              case 0:
                done = true;
                break;
              default: {
                if (!parseUnknownField(input, unknownFields,
                                       extensionRegistry, tag)) {
                  done = true;
                }
                break;
              }
              case 8: {
                bitField0_ |= 0x00000001;
                setFrozen_ = input.readBool();
                break;
              }
            }
          }
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.setUnfinishedMessage(this);
        } catch (java.io.IOException e) {
          throw new com.google.protobuf.InvalidProtocolBufferException(
              e.getMessage()).setUnfinishedMessage(this);
        } finally {
          this.unknownFields = unknownFields.build();
          makeExtensionsImmutable();
        }
      }
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return skadistats.clarity.wire.common.proto.DotaUserMessages.internal_static_CDOTAUserMsg_ParticleManager_UpdateParticleSetFrozen_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return skadistats.clarity.wire.common.proto.DotaUserMessages.internal_static_CDOTAUserMsg_ParticleManager_UpdateParticleSetFrozen_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_ParticleManager.UpdateParticleSetFrozen.class, skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_ParticleManager.UpdateParticleSetFrozen.Builder.class);
      }

      public static com.google.protobuf.Parser<UpdateParticleSetFrozen> PARSER =
          new com.google.protobuf.AbstractParser<UpdateParticleSetFrozen>() {
        public UpdateParticleSetFrozen parsePartialFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws com.google.protobuf.InvalidProtocolBufferException {
          return new UpdateParticleSetFrozen(input, extensionRegistry);
        }
      };

      @java.lang.Override
      public com.google.protobuf.Parser<UpdateParticleSetFrozen> getParserForType() {
        return PARSER;
      }

      private int bitField0_;
      public static final int SET_FROZEN_FIELD_NUMBER = 1;
      private boolean setFrozen_;
      /**
       * <code>optional bool set_frozen = 1;</code>
       */
      public boolean hasSetFrozen() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>optional bool set_frozen = 1;</code>
       */
      public boolean getSetFrozen() {
        return setFrozen_;
      }

      private void initFields() {
        setFrozen_ = false;
      }
      private byte memoizedIsInitialized = -1;
      public final boolean isInitialized() {
        byte isInitialized = memoizedIsInitialized;
        if (isInitialized == 1) return true;
        if (isInitialized == 0) return false;

        memoizedIsInitialized = 1;
        return true;
      }

      public void writeTo(com.google.protobuf.CodedOutputStream output)
                          throws java.io.IOException {
        getSerializedSize();
        if (((bitField0_ & 0x00000001) == 0x00000001)) {
          output.writeBool(1, setFrozen_);
        }
        getUnknownFields().writeTo(output);
      }

      private int memoizedSerializedSize = -1;
      public int getSerializedSize() {
        int size = memoizedSerializedSize;
        if (size != -1) return size;

        size = 0;
        if (((bitField0_ & 0x00000001) == 0x00000001)) {
          size += com.google.protobuf.CodedOutputStream
            .computeBoolSize(1, setFrozen_);
        }
        size += getUnknownFields().getSerializedSize();
        memoizedSerializedSize = size;
        return size;
      }

      private static final long serialVersionUID = 0L;
      @java.lang.Override
      protected java.lang.Object writeReplace()
          throws java.io.ObjectStreamException {
        return super.writeReplace();
      }

      public static skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_ParticleManager.UpdateParticleSetFrozen parseFrom(
          com.google.protobuf.ByteString data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_ParticleManager.UpdateParticleSetFrozen parseFrom(
          com.google.protobuf.ByteString data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_ParticleManager.UpdateParticleSetFrozen parseFrom(byte[] data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_ParticleManager.UpdateParticleSetFrozen parseFrom(
          byte[] data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_ParticleManager.UpdateParticleSetFrozen parseFrom(java.io.InputStream input)
          throws java.io.IOException {
        return PARSER.parseFrom(input);
      }
      public static skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_ParticleManager.UpdateParticleSetFrozen parseFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return PARSER.parseFrom(input, extensionRegistry);
      }
      public static skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_ParticleManager.UpdateParticleSetFrozen parseDelimitedFrom(java.io.InputStream input)
          throws java.io.IOException {
        return PARSER.parseDelimitedFrom(input);
      }
      public static skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_ParticleManager.UpdateParticleSetFrozen parseDelimitedFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return PARSER.parseDelimitedFrom(input, extensionRegistry);
      }
      public static skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_ParticleManager.UpdateParticleSetFrozen parseFrom(
          com.google.protobuf.CodedInputStream input)
          throws java.io.IOException {
        return PARSER.parseFrom(input);
      }
      public static skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_ParticleManager.UpdateParticleSetFrozen parseFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return PARSER.parseFrom(input, extensionRegistry);
      }

      public static Builder newBuilder() { return Builder.create(); }
      public Builder newBuilderForType() { return newBuilder(); }
      public static Builder newBuilder(skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_ParticleManager.UpdateParticleSetFrozen prototype) {
        return newBuilder().mergeFrom(prototype);
      }
      public Builder toBuilder() { return newBuilder(this); }

      @java.lang.Override
      protected Builder newBuilderForType(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        Builder builder = new Builder(parent);
        return builder;
      }
      /**
       * Protobuf type {@code CDOTAUserMsg_ParticleManager.UpdateParticleSetFrozen}
       */
      public static final class Builder extends
          com.google.protobuf.GeneratedMessage.Builder<Builder> implements
          // @@protoc_insertion_point(builder_implements:CDOTAUserMsg_ParticleManager.UpdateParticleSetFrozen)
          skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_ParticleManager.UpdateParticleSetFrozenOrBuilder {
        public static final com.google.protobuf.Descriptors.Descriptor
            getDescriptor() {
          return skadistats.clarity.wire.common.proto.DotaUserMessages.internal_static_CDOTAUserMsg_ParticleManager_UpdateParticleSetFrozen_descriptor;
        }

        protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
            internalGetFieldAccessorTable() {
          return skadistats.clarity.wire.common.proto.DotaUserMessages.internal_static_CDOTAUserMsg_ParticleManager_UpdateParticleSetFrozen_fieldAccessorTable
              .ensureFieldAccessorsInitialized(
                  skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_ParticleManager.UpdateParticleSetFrozen.class, skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_ParticleManager.UpdateParticleSetFrozen.Builder.class);
        }

        // Construct using skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_ParticleManager.UpdateParticleSetFrozen.newBuilder()
        private Builder() {
          maybeForceBuilderInitialization();
        }

        private Builder(
            com.google.protobuf.GeneratedMessage.BuilderParent parent) {
          super(parent);
          maybeForceBuilderInitialization();
        }
        private void maybeForceBuilderInitialization() {
          if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
          }
        }
        private static Builder create() {
          return new Builder();
        }

        public Builder clear() {
          super.clear();
          setFrozen_ = false;
          bitField0_ = (bitField0_ & ~0x00000001);
          return this;
        }

        public Builder clone() {
          return create().mergeFrom(buildPartial());
        }

        public com.google.protobuf.Descriptors.Descriptor
            getDescriptorForType() {
          return skadistats.clarity.wire.common.proto.DotaUserMessages.internal_static_CDOTAUserMsg_ParticleManager_UpdateParticleSetFrozen_descriptor;
        }

        public skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_ParticleManager.UpdateParticleSetFrozen getDefaultInstanceForType() {
          return skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_ParticleManager.UpdateParticleSetFrozen.getDefaultInstance();
        }

        public skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_ParticleManager.UpdateParticleSetFrozen build() {
          skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_ParticleManager.UpdateParticleSetFrozen result = buildPartial();
          if (!result.isInitialized()) {
            throw newUninitializedMessageException(result);
          }
          return result;
        }

        public skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_ParticleManager.UpdateParticleSetFrozen buildPartial() {
          skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_ParticleManager.UpdateParticleSetFrozen result = new skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_ParticleManager.UpdateParticleSetFrozen(this);
          int from_bitField0_ = bitField0_;
          int to_bitField0_ = 0;
          if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
            to_bitField0_ |= 0x00000001;
          }
          result.setFrozen_ = setFrozen_;
          result.bitField0_ = to_bitField0_;
          onBuilt();
          return result;
        }

        public Builder mergeFrom(com.google.protobuf.Message other) {
          if (other instanceof skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_ParticleManager.UpdateParticleSetFrozen) {
            return mergeFrom((skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_ParticleManager.UpdateParticleSetFrozen)other);
          } else {
            super.mergeFrom(other);
            return this;
          }
        }

        public Builder mergeFrom(skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_ParticleManager.UpdateParticleSetFrozen other) {
          if (other == skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_ParticleManager.UpdateParticleSetFrozen.getDefaultInstance()) return this;
          if (other.hasSetFrozen()) {
            setSetFrozen(other.getSetFrozen());
          }
          this.mergeUnknownFields(other.getUnknownFields());
          return this;
        }

        public final boolean isInitialized() {
          return true;
        }

        public Builder mergeFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws java.io.IOException {
          skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_ParticleManager.UpdateParticleSetFrozen parsedMessage = null;
          try {
            parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
          } catch (com.google.protobuf.InvalidProtocolBufferException e) {
            parsedMessage = (skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_ParticleManager.UpdateParticleSetFrozen) e.getUnfinishedMessage();
            throw e;
          } finally {
            if (parsedMessage != null) {
              mergeFrom(parsedMessage);
            }
          }
          return this;
        }
        private int bitField0_;

        private boolean setFrozen_ ;
        /**
         * <code>optional bool set_frozen = 1;</code>
         */
        public boolean hasSetFrozen() {
          return ((bitField0_ & 0x00000001) == 0x00000001);
        }
        /**
         * <code>optional bool set_frozen = 1;</code>
         */
        public boolean getSetFrozen() {
          return setFrozen_;
        }
        /**
         * <code>optional bool set_frozen = 1;</code>
         */
        public Builder setSetFrozen(boolean value) {
          bitField0_ |= 0x00000001;
          setFrozen_ = value;
          onChanged();
          return this;
        }
        /**
         * <code>optional bool set_frozen = 1;</code>
         */
        public Builder clearSetFrozen() {
          bitField0_ = (bitField0_ & ~0x00000001);
          setFrozen_ = false;
          onChanged();
          return this;
        }

        // @@protoc_insertion_point(builder_scope:CDOTAUserMsg_ParticleManager.UpdateParticleSetFrozen)
      }

      static {
        defaultInstance = new UpdateParticleSetFrozen(true);
        defaultInstance.initFields();
      }

      // @@protoc_insertion_point(class_scope:CDOTAUserMsg_ParticleManager.UpdateParticleSetFrozen)
    }

    public interface UpdateParticleShouldDrawOrBuilder extends
        // @@protoc_insertion_point(interface_extends:CDOTAUserMsg_ParticleManager.UpdateParticleShouldDraw)
        com.google.protobuf.MessageOrBuilder {

      /**
       * <code>optional bool should_draw = 1;</code>
       */
      boolean hasShouldDraw();
      /**
       * <code>optional bool should_draw = 1;</code>
       */
      boolean getShouldDraw();
    }
    /**
     * Protobuf type {@code CDOTAUserMsg_ParticleManager.UpdateParticleShouldDraw}
     */
    public static final class UpdateParticleShouldDraw extends
        com.google.protobuf.GeneratedMessage implements
        // @@protoc_insertion_point(message_implements:CDOTAUserMsg_ParticleManager.UpdateParticleShouldDraw)
        UpdateParticleShouldDrawOrBuilder {
      // Use UpdateParticleShouldDraw.newBuilder() to construct.
      private UpdateParticleShouldDraw(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
        super(builder);
        this.unknownFields = builder.getUnknownFields();
      }
      private UpdateParticleShouldDraw(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

      private static final UpdateParticleShouldDraw defaultInstance;
      public static UpdateParticleShouldDraw getDefaultInstance() {
        return defaultInstance;
      }

      public UpdateParticleShouldDraw getDefaultInstanceForType() {
        return defaultInstance;
      }

      private final com.google.protobuf.UnknownFieldSet unknownFields;
      @java.lang.Override
      public final com.google.protobuf.UnknownFieldSet
          getUnknownFields() {
        return this.unknownFields;
      }
      private UpdateParticleShouldDraw(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        initFields();
        int mutable_bitField0_ = 0;
        com.google.protobuf.UnknownFieldSet.Builder unknownFields =
            com.google.protobuf.UnknownFieldSet.newBuilder();
        try {
          boolean done = false;
          while (!done) {
            int tag = input.readTag();
            switch (tag) {
              case 0:
                done = true;
                break;
              default: {
                if (!parseUnknownField(input, unknownFields,
                                       extensionRegistry, tag)) {
                  done = true;
                }
                break;
              }
              case 8: {
                bitField0_ |= 0x00000001;
                shouldDraw_ = input.readBool();
                break;
              }
            }
          }
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.setUnfinishedMessage(this);
        } catch (java.io.IOException e) {
          throw new com.google.protobuf.InvalidProtocolBufferException(
              e.getMessage()).setUnfinishedMessage(this);
        } finally {
          this.unknownFields = unknownFields.build();
          makeExtensionsImmutable();
        }
      }
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return skadistats.clarity.wire.common.proto.DotaUserMessages.internal_static_CDOTAUserMsg_ParticleManager_UpdateParticleShouldDraw_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return skadistats.clarity.wire.common.proto.DotaUserMessages.internal_static_CDOTAUserMsg_ParticleManager_UpdateParticleShouldDraw_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_ParticleManager.UpdateParticleShouldDraw.class, skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_ParticleManager.UpdateParticleShouldDraw.Builder.class);
      }

      public static com.google.protobuf.Parser<UpdateParticleShouldDraw> PARSER =
          new com.google.protobuf.AbstractParser<UpdateParticleShouldDraw>() {
        public UpdateParticleShouldDraw parsePartialFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws com.google.protobuf.InvalidProtocolBufferException {
          return new UpdateParticleShouldDraw(input, extensionRegistry);
        }
      };

      @java.lang.Override
      public com.google.protobuf.Parser<UpdateParticleShouldDraw> getParserForType() {
        return PARSER;
      }

      private int bitField0_;
      public static final int SHOULD_DRAW_FIELD_NUMBER = 1;
      private boolean shouldDraw_;
      /**
       * <code>optional bool should_draw = 1;</code>
       */
      public boolean hasShouldDraw() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>optional bool should_draw = 1;</code>
       */
      public boolean getShouldDraw() {
        return shouldDraw_;
      }

      private void initFields() {
        shouldDraw_ = false;
      }
      private byte memoizedIsInitialized = -1;
      public final boolean isInitialized() {
        byte isInitialized = memoizedIsInitialized;
        if (isInitialized == 1) return true;
        if (isInitialized == 0) return false;

        memoizedIsInitialized = 1;
        return true;
      }

      public void writeTo(com.google.protobuf.CodedOutputStream output)
                          throws java.io.IOException {
        getSerializedSize();
        if (((bitField0_ & 0x00000001) == 0x00000001)) {
          output.writeBool(1, shouldDraw_);
        }
        getUnknownFields().writeTo(output);
      }

      private int memoizedSerializedSize = -1;
      public int getSerializedSize() {
        int size = memoizedSerializedSize;
        if (size != -1) return size;

        size = 0;
        if (((bitField0_ & 0x00000001) == 0x00000001)) {
          size += com.google.protobuf.CodedOutputStream
            .computeBoolSize(1, shouldDraw_);
        }
        size += getUnknownFields().getSerializedSize();
        memoizedSerializedSize = size;
        return size;
      }

      private static final long serialVersionUID = 0L;
      @java.lang.Override
      protected java.lang.Object writeReplace()
          throws java.io.ObjectStreamException {
        return super.writeReplace();
      }

      public static skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_ParticleManager.UpdateParticleShouldDraw parseFrom(
          com.google.protobuf.ByteString data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_ParticleManager.UpdateParticleShouldDraw parseFrom(
          com.google.protobuf.ByteString data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_ParticleManager.UpdateParticleShouldDraw parseFrom(byte[] data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_ParticleManager.UpdateParticleShouldDraw parseFrom(
          byte[] data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_ParticleManager.UpdateParticleShouldDraw parseFrom(java.io.InputStream input)
          throws java.io.IOException {
        return PARSER.parseFrom(input);
      }
      public static skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_ParticleManager.UpdateParticleShouldDraw parseFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return PARSER.parseFrom(input, extensionRegistry);
      }
      public static skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_ParticleManager.UpdateParticleShouldDraw parseDelimitedFrom(java.io.InputStream input)
          throws java.io.IOException {
        return PARSER.parseDelimitedFrom(input);
      }
      public static skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_ParticleManager.UpdateParticleShouldDraw parseDelimitedFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return PARSER.parseDelimitedFrom(input, extensionRegistry);
      }
      public static skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_ParticleManager.UpdateParticleShouldDraw parseFrom(
          com.google.protobuf.CodedInputStream input)
          throws java.io.IOException {
        return PARSER.parseFrom(input);
      }
      public static skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_ParticleManager.UpdateParticleShouldDraw parseFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return PARSER.parseFrom(input, extensionRegistry);
      }

      public static Builder newBuilder() { return Builder.create(); }
      public Builder newBuilderForType() { return newBuilder(); }
      public static Builder newBuilder(skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_ParticleManager.UpdateParticleShouldDraw prototype) {
        return newBuilder().mergeFrom(prototype);
      }
      public Builder toBuilder() { return newBuilder(this); }

      @java.lang.Override
      protected Builder newBuilderForType(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        Builder builder = new Builder(parent);
        return builder;
      }
      /**
       * Protobuf type {@code CDOTAUserMsg_ParticleManager.UpdateParticleShouldDraw}
       */
      public static final class Builder extends
          com.google.protobuf.GeneratedMessage.Builder<Builder> implements
          // @@protoc_insertion_point(builder_implements:CDOTAUserMsg_ParticleManager.UpdateParticleShouldDraw)
          skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_ParticleManager.UpdateParticleShouldDrawOrBuilder {
        public static final com.google.protobuf.Descriptors.Descriptor
            getDescriptor() {
          return skadistats.clarity.wire.common.proto.DotaUserMessages.internal_static_CDOTAUserMsg_ParticleManager_UpdateParticleShouldDraw_descriptor;
        }

        protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
            internalGetFieldAccessorTable() {
          return skadistats.clarity.wire.common.proto.DotaUserMessages.internal_static_CDOTAUserMsg_ParticleManager_UpdateParticleShouldDraw_fieldAccessorTable
              .ensureFieldAccessorsInitialized(
                  skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_ParticleManager.UpdateParticleShouldDraw.class, skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_ParticleManager.UpdateParticleShouldDraw.Builder.class);
        }

        // Construct using skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_ParticleManager.UpdateParticleShouldDraw.newBuilder()
        private Builder() {
          maybeForceBuilderInitialization();
        }

        private Builder(
            com.google.protobuf.GeneratedMessage.BuilderParent parent) {
          super(parent);
          maybeForceBuilderInitialization();
        }
        private void maybeForceBuilderInitialization() {
          if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
          }
        }
        private static Builder create() {
          return new Builder();
        }

        public Builder clear() {
          super.clear();
          shouldDraw_ = false;
          bitField0_ = (bitField0_ & ~0x00000001);
          return this;
        }

        public Builder clone() {
          return create().mergeFrom(buildPartial());
        }

        public com.google.protobuf.Descriptors.Descriptor
            getDescriptorForType() {
          return skadistats.clarity.wire.common.proto.DotaUserMessages.internal_static_CDOTAUserMsg_ParticleManager_UpdateParticleShouldDraw_descriptor;
        }

        public skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_ParticleManager.UpdateParticleShouldDraw getDefaultInstanceForType() {
          return skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_ParticleManager.UpdateParticleShouldDraw.getDefaultInstance();
        }

        public skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_ParticleManager.UpdateParticleShouldDraw build() {
          skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_ParticleManager.UpdateParticleShouldDraw result = buildPartial();
          if (!result.isInitialized()) {
            throw newUninitializedMessageException(result);
          }
          return result;
        }

        public skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_ParticleManager.UpdateParticleShouldDraw buildPartial() {
          skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_ParticleManager.UpdateParticleShouldDraw result = new skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_ParticleManager.UpdateParticleShouldDraw(this);
          int from_bitField0_ = bitField0_;
          int to_bitField0_ = 0;
          if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
            to_bitField0_ |= 0x00000001;
          }
          result.shouldDraw_ = shouldDraw_;
          result.bitField0_ = to_bitField0_;
          onBuilt();
          return result;
        }

        public Builder mergeFrom(com.google.protobuf.Message other) {
          if (other instanceof skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_ParticleManager.UpdateParticleShouldDraw) {
            return mergeFrom((skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_ParticleManager.UpdateParticleShouldDraw)other);
          } else {
            super.mergeFrom(other);
            return this;
          }
        }

        public Builder mergeFrom(skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_ParticleManager.UpdateParticleShouldDraw other) {
          if (other == skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_ParticleManager.UpdateParticleShouldDraw.getDefaultInstance()) return this;
          if (other.hasShouldDraw()) {
            setShouldDraw(other.getShouldDraw());
          }
          this.mergeUnknownFields(other.getUnknownFields());
          return this;
        }

        public final boolean isInitialized() {
          return true;
        }

        public Builder mergeFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws java.io.IOException {
          skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_ParticleManager.UpdateParticleShouldDraw parsedMessage = null;
          try {
            parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
          } catch (com.google.protobuf.InvalidProtocolBufferException e) {
            parsedMessage = (skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_ParticleManager.UpdateParticleShouldDraw) e.getUnfinishedMessage();
            throw e;
          } finally {
            if (parsedMessage != null) {
              mergeFrom(parsedMessage);
            }
          }
          return this;
        }
        private int bitField0_;

        private boolean shouldDraw_ ;
        /**
         * <code>optional bool should_draw = 1;</code>
         */
        public boolean hasShouldDraw() {
          return ((bitField0_ & 0x00000001) == 0x00000001);
        }
        /**
         * <code>optional bool should_draw = 1;</code>
         */
        public boolean getShouldDraw() {
          return shouldDraw_;
        }
        /**
         * <code>optional bool should_draw = 1;</code>
         */
        public Builder setShouldDraw(boolean value) {
          bitField0_ |= 0x00000001;
          shouldDraw_ = value;
          onChanged();
          return this;
        }
        /**
         * <code>optional bool should_draw = 1;</code>
         */
        public Builder clearShouldDraw() {
          bitField0_ = (bitField0_ & ~0x00000001);
          shouldDraw_ = false;
          onChanged();
          return this;
        }

        // @@protoc_insertion_point(builder_scope:CDOTAUserMsg_ParticleManager.UpdateParticleShouldDraw)
      }

      static {
        defaultInstance = new UpdateParticleShouldDraw(true);
        defaultInstance.initFields();
      }

      // @@protoc_insertion_point(class_scope:CDOTAUserMsg_ParticleManager.UpdateParticleShouldDraw)
    }

    public interface ChangeControlPointAttachmentOrBuilder extends
        // @@protoc_insertion_point(interface_extends:CDOTAUserMsg_ParticleManager.ChangeControlPointAttachment)
        com.google.protobuf.MessageOrBuilder {

      /**
       * <code>optional int32 attachment_old = 1;</code>
       */
      boolean hasAttachmentOld();
      /**
       * <code>optional int32 attachment_old = 1;</code>
       */
      int getAttachmentOld();

      /**
       * <code>optional int32 attachment_new = 2;</code>
       */
      boolean hasAttachmentNew();
      /**
       * <code>optional int32 attachment_new = 2;</code>
       */
      int getAttachmentNew();

      /**
       * <code>optional int32 entity_handle = 3;</code>
       */
      boolean hasEntityHandle();
      /**
       * <code>optional int32 entity_handle = 3;</code>
       */
      int getEntityHandle();
    }
    /**
     * Protobuf type {@code CDOTAUserMsg_ParticleManager.ChangeControlPointAttachment}
     */
    public static final class ChangeControlPointAttachment extends
        com.google.protobuf.GeneratedMessage implements
        // @@protoc_insertion_point(message_implements:CDOTAUserMsg_ParticleManager.ChangeControlPointAttachment)
        ChangeControlPointAttachmentOrBuilder {
      // Use ChangeControlPointAttachment.newBuilder() to construct.
      private ChangeControlPointAttachment(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
        super(builder);
        this.unknownFields = builder.getUnknownFields();
      }
      private ChangeControlPointAttachment(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

      private static final ChangeControlPointAttachment defaultInstance;
      public static ChangeControlPointAttachment getDefaultInstance() {
        return defaultInstance;
      }

      public ChangeControlPointAttachment getDefaultInstanceForType() {
        return defaultInstance;
      }

      private final com.google.protobuf.UnknownFieldSet unknownFields;
      @java.lang.Override
      public final com.google.protobuf.UnknownFieldSet
          getUnknownFields() {
        return this.unknownFields;
      }
      private ChangeControlPointAttachment(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        initFields();
        int mutable_bitField0_ = 0;
        com.google.protobuf.UnknownFieldSet.Builder unknownFields =
            com.google.protobuf.UnknownFieldSet.newBuilder();
        try {
          boolean done = false;
          while (!done) {
            int tag = input.readTag();
            switch (tag) {
              case 0:
                done = true;
                break;
              default: {
                if (!parseUnknownField(input, unknownFields,
                                       extensionRegistry, tag)) {
                  done = true;
                }
                break;
              }
              case 8: {
                bitField0_ |= 0x00000001;
                attachmentOld_ = input.readInt32();
                break;
              }
              case 16: {
                bitField0_ |= 0x00000002;
                attachmentNew_ = input.readInt32();
                break;
              }
              case 24: {
                bitField0_ |= 0x00000004;
                entityHandle_ = input.readInt32();
                break;
              }
            }
          }
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.setUnfinishedMessage(this);
        } catch (java.io.IOException e) {
          throw new com.google.protobuf.InvalidProtocolBufferException(
              e.getMessage()).setUnfinishedMessage(this);
        } finally {
          this.unknownFields = unknownFields.build();
          makeExtensionsImmutable();
        }
      }
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return skadistats.clarity.wire.common.proto.DotaUserMessages.internal_static_CDOTAUserMsg_ParticleManager_ChangeControlPointAttachment_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return skadistats.clarity.wire.common.proto.DotaUserMessages.internal_static_CDOTAUserMsg_ParticleManager_ChangeControlPointAttachment_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_ParticleManager.ChangeControlPointAttachment.class, skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_ParticleManager.ChangeControlPointAttachment.Builder.class);
      }

      public static com.google.protobuf.Parser<ChangeControlPointAttachment> PARSER =
          new com.google.protobuf.AbstractParser<ChangeControlPointAttachment>() {
        public ChangeControlPointAttachment parsePartialFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws com.google.protobuf.InvalidProtocolBufferException {
          return new ChangeControlPointAttachment(input, extensionRegistry);
        }
      };

      @java.lang.Override
      public com.google.protobuf.Parser<ChangeControlPointAttachment> getParserForType() {
        return PARSER;
      }

      private int bitField0_;
      public static final int ATTACHMENT_OLD_FIELD_NUMBER = 1;
      private int attachmentOld_;
      /**
       * <code>optional int32 attachment_old = 1;</code>
       */
      public boolean hasAttachmentOld() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>optional int32 attachment_old = 1;</code>
       */
      public int getAttachmentOld() {
        return attachmentOld_;
      }

      public static final int ATTACHMENT_NEW_FIELD_NUMBER = 2;
      private int attachmentNew_;
      /**
       * <code>optional int32 attachment_new = 2;</code>
       */
      public boolean hasAttachmentNew() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>optional int32 attachment_new = 2;</code>
       */
      public int getAttachmentNew() {
        return attachmentNew_;
      }

      public static final int ENTITY_HANDLE_FIELD_NUMBER = 3;
      private int entityHandle_;
      /**
       * <code>optional int32 entity_handle = 3;</code>
       */
      public boolean hasEntityHandle() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }
      /**
       * <code>optional int32 entity_handle = 3;</code>
       */
      public int getEntityHandle() {
        return entityHandle_;
      }

      private void initFields() {
        attachmentOld_ = 0;
        attachmentNew_ = 0;
        entityHandle_ = 0;
      }
      private byte memoizedIsInitialized = -1;
      public final boolean isInitialized() {
        byte isInitialized = memoizedIsInitialized;
        if (isInitialized == 1) return true;
        if (isInitialized == 0) return false;

        memoizedIsInitialized = 1;
        return true;
      }

      public void writeTo(com.google.protobuf.CodedOutputStream output)
                          throws java.io.IOException {
        getSerializedSize();
        if (((bitField0_ & 0x00000001) == 0x00000001)) {
          output.writeInt32(1, attachmentOld_);
        }
        if (((bitField0_ & 0x00000002) == 0x00000002)) {
          output.writeInt32(2, attachmentNew_);
        }
        if (((bitField0_ & 0x00000004) == 0x00000004)) {
          output.writeInt32(3, entityHandle_);
        }
        getUnknownFields().writeTo(output);
      }

      private int memoizedSerializedSize = -1;
      public int getSerializedSize() {
        int size = memoizedSerializedSize;
        if (size != -1) return size;

        size = 0;
        if (((bitField0_ & 0x00000001) == 0x00000001)) {
          size += com.google.protobuf.CodedOutputStream
            .computeInt32Size(1, attachmentOld_);
        }
        if (((bitField0_ & 0x00000002) == 0x00000002)) {
          size += com.google.protobuf.CodedOutputStream
            .computeInt32Size(2, attachmentNew_);
        }
        if (((bitField0_ & 0x00000004) == 0x00000004)) {
          size += com.google.protobuf.CodedOutputStream
            .computeInt32Size(3, entityHandle_);
        }
        size += getUnknownFields().getSerializedSize();
        memoizedSerializedSize = size;
        return size;
      }

      private static final long serialVersionUID = 0L;
      @java.lang.Override
      protected java.lang.Object writeReplace()
          throws java.io.ObjectStreamException {
        return super.writeReplace();
      }

      public static skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_ParticleManager.ChangeControlPointAttachment parseFrom(
          com.google.protobuf.ByteString data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_ParticleManager.ChangeControlPointAttachment parseFrom(
          com.google.protobuf.ByteString data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_ParticleManager.ChangeControlPointAttachment parseFrom(byte[] data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_ParticleManager.ChangeControlPointAttachment parseFrom(
          byte[] data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_ParticleManager.ChangeControlPointAttachment parseFrom(java.io.InputStream input)
          throws java.io.IOException {
        return PARSER.parseFrom(input);
      }
      public static skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_ParticleManager.ChangeControlPointAttachment parseFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return PARSER.parseFrom(input, extensionRegistry);
      }
      public static skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_ParticleManager.ChangeControlPointAttachment parseDelimitedFrom(java.io.InputStream input)
          throws java.io.IOException {
        return PARSER.parseDelimitedFrom(input);
      }
      public static skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_ParticleManager.ChangeControlPointAttachment parseDelimitedFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return PARSER.parseDelimitedFrom(input, extensionRegistry);
      }
      public static skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_ParticleManager.ChangeControlPointAttachment parseFrom(
          com.google.protobuf.CodedInputStream input)
          throws java.io.IOException {
        return PARSER.parseFrom(input);
      }
      public static skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_ParticleManager.ChangeControlPointAttachment parseFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return PARSER.parseFrom(input, extensionRegistry);
      }

      public static Builder newBuilder() { return Builder.create(); }
      public Builder newBuilderForType() { return newBuilder(); }
      public static Builder newBuilder(skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_ParticleManager.ChangeControlPointAttachment prototype) {
        return newBuilder().mergeFrom(prototype);
      }
      public Builder toBuilder() { return newBuilder(this); }

      @java.lang.Override
      protected Builder newBuilderForType(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        Builder builder = new Builder(parent);
        return builder;
      }
      /**
       * Protobuf type {@code CDOTAUserMsg_ParticleManager.ChangeControlPointAttachment}
       */
      public static final class Builder extends
          com.google.protobuf.GeneratedMessage.Builder<Builder> implements
          // @@protoc_insertion_point(builder_implements:CDOTAUserMsg_ParticleManager.ChangeControlPointAttachment)
          skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_ParticleManager.ChangeControlPointAttachmentOrBuilder {
        public static final com.google.protobuf.Descriptors.Descriptor
            getDescriptor() {
          return skadistats.clarity.wire.common.proto.DotaUserMessages.internal_static_CDOTAUserMsg_ParticleManager_ChangeControlPointAttachment_descriptor;
        }

        protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
            internalGetFieldAccessorTable() {
          return skadistats.clarity.wire.common.proto.DotaUserMessages.internal_static_CDOTAUserMsg_ParticleManager_ChangeControlPointAttachment_fieldAccessorTable
              .ensureFieldAccessorsInitialized(
                  skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_ParticleManager.ChangeControlPointAttachment.class, skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_ParticleManager.ChangeControlPointAttachment.Builder.class);
        }

        // Construct using skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_ParticleManager.ChangeControlPointAttachment.newBuilder()
        private Builder() {
          maybeForceBuilderInitialization();
        }

        private Builder(
            com.google.protobuf.GeneratedMessage.BuilderParent parent) {
          super(parent);
          maybeForceBuilderInitialization();
        }
        private void maybeForceBuilderInitialization() {
          if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
          }
        }
        private static Builder create() {
          return new Builder();
        }

        public Builder clear() {
          super.clear();
          attachmentOld_ = 0;
          bitField0_ = (bitField0_ & ~0x00000001);
          attachmentNew_ = 0;
          bitField0_ = (bitField0_ & ~0x00000002);
          entityHandle_ = 0;
          bitField0_ = (bitField0_ & ~0x00000004);
          return this;
        }

        public Builder clone() {
          return create().mergeFrom(buildPartial());
        }

        public com.google.protobuf.Descriptors.Descriptor
            getDescriptorForType() {
          return skadistats.clarity.wire.common.proto.DotaUserMessages.internal_static_CDOTAUserMsg_ParticleManager_ChangeControlPointAttachment_descriptor;
        }

        public skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_ParticleManager.ChangeControlPointAttachment getDefaultInstanceForType() {
          return skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_ParticleManager.ChangeControlPointAttachment.getDefaultInstance();
        }

        public skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_ParticleManager.ChangeControlPointAttachment build() {
          skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_ParticleManager.ChangeControlPointAttachment result = buildPartial();
          if (!result.isInitialized()) {
            throw newUninitializedMessageException(result);
          }
          return result;
        }

        public skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_ParticleManager.ChangeControlPointAttachment buildPartial() {
          skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_ParticleManager.ChangeControlPointAttachment result = new skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_ParticleManager.ChangeControlPointAttachment(this);
          int from_bitField0_ = bitField0_;
          int to_bitField0_ = 0;
          if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
            to_bitField0_ |= 0x00000001;
          }
          result.attachmentOld_ = attachmentOld_;
          if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
            to_bitField0_ |= 0x00000002;
          }
          result.attachmentNew_ = attachmentNew_;
          if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
            to_bitField0_ |= 0x00000004;
          }
          result.entityHandle_ = entityHandle_;
          result.bitField0_ = to_bitField0_;
          onBuilt();
          return result;
        }

        public Builder mergeFrom(com.google.protobuf.Message other) {
          if (other instanceof skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_ParticleManager.ChangeControlPointAttachment) {
            return mergeFrom((skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_ParticleManager.ChangeControlPointAttachment)other);
          } else {
            super.mergeFrom(other);
            return this;
          }
        }

        public Builder mergeFrom(skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_ParticleManager.ChangeControlPointAttachment other) {
          if (other == skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_ParticleManager.ChangeControlPointAttachment.getDefaultInstance()) return this;
          if (other.hasAttachmentOld()) {
            setAttachmentOld(other.getAttachmentOld());
          }
          if (other.hasAttachmentNew()) {
            setAttachmentNew(other.getAttachmentNew());
          }
          if (other.hasEntityHandle()) {
            setEntityHandle(other.getEntityHandle());
          }
          this.mergeUnknownFields(other.getUnknownFields());
          return this;
        }

        public final boolean isInitialized() {
          return true;
        }

        public Builder mergeFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws java.io.IOException {
          skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_ParticleManager.ChangeControlPointAttachment parsedMessage = null;
          try {
            parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
          } catch (com.google.protobuf.InvalidProtocolBufferException e) {
            parsedMessage = (skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_ParticleManager.ChangeControlPointAttachment) e.getUnfinishedMessage();
            throw e;
          } finally {
            if (parsedMessage != null) {
              mergeFrom(parsedMessage);
            }
          }
          return this;
        }
        private int bitField0_;

        private int attachmentOld_ ;
        /**
         * <code>optional int32 attachment_old = 1;</code>
         */
        public boolean hasAttachmentOld() {
          return ((bitField0_ & 0x00000001) == 0x00000001);
        }
        /**
         * <code>optional int32 attachment_old = 1;</code>
         */
        public int getAttachmentOld() {
          return attachmentOld_;
        }
        /**
         * <code>optional int32 attachment_old = 1;</code>
         */
        public Builder setAttachmentOld(int value) {
          bitField0_ |= 0x00000001;
          attachmentOld_ = value;
          onChanged();
          return this;
        }
        /**
         * <code>optional int32 attachment_old = 1;</code>
         */
        public Builder clearAttachmentOld() {
          bitField0_ = (bitField0_ & ~0x00000001);
          attachmentOld_ = 0;
          onChanged();
          return this;
        }

        private int attachmentNew_ ;
        /**
         * <code>optional int32 attachment_new = 2;</code>
         */
        public boolean hasAttachmentNew() {
          return ((bitField0_ & 0x00000002) == 0x00000002);
        }
        /**
         * <code>optional int32 attachment_new = 2;</code>
         */
        public int getAttachmentNew() {
          return attachmentNew_;
        }
        /**
         * <code>optional int32 attachment_new = 2;</code>
         */
        public Builder setAttachmentNew(int value) {
          bitField0_ |= 0x00000002;
          attachmentNew_ = value;
          onChanged();
          return this;
        }
        /**
         * <code>optional int32 attachment_new = 2;</code>
         */
        public Builder clearAttachmentNew() {
          bitField0_ = (bitField0_ & ~0x00000002);
          attachmentNew_ = 0;
          onChanged();
          return this;
        }

        private int entityHandle_ ;
        /**
         * <code>optional int32 entity_handle = 3;</code>
         */
        public boolean hasEntityHandle() {
          return ((bitField0_ & 0x00000004) == 0x00000004);
        }
        /**
         * <code>optional int32 entity_handle = 3;</code>
         */
        public int getEntityHandle() {
          return entityHandle_;
        }
        /**
         * <code>optional int32 entity_handle = 3;</code>
         */
        public Builder setEntityHandle(int value) {
          bitField0_ |= 0x00000004;
          entityHandle_ = value;
          onChanged();
          return this;
        }
        /**
         * <code>optional int32 entity_handle = 3;</code>
         */
        public Builder clearEntityHandle() {
          bitField0_ = (bitField0_ & ~0x00000004);
          entityHandle_ = 0;
          onChanged();
          return this;
        }

        // @@protoc_insertion_point(builder_scope:CDOTAUserMsg_ParticleManager.ChangeControlPointAttachment)
      }

      static {
        defaultInstance = new ChangeControlPointAttachment(true);
        defaultInstance.initFields();
      }

      // @@protoc_insertion_point(class_scope:CDOTAUserMsg_ParticleManager.ChangeControlPointAttachment)
    }

    public interface UpdateEntityPositionOrBuilder extends
        // @@protoc_insertion_point(interface_extends:CDOTAUserMsg_ParticleManager.UpdateEntityPosition)
        com.google.protobuf.MessageOrBuilder {

      /**
       * <code>optional int32 entity_handle = 1;</code>
       */
      boolean hasEntityHandle();
      /**
       * <code>optional int32 entity_handle = 1;</code>
       */
      int getEntityHandle();

      /**
       * <code>optional .CMsgVector position = 2;</code>
       */
      boolean hasPosition();
      /**
       * <code>optional .CMsgVector position = 2;</code>
       */
      skadistats.clarity.wire.common.proto.NetworkBaseTypes.CMsgVector getPosition();
      /**
       * <code>optional .CMsgVector position = 2;</code>
       */
      skadistats.clarity.wire.common.proto.NetworkBaseTypes.CMsgVectorOrBuilder getPositionOrBuilder();
    }
    /**
     * Protobuf type {@code CDOTAUserMsg_ParticleManager.UpdateEntityPosition}
     */
    public static final class UpdateEntityPosition extends
        com.google.protobuf.GeneratedMessage implements
        // @@protoc_insertion_point(message_implements:CDOTAUserMsg_ParticleManager.UpdateEntityPosition)
        UpdateEntityPositionOrBuilder {
      // Use UpdateEntityPosition.newBuilder() to construct.
      private UpdateEntityPosition(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
        super(builder);
        this.unknownFields = builder.getUnknownFields();
      }
      private UpdateEntityPosition(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

      private static final UpdateEntityPosition defaultInstance;
      public static UpdateEntityPosition getDefaultInstance() {
        return defaultInstance;
      }

      public UpdateEntityPosition getDefaultInstanceForType() {
        return defaultInstance;
      }

      private final com.google.protobuf.UnknownFieldSet unknownFields;
      @java.lang.Override
      public final com.google.protobuf.UnknownFieldSet
          getUnknownFields() {
        return this.unknownFields;
      }
      private UpdateEntityPosition(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        initFields();
        int mutable_bitField0_ = 0;
        com.google.protobuf.UnknownFieldSet.Builder unknownFields =
            com.google.protobuf.UnknownFieldSet.newBuilder();
        try {
          boolean done = false;
          while (!done) {
            int tag = input.readTag();
            switch (tag) {
              case 0:
                done = true;
                break;
              default: {
                if (!parseUnknownField(input, unknownFields,
                                       extensionRegistry, tag)) {
                  done = true;
                }
                break;
              }
              case 8: {
                bitField0_ |= 0x00000001;
                entityHandle_ = input.readInt32();
                break;
              }
              case 18: {
                skadistats.clarity.wire.common.proto.NetworkBaseTypes.CMsgVector.Builder subBuilder = null;
                if (((bitField0_ & 0x00000002) == 0x00000002)) {
                  subBuilder = position_.toBuilder();
                }
                position_ = input.readMessage(skadistats.clarity.wire.common.proto.NetworkBaseTypes.CMsgVector.PARSER, extensionRegistry);
                if (subBuilder != null) {
                  subBuilder.mergeFrom(position_);
                  position_ = subBuilder.buildPartial();
                }
                bitField0_ |= 0x00000002;
                break;
              }
            }
          }
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.setUnfinishedMessage(this);
        } catch (java.io.IOException e) {
          throw new com.google.protobuf.InvalidProtocolBufferException(
              e.getMessage()).setUnfinishedMessage(this);
        } finally {
          this.unknownFields = unknownFields.build();
          makeExtensionsImmutable();
        }
      }
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return skadistats.clarity.wire.common.proto.DotaUserMessages.internal_static_CDOTAUserMsg_ParticleManager_UpdateEntityPosition_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return skadistats.clarity.wire.common.proto.DotaUserMessages.internal_static_CDOTAUserMsg_ParticleManager_UpdateEntityPosition_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_ParticleManager.UpdateEntityPosition.class, skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_ParticleManager.UpdateEntityPosition.Builder.class);
      }

      public static com.google.protobuf.Parser<UpdateEntityPosition> PARSER =
          new com.google.protobuf.AbstractParser<UpdateEntityPosition>() {
        public UpdateEntityPosition parsePartialFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws com.google.protobuf.InvalidProtocolBufferException {
          return new UpdateEntityPosition(input, extensionRegistry);
        }
      };

      @java.lang.Override
      public com.google.protobuf.Parser<UpdateEntityPosition> getParserForType() {
        return PARSER;
      }

      private int bitField0_;
      public static final int ENTITY_HANDLE_FIELD_NUMBER = 1;
      private int entityHandle_;
      /**
       * <code>optional int32 entity_handle = 1;</code>
       */
      public boolean hasEntityHandle() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>optional int32 entity_handle = 1;</code>
       */
      public int getEntityHandle() {
        return entityHandle_;
      }

      public static final int POSITION_FIELD_NUMBER = 2;
      private skadistats.clarity.wire.common.proto.NetworkBaseTypes.CMsgVector position_;
      /**
       * <code>optional .CMsgVector position = 2;</code>
       */
      public boolean hasPosition() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>optional .CMsgVector position = 2;</code>
       */
      public skadistats.clarity.wire.common.proto.NetworkBaseTypes.CMsgVector getPosition() {
        return position_;
      }
      /**
       * <code>optional .CMsgVector position = 2;</code>
       */
      public skadistats.clarity.wire.common.proto.NetworkBaseTypes.CMsgVectorOrBuilder getPositionOrBuilder() {
        return position_;
      }

      private void initFields() {
        entityHandle_ = 0;
        position_ = skadistats.clarity.wire.common.proto.NetworkBaseTypes.CMsgVector.getDefaultInstance();
      }
      private byte memoizedIsInitialized = -1;
      public final boolean isInitialized() {
        byte isInitialized = memoizedIsInitialized;
        if (isInitialized == 1) return true;
        if (isInitialized == 0) return false;

        memoizedIsInitialized = 1;
        return true;
      }

      public void writeTo(com.google.protobuf.CodedOutputStream output)
                          throws java.io.IOException {
        getSerializedSize();
        if (((bitField0_ & 0x00000001) == 0x00000001)) {
          output.writeInt32(1, entityHandle_);
        }
        if (((bitField0_ & 0x00000002) == 0x00000002)) {
          output.writeMessage(2, position_);
        }
        getUnknownFields().writeTo(output);
      }

      private int memoizedSerializedSize = -1;
      public int getSerializedSize() {
        int size = memoizedSerializedSize;
        if (size != -1) return size;

        size = 0;
        if (((bitField0_ & 0x00000001) == 0x00000001)) {
          size += com.google.protobuf.CodedOutputStream
            .computeInt32Size(1, entityHandle_);
        }
        if (((bitField0_ & 0x00000002) == 0x00000002)) {
          size += com.google.protobuf.CodedOutputStream
            .computeMessageSize(2, position_);
        }
        size += getUnknownFields().getSerializedSize();
        memoizedSerializedSize = size;
        return size;
      }

      private static final long serialVersionUID = 0L;
      @java.lang.Override
      protected java.lang.Object writeReplace()
          throws java.io.ObjectStreamException {
        return super.writeReplace();
      }

      public static skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_ParticleManager.UpdateEntityPosition parseFrom(
          com.google.protobuf.ByteString data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_ParticleManager.UpdateEntityPosition parseFrom(
          com.google.protobuf.ByteString data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_ParticleManager.UpdateEntityPosition parseFrom(byte[] data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_ParticleManager.UpdateEntityPosition parseFrom(
          byte[] data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_ParticleManager.UpdateEntityPosition parseFrom(java.io.InputStream input)
          throws java.io.IOException {
        return PARSER.parseFrom(input);
      }
      public static skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_ParticleManager.UpdateEntityPosition parseFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return PARSER.parseFrom(input, extensionRegistry);
      }
      public static skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_ParticleManager.UpdateEntityPosition parseDelimitedFrom(java.io.InputStream input)
          throws java.io.IOException {
        return PARSER.parseDelimitedFrom(input);
      }
      public static skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_ParticleManager.UpdateEntityPosition parseDelimitedFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return PARSER.parseDelimitedFrom(input, extensionRegistry);
      }
      public static skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_ParticleManager.UpdateEntityPosition parseFrom(
          com.google.protobuf.CodedInputStream input)
          throws java.io.IOException {
        return PARSER.parseFrom(input);
      }
      public static skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_ParticleManager.UpdateEntityPosition parseFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return PARSER.parseFrom(input, extensionRegistry);
      }

      public static Builder newBuilder() { return Builder.create(); }
      public Builder newBuilderForType() { return newBuilder(); }
      public static Builder newBuilder(skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_ParticleManager.UpdateEntityPosition prototype) {
        return newBuilder().mergeFrom(prototype);
      }
      public Builder toBuilder() { return newBuilder(this); }

      @java.lang.Override
      protected Builder newBuilderForType(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        Builder builder = new Builder(parent);
        return builder;
      }
      /**
       * Protobuf type {@code CDOTAUserMsg_ParticleManager.UpdateEntityPosition}
       */
      public static final class Builder extends
          com.google.protobuf.GeneratedMessage.Builder<Builder> implements
          // @@protoc_insertion_point(builder_implements:CDOTAUserMsg_ParticleManager.UpdateEntityPosition)
          skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_ParticleManager.UpdateEntityPositionOrBuilder {
        public static final com.google.protobuf.Descriptors.Descriptor
            getDescriptor() {
          return skadistats.clarity.wire.common.proto.DotaUserMessages.internal_static_CDOTAUserMsg_ParticleManager_UpdateEntityPosition_descriptor;
        }

        protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
            internalGetFieldAccessorTable() {
          return skadistats.clarity.wire.common.proto.DotaUserMessages.internal_static_CDOTAUserMsg_ParticleManager_UpdateEntityPosition_fieldAccessorTable
              .ensureFieldAccessorsInitialized(
                  skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_ParticleManager.UpdateEntityPosition.class, skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_ParticleManager.UpdateEntityPosition.Builder.class);
        }

        // Construct using skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_ParticleManager.UpdateEntityPosition.newBuilder()
        private Builder() {
          maybeForceBuilderInitialization();
        }

        private Builder(
            com.google.protobuf.GeneratedMessage.BuilderParent parent) {
          super(parent);
          maybeForceBuilderInitialization();
        }
        private void maybeForceBuilderInitialization() {
          if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
            getPositionFieldBuilder();
          }
        }
        private static Builder create() {
          return new Builder();
        }

        public Builder clear() {
          super.clear();
          entityHandle_ = 0;
          bitField0_ = (bitField0_ & ~0x00000001);
          if (positionBuilder_ == null) {
            position_ = skadistats.clarity.wire.common.proto.NetworkBaseTypes.CMsgVector.getDefaultInstance();
          } else {
            positionBuilder_.clear();
          }
          bitField0_ = (bitField0_ & ~0x00000002);
          return this;
        }

        public Builder clone() {
          return create().mergeFrom(buildPartial());
        }

        public com.google.protobuf.Descriptors.Descriptor
            getDescriptorForType() {
          return skadistats.clarity.wire.common.proto.DotaUserMessages.internal_static_CDOTAUserMsg_ParticleManager_UpdateEntityPosition_descriptor;
        }

        public skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_ParticleManager.UpdateEntityPosition getDefaultInstanceForType() {
          return skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_ParticleManager.UpdateEntityPosition.getDefaultInstance();
        }

        public skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_ParticleManager.UpdateEntityPosition build() {
          skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_ParticleManager.UpdateEntityPosition result = buildPartial();
          if (!result.isInitialized()) {
            throw newUninitializedMessageException(result);
          }
          return result;
        }

        public skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_ParticleManager.UpdateEntityPosition buildPartial() {
          skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_ParticleManager.UpdateEntityPosition result = new skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_ParticleManager.UpdateEntityPosition(this);
          int from_bitField0_ = bitField0_;
          int to_bitField0_ = 0;
          if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
            to_bitField0_ |= 0x00000001;
          }
          result.entityHandle_ = entityHandle_;
          if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
            to_bitField0_ |= 0x00000002;
          }
          if (positionBuilder_ == null) {
            result.position_ = position_;
          } else {
            result.position_ = positionBuilder_.build();
          }
          result.bitField0_ = to_bitField0_;
          onBuilt();
          return result;
        }

        public Builder mergeFrom(com.google.protobuf.Message other) {
          if (other instanceof skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_ParticleManager.UpdateEntityPosition) {
            return mergeFrom((skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_ParticleManager.UpdateEntityPosition)other);
          } else {
            super.mergeFrom(other);
            return this;
          }
        }

        public Builder mergeFrom(skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_ParticleManager.UpdateEntityPosition other) {
          if (other == skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_ParticleManager.UpdateEntityPosition.getDefaultInstance()) return this;
          if (other.hasEntityHandle()) {
            setEntityHandle(other.getEntityHandle());
          }
          if (other.hasPosition()) {
            mergePosition(other.getPosition());
          }
          this.mergeUnknownFields(other.getUnknownFields());
          return this;
        }

        public final boolean isInitialized() {
          return true;
        }

        public Builder mergeFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws java.io.IOException {
          skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_ParticleManager.UpdateEntityPosition parsedMessage = null;
          try {
            parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
          } catch (com.google.protobuf.InvalidProtocolBufferException e) {
            parsedMessage = (skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_ParticleManager.UpdateEntityPosition) e.getUnfinishedMessage();
            throw e;
          } finally {
            if (parsedMessage != null) {
              mergeFrom(parsedMessage);
            }
          }
          return this;
        }
        private int bitField0_;

        private int entityHandle_ ;
        /**
         * <code>optional int32 entity_handle = 1;</code>
         */
        public boolean hasEntityHandle() {
          return ((bitField0_ & 0x00000001) == 0x00000001);
        }
        /**
         * <code>optional int32 entity_handle = 1;</code>
         */
        public int getEntityHandle() {
          return entityHandle_;
        }
        /**
         * <code>optional int32 entity_handle = 1;</code>
         */
        public Builder setEntityHandle(int value) {
          bitField0_ |= 0x00000001;
          entityHandle_ = value;
          onChanged();
          return this;
        }
        /**
         * <code>optional int32 entity_handle = 1;</code>
         */
        public Builder clearEntityHandle() {
          bitField0_ = (bitField0_ & ~0x00000001);
          entityHandle_ = 0;
          onChanged();
          return this;
        }

        private skadistats.clarity.wire.common.proto.NetworkBaseTypes.CMsgVector position_ = skadistats.clarity.wire.common.proto.NetworkBaseTypes.CMsgVector.getDefaultInstance();
        private com.google.protobuf.SingleFieldBuilder<
            skadistats.clarity.wire.common.proto.NetworkBaseTypes.CMsgVector, skadistats.clarity.wire.common.proto.NetworkBaseTypes.CMsgVector.Builder, skadistats.clarity.wire.common.proto.NetworkBaseTypes.CMsgVectorOrBuilder> positionBuilder_;
        /**
         * <code>optional .CMsgVector position = 2;</code>
         */
        public boolean hasPosition() {
          return ((bitField0_ & 0x00000002) == 0x00000002);
        }
        /**
         * <code>optional .CMsgVector position = 2;</code>
         */
        public skadistats.clarity.wire.common.proto.NetworkBaseTypes.CMsgVector getPosition() {
          if (positionBuilder_ == null) {
            return position_;
          } else {
            return positionBuilder_.getMessage();
          }
        }
        /**
         * <code>optional .CMsgVector position = 2;</code>
         */
        public Builder setPosition(skadistats.clarity.wire.common.proto.NetworkBaseTypes.CMsgVector value) {
          if (positionBuilder_ == null) {
            if (value == null) {
              throw new NullPointerException();
            }
            position_ = value;
            onChanged();
          } else {
            positionBuilder_.setMessage(value);
          }
          bitField0_ |= 0x00000002;
          return this;
        }
        /**
         * <code>optional .CMsgVector position = 2;</code>
         */
        public Builder setPosition(
            skadistats.clarity.wire.common.proto.NetworkBaseTypes.CMsgVector.Builder builderForValue) {
          if (positionBuilder_ == null) {
            position_ = builderForValue.build();
            onChanged();
          } else {
            positionBuilder_.setMessage(builderForValue.build());
          }
          bitField0_ |= 0x00000002;
          return this;
        }
        /**
         * <code>optional .CMsgVector position = 2;</code>
         */
        public Builder mergePosition(skadistats.clarity.wire.common.proto.NetworkBaseTypes.CMsgVector value) {
          if (positionBuilder_ == null) {
            if (((bitField0_ & 0x00000002) == 0x00000002) &&
                position_ != skadistats.clarity.wire.common.proto.NetworkBaseTypes.CMsgVector.getDefaultInstance()) {
              position_ =
                skadistats.clarity.wire.common.proto.NetworkBaseTypes.CMsgVector.newBuilder(position_).mergeFrom(value).buildPartial();
            } else {
              position_ = value;
            }
            onChanged();
          } else {
            positionBuilder_.mergeFrom(value);
          }
          bitField0_ |= 0x00000002;
          return this;
        }
        /**
         * <code>optional .CMsgVector position = 2;</code>
         */
        public Builder clearPosition() {
          if (positionBuilder_ == null) {
            position_ = skadistats.clarity.wire.common.proto.NetworkBaseTypes.CMsgVector.getDefaultInstance();
            onChanged();
          } else {
            positionBuilder_.clear();
          }
          bitField0_ = (bitField0_ & ~0x00000002);
          return this;
        }
        /**
         * <code>optional .CMsgVector position = 2;</code>
         */
        public skadistats.clarity.wire.common.proto.NetworkBaseTypes.CMsgVector.Builder getPositionBuilder() {
          bitField0_ |= 0x00000002;
          onChanged();
          return getPositionFieldBuilder().getBuilder();
        }
        /**
         * <code>optional .CMsgVector position = 2;</code>
         */
        public skadistats.clarity.wire.common.proto.NetworkBaseTypes.CMsgVectorOrBuilder getPositionOrBuilder() {
          if (positionBuilder_ != null) {
            return positionBuilder_.getMessageOrBuilder();
          } else {
            return position_;
          }
        }
        /**
         * <code>optional .CMsgVector position = 2;</code>
         */
        private com.google.protobuf.SingleFieldBuilder<
            skadistats.clarity.wire.common.proto.NetworkBaseTypes.CMsgVector, skadistats.clarity.wire.common.proto.NetworkBaseTypes.CMsgVector.Builder, skadistats.clarity.wire.common.proto.NetworkBaseTypes.CMsgVectorOrBuilder> 
            getPositionFieldBuilder() {
          if (positionBuilder_ == null) {
            positionBuilder_ = new com.google.protobuf.SingleFieldBuilder<
                skadistats.clarity.wire.common.proto.NetworkBaseTypes.CMsgVector, skadistats.clarity.wire.common.proto.NetworkBaseTypes.CMsgVector.Builder, skadistats.clarity.wire.common.proto.NetworkBaseTypes.CMsgVectorOrBuilder>(
                    getPosition(),
                    getParentForChildren(),
                    isClean());
            position_ = null;
          }
          return positionBuilder_;
        }

        // @@protoc_insertion_point(builder_scope:CDOTAUserMsg_ParticleManager.UpdateEntityPosition)
      }

      static {
        defaultInstance = new UpdateEntityPosition(true);
        defaultInstance.initFields();
      }

      // @@protoc_insertion_point(class_scope:CDOTAUserMsg_ParticleManager.UpdateEntityPosition)
    }

    private int bitField0_;
    public static final int TYPE_FIELD_NUMBER = 1;
    private skadistats.clarity.wire.common.proto.DotaUserMessages.DOTA_PARTICLE_MESSAGE type_;
    /**
     * <code>optional .DOTA_PARTICLE_MESSAGE type = 1 [default = DOTA_PARTICLE_MANAGER_EVENT_CREATE];</code>
     */
    public boolean hasType() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>optional .DOTA_PARTICLE_MESSAGE type = 1 [default = DOTA_PARTICLE_MANAGER_EVENT_CREATE];</code>
     */
    public skadistats.clarity.wire.common.proto.DotaUserMessages.DOTA_PARTICLE_MESSAGE getType() {
      return type_;
    }

    public static final int INDEX_FIELD_NUMBER = 2;
    private int index_;
    /**
     * <code>required uint32 index = 2;</code>
     */
    public boolean hasIndex() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>required uint32 index = 2;</code>
     */
    public int getIndex() {
      return index_;
    }

    public static final int RELEASE_PARTICLE_INDEX_FIELD_NUMBER = 3;
    private skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_ParticleManager.ReleaseParticleIndex releaseParticleIndex_;
    /**
     * <code>optional .CDOTAUserMsg_ParticleManager.ReleaseParticleIndex release_particle_index = 3;</code>
     */
    public boolean hasReleaseParticleIndex() {
      return ((bitField0_ & 0x00000004) == 0x00000004);
    }
    /**
     * <code>optional .CDOTAUserMsg_ParticleManager.ReleaseParticleIndex release_particle_index = 3;</code>
     */
    public skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_ParticleManager.ReleaseParticleIndex getReleaseParticleIndex() {
      return releaseParticleIndex_;
    }
    /**
     * <code>optional .CDOTAUserMsg_ParticleManager.ReleaseParticleIndex release_particle_index = 3;</code>
     */
    public skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_ParticleManager.ReleaseParticleIndexOrBuilder getReleaseParticleIndexOrBuilder() {
      return releaseParticleIndex_;
    }

    public static final int CREATE_PARTICLE_FIELD_NUMBER = 4;
    private skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_ParticleManager.CreateParticle createParticle_;
    /**
     * <code>optional .CDOTAUserMsg_ParticleManager.CreateParticle create_particle = 4;</code>
     */
    public boolean hasCreateParticle() {
      return ((bitField0_ & 0x00000008) == 0x00000008);
    }
    /**
     * <code>optional .CDOTAUserMsg_ParticleManager.CreateParticle create_particle = 4;</code>
     */
    public skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_ParticleManager.CreateParticle getCreateParticle() {
      return createParticle_;
    }
    /**
     * <code>optional .CDOTAUserMsg_ParticleManager.CreateParticle create_particle = 4;</code>
     */
    public skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_ParticleManager.CreateParticleOrBuilder getCreateParticleOrBuilder() {
      return createParticle_;
    }

    public static final int DESTROY_PARTICLE_FIELD_NUMBER = 5;
    private skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_ParticleManager.DestroyParticle destroyParticle_;
    /**
     * <code>optional .CDOTAUserMsg_ParticleManager.DestroyParticle destroy_particle = 5;</code>
     */
    public boolean hasDestroyParticle() {
      return ((bitField0_ & 0x00000010) == 0x00000010);
    }
    /**
     * <code>optional .CDOTAUserMsg_ParticleManager.DestroyParticle destroy_particle = 5;</code>
     */
    public skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_ParticleManager.DestroyParticle getDestroyParticle() {
      return destroyParticle_;
    }
    /**
     * <code>optional .CDOTAUserMsg_ParticleManager.DestroyParticle destroy_particle = 5;</code>
     */
    public skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_ParticleManager.DestroyParticleOrBuilder getDestroyParticleOrBuilder() {
      return destroyParticle_;
    }

    public static final int DESTROY_PARTICLE_INVOLVING_FIELD_NUMBER = 6;
    private skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_ParticleManager.DestroyParticleInvolving destroyParticleInvolving_;
    /**
     * <code>optional .CDOTAUserMsg_ParticleManager.DestroyParticleInvolving destroy_particle_involving = 6;</code>
     */
    public boolean hasDestroyParticleInvolving() {
      return ((bitField0_ & 0x00000020) == 0x00000020);
    }
    /**
     * <code>optional .CDOTAUserMsg_ParticleManager.DestroyParticleInvolving destroy_particle_involving = 6;</code>
     */
    public skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_ParticleManager.DestroyParticleInvolving getDestroyParticleInvolving() {
      return destroyParticleInvolving_;
    }
    /**
     * <code>optional .CDOTAUserMsg_ParticleManager.DestroyParticleInvolving destroy_particle_involving = 6;</code>
     */
    public skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_ParticleManager.DestroyParticleInvolvingOrBuilder getDestroyParticleInvolvingOrBuilder() {
      return destroyParticleInvolving_;
    }

    public static final int UPDATE_PARTICLE_FIELD_NUMBER = 7;
    private skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_ParticleManager.UpdateParticle updateParticle_;
    /**
     * <code>optional .CDOTAUserMsg_ParticleManager.UpdateParticle update_particle = 7;</code>
     */
    public boolean hasUpdateParticle() {
      return ((bitField0_ & 0x00000040) == 0x00000040);
    }
    /**
     * <code>optional .CDOTAUserMsg_ParticleManager.UpdateParticle update_particle = 7;</code>
     */
    public skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_ParticleManager.UpdateParticle getUpdateParticle() {
      return updateParticle_;
    }
    /**
     * <code>optional .CDOTAUserMsg_ParticleManager.UpdateParticle update_particle = 7;</code>
     */
    public skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_ParticleManager.UpdateParticleOrBuilder getUpdateParticleOrBuilder() {
      return updateParticle_;
    }

    public static final int UPDATE_PARTICLE_FWD_FIELD_NUMBER = 8;
    private skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_ParticleManager.UpdateParticleFwd updateParticleFwd_;
    /**
     * <code>optional .CDOTAUserMsg_ParticleManager.UpdateParticleFwd update_particle_fwd = 8;</code>
     */
    public boolean hasUpdateParticleFwd() {
      return ((bitField0_ & 0x00000080) == 0x00000080);
    }
    /**
     * <code>optional .CDOTAUserMsg_ParticleManager.UpdateParticleFwd update_particle_fwd = 8;</code>
     */
    public skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_ParticleManager.UpdateParticleFwd getUpdateParticleFwd() {
      return updateParticleFwd_;
    }
    /**
     * <code>optional .CDOTAUserMsg_ParticleManager.UpdateParticleFwd update_particle_fwd = 8;</code>
     */
    public skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_ParticleManager.UpdateParticleFwdOrBuilder getUpdateParticleFwdOrBuilder() {
      return updateParticleFwd_;
    }

    public static final int UPDATE_PARTICLE_ORIENT_FIELD_NUMBER = 9;
    private skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_ParticleManager.UpdateParticleOrient updateParticleOrient_;
    /**
     * <code>optional .CDOTAUserMsg_ParticleManager.UpdateParticleOrient update_particle_orient = 9;</code>
     */
    public boolean hasUpdateParticleOrient() {
      return ((bitField0_ & 0x00000100) == 0x00000100);
    }
    /**
     * <code>optional .CDOTAUserMsg_ParticleManager.UpdateParticleOrient update_particle_orient = 9;</code>
     */
    public skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_ParticleManager.UpdateParticleOrient getUpdateParticleOrient() {
      return updateParticleOrient_;
    }
    /**
     * <code>optional .CDOTAUserMsg_ParticleManager.UpdateParticleOrient update_particle_orient = 9;</code>
     */
    public skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_ParticleManager.UpdateParticleOrientOrBuilder getUpdateParticleOrientOrBuilder() {
      return updateParticleOrient_;
    }

    public static final int UPDATE_PARTICLE_FALLBACK_FIELD_NUMBER = 10;
    private skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_ParticleManager.UpdateParticleFallback updateParticleFallback_;
    /**
     * <code>optional .CDOTAUserMsg_ParticleManager.UpdateParticleFallback update_particle_fallback = 10;</code>
     */
    public boolean hasUpdateParticleFallback() {
      return ((bitField0_ & 0x00000200) == 0x00000200);
    }
    /**
     * <code>optional .CDOTAUserMsg_ParticleManager.UpdateParticleFallback update_particle_fallback = 10;</code>
     */
    public skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_ParticleManager.UpdateParticleFallback getUpdateParticleFallback() {
      return updateParticleFallback_;
    }
    /**
     * <code>optional .CDOTAUserMsg_ParticleManager.UpdateParticleFallback update_particle_fallback = 10;</code>
     */
    public skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_ParticleManager.UpdateParticleFallbackOrBuilder getUpdateParticleFallbackOrBuilder() {
      return updateParticleFallback_;
    }

    public static final int UPDATE_PARTICLE_OFFSET_FIELD_NUMBER = 11;
    private skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_ParticleManager.UpdateParticleOffset updateParticleOffset_;
    /**
     * <code>optional .CDOTAUserMsg_ParticleManager.UpdateParticleOffset update_particle_offset = 11;</code>
     */
    public boolean hasUpdateParticleOffset() {
      return ((bitField0_ & 0x00000400) == 0x00000400);
    }
    /**
     * <code>optional .CDOTAUserMsg_ParticleManager.UpdateParticleOffset update_particle_offset = 11;</code>
     */
    public skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_ParticleManager.UpdateParticleOffset getUpdateParticleOffset() {
      return updateParticleOffset_;
    }
    /**
     * <code>optional .CDOTAUserMsg_ParticleManager.UpdateParticleOffset update_particle_offset = 11;</code>
     */
    public skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_ParticleManager.UpdateParticleOffsetOrBuilder getUpdateParticleOffsetOrBuilder() {
      return updateParticleOffset_;
    }

    public static final int UPDATE_PARTICLE_ENT_FIELD_NUMBER = 12;
    private skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_ParticleManager.UpdateParticleEnt updateParticleEnt_;
    /**
     * <code>optional .CDOTAUserMsg_ParticleManager.UpdateParticleEnt update_particle_ent = 12;</code>
     */
    public boolean hasUpdateParticleEnt() {
      return ((bitField0_ & 0x00000800) == 0x00000800);
    }
    /**
     * <code>optional .CDOTAUserMsg_ParticleManager.UpdateParticleEnt update_particle_ent = 12;</code>
     */
    public skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_ParticleManager.UpdateParticleEnt getUpdateParticleEnt() {
      return updateParticleEnt_;
    }
    /**
     * <code>optional .CDOTAUserMsg_ParticleManager.UpdateParticleEnt update_particle_ent = 12;</code>
     */
    public skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_ParticleManager.UpdateParticleEntOrBuilder getUpdateParticleEntOrBuilder() {
      return updateParticleEnt_;
    }

    public static final int UPDATE_PARTICLE_SHOULD_DRAW_FIELD_NUMBER = 14;
    private skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_ParticleManager.UpdateParticleShouldDraw updateParticleShouldDraw_;
    /**
     * <code>optional .CDOTAUserMsg_ParticleManager.UpdateParticleShouldDraw update_particle_should_draw = 14;</code>
     */
    public boolean hasUpdateParticleShouldDraw() {
      return ((bitField0_ & 0x00001000) == 0x00001000);
    }
    /**
     * <code>optional .CDOTAUserMsg_ParticleManager.UpdateParticleShouldDraw update_particle_should_draw = 14;</code>
     */
    public skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_ParticleManager.UpdateParticleShouldDraw getUpdateParticleShouldDraw() {
      return updateParticleShouldDraw_;
    }
    /**
     * <code>optional .CDOTAUserMsg_ParticleManager.UpdateParticleShouldDraw update_particle_should_draw = 14;</code>
     */
    public skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_ParticleManager.UpdateParticleShouldDrawOrBuilder getUpdateParticleShouldDrawOrBuilder() {
      return updateParticleShouldDraw_;
    }

    public static final int UPDATE_PARTICLE_SET_FROZEN_FIELD_NUMBER = 15;
    private skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_ParticleManager.UpdateParticleSetFrozen updateParticleSetFrozen_;
    /**
     * <code>optional .CDOTAUserMsg_ParticleManager.UpdateParticleSetFrozen update_particle_set_frozen = 15;</code>
     */
    public boolean hasUpdateParticleSetFrozen() {
      return ((bitField0_ & 0x00002000) == 0x00002000);
    }
    /**
     * <code>optional .CDOTAUserMsg_ParticleManager.UpdateParticleSetFrozen update_particle_set_frozen = 15;</code>
     */
    public skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_ParticleManager.UpdateParticleSetFrozen getUpdateParticleSetFrozen() {
      return updateParticleSetFrozen_;
    }
    /**
     * <code>optional .CDOTAUserMsg_ParticleManager.UpdateParticleSetFrozen update_particle_set_frozen = 15;</code>
     */
    public skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_ParticleManager.UpdateParticleSetFrozenOrBuilder getUpdateParticleSetFrozenOrBuilder() {
      return updateParticleSetFrozen_;
    }

    public static final int CHANGE_CONTROL_POINT_ATTACHMENT_FIELD_NUMBER = 16;
    private skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_ParticleManager.ChangeControlPointAttachment changeControlPointAttachment_;
    /**
     * <code>optional .CDOTAUserMsg_ParticleManager.ChangeControlPointAttachment change_control_point_attachment = 16;</code>
     */
    public boolean hasChangeControlPointAttachment() {
      return ((bitField0_ & 0x00004000) == 0x00004000);
    }
    /**
     * <code>optional .CDOTAUserMsg_ParticleManager.ChangeControlPointAttachment change_control_point_attachment = 16;</code>
     */
    public skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_ParticleManager.ChangeControlPointAttachment getChangeControlPointAttachment() {
      return changeControlPointAttachment_;
    }
    /**
     * <code>optional .CDOTAUserMsg_ParticleManager.ChangeControlPointAttachment change_control_point_attachment = 16;</code>
     */
    public skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_ParticleManager.ChangeControlPointAttachmentOrBuilder getChangeControlPointAttachmentOrBuilder() {
      return changeControlPointAttachment_;
    }

    public static final int UPDATE_ENTITY_POSITION_FIELD_NUMBER = 17;
    private skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_ParticleManager.UpdateEntityPosition updateEntityPosition_;
    /**
     * <code>optional .CDOTAUserMsg_ParticleManager.UpdateEntityPosition update_entity_position = 17;</code>
     */
    public boolean hasUpdateEntityPosition() {
      return ((bitField0_ & 0x00008000) == 0x00008000);
    }
    /**
     * <code>optional .CDOTAUserMsg_ParticleManager.UpdateEntityPosition update_entity_position = 17;</code>
     */
    public skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_ParticleManager.UpdateEntityPosition getUpdateEntityPosition() {
      return updateEntityPosition_;
    }
    /**
     * <code>optional .CDOTAUserMsg_ParticleManager.UpdateEntityPosition update_entity_position = 17;</code>
     */
    public skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_ParticleManager.UpdateEntityPositionOrBuilder getUpdateEntityPositionOrBuilder() {
      return updateEntityPosition_;
    }

    private void initFields() {
      type_ = skadistats.clarity.wire.common.proto.DotaUserMessages.DOTA_PARTICLE_MESSAGE.DOTA_PARTICLE_MANAGER_EVENT_CREATE;
      index_ = 0;
      releaseParticleIndex_ = skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_ParticleManager.ReleaseParticleIndex.getDefaultInstance();
      createParticle_ = skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_ParticleManager.CreateParticle.getDefaultInstance();
      destroyParticle_ = skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_ParticleManager.DestroyParticle.getDefaultInstance();
      destroyParticleInvolving_ = skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_ParticleManager.DestroyParticleInvolving.getDefaultInstance();
      updateParticle_ = skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_ParticleManager.UpdateParticle.getDefaultInstance();
      updateParticleFwd_ = skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_ParticleManager.UpdateParticleFwd.getDefaultInstance();
      updateParticleOrient_ = skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_ParticleManager.UpdateParticleOrient.getDefaultInstance();
      updateParticleFallback_ = skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_ParticleManager.UpdateParticleFallback.getDefaultInstance();
      updateParticleOffset_ = skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_ParticleManager.UpdateParticleOffset.getDefaultInstance();
      updateParticleEnt_ = skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_ParticleManager.UpdateParticleEnt.getDefaultInstance();
      updateParticleShouldDraw_ = skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_ParticleManager.UpdateParticleShouldDraw.getDefaultInstance();
      updateParticleSetFrozen_ = skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_ParticleManager.UpdateParticleSetFrozen.getDefaultInstance();
      changeControlPointAttachment_ = skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_ParticleManager.ChangeControlPointAttachment.getDefaultInstance();
      updateEntityPosition_ = skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_ParticleManager.UpdateEntityPosition.getDefaultInstance();
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      if (!hasIndex()) {
        memoizedIsInitialized = 0;
        return false;
      }
      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeEnum(1, type_.getNumber());
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeUInt32(2, index_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        output.writeMessage(3, releaseParticleIndex_);
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        output.writeMessage(4, createParticle_);
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        output.writeMessage(5, destroyParticle_);
      }
      if (((bitField0_ & 0x00000020) == 0x00000020)) {
        output.writeMessage(6, destroyParticleInvolving_);
      }
      if (((bitField0_ & 0x00000040) == 0x00000040)) {
        output.writeMessage(7, updateParticle_);
      }
      if (((bitField0_ & 0x00000080) == 0x00000080)) {
        output.writeMessage(8, updateParticleFwd_);
      }
      if (((bitField0_ & 0x00000100) == 0x00000100)) {
        output.writeMessage(9, updateParticleOrient_);
      }
      if (((bitField0_ & 0x00000200) == 0x00000200)) {
        output.writeMessage(10, updateParticleFallback_);
      }
      if (((bitField0_ & 0x00000400) == 0x00000400)) {
        output.writeMessage(11, updateParticleOffset_);
      }
      if (((bitField0_ & 0x00000800) == 0x00000800)) {
        output.writeMessage(12, updateParticleEnt_);
      }
      if (((bitField0_ & 0x00001000) == 0x00001000)) {
        output.writeMessage(14, updateParticleShouldDraw_);
      }
      if (((bitField0_ & 0x00002000) == 0x00002000)) {
        output.writeMessage(15, updateParticleSetFrozen_);
      }
      if (((bitField0_ & 0x00004000) == 0x00004000)) {
        output.writeMessage(16, changeControlPointAttachment_);
      }
      if (((bitField0_ & 0x00008000) == 0x00008000)) {
        output.writeMessage(17, updateEntityPosition_);
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeEnumSize(1, type_.getNumber());
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(2, index_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(3, releaseParticleIndex_);
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(4, createParticle_);
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(5, destroyParticle_);
      }
      if (((bitField0_ & 0x00000020) == 0x00000020)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(6, destroyParticleInvolving_);
      }
      if (((bitField0_ & 0x00000040) == 0x00000040)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(7, updateParticle_);
      }
      if (((bitField0_ & 0x00000080) == 0x00000080)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(8, updateParticleFwd_);
      }
      if (((bitField0_ & 0x00000100) == 0x00000100)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(9, updateParticleOrient_);
      }
      if (((bitField0_ & 0x00000200) == 0x00000200)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(10, updateParticleFallback_);
      }
      if (((bitField0_ & 0x00000400) == 0x00000400)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(11, updateParticleOffset_);
      }
      if (((bitField0_ & 0x00000800) == 0x00000800)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(12, updateParticleEnt_);
      }
      if (((bitField0_ & 0x00001000) == 0x00001000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(14, updateParticleShouldDraw_);
      }
      if (((bitField0_ & 0x00002000) == 0x00002000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(15, updateParticleSetFrozen_);
      }
      if (((bitField0_ & 0x00004000) == 0x00004000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(16, changeControlPointAttachment_);
      }
      if (((bitField0_ & 0x00008000) == 0x00008000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(17, updateEntityPosition_);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_ParticleManager parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_ParticleManager parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_ParticleManager parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_ParticleManager parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_ParticleManager parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_ParticleManager parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_ParticleManager parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_ParticleManager parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_ParticleManager parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_ParticleManager parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_ParticleManager prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code CDOTAUserMsg_ParticleManager}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:CDOTAUserMsg_ParticleManager)
        skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_ParticleManagerOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return skadistats.clarity.wire.common.proto.DotaUserMessages.internal_static_CDOTAUserMsg_ParticleManager_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return skadistats.clarity.wire.common.proto.DotaUserMessages.internal_static_CDOTAUserMsg_ParticleManager_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_ParticleManager.class, skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_ParticleManager.Builder.class);
      }

      // Construct using skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_ParticleManager.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
          getReleaseParticleIndexFieldBuilder();
          getCreateParticleFieldBuilder();
          getDestroyParticleFieldBuilder();
          getDestroyParticleInvolvingFieldBuilder();
          getUpdateParticleFieldBuilder();
          getUpdateParticleFwdFieldBuilder();
          getUpdateParticleOrientFieldBuilder();
          getUpdateParticleFallbackFieldBuilder();
          getUpdateParticleOffsetFieldBuilder();
          getUpdateParticleEntFieldBuilder();
          getUpdateParticleShouldDrawFieldBuilder();
          getUpdateParticleSetFrozenFieldBuilder();
          getChangeControlPointAttachmentFieldBuilder();
          getUpdateEntityPositionFieldBuilder();
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        type_ = skadistats.clarity.wire.common.proto.DotaUserMessages.DOTA_PARTICLE_MESSAGE.DOTA_PARTICLE_MANAGER_EVENT_CREATE;
        bitField0_ = (bitField0_ & ~0x00000001);
        index_ = 0;
        bitField0_ = (bitField0_ & ~0x00000002);
        if (releaseParticleIndexBuilder_ == null) {
          releaseParticleIndex_ = skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_ParticleManager.ReleaseParticleIndex.getDefaultInstance();
        } else {
          releaseParticleIndexBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000004);
        if (createParticleBuilder_ == null) {
          createParticle_ = skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_ParticleManager.CreateParticle.getDefaultInstance();
        } else {
          createParticleBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000008);
        if (destroyParticleBuilder_ == null) {
          destroyParticle_ = skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_ParticleManager.DestroyParticle.getDefaultInstance();
        } else {
          destroyParticleBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000010);
        if (destroyParticleInvolvingBuilder_ == null) {
          destroyParticleInvolving_ = skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_ParticleManager.DestroyParticleInvolving.getDefaultInstance();
        } else {
          destroyParticleInvolvingBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000020);
        if (updateParticleBuilder_ == null) {
          updateParticle_ = skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_ParticleManager.UpdateParticle.getDefaultInstance();
        } else {
          updateParticleBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000040);
        if (updateParticleFwdBuilder_ == null) {
          updateParticleFwd_ = skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_ParticleManager.UpdateParticleFwd.getDefaultInstance();
        } else {
          updateParticleFwdBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000080);
        if (updateParticleOrientBuilder_ == null) {
          updateParticleOrient_ = skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_ParticleManager.UpdateParticleOrient.getDefaultInstance();
        } else {
          updateParticleOrientBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000100);
        if (updateParticleFallbackBuilder_ == null) {
          updateParticleFallback_ = skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_ParticleManager.UpdateParticleFallback.getDefaultInstance();
        } else {
          updateParticleFallbackBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000200);
        if (updateParticleOffsetBuilder_ == null) {
          updateParticleOffset_ = skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_ParticleManager.UpdateParticleOffset.getDefaultInstance();
        } else {
          updateParticleOffsetBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000400);
        if (updateParticleEntBuilder_ == null) {
          updateParticleEnt_ = skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_ParticleManager.UpdateParticleEnt.getDefaultInstance();
        } else {
          updateParticleEntBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000800);
        if (updateParticleShouldDrawBuilder_ == null) {
          updateParticleShouldDraw_ = skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_ParticleManager.UpdateParticleShouldDraw.getDefaultInstance();
        } else {
          updateParticleShouldDrawBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00001000);
        if (updateParticleSetFrozenBuilder_ == null) {
          updateParticleSetFrozen_ = skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_ParticleManager.UpdateParticleSetFrozen.getDefaultInstance();
        } else {
          updateParticleSetFrozenBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00002000);
        if (changeControlPointAttachmentBuilder_ == null) {
          changeControlPointAttachment_ = skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_ParticleManager.ChangeControlPointAttachment.getDefaultInstance();
        } else {
          changeControlPointAttachmentBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00004000);
        if (updateEntityPositionBuilder_ == null) {
          updateEntityPosition_ = skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_ParticleManager.UpdateEntityPosition.getDefaultInstance();
        } else {
          updateEntityPositionBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00008000);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return skadistats.clarity.wire.common.proto.DotaUserMessages.internal_static_CDOTAUserMsg_ParticleManager_descriptor;
      }

      public skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_ParticleManager getDefaultInstanceForType() {
        return skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_ParticleManager.getDefaultInstance();
      }

      public skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_ParticleManager build() {
        skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_ParticleManager result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_ParticleManager buildPartial() {
        skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_ParticleManager result = new skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_ParticleManager(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.type_ = type_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.index_ = index_;
        if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
          to_bitField0_ |= 0x00000004;
        }
        if (releaseParticleIndexBuilder_ == null) {
          result.releaseParticleIndex_ = releaseParticleIndex_;
        } else {
          result.releaseParticleIndex_ = releaseParticleIndexBuilder_.build();
        }
        if (((from_bitField0_ & 0x00000008) == 0x00000008)) {
          to_bitField0_ |= 0x00000008;
        }
        if (createParticleBuilder_ == null) {
          result.createParticle_ = createParticle_;
        } else {
          result.createParticle_ = createParticleBuilder_.build();
        }
        if (((from_bitField0_ & 0x00000010) == 0x00000010)) {
          to_bitField0_ |= 0x00000010;
        }
        if (destroyParticleBuilder_ == null) {
          result.destroyParticle_ = destroyParticle_;
        } else {
          result.destroyParticle_ = destroyParticleBuilder_.build();
        }
        if (((from_bitField0_ & 0x00000020) == 0x00000020)) {
          to_bitField0_ |= 0x00000020;
        }
        if (destroyParticleInvolvingBuilder_ == null) {
          result.destroyParticleInvolving_ = destroyParticleInvolving_;
        } else {
          result.destroyParticleInvolving_ = destroyParticleInvolvingBuilder_.build();
        }
        if (((from_bitField0_ & 0x00000040) == 0x00000040)) {
          to_bitField0_ |= 0x00000040;
        }
        if (updateParticleBuilder_ == null) {
          result.updateParticle_ = updateParticle_;
        } else {
          result.updateParticle_ = updateParticleBuilder_.build();
        }
        if (((from_bitField0_ & 0x00000080) == 0x00000080)) {
          to_bitField0_ |= 0x00000080;
        }
        if (updateParticleFwdBuilder_ == null) {
          result.updateParticleFwd_ = updateParticleFwd_;
        } else {
          result.updateParticleFwd_ = updateParticleFwdBuilder_.build();
        }
        if (((from_bitField0_ & 0x00000100) == 0x00000100)) {
          to_bitField0_ |= 0x00000100;
        }
        if (updateParticleOrientBuilder_ == null) {
          result.updateParticleOrient_ = updateParticleOrient_;
        } else {
          result.updateParticleOrient_ = updateParticleOrientBuilder_.build();
        }
        if (((from_bitField0_ & 0x00000200) == 0x00000200)) {
          to_bitField0_ |= 0x00000200;
        }
        if (updateParticleFallbackBuilder_ == null) {
          result.updateParticleFallback_ = updateParticleFallback_;
        } else {
          result.updateParticleFallback_ = updateParticleFallbackBuilder_.build();
        }
        if (((from_bitField0_ & 0x00000400) == 0x00000400)) {
          to_bitField0_ |= 0x00000400;
        }
        if (updateParticleOffsetBuilder_ == null) {
          result.updateParticleOffset_ = updateParticleOffset_;
        } else {
          result.updateParticleOffset_ = updateParticleOffsetBuilder_.build();
        }
        if (((from_bitField0_ & 0x00000800) == 0x00000800)) {
          to_bitField0_ |= 0x00000800;
        }
        if (updateParticleEntBuilder_ == null) {
          result.updateParticleEnt_ = updateParticleEnt_;
        } else {
          result.updateParticleEnt_ = updateParticleEntBuilder_.build();
        }
        if (((from_bitField0_ & 0x00001000) == 0x00001000)) {
          to_bitField0_ |= 0x00001000;
        }
        if (updateParticleShouldDrawBuilder_ == null) {
          result.updateParticleShouldDraw_ = updateParticleShouldDraw_;
        } else {
          result.updateParticleShouldDraw_ = updateParticleShouldDrawBuilder_.build();
        }
        if (((from_bitField0_ & 0x00002000) == 0x00002000)) {
          to_bitField0_ |= 0x00002000;
        }
        if (updateParticleSetFrozenBuilder_ == null) {
          result.updateParticleSetFrozen_ = updateParticleSetFrozen_;
        } else {
          result.updateParticleSetFrozen_ = updateParticleSetFrozenBuilder_.build();
        }
        if (((from_bitField0_ & 0x00004000) == 0x00004000)) {
          to_bitField0_ |= 0x00004000;
        }
        if (changeControlPointAttachmentBuilder_ == null) {
          result.changeControlPointAttachment_ = changeControlPointAttachment_;
        } else {
          result.changeControlPointAttachment_ = changeControlPointAttachmentBuilder_.build();
        }
        if (((from_bitField0_ & 0x00008000) == 0x00008000)) {
          to_bitField0_ |= 0x00008000;
        }
        if (updateEntityPositionBuilder_ == null) {
          result.updateEntityPosition_ = updateEntityPosition_;
        } else {
          result.updateEntityPosition_ = updateEntityPositionBuilder_.build();
        }
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_ParticleManager) {
          return mergeFrom((skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_ParticleManager)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_ParticleManager other) {
        if (other == skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_ParticleManager.getDefaultInstance()) return this;
        if (other.hasType()) {
          setType(other.getType());
        }
        if (other.hasIndex()) {
          setIndex(other.getIndex());
        }
        if (other.hasReleaseParticleIndex()) {
          mergeReleaseParticleIndex(other.getReleaseParticleIndex());
        }
        if (other.hasCreateParticle()) {
          mergeCreateParticle(other.getCreateParticle());
        }
        if (other.hasDestroyParticle()) {
          mergeDestroyParticle(other.getDestroyParticle());
        }
        if (other.hasDestroyParticleInvolving()) {
          mergeDestroyParticleInvolving(other.getDestroyParticleInvolving());
        }
        if (other.hasUpdateParticle()) {
          mergeUpdateParticle(other.getUpdateParticle());
        }
        if (other.hasUpdateParticleFwd()) {
          mergeUpdateParticleFwd(other.getUpdateParticleFwd());
        }
        if (other.hasUpdateParticleOrient()) {
          mergeUpdateParticleOrient(other.getUpdateParticleOrient());
        }
        if (other.hasUpdateParticleFallback()) {
          mergeUpdateParticleFallback(other.getUpdateParticleFallback());
        }
        if (other.hasUpdateParticleOffset()) {
          mergeUpdateParticleOffset(other.getUpdateParticleOffset());
        }
        if (other.hasUpdateParticleEnt()) {
          mergeUpdateParticleEnt(other.getUpdateParticleEnt());
        }
        if (other.hasUpdateParticleShouldDraw()) {
          mergeUpdateParticleShouldDraw(other.getUpdateParticleShouldDraw());
        }
        if (other.hasUpdateParticleSetFrozen()) {
          mergeUpdateParticleSetFrozen(other.getUpdateParticleSetFrozen());
        }
        if (other.hasChangeControlPointAttachment()) {
          mergeChangeControlPointAttachment(other.getChangeControlPointAttachment());
        }
        if (other.hasUpdateEntityPosition()) {
          mergeUpdateEntityPosition(other.getUpdateEntityPosition());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        if (!hasIndex()) {
          
          return false;
        }
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_ParticleManager parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_ParticleManager) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private skadistats.clarity.wire.common.proto.DotaUserMessages.DOTA_PARTICLE_MESSAGE type_ = skadistats.clarity.wire.common.proto.DotaUserMessages.DOTA_PARTICLE_MESSAGE.DOTA_PARTICLE_MANAGER_EVENT_CREATE;
      /**
       * <code>optional .DOTA_PARTICLE_MESSAGE type = 1 [default = DOTA_PARTICLE_MANAGER_EVENT_CREATE];</code>
       */
      public boolean hasType() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>optional .DOTA_PARTICLE_MESSAGE type = 1 [default = DOTA_PARTICLE_MANAGER_EVENT_CREATE];</code>
       */
      public skadistats.clarity.wire.common.proto.DotaUserMessages.DOTA_PARTICLE_MESSAGE getType() {
        return type_;
      }
      /**
       * <code>optional .DOTA_PARTICLE_MESSAGE type = 1 [default = DOTA_PARTICLE_MANAGER_EVENT_CREATE];</code>
       */
      public Builder setType(skadistats.clarity.wire.common.proto.DotaUserMessages.DOTA_PARTICLE_MESSAGE value) {
        if (value == null) {
          throw new NullPointerException();
        }
        bitField0_ |= 0x00000001;
        type_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional .DOTA_PARTICLE_MESSAGE type = 1 [default = DOTA_PARTICLE_MANAGER_EVENT_CREATE];</code>
       */
      public Builder clearType() {
        bitField0_ = (bitField0_ & ~0x00000001);
        type_ = skadistats.clarity.wire.common.proto.DotaUserMessages.DOTA_PARTICLE_MESSAGE.DOTA_PARTICLE_MANAGER_EVENT_CREATE;
        onChanged();
        return this;
      }

      private int index_ ;
      /**
       * <code>required uint32 index = 2;</code>
       */
      public boolean hasIndex() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>required uint32 index = 2;</code>
       */
      public int getIndex() {
        return index_;
      }
      /**
       * <code>required uint32 index = 2;</code>
       */
      public Builder setIndex(int value) {
        bitField0_ |= 0x00000002;
        index_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required uint32 index = 2;</code>
       */
      public Builder clearIndex() {
        bitField0_ = (bitField0_ & ~0x00000002);
        index_ = 0;
        onChanged();
        return this;
      }

      private skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_ParticleManager.ReleaseParticleIndex releaseParticleIndex_ = skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_ParticleManager.ReleaseParticleIndex.getDefaultInstance();
      private com.google.protobuf.SingleFieldBuilder<
          skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_ParticleManager.ReleaseParticleIndex, skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_ParticleManager.ReleaseParticleIndex.Builder, skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_ParticleManager.ReleaseParticleIndexOrBuilder> releaseParticleIndexBuilder_;
      /**
       * <code>optional .CDOTAUserMsg_ParticleManager.ReleaseParticleIndex release_particle_index = 3;</code>
       */
      public boolean hasReleaseParticleIndex() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }
      /**
       * <code>optional .CDOTAUserMsg_ParticleManager.ReleaseParticleIndex release_particle_index = 3;</code>
       */
      public skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_ParticleManager.ReleaseParticleIndex getReleaseParticleIndex() {
        if (releaseParticleIndexBuilder_ == null) {
          return releaseParticleIndex_;
        } else {
          return releaseParticleIndexBuilder_.getMessage();
        }
      }
      /**
       * <code>optional .CDOTAUserMsg_ParticleManager.ReleaseParticleIndex release_particle_index = 3;</code>
       */
      public Builder setReleaseParticleIndex(skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_ParticleManager.ReleaseParticleIndex value) {
        if (releaseParticleIndexBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          releaseParticleIndex_ = value;
          onChanged();
        } else {
          releaseParticleIndexBuilder_.setMessage(value);
        }
        bitField0_ |= 0x00000004;
        return this;
      }
      /**
       * <code>optional .CDOTAUserMsg_ParticleManager.ReleaseParticleIndex release_particle_index = 3;</code>
       */
      public Builder setReleaseParticleIndex(
          skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_ParticleManager.ReleaseParticleIndex.Builder builderForValue) {
        if (releaseParticleIndexBuilder_ == null) {
          releaseParticleIndex_ = builderForValue.build();
          onChanged();
        } else {
          releaseParticleIndexBuilder_.setMessage(builderForValue.build());
        }
        bitField0_ |= 0x00000004;
        return this;
      }
      /**
       * <code>optional .CDOTAUserMsg_ParticleManager.ReleaseParticleIndex release_particle_index = 3;</code>
       */
      public Builder mergeReleaseParticleIndex(skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_ParticleManager.ReleaseParticleIndex value) {
        if (releaseParticleIndexBuilder_ == null) {
          if (((bitField0_ & 0x00000004) == 0x00000004) &&
              releaseParticleIndex_ != skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_ParticleManager.ReleaseParticleIndex.getDefaultInstance()) {
            releaseParticleIndex_ =
              skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_ParticleManager.ReleaseParticleIndex.newBuilder(releaseParticleIndex_).mergeFrom(value).buildPartial();
          } else {
            releaseParticleIndex_ = value;
          }
          onChanged();
        } else {
          releaseParticleIndexBuilder_.mergeFrom(value);
        }
        bitField0_ |= 0x00000004;
        return this;
      }
      /**
       * <code>optional .CDOTAUserMsg_ParticleManager.ReleaseParticleIndex release_particle_index = 3;</code>
       */
      public Builder clearReleaseParticleIndex() {
        if (releaseParticleIndexBuilder_ == null) {
          releaseParticleIndex_ = skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_ParticleManager.ReleaseParticleIndex.getDefaultInstance();
          onChanged();
        } else {
          releaseParticleIndexBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000004);
        return this;
      }
      /**
       * <code>optional .CDOTAUserMsg_ParticleManager.ReleaseParticleIndex release_particle_index = 3;</code>
       */
      public skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_ParticleManager.ReleaseParticleIndex.Builder getReleaseParticleIndexBuilder() {
        bitField0_ |= 0x00000004;
        onChanged();
        return getReleaseParticleIndexFieldBuilder().getBuilder();
      }
      /**
       * <code>optional .CDOTAUserMsg_ParticleManager.ReleaseParticleIndex release_particle_index = 3;</code>
       */
      public skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_ParticleManager.ReleaseParticleIndexOrBuilder getReleaseParticleIndexOrBuilder() {
        if (releaseParticleIndexBuilder_ != null) {
          return releaseParticleIndexBuilder_.getMessageOrBuilder();
        } else {
          return releaseParticleIndex_;
        }
      }
      /**
       * <code>optional .CDOTAUserMsg_ParticleManager.ReleaseParticleIndex release_particle_index = 3;</code>
       */
      private com.google.protobuf.SingleFieldBuilder<
          skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_ParticleManager.ReleaseParticleIndex, skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_ParticleManager.ReleaseParticleIndex.Builder, skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_ParticleManager.ReleaseParticleIndexOrBuilder> 
          getReleaseParticleIndexFieldBuilder() {
        if (releaseParticleIndexBuilder_ == null) {
          releaseParticleIndexBuilder_ = new com.google.protobuf.SingleFieldBuilder<
              skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_ParticleManager.ReleaseParticleIndex, skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_ParticleManager.ReleaseParticleIndex.Builder, skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_ParticleManager.ReleaseParticleIndexOrBuilder>(
                  getReleaseParticleIndex(),
                  getParentForChildren(),
                  isClean());
          releaseParticleIndex_ = null;
        }
        return releaseParticleIndexBuilder_;
      }

      private skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_ParticleManager.CreateParticle createParticle_ = skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_ParticleManager.CreateParticle.getDefaultInstance();
      private com.google.protobuf.SingleFieldBuilder<
          skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_ParticleManager.CreateParticle, skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_ParticleManager.CreateParticle.Builder, skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_ParticleManager.CreateParticleOrBuilder> createParticleBuilder_;
      /**
       * <code>optional .CDOTAUserMsg_ParticleManager.CreateParticle create_particle = 4;</code>
       */
      public boolean hasCreateParticle() {
        return ((bitField0_ & 0x00000008) == 0x00000008);
      }
      /**
       * <code>optional .CDOTAUserMsg_ParticleManager.CreateParticle create_particle = 4;</code>
       */
      public skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_ParticleManager.CreateParticle getCreateParticle() {
        if (createParticleBuilder_ == null) {
          return createParticle_;
        } else {
          return createParticleBuilder_.getMessage();
        }
      }
      /**
       * <code>optional .CDOTAUserMsg_ParticleManager.CreateParticle create_particle = 4;</code>
       */
      public Builder setCreateParticle(skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_ParticleManager.CreateParticle value) {
        if (createParticleBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          createParticle_ = value;
          onChanged();
        } else {
          createParticleBuilder_.setMessage(value);
        }
        bitField0_ |= 0x00000008;
        return this;
      }
      /**
       * <code>optional .CDOTAUserMsg_ParticleManager.CreateParticle create_particle = 4;</code>
       */
      public Builder setCreateParticle(
          skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_ParticleManager.CreateParticle.Builder builderForValue) {
        if (createParticleBuilder_ == null) {
          createParticle_ = builderForValue.build();
          onChanged();
        } else {
          createParticleBuilder_.setMessage(builderForValue.build());
        }
        bitField0_ |= 0x00000008;
        return this;
      }
      /**
       * <code>optional .CDOTAUserMsg_ParticleManager.CreateParticle create_particle = 4;</code>
       */
      public Builder mergeCreateParticle(skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_ParticleManager.CreateParticle value) {
        if (createParticleBuilder_ == null) {
          if (((bitField0_ & 0x00000008) == 0x00000008) &&
              createParticle_ != skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_ParticleManager.CreateParticle.getDefaultInstance()) {
            createParticle_ =
              skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_ParticleManager.CreateParticle.newBuilder(createParticle_).mergeFrom(value).buildPartial();
          } else {
            createParticle_ = value;
          }
          onChanged();
        } else {
          createParticleBuilder_.mergeFrom(value);
        }
        bitField0_ |= 0x00000008;
        return this;
      }
      /**
       * <code>optional .CDOTAUserMsg_ParticleManager.CreateParticle create_particle = 4;</code>
       */
      public Builder clearCreateParticle() {
        if (createParticleBuilder_ == null) {
          createParticle_ = skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_ParticleManager.CreateParticle.getDefaultInstance();
          onChanged();
        } else {
          createParticleBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000008);
        return this;
      }
      /**
       * <code>optional .CDOTAUserMsg_ParticleManager.CreateParticle create_particle = 4;</code>
       */
      public skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_ParticleManager.CreateParticle.Builder getCreateParticleBuilder() {
        bitField0_ |= 0x00000008;
        onChanged();
        return getCreateParticleFieldBuilder().getBuilder();
      }
      /**
       * <code>optional .CDOTAUserMsg_ParticleManager.CreateParticle create_particle = 4;</code>
       */
      public skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_ParticleManager.CreateParticleOrBuilder getCreateParticleOrBuilder() {
        if (createParticleBuilder_ != null) {
          return createParticleBuilder_.getMessageOrBuilder();
        } else {
          return createParticle_;
        }
      }
      /**
       * <code>optional .CDOTAUserMsg_ParticleManager.CreateParticle create_particle = 4;</code>
       */
      private com.google.protobuf.SingleFieldBuilder<
          skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_ParticleManager.CreateParticle, skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_ParticleManager.CreateParticle.Builder, skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_ParticleManager.CreateParticleOrBuilder> 
          getCreateParticleFieldBuilder() {
        if (createParticleBuilder_ == null) {
          createParticleBuilder_ = new com.google.protobuf.SingleFieldBuilder<
              skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_ParticleManager.CreateParticle, skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_ParticleManager.CreateParticle.Builder, skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_ParticleManager.CreateParticleOrBuilder>(
                  getCreateParticle(),
                  getParentForChildren(),
                  isClean());
          createParticle_ = null;
        }
        return createParticleBuilder_;
      }

      private skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_ParticleManager.DestroyParticle destroyParticle_ = skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_ParticleManager.DestroyParticle.getDefaultInstance();
      private com.google.protobuf.SingleFieldBuilder<
          skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_ParticleManager.DestroyParticle, skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_ParticleManager.DestroyParticle.Builder, skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_ParticleManager.DestroyParticleOrBuilder> destroyParticleBuilder_;
      /**
       * <code>optional .CDOTAUserMsg_ParticleManager.DestroyParticle destroy_particle = 5;</code>
       */
      public boolean hasDestroyParticle() {
        return ((bitField0_ & 0x00000010) == 0x00000010);
      }
      /**
       * <code>optional .CDOTAUserMsg_ParticleManager.DestroyParticle destroy_particle = 5;</code>
       */
      public skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_ParticleManager.DestroyParticle getDestroyParticle() {
        if (destroyParticleBuilder_ == null) {
          return destroyParticle_;
        } else {
          return destroyParticleBuilder_.getMessage();
        }
      }
      /**
       * <code>optional .CDOTAUserMsg_ParticleManager.DestroyParticle destroy_particle = 5;</code>
       */
      public Builder setDestroyParticle(skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_ParticleManager.DestroyParticle value) {
        if (destroyParticleBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          destroyParticle_ = value;
          onChanged();
        } else {
          destroyParticleBuilder_.setMessage(value);
        }
        bitField0_ |= 0x00000010;
        return this;
      }
      /**
       * <code>optional .CDOTAUserMsg_ParticleManager.DestroyParticle destroy_particle = 5;</code>
       */
      public Builder setDestroyParticle(
          skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_ParticleManager.DestroyParticle.Builder builderForValue) {
        if (destroyParticleBuilder_ == null) {
          destroyParticle_ = builderForValue.build();
          onChanged();
        } else {
          destroyParticleBuilder_.setMessage(builderForValue.build());
        }
        bitField0_ |= 0x00000010;
        return this;
      }
      /**
       * <code>optional .CDOTAUserMsg_ParticleManager.DestroyParticle destroy_particle = 5;</code>
       */
      public Builder mergeDestroyParticle(skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_ParticleManager.DestroyParticle value) {
        if (destroyParticleBuilder_ == null) {
          if (((bitField0_ & 0x00000010) == 0x00000010) &&
              destroyParticle_ != skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_ParticleManager.DestroyParticle.getDefaultInstance()) {
            destroyParticle_ =
              skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_ParticleManager.DestroyParticle.newBuilder(destroyParticle_).mergeFrom(value).buildPartial();
          } else {
            destroyParticle_ = value;
          }
          onChanged();
        } else {
          destroyParticleBuilder_.mergeFrom(value);
        }
        bitField0_ |= 0x00000010;
        return this;
      }
      /**
       * <code>optional .CDOTAUserMsg_ParticleManager.DestroyParticle destroy_particle = 5;</code>
       */
      public Builder clearDestroyParticle() {
        if (destroyParticleBuilder_ == null) {
          destroyParticle_ = skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_ParticleManager.DestroyParticle.getDefaultInstance();
          onChanged();
        } else {
          destroyParticleBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000010);
        return this;
      }
      /**
       * <code>optional .CDOTAUserMsg_ParticleManager.DestroyParticle destroy_particle = 5;</code>
       */
      public skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_ParticleManager.DestroyParticle.Builder getDestroyParticleBuilder() {
        bitField0_ |= 0x00000010;
        onChanged();
        return getDestroyParticleFieldBuilder().getBuilder();
      }
      /**
       * <code>optional .CDOTAUserMsg_ParticleManager.DestroyParticle destroy_particle = 5;</code>
       */
      public skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_ParticleManager.DestroyParticleOrBuilder getDestroyParticleOrBuilder() {
        if (destroyParticleBuilder_ != null) {
          return destroyParticleBuilder_.getMessageOrBuilder();
        } else {
          return destroyParticle_;
        }
      }
      /**
       * <code>optional .CDOTAUserMsg_ParticleManager.DestroyParticle destroy_particle = 5;</code>
       */
      private com.google.protobuf.SingleFieldBuilder<
          skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_ParticleManager.DestroyParticle, skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_ParticleManager.DestroyParticle.Builder, skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_ParticleManager.DestroyParticleOrBuilder> 
          getDestroyParticleFieldBuilder() {
        if (destroyParticleBuilder_ == null) {
          destroyParticleBuilder_ = new com.google.protobuf.SingleFieldBuilder<
              skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_ParticleManager.DestroyParticle, skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_ParticleManager.DestroyParticle.Builder, skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_ParticleManager.DestroyParticleOrBuilder>(
                  getDestroyParticle(),
                  getParentForChildren(),
                  isClean());
          destroyParticle_ = null;
        }
        return destroyParticleBuilder_;
      }

      private skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_ParticleManager.DestroyParticleInvolving destroyParticleInvolving_ = skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_ParticleManager.DestroyParticleInvolving.getDefaultInstance();
      private com.google.protobuf.SingleFieldBuilder<
          skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_ParticleManager.DestroyParticleInvolving, skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_ParticleManager.DestroyParticleInvolving.Builder, skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_ParticleManager.DestroyParticleInvolvingOrBuilder> destroyParticleInvolvingBuilder_;
      /**
       * <code>optional .CDOTAUserMsg_ParticleManager.DestroyParticleInvolving destroy_particle_involving = 6;</code>
       */
      public boolean hasDestroyParticleInvolving() {
        return ((bitField0_ & 0x00000020) == 0x00000020);
      }
      /**
       * <code>optional .CDOTAUserMsg_ParticleManager.DestroyParticleInvolving destroy_particle_involving = 6;</code>
       */
      public skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_ParticleManager.DestroyParticleInvolving getDestroyParticleInvolving() {
        if (destroyParticleInvolvingBuilder_ == null) {
          return destroyParticleInvolving_;
        } else {
          return destroyParticleInvolvingBuilder_.getMessage();
        }
      }
      /**
       * <code>optional .CDOTAUserMsg_ParticleManager.DestroyParticleInvolving destroy_particle_involving = 6;</code>
       */
      public Builder setDestroyParticleInvolving(skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_ParticleManager.DestroyParticleInvolving value) {
        if (destroyParticleInvolvingBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          destroyParticleInvolving_ = value;
          onChanged();
        } else {
          destroyParticleInvolvingBuilder_.setMessage(value);
        }
        bitField0_ |= 0x00000020;
        return this;
      }
      /**
       * <code>optional .CDOTAUserMsg_ParticleManager.DestroyParticleInvolving destroy_particle_involving = 6;</code>
       */
      public Builder setDestroyParticleInvolving(
          skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_ParticleManager.DestroyParticleInvolving.Builder builderForValue) {
        if (destroyParticleInvolvingBuilder_ == null) {
          destroyParticleInvolving_ = builderForValue.build();
          onChanged();
        } else {
          destroyParticleInvolvingBuilder_.setMessage(builderForValue.build());
        }
        bitField0_ |= 0x00000020;
        return this;
      }
      /**
       * <code>optional .CDOTAUserMsg_ParticleManager.DestroyParticleInvolving destroy_particle_involving = 6;</code>
       */
      public Builder mergeDestroyParticleInvolving(skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_ParticleManager.DestroyParticleInvolving value) {
        if (destroyParticleInvolvingBuilder_ == null) {
          if (((bitField0_ & 0x00000020) == 0x00000020) &&
              destroyParticleInvolving_ != skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_ParticleManager.DestroyParticleInvolving.getDefaultInstance()) {
            destroyParticleInvolving_ =
              skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_ParticleManager.DestroyParticleInvolving.newBuilder(destroyParticleInvolving_).mergeFrom(value).buildPartial();
          } else {
            destroyParticleInvolving_ = value;
          }
          onChanged();
        } else {
          destroyParticleInvolvingBuilder_.mergeFrom(value);
        }
        bitField0_ |= 0x00000020;
        return this;
      }
      /**
       * <code>optional .CDOTAUserMsg_ParticleManager.DestroyParticleInvolving destroy_particle_involving = 6;</code>
       */
      public Builder clearDestroyParticleInvolving() {
        if (destroyParticleInvolvingBuilder_ == null) {
          destroyParticleInvolving_ = skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_ParticleManager.DestroyParticleInvolving.getDefaultInstance();
          onChanged();
        } else {
          destroyParticleInvolvingBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000020);
        return this;
      }
      /**
       * <code>optional .CDOTAUserMsg_ParticleManager.DestroyParticleInvolving destroy_particle_involving = 6;</code>
       */
      public skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_ParticleManager.DestroyParticleInvolving.Builder getDestroyParticleInvolvingBuilder() {
        bitField0_ |= 0x00000020;
        onChanged();
        return getDestroyParticleInvolvingFieldBuilder().getBuilder();
      }
      /**
       * <code>optional .CDOTAUserMsg_ParticleManager.DestroyParticleInvolving destroy_particle_involving = 6;</code>
       */
      public skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_ParticleManager.DestroyParticleInvolvingOrBuilder getDestroyParticleInvolvingOrBuilder() {
        if (destroyParticleInvolvingBuilder_ != null) {
          return destroyParticleInvolvingBuilder_.getMessageOrBuilder();
        } else {
          return destroyParticleInvolving_;
        }
      }
      /**
       * <code>optional .CDOTAUserMsg_ParticleManager.DestroyParticleInvolving destroy_particle_involving = 6;</code>
       */
      private com.google.protobuf.SingleFieldBuilder<
          skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_ParticleManager.DestroyParticleInvolving, skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_ParticleManager.DestroyParticleInvolving.Builder, skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_ParticleManager.DestroyParticleInvolvingOrBuilder> 
          getDestroyParticleInvolvingFieldBuilder() {
        if (destroyParticleInvolvingBuilder_ == null) {
          destroyParticleInvolvingBuilder_ = new com.google.protobuf.SingleFieldBuilder<
              skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_ParticleManager.DestroyParticleInvolving, skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_ParticleManager.DestroyParticleInvolving.Builder, skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_ParticleManager.DestroyParticleInvolvingOrBuilder>(
                  getDestroyParticleInvolving(),
                  getParentForChildren(),
                  isClean());
          destroyParticleInvolving_ = null;
        }
        return destroyParticleInvolvingBuilder_;
      }

      private skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_ParticleManager.UpdateParticle updateParticle_ = skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_ParticleManager.UpdateParticle.getDefaultInstance();
      private com.google.protobuf.SingleFieldBuilder<
          skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_ParticleManager.UpdateParticle, skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_ParticleManager.UpdateParticle.Builder, skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_ParticleManager.UpdateParticleOrBuilder> updateParticleBuilder_;
      /**
       * <code>optional .CDOTAUserMsg_ParticleManager.UpdateParticle update_particle = 7;</code>
       */
      public boolean hasUpdateParticle() {
        return ((bitField0_ & 0x00000040) == 0x00000040);
      }
      /**
       * <code>optional .CDOTAUserMsg_ParticleManager.UpdateParticle update_particle = 7;</code>
       */
      public skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_ParticleManager.UpdateParticle getUpdateParticle() {
        if (updateParticleBuilder_ == null) {
          return updateParticle_;
        } else {
          return updateParticleBuilder_.getMessage();
        }
      }
      /**
       * <code>optional .CDOTAUserMsg_ParticleManager.UpdateParticle update_particle = 7;</code>
       */
      public Builder setUpdateParticle(skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_ParticleManager.UpdateParticle value) {
        if (updateParticleBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          updateParticle_ = value;
          onChanged();
        } else {
          updateParticleBuilder_.setMessage(value);
        }
        bitField0_ |= 0x00000040;
        return this;
      }
      /**
       * <code>optional .CDOTAUserMsg_ParticleManager.UpdateParticle update_particle = 7;</code>
       */
      public Builder setUpdateParticle(
          skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_ParticleManager.UpdateParticle.Builder builderForValue) {
        if (updateParticleBuilder_ == null) {
          updateParticle_ = builderForValue.build();
          onChanged();
        } else {
          updateParticleBuilder_.setMessage(builderForValue.build());
        }
        bitField0_ |= 0x00000040;
        return this;
      }
      /**
       * <code>optional .CDOTAUserMsg_ParticleManager.UpdateParticle update_particle = 7;</code>
       */
      public Builder mergeUpdateParticle(skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_ParticleManager.UpdateParticle value) {
        if (updateParticleBuilder_ == null) {
          if (((bitField0_ & 0x00000040) == 0x00000040) &&
              updateParticle_ != skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_ParticleManager.UpdateParticle.getDefaultInstance()) {
            updateParticle_ =
              skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_ParticleManager.UpdateParticle.newBuilder(updateParticle_).mergeFrom(value).buildPartial();
          } else {
            updateParticle_ = value;
          }
          onChanged();
        } else {
          updateParticleBuilder_.mergeFrom(value);
        }
        bitField0_ |= 0x00000040;
        return this;
      }
      /**
       * <code>optional .CDOTAUserMsg_ParticleManager.UpdateParticle update_particle = 7;</code>
       */
      public Builder clearUpdateParticle() {
        if (updateParticleBuilder_ == null) {
          updateParticle_ = skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_ParticleManager.UpdateParticle.getDefaultInstance();
          onChanged();
        } else {
          updateParticleBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000040);
        return this;
      }
      /**
       * <code>optional .CDOTAUserMsg_ParticleManager.UpdateParticle update_particle = 7;</code>
       */
      public skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_ParticleManager.UpdateParticle.Builder getUpdateParticleBuilder() {
        bitField0_ |= 0x00000040;
        onChanged();
        return getUpdateParticleFieldBuilder().getBuilder();
      }
      /**
       * <code>optional .CDOTAUserMsg_ParticleManager.UpdateParticle update_particle = 7;</code>
       */
      public skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_ParticleManager.UpdateParticleOrBuilder getUpdateParticleOrBuilder() {
        if (updateParticleBuilder_ != null) {
          return updateParticleBuilder_.getMessageOrBuilder();
        } else {
          return updateParticle_;
        }
      }
      /**
       * <code>optional .CDOTAUserMsg_ParticleManager.UpdateParticle update_particle = 7;</code>
       */
      private com.google.protobuf.SingleFieldBuilder<
          skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_ParticleManager.UpdateParticle, skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_ParticleManager.UpdateParticle.Builder, skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_ParticleManager.UpdateParticleOrBuilder> 
          getUpdateParticleFieldBuilder() {
        if (updateParticleBuilder_ == null) {
          updateParticleBuilder_ = new com.google.protobuf.SingleFieldBuilder<
              skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_ParticleManager.UpdateParticle, skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_ParticleManager.UpdateParticle.Builder, skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_ParticleManager.UpdateParticleOrBuilder>(
                  getUpdateParticle(),
                  getParentForChildren(),
                  isClean());
          updateParticle_ = null;
        }
        return updateParticleBuilder_;
      }

      private skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_ParticleManager.UpdateParticleFwd updateParticleFwd_ = skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_ParticleManager.UpdateParticleFwd.getDefaultInstance();
      private com.google.protobuf.SingleFieldBuilder<
          skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_ParticleManager.UpdateParticleFwd, skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_ParticleManager.UpdateParticleFwd.Builder, skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_ParticleManager.UpdateParticleFwdOrBuilder> updateParticleFwdBuilder_;
      /**
       * <code>optional .CDOTAUserMsg_ParticleManager.UpdateParticleFwd update_particle_fwd = 8;</code>
       */
      public boolean hasUpdateParticleFwd() {
        return ((bitField0_ & 0x00000080) == 0x00000080);
      }
      /**
       * <code>optional .CDOTAUserMsg_ParticleManager.UpdateParticleFwd update_particle_fwd = 8;</code>
       */
      public skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_ParticleManager.UpdateParticleFwd getUpdateParticleFwd() {
        if (updateParticleFwdBuilder_ == null) {
          return updateParticleFwd_;
        } else {
          return updateParticleFwdBuilder_.getMessage();
        }
      }
      /**
       * <code>optional .CDOTAUserMsg_ParticleManager.UpdateParticleFwd update_particle_fwd = 8;</code>
       */
      public Builder setUpdateParticleFwd(skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_ParticleManager.UpdateParticleFwd value) {
        if (updateParticleFwdBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          updateParticleFwd_ = value;
          onChanged();
        } else {
          updateParticleFwdBuilder_.setMessage(value);
        }
        bitField0_ |= 0x00000080;
        return this;
      }
      /**
       * <code>optional .CDOTAUserMsg_ParticleManager.UpdateParticleFwd update_particle_fwd = 8;</code>
       */
      public Builder setUpdateParticleFwd(
          skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_ParticleManager.UpdateParticleFwd.Builder builderForValue) {
        if (updateParticleFwdBuilder_ == null) {
          updateParticleFwd_ = builderForValue.build();
          onChanged();
        } else {
          updateParticleFwdBuilder_.setMessage(builderForValue.build());
        }
        bitField0_ |= 0x00000080;
        return this;
      }
      /**
       * <code>optional .CDOTAUserMsg_ParticleManager.UpdateParticleFwd update_particle_fwd = 8;</code>
       */
      public Builder mergeUpdateParticleFwd(skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_ParticleManager.UpdateParticleFwd value) {
        if (updateParticleFwdBuilder_ == null) {
          if (((bitField0_ & 0x00000080) == 0x00000080) &&
              updateParticleFwd_ != skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_ParticleManager.UpdateParticleFwd.getDefaultInstance()) {
            updateParticleFwd_ =
              skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_ParticleManager.UpdateParticleFwd.newBuilder(updateParticleFwd_).mergeFrom(value).buildPartial();
          } else {
            updateParticleFwd_ = value;
          }
          onChanged();
        } else {
          updateParticleFwdBuilder_.mergeFrom(value);
        }
        bitField0_ |= 0x00000080;
        return this;
      }
      /**
       * <code>optional .CDOTAUserMsg_ParticleManager.UpdateParticleFwd update_particle_fwd = 8;</code>
       */
      public Builder clearUpdateParticleFwd() {
        if (updateParticleFwdBuilder_ == null) {
          updateParticleFwd_ = skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_ParticleManager.UpdateParticleFwd.getDefaultInstance();
          onChanged();
        } else {
          updateParticleFwdBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000080);
        return this;
      }
      /**
       * <code>optional .CDOTAUserMsg_ParticleManager.UpdateParticleFwd update_particle_fwd = 8;</code>
       */
      public skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_ParticleManager.UpdateParticleFwd.Builder getUpdateParticleFwdBuilder() {
        bitField0_ |= 0x00000080;
        onChanged();
        return getUpdateParticleFwdFieldBuilder().getBuilder();
      }
      /**
       * <code>optional .CDOTAUserMsg_ParticleManager.UpdateParticleFwd update_particle_fwd = 8;</code>
       */
      public skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_ParticleManager.UpdateParticleFwdOrBuilder getUpdateParticleFwdOrBuilder() {
        if (updateParticleFwdBuilder_ != null) {
          return updateParticleFwdBuilder_.getMessageOrBuilder();
        } else {
          return updateParticleFwd_;
        }
      }
      /**
       * <code>optional .CDOTAUserMsg_ParticleManager.UpdateParticleFwd update_particle_fwd = 8;</code>
       */
      private com.google.protobuf.SingleFieldBuilder<
          skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_ParticleManager.UpdateParticleFwd, skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_ParticleManager.UpdateParticleFwd.Builder, skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_ParticleManager.UpdateParticleFwdOrBuilder> 
          getUpdateParticleFwdFieldBuilder() {
        if (updateParticleFwdBuilder_ == null) {
          updateParticleFwdBuilder_ = new com.google.protobuf.SingleFieldBuilder<
              skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_ParticleManager.UpdateParticleFwd, skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_ParticleManager.UpdateParticleFwd.Builder, skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_ParticleManager.UpdateParticleFwdOrBuilder>(
                  getUpdateParticleFwd(),
                  getParentForChildren(),
                  isClean());
          updateParticleFwd_ = null;
        }
        return updateParticleFwdBuilder_;
      }

      private skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_ParticleManager.UpdateParticleOrient updateParticleOrient_ = skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_ParticleManager.UpdateParticleOrient.getDefaultInstance();
      private com.google.protobuf.SingleFieldBuilder<
          skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_ParticleManager.UpdateParticleOrient, skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_ParticleManager.UpdateParticleOrient.Builder, skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_ParticleManager.UpdateParticleOrientOrBuilder> updateParticleOrientBuilder_;
      /**
       * <code>optional .CDOTAUserMsg_ParticleManager.UpdateParticleOrient update_particle_orient = 9;</code>
       */
      public boolean hasUpdateParticleOrient() {
        return ((bitField0_ & 0x00000100) == 0x00000100);
      }
      /**
       * <code>optional .CDOTAUserMsg_ParticleManager.UpdateParticleOrient update_particle_orient = 9;</code>
       */
      public skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_ParticleManager.UpdateParticleOrient getUpdateParticleOrient() {
        if (updateParticleOrientBuilder_ == null) {
          return updateParticleOrient_;
        } else {
          return updateParticleOrientBuilder_.getMessage();
        }
      }
      /**
       * <code>optional .CDOTAUserMsg_ParticleManager.UpdateParticleOrient update_particle_orient = 9;</code>
       */
      public Builder setUpdateParticleOrient(skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_ParticleManager.UpdateParticleOrient value) {
        if (updateParticleOrientBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          updateParticleOrient_ = value;
          onChanged();
        } else {
          updateParticleOrientBuilder_.setMessage(value);
        }
        bitField0_ |= 0x00000100;
        return this;
      }
      /**
       * <code>optional .CDOTAUserMsg_ParticleManager.UpdateParticleOrient update_particle_orient = 9;</code>
       */
      public Builder setUpdateParticleOrient(
          skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_ParticleManager.UpdateParticleOrient.Builder builderForValue) {
        if (updateParticleOrientBuilder_ == null) {
          updateParticleOrient_ = builderForValue.build();
          onChanged();
        } else {
          updateParticleOrientBuilder_.setMessage(builderForValue.build());
        }
        bitField0_ |= 0x00000100;
        return this;
      }
      /**
       * <code>optional .CDOTAUserMsg_ParticleManager.UpdateParticleOrient update_particle_orient = 9;</code>
       */
      public Builder mergeUpdateParticleOrient(skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_ParticleManager.UpdateParticleOrient value) {
        if (updateParticleOrientBuilder_ == null) {
          if (((bitField0_ & 0x00000100) == 0x00000100) &&
              updateParticleOrient_ != skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_ParticleManager.UpdateParticleOrient.getDefaultInstance()) {
            updateParticleOrient_ =
              skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_ParticleManager.UpdateParticleOrient.newBuilder(updateParticleOrient_).mergeFrom(value).buildPartial();
          } else {
            updateParticleOrient_ = value;
          }
          onChanged();
        } else {
          updateParticleOrientBuilder_.mergeFrom(value);
        }
        bitField0_ |= 0x00000100;
        return this;
      }
      /**
       * <code>optional .CDOTAUserMsg_ParticleManager.UpdateParticleOrient update_particle_orient = 9;</code>
       */
      public Builder clearUpdateParticleOrient() {
        if (updateParticleOrientBuilder_ == null) {
          updateParticleOrient_ = skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_ParticleManager.UpdateParticleOrient.getDefaultInstance();
          onChanged();
        } else {
          updateParticleOrientBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000100);
        return this;
      }
      /**
       * <code>optional .CDOTAUserMsg_ParticleManager.UpdateParticleOrient update_particle_orient = 9;</code>
       */
      public skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_ParticleManager.UpdateParticleOrient.Builder getUpdateParticleOrientBuilder() {
        bitField0_ |= 0x00000100;
        onChanged();
        return getUpdateParticleOrientFieldBuilder().getBuilder();
      }
      /**
       * <code>optional .CDOTAUserMsg_ParticleManager.UpdateParticleOrient update_particle_orient = 9;</code>
       */
      public skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_ParticleManager.UpdateParticleOrientOrBuilder getUpdateParticleOrientOrBuilder() {
        if (updateParticleOrientBuilder_ != null) {
          return updateParticleOrientBuilder_.getMessageOrBuilder();
        } else {
          return updateParticleOrient_;
        }
      }
      /**
       * <code>optional .CDOTAUserMsg_ParticleManager.UpdateParticleOrient update_particle_orient = 9;</code>
       */
      private com.google.protobuf.SingleFieldBuilder<
          skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_ParticleManager.UpdateParticleOrient, skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_ParticleManager.UpdateParticleOrient.Builder, skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_ParticleManager.UpdateParticleOrientOrBuilder> 
          getUpdateParticleOrientFieldBuilder() {
        if (updateParticleOrientBuilder_ == null) {
          updateParticleOrientBuilder_ = new com.google.protobuf.SingleFieldBuilder<
              skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_ParticleManager.UpdateParticleOrient, skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_ParticleManager.UpdateParticleOrient.Builder, skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_ParticleManager.UpdateParticleOrientOrBuilder>(
                  getUpdateParticleOrient(),
                  getParentForChildren(),
                  isClean());
          updateParticleOrient_ = null;
        }
        return updateParticleOrientBuilder_;
      }

      private skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_ParticleManager.UpdateParticleFallback updateParticleFallback_ = skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_ParticleManager.UpdateParticleFallback.getDefaultInstance();
      private com.google.protobuf.SingleFieldBuilder<
          skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_ParticleManager.UpdateParticleFallback, skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_ParticleManager.UpdateParticleFallback.Builder, skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_ParticleManager.UpdateParticleFallbackOrBuilder> updateParticleFallbackBuilder_;
      /**
       * <code>optional .CDOTAUserMsg_ParticleManager.UpdateParticleFallback update_particle_fallback = 10;</code>
       */
      public boolean hasUpdateParticleFallback() {
        return ((bitField0_ & 0x00000200) == 0x00000200);
      }
      /**
       * <code>optional .CDOTAUserMsg_ParticleManager.UpdateParticleFallback update_particle_fallback = 10;</code>
       */
      public skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_ParticleManager.UpdateParticleFallback getUpdateParticleFallback() {
        if (updateParticleFallbackBuilder_ == null) {
          return updateParticleFallback_;
        } else {
          return updateParticleFallbackBuilder_.getMessage();
        }
      }
      /**
       * <code>optional .CDOTAUserMsg_ParticleManager.UpdateParticleFallback update_particle_fallback = 10;</code>
       */
      public Builder setUpdateParticleFallback(skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_ParticleManager.UpdateParticleFallback value) {
        if (updateParticleFallbackBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          updateParticleFallback_ = value;
          onChanged();
        } else {
          updateParticleFallbackBuilder_.setMessage(value);
        }
        bitField0_ |= 0x00000200;
        return this;
      }
      /**
       * <code>optional .CDOTAUserMsg_ParticleManager.UpdateParticleFallback update_particle_fallback = 10;</code>
       */
      public Builder setUpdateParticleFallback(
          skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_ParticleManager.UpdateParticleFallback.Builder builderForValue) {
        if (updateParticleFallbackBuilder_ == null) {
          updateParticleFallback_ = builderForValue.build();
          onChanged();
        } else {
          updateParticleFallbackBuilder_.setMessage(builderForValue.build());
        }
        bitField0_ |= 0x00000200;
        return this;
      }
      /**
       * <code>optional .CDOTAUserMsg_ParticleManager.UpdateParticleFallback update_particle_fallback = 10;</code>
       */
      public Builder mergeUpdateParticleFallback(skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_ParticleManager.UpdateParticleFallback value) {
        if (updateParticleFallbackBuilder_ == null) {
          if (((bitField0_ & 0x00000200) == 0x00000200) &&
              updateParticleFallback_ != skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_ParticleManager.UpdateParticleFallback.getDefaultInstance()) {
            updateParticleFallback_ =
              skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_ParticleManager.UpdateParticleFallback.newBuilder(updateParticleFallback_).mergeFrom(value).buildPartial();
          } else {
            updateParticleFallback_ = value;
          }
          onChanged();
        } else {
          updateParticleFallbackBuilder_.mergeFrom(value);
        }
        bitField0_ |= 0x00000200;
        return this;
      }
      /**
       * <code>optional .CDOTAUserMsg_ParticleManager.UpdateParticleFallback update_particle_fallback = 10;</code>
       */
      public Builder clearUpdateParticleFallback() {
        if (updateParticleFallbackBuilder_ == null) {
          updateParticleFallback_ = skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_ParticleManager.UpdateParticleFallback.getDefaultInstance();
          onChanged();
        } else {
          updateParticleFallbackBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000200);
        return this;
      }
      /**
       * <code>optional .CDOTAUserMsg_ParticleManager.UpdateParticleFallback update_particle_fallback = 10;</code>
       */
      public skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_ParticleManager.UpdateParticleFallback.Builder getUpdateParticleFallbackBuilder() {
        bitField0_ |= 0x00000200;
        onChanged();
        return getUpdateParticleFallbackFieldBuilder().getBuilder();
      }
      /**
       * <code>optional .CDOTAUserMsg_ParticleManager.UpdateParticleFallback update_particle_fallback = 10;</code>
       */
      public skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_ParticleManager.UpdateParticleFallbackOrBuilder getUpdateParticleFallbackOrBuilder() {
        if (updateParticleFallbackBuilder_ != null) {
          return updateParticleFallbackBuilder_.getMessageOrBuilder();
        } else {
          return updateParticleFallback_;
        }
      }
      /**
       * <code>optional .CDOTAUserMsg_ParticleManager.UpdateParticleFallback update_particle_fallback = 10;</code>
       */
      private com.google.protobuf.SingleFieldBuilder<
          skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_ParticleManager.UpdateParticleFallback, skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_ParticleManager.UpdateParticleFallback.Builder, skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_ParticleManager.UpdateParticleFallbackOrBuilder> 
          getUpdateParticleFallbackFieldBuilder() {
        if (updateParticleFallbackBuilder_ == null) {
          updateParticleFallbackBuilder_ = new com.google.protobuf.SingleFieldBuilder<
              skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_ParticleManager.UpdateParticleFallback, skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_ParticleManager.UpdateParticleFallback.Builder, skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_ParticleManager.UpdateParticleFallbackOrBuilder>(
                  getUpdateParticleFallback(),
                  getParentForChildren(),
                  isClean());
          updateParticleFallback_ = null;
        }
        return updateParticleFallbackBuilder_;
      }

      private skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_ParticleManager.UpdateParticleOffset updateParticleOffset_ = skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_ParticleManager.UpdateParticleOffset.getDefaultInstance();
      private com.google.protobuf.SingleFieldBuilder<
          skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_ParticleManager.UpdateParticleOffset, skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_ParticleManager.UpdateParticleOffset.Builder, skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_ParticleManager.UpdateParticleOffsetOrBuilder> updateParticleOffsetBuilder_;
      /**
       * <code>optional .CDOTAUserMsg_ParticleManager.UpdateParticleOffset update_particle_offset = 11;</code>
       */
      public boolean hasUpdateParticleOffset() {
        return ((bitField0_ & 0x00000400) == 0x00000400);
      }
      /**
       * <code>optional .CDOTAUserMsg_ParticleManager.UpdateParticleOffset update_particle_offset = 11;</code>
       */
      public skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_ParticleManager.UpdateParticleOffset getUpdateParticleOffset() {
        if (updateParticleOffsetBuilder_ == null) {
          return updateParticleOffset_;
        } else {
          return updateParticleOffsetBuilder_.getMessage();
        }
      }
      /**
       * <code>optional .CDOTAUserMsg_ParticleManager.UpdateParticleOffset update_particle_offset = 11;</code>
       */
      public Builder setUpdateParticleOffset(skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_ParticleManager.UpdateParticleOffset value) {
        if (updateParticleOffsetBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          updateParticleOffset_ = value;
          onChanged();
        } else {
          updateParticleOffsetBuilder_.setMessage(value);
        }
        bitField0_ |= 0x00000400;
        return this;
      }
      /**
       * <code>optional .CDOTAUserMsg_ParticleManager.UpdateParticleOffset update_particle_offset = 11;</code>
       */
      public Builder setUpdateParticleOffset(
          skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_ParticleManager.UpdateParticleOffset.Builder builderForValue) {
        if (updateParticleOffsetBuilder_ == null) {
          updateParticleOffset_ = builderForValue.build();
          onChanged();
        } else {
          updateParticleOffsetBuilder_.setMessage(builderForValue.build());
        }
        bitField0_ |= 0x00000400;
        return this;
      }
      /**
       * <code>optional .CDOTAUserMsg_ParticleManager.UpdateParticleOffset update_particle_offset = 11;</code>
       */
      public Builder mergeUpdateParticleOffset(skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_ParticleManager.UpdateParticleOffset value) {
        if (updateParticleOffsetBuilder_ == null) {
          if (((bitField0_ & 0x00000400) == 0x00000400) &&
              updateParticleOffset_ != skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_ParticleManager.UpdateParticleOffset.getDefaultInstance()) {
            updateParticleOffset_ =
              skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_ParticleManager.UpdateParticleOffset.newBuilder(updateParticleOffset_).mergeFrom(value).buildPartial();
          } else {
            updateParticleOffset_ = value;
          }
          onChanged();
        } else {
          updateParticleOffsetBuilder_.mergeFrom(value);
        }
        bitField0_ |= 0x00000400;
        return this;
      }
      /**
       * <code>optional .CDOTAUserMsg_ParticleManager.UpdateParticleOffset update_particle_offset = 11;</code>
       */
      public Builder clearUpdateParticleOffset() {
        if (updateParticleOffsetBuilder_ == null) {
          updateParticleOffset_ = skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_ParticleManager.UpdateParticleOffset.getDefaultInstance();
          onChanged();
        } else {
          updateParticleOffsetBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000400);
        return this;
      }
      /**
       * <code>optional .CDOTAUserMsg_ParticleManager.UpdateParticleOffset update_particle_offset = 11;</code>
       */
      public skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_ParticleManager.UpdateParticleOffset.Builder getUpdateParticleOffsetBuilder() {
        bitField0_ |= 0x00000400;
        onChanged();
        return getUpdateParticleOffsetFieldBuilder().getBuilder();
      }
      /**
       * <code>optional .CDOTAUserMsg_ParticleManager.UpdateParticleOffset update_particle_offset = 11;</code>
       */
      public skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_ParticleManager.UpdateParticleOffsetOrBuilder getUpdateParticleOffsetOrBuilder() {
        if (updateParticleOffsetBuilder_ != null) {
          return updateParticleOffsetBuilder_.getMessageOrBuilder();
        } else {
          return updateParticleOffset_;
        }
      }
      /**
       * <code>optional .CDOTAUserMsg_ParticleManager.UpdateParticleOffset update_particle_offset = 11;</code>
       */
      private com.google.protobuf.SingleFieldBuilder<
          skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_ParticleManager.UpdateParticleOffset, skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_ParticleManager.UpdateParticleOffset.Builder, skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_ParticleManager.UpdateParticleOffsetOrBuilder> 
          getUpdateParticleOffsetFieldBuilder() {
        if (updateParticleOffsetBuilder_ == null) {
          updateParticleOffsetBuilder_ = new com.google.protobuf.SingleFieldBuilder<
              skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_ParticleManager.UpdateParticleOffset, skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_ParticleManager.UpdateParticleOffset.Builder, skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_ParticleManager.UpdateParticleOffsetOrBuilder>(
                  getUpdateParticleOffset(),
                  getParentForChildren(),
                  isClean());
          updateParticleOffset_ = null;
        }
        return updateParticleOffsetBuilder_;
      }

      private skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_ParticleManager.UpdateParticleEnt updateParticleEnt_ = skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_ParticleManager.UpdateParticleEnt.getDefaultInstance();
      private com.google.protobuf.SingleFieldBuilder<
          skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_ParticleManager.UpdateParticleEnt, skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_ParticleManager.UpdateParticleEnt.Builder, skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_ParticleManager.UpdateParticleEntOrBuilder> updateParticleEntBuilder_;
      /**
       * <code>optional .CDOTAUserMsg_ParticleManager.UpdateParticleEnt update_particle_ent = 12;</code>
       */
      public boolean hasUpdateParticleEnt() {
        return ((bitField0_ & 0x00000800) == 0x00000800);
      }
      /**
       * <code>optional .CDOTAUserMsg_ParticleManager.UpdateParticleEnt update_particle_ent = 12;</code>
       */
      public skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_ParticleManager.UpdateParticleEnt getUpdateParticleEnt() {
        if (updateParticleEntBuilder_ == null) {
          return updateParticleEnt_;
        } else {
          return updateParticleEntBuilder_.getMessage();
        }
      }
      /**
       * <code>optional .CDOTAUserMsg_ParticleManager.UpdateParticleEnt update_particle_ent = 12;</code>
       */
      public Builder setUpdateParticleEnt(skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_ParticleManager.UpdateParticleEnt value) {
        if (updateParticleEntBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          updateParticleEnt_ = value;
          onChanged();
        } else {
          updateParticleEntBuilder_.setMessage(value);
        }
        bitField0_ |= 0x00000800;
        return this;
      }
      /**
       * <code>optional .CDOTAUserMsg_ParticleManager.UpdateParticleEnt update_particle_ent = 12;</code>
       */
      public Builder setUpdateParticleEnt(
          skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_ParticleManager.UpdateParticleEnt.Builder builderForValue) {
        if (updateParticleEntBuilder_ == null) {
          updateParticleEnt_ = builderForValue.build();
          onChanged();
        } else {
          updateParticleEntBuilder_.setMessage(builderForValue.build());
        }
        bitField0_ |= 0x00000800;
        return this;
      }
      /**
       * <code>optional .CDOTAUserMsg_ParticleManager.UpdateParticleEnt update_particle_ent = 12;</code>
       */
      public Builder mergeUpdateParticleEnt(skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_ParticleManager.UpdateParticleEnt value) {
        if (updateParticleEntBuilder_ == null) {
          if (((bitField0_ & 0x00000800) == 0x00000800) &&
              updateParticleEnt_ != skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_ParticleManager.UpdateParticleEnt.getDefaultInstance()) {
            updateParticleEnt_ =
              skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_ParticleManager.UpdateParticleEnt.newBuilder(updateParticleEnt_).mergeFrom(value).buildPartial();
          } else {
            updateParticleEnt_ = value;
          }
          onChanged();
        } else {
          updateParticleEntBuilder_.mergeFrom(value);
        }
        bitField0_ |= 0x00000800;
        return this;
      }
      /**
       * <code>optional .CDOTAUserMsg_ParticleManager.UpdateParticleEnt update_particle_ent = 12;</code>
       */
      public Builder clearUpdateParticleEnt() {
        if (updateParticleEntBuilder_ == null) {
          updateParticleEnt_ = skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_ParticleManager.UpdateParticleEnt.getDefaultInstance();
          onChanged();
        } else {
          updateParticleEntBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000800);
        return this;
      }
      /**
       * <code>optional .CDOTAUserMsg_ParticleManager.UpdateParticleEnt update_particle_ent = 12;</code>
       */
      public skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_ParticleManager.UpdateParticleEnt.Builder getUpdateParticleEntBuilder() {
        bitField0_ |= 0x00000800;
        onChanged();
        return getUpdateParticleEntFieldBuilder().getBuilder();
      }
      /**
       * <code>optional .CDOTAUserMsg_ParticleManager.UpdateParticleEnt update_particle_ent = 12;</code>
       */
      public skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_ParticleManager.UpdateParticleEntOrBuilder getUpdateParticleEntOrBuilder() {
        if (updateParticleEntBuilder_ != null) {
          return updateParticleEntBuilder_.getMessageOrBuilder();
        } else {
          return updateParticleEnt_;
        }
      }
      /**
       * <code>optional .CDOTAUserMsg_ParticleManager.UpdateParticleEnt update_particle_ent = 12;</code>
       */
      private com.google.protobuf.SingleFieldBuilder<
          skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_ParticleManager.UpdateParticleEnt, skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_ParticleManager.UpdateParticleEnt.Builder, skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_ParticleManager.UpdateParticleEntOrBuilder> 
          getUpdateParticleEntFieldBuilder() {
        if (updateParticleEntBuilder_ == null) {
          updateParticleEntBuilder_ = new com.google.protobuf.SingleFieldBuilder<
              skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_ParticleManager.UpdateParticleEnt, skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_ParticleManager.UpdateParticleEnt.Builder, skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_ParticleManager.UpdateParticleEntOrBuilder>(
                  getUpdateParticleEnt(),
                  getParentForChildren(),
                  isClean());
          updateParticleEnt_ = null;
        }
        return updateParticleEntBuilder_;
      }

      private skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_ParticleManager.UpdateParticleShouldDraw updateParticleShouldDraw_ = skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_ParticleManager.UpdateParticleShouldDraw.getDefaultInstance();
      private com.google.protobuf.SingleFieldBuilder<
          skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_ParticleManager.UpdateParticleShouldDraw, skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_ParticleManager.UpdateParticleShouldDraw.Builder, skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_ParticleManager.UpdateParticleShouldDrawOrBuilder> updateParticleShouldDrawBuilder_;
      /**
       * <code>optional .CDOTAUserMsg_ParticleManager.UpdateParticleShouldDraw update_particle_should_draw = 14;</code>
       */
      public boolean hasUpdateParticleShouldDraw() {
        return ((bitField0_ & 0x00001000) == 0x00001000);
      }
      /**
       * <code>optional .CDOTAUserMsg_ParticleManager.UpdateParticleShouldDraw update_particle_should_draw = 14;</code>
       */
      public skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_ParticleManager.UpdateParticleShouldDraw getUpdateParticleShouldDraw() {
        if (updateParticleShouldDrawBuilder_ == null) {
          return updateParticleShouldDraw_;
        } else {
          return updateParticleShouldDrawBuilder_.getMessage();
        }
      }
      /**
       * <code>optional .CDOTAUserMsg_ParticleManager.UpdateParticleShouldDraw update_particle_should_draw = 14;</code>
       */
      public Builder setUpdateParticleShouldDraw(skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_ParticleManager.UpdateParticleShouldDraw value) {
        if (updateParticleShouldDrawBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          updateParticleShouldDraw_ = value;
          onChanged();
        } else {
          updateParticleShouldDrawBuilder_.setMessage(value);
        }
        bitField0_ |= 0x00001000;
        return this;
      }
      /**
       * <code>optional .CDOTAUserMsg_ParticleManager.UpdateParticleShouldDraw update_particle_should_draw = 14;</code>
       */
      public Builder setUpdateParticleShouldDraw(
          skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_ParticleManager.UpdateParticleShouldDraw.Builder builderForValue) {
        if (updateParticleShouldDrawBuilder_ == null) {
          updateParticleShouldDraw_ = builderForValue.build();
          onChanged();
        } else {
          updateParticleShouldDrawBuilder_.setMessage(builderForValue.build());
        }
        bitField0_ |= 0x00001000;
        return this;
      }
      /**
       * <code>optional .CDOTAUserMsg_ParticleManager.UpdateParticleShouldDraw update_particle_should_draw = 14;</code>
       */
      public Builder mergeUpdateParticleShouldDraw(skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_ParticleManager.UpdateParticleShouldDraw value) {
        if (updateParticleShouldDrawBuilder_ == null) {
          if (((bitField0_ & 0x00001000) == 0x00001000) &&
              updateParticleShouldDraw_ != skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_ParticleManager.UpdateParticleShouldDraw.getDefaultInstance()) {
            updateParticleShouldDraw_ =
              skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_ParticleManager.UpdateParticleShouldDraw.newBuilder(updateParticleShouldDraw_).mergeFrom(value).buildPartial();
          } else {
            updateParticleShouldDraw_ = value;
          }
          onChanged();
        } else {
          updateParticleShouldDrawBuilder_.mergeFrom(value);
        }
        bitField0_ |= 0x00001000;
        return this;
      }
      /**
       * <code>optional .CDOTAUserMsg_ParticleManager.UpdateParticleShouldDraw update_particle_should_draw = 14;</code>
       */
      public Builder clearUpdateParticleShouldDraw() {
        if (updateParticleShouldDrawBuilder_ == null) {
          updateParticleShouldDraw_ = skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_ParticleManager.UpdateParticleShouldDraw.getDefaultInstance();
          onChanged();
        } else {
          updateParticleShouldDrawBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00001000);
        return this;
      }
      /**
       * <code>optional .CDOTAUserMsg_ParticleManager.UpdateParticleShouldDraw update_particle_should_draw = 14;</code>
       */
      public skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_ParticleManager.UpdateParticleShouldDraw.Builder getUpdateParticleShouldDrawBuilder() {
        bitField0_ |= 0x00001000;
        onChanged();
        return getUpdateParticleShouldDrawFieldBuilder().getBuilder();
      }
      /**
       * <code>optional .CDOTAUserMsg_ParticleManager.UpdateParticleShouldDraw update_particle_should_draw = 14;</code>
       */
      public skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_ParticleManager.UpdateParticleShouldDrawOrBuilder getUpdateParticleShouldDrawOrBuilder() {
        if (updateParticleShouldDrawBuilder_ != null) {
          return updateParticleShouldDrawBuilder_.getMessageOrBuilder();
        } else {
          return updateParticleShouldDraw_;
        }
      }
      /**
       * <code>optional .CDOTAUserMsg_ParticleManager.UpdateParticleShouldDraw update_particle_should_draw = 14;</code>
       */
      private com.google.protobuf.SingleFieldBuilder<
          skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_ParticleManager.UpdateParticleShouldDraw, skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_ParticleManager.UpdateParticleShouldDraw.Builder, skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_ParticleManager.UpdateParticleShouldDrawOrBuilder> 
          getUpdateParticleShouldDrawFieldBuilder() {
        if (updateParticleShouldDrawBuilder_ == null) {
          updateParticleShouldDrawBuilder_ = new com.google.protobuf.SingleFieldBuilder<
              skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_ParticleManager.UpdateParticleShouldDraw, skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_ParticleManager.UpdateParticleShouldDraw.Builder, skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_ParticleManager.UpdateParticleShouldDrawOrBuilder>(
                  getUpdateParticleShouldDraw(),
                  getParentForChildren(),
                  isClean());
          updateParticleShouldDraw_ = null;
        }
        return updateParticleShouldDrawBuilder_;
      }

      private skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_ParticleManager.UpdateParticleSetFrozen updateParticleSetFrozen_ = skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_ParticleManager.UpdateParticleSetFrozen.getDefaultInstance();
      private com.google.protobuf.SingleFieldBuilder<
          skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_ParticleManager.UpdateParticleSetFrozen, skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_ParticleManager.UpdateParticleSetFrozen.Builder, skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_ParticleManager.UpdateParticleSetFrozenOrBuilder> updateParticleSetFrozenBuilder_;
      /**
       * <code>optional .CDOTAUserMsg_ParticleManager.UpdateParticleSetFrozen update_particle_set_frozen = 15;</code>
       */
      public boolean hasUpdateParticleSetFrozen() {
        return ((bitField0_ & 0x00002000) == 0x00002000);
      }
      /**
       * <code>optional .CDOTAUserMsg_ParticleManager.UpdateParticleSetFrozen update_particle_set_frozen = 15;</code>
       */
      public skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_ParticleManager.UpdateParticleSetFrozen getUpdateParticleSetFrozen() {
        if (updateParticleSetFrozenBuilder_ == null) {
          return updateParticleSetFrozen_;
        } else {
          return updateParticleSetFrozenBuilder_.getMessage();
        }
      }
      /**
       * <code>optional .CDOTAUserMsg_ParticleManager.UpdateParticleSetFrozen update_particle_set_frozen = 15;</code>
       */
      public Builder setUpdateParticleSetFrozen(skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_ParticleManager.UpdateParticleSetFrozen value) {
        if (updateParticleSetFrozenBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          updateParticleSetFrozen_ = value;
          onChanged();
        } else {
          updateParticleSetFrozenBuilder_.setMessage(value);
        }
        bitField0_ |= 0x00002000;
        return this;
      }
      /**
       * <code>optional .CDOTAUserMsg_ParticleManager.UpdateParticleSetFrozen update_particle_set_frozen = 15;</code>
       */
      public Builder setUpdateParticleSetFrozen(
          skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_ParticleManager.UpdateParticleSetFrozen.Builder builderForValue) {
        if (updateParticleSetFrozenBuilder_ == null) {
          updateParticleSetFrozen_ = builderForValue.build();
          onChanged();
        } else {
          updateParticleSetFrozenBuilder_.setMessage(builderForValue.build());
        }
        bitField0_ |= 0x00002000;
        return this;
      }
      /**
       * <code>optional .CDOTAUserMsg_ParticleManager.UpdateParticleSetFrozen update_particle_set_frozen = 15;</code>
       */
      public Builder mergeUpdateParticleSetFrozen(skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_ParticleManager.UpdateParticleSetFrozen value) {
        if (updateParticleSetFrozenBuilder_ == null) {
          if (((bitField0_ & 0x00002000) == 0x00002000) &&
              updateParticleSetFrozen_ != skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_ParticleManager.UpdateParticleSetFrozen.getDefaultInstance()) {
            updateParticleSetFrozen_ =
              skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_ParticleManager.UpdateParticleSetFrozen.newBuilder(updateParticleSetFrozen_).mergeFrom(value).buildPartial();
          } else {
            updateParticleSetFrozen_ = value;
          }
          onChanged();
        } else {
          updateParticleSetFrozenBuilder_.mergeFrom(value);
        }
        bitField0_ |= 0x00002000;
        return this;
      }
      /**
       * <code>optional .CDOTAUserMsg_ParticleManager.UpdateParticleSetFrozen update_particle_set_frozen = 15;</code>
       */
      public Builder clearUpdateParticleSetFrozen() {
        if (updateParticleSetFrozenBuilder_ == null) {
          updateParticleSetFrozen_ = skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_ParticleManager.UpdateParticleSetFrozen.getDefaultInstance();
          onChanged();
        } else {
          updateParticleSetFrozenBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00002000);
        return this;
      }
      /**
       * <code>optional .CDOTAUserMsg_ParticleManager.UpdateParticleSetFrozen update_particle_set_frozen = 15;</code>
       */
      public skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_ParticleManager.UpdateParticleSetFrozen.Builder getUpdateParticleSetFrozenBuilder() {
        bitField0_ |= 0x00002000;
        onChanged();
        return getUpdateParticleSetFrozenFieldBuilder().getBuilder();
      }
      /**
       * <code>optional .CDOTAUserMsg_ParticleManager.UpdateParticleSetFrozen update_particle_set_frozen = 15;</code>
       */
      public skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_ParticleManager.UpdateParticleSetFrozenOrBuilder getUpdateParticleSetFrozenOrBuilder() {
        if (updateParticleSetFrozenBuilder_ != null) {
          return updateParticleSetFrozenBuilder_.getMessageOrBuilder();
        } else {
          return updateParticleSetFrozen_;
        }
      }
      /**
       * <code>optional .CDOTAUserMsg_ParticleManager.UpdateParticleSetFrozen update_particle_set_frozen = 15;</code>
       */
      private com.google.protobuf.SingleFieldBuilder<
          skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_ParticleManager.UpdateParticleSetFrozen, skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_ParticleManager.UpdateParticleSetFrozen.Builder, skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_ParticleManager.UpdateParticleSetFrozenOrBuilder> 
          getUpdateParticleSetFrozenFieldBuilder() {
        if (updateParticleSetFrozenBuilder_ == null) {
          updateParticleSetFrozenBuilder_ = new com.google.protobuf.SingleFieldBuilder<
              skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_ParticleManager.UpdateParticleSetFrozen, skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_ParticleManager.UpdateParticleSetFrozen.Builder, skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_ParticleManager.UpdateParticleSetFrozenOrBuilder>(
                  getUpdateParticleSetFrozen(),
                  getParentForChildren(),
                  isClean());
          updateParticleSetFrozen_ = null;
        }
        return updateParticleSetFrozenBuilder_;
      }

      private skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_ParticleManager.ChangeControlPointAttachment changeControlPointAttachment_ = skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_ParticleManager.ChangeControlPointAttachment.getDefaultInstance();
      private com.google.protobuf.SingleFieldBuilder<
          skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_ParticleManager.ChangeControlPointAttachment, skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_ParticleManager.ChangeControlPointAttachment.Builder, skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_ParticleManager.ChangeControlPointAttachmentOrBuilder> changeControlPointAttachmentBuilder_;
      /**
       * <code>optional .CDOTAUserMsg_ParticleManager.ChangeControlPointAttachment change_control_point_attachment = 16;</code>
       */
      public boolean hasChangeControlPointAttachment() {
        return ((bitField0_ & 0x00004000) == 0x00004000);
      }
      /**
       * <code>optional .CDOTAUserMsg_ParticleManager.ChangeControlPointAttachment change_control_point_attachment = 16;</code>
       */
      public skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_ParticleManager.ChangeControlPointAttachment getChangeControlPointAttachment() {
        if (changeControlPointAttachmentBuilder_ == null) {
          return changeControlPointAttachment_;
        } else {
          return changeControlPointAttachmentBuilder_.getMessage();
        }
      }
      /**
       * <code>optional .CDOTAUserMsg_ParticleManager.ChangeControlPointAttachment change_control_point_attachment = 16;</code>
       */
      public Builder setChangeControlPointAttachment(skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_ParticleManager.ChangeControlPointAttachment value) {
        if (changeControlPointAttachmentBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          changeControlPointAttachment_ = value;
          onChanged();
        } else {
          changeControlPointAttachmentBuilder_.setMessage(value);
        }
        bitField0_ |= 0x00004000;
        return this;
      }
      /**
       * <code>optional .CDOTAUserMsg_ParticleManager.ChangeControlPointAttachment change_control_point_attachment = 16;</code>
       */
      public Builder setChangeControlPointAttachment(
          skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_ParticleManager.ChangeControlPointAttachment.Builder builderForValue) {
        if (changeControlPointAttachmentBuilder_ == null) {
          changeControlPointAttachment_ = builderForValue.build();
          onChanged();
        } else {
          changeControlPointAttachmentBuilder_.setMessage(builderForValue.build());
        }
        bitField0_ |= 0x00004000;
        return this;
      }
      /**
       * <code>optional .CDOTAUserMsg_ParticleManager.ChangeControlPointAttachment change_control_point_attachment = 16;</code>
       */
      public Builder mergeChangeControlPointAttachment(skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_ParticleManager.ChangeControlPointAttachment value) {
        if (changeControlPointAttachmentBuilder_ == null) {
          if (((bitField0_ & 0x00004000) == 0x00004000) &&
              changeControlPointAttachment_ != skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_ParticleManager.ChangeControlPointAttachment.getDefaultInstance()) {
            changeControlPointAttachment_ =
              skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_ParticleManager.ChangeControlPointAttachment.newBuilder(changeControlPointAttachment_).mergeFrom(value).buildPartial();
          } else {
            changeControlPointAttachment_ = value;
          }
          onChanged();
        } else {
          changeControlPointAttachmentBuilder_.mergeFrom(value);
        }
        bitField0_ |= 0x00004000;
        return this;
      }
      /**
       * <code>optional .CDOTAUserMsg_ParticleManager.ChangeControlPointAttachment change_control_point_attachment = 16;</code>
       */
      public Builder clearChangeControlPointAttachment() {
        if (changeControlPointAttachmentBuilder_ == null) {
          changeControlPointAttachment_ = skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_ParticleManager.ChangeControlPointAttachment.getDefaultInstance();
          onChanged();
        } else {
          changeControlPointAttachmentBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00004000);
        return this;
      }
      /**
       * <code>optional .CDOTAUserMsg_ParticleManager.ChangeControlPointAttachment change_control_point_attachment = 16;</code>
       */
      public skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_ParticleManager.ChangeControlPointAttachment.Builder getChangeControlPointAttachmentBuilder() {
        bitField0_ |= 0x00004000;
        onChanged();
        return getChangeControlPointAttachmentFieldBuilder().getBuilder();
      }
      /**
       * <code>optional .CDOTAUserMsg_ParticleManager.ChangeControlPointAttachment change_control_point_attachment = 16;</code>
       */
      public skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_ParticleManager.ChangeControlPointAttachmentOrBuilder getChangeControlPointAttachmentOrBuilder() {
        if (changeControlPointAttachmentBuilder_ != null) {
          return changeControlPointAttachmentBuilder_.getMessageOrBuilder();
        } else {
          return changeControlPointAttachment_;
        }
      }
      /**
       * <code>optional .CDOTAUserMsg_ParticleManager.ChangeControlPointAttachment change_control_point_attachment = 16;</code>
       */
      private com.google.protobuf.SingleFieldBuilder<
          skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_ParticleManager.ChangeControlPointAttachment, skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_ParticleManager.ChangeControlPointAttachment.Builder, skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_ParticleManager.ChangeControlPointAttachmentOrBuilder> 
          getChangeControlPointAttachmentFieldBuilder() {
        if (changeControlPointAttachmentBuilder_ == null) {
          changeControlPointAttachmentBuilder_ = new com.google.protobuf.SingleFieldBuilder<
              skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_ParticleManager.ChangeControlPointAttachment, skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_ParticleManager.ChangeControlPointAttachment.Builder, skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_ParticleManager.ChangeControlPointAttachmentOrBuilder>(
                  getChangeControlPointAttachment(),
                  getParentForChildren(),
                  isClean());
          changeControlPointAttachment_ = null;
        }
        return changeControlPointAttachmentBuilder_;
      }

      private skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_ParticleManager.UpdateEntityPosition updateEntityPosition_ = skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_ParticleManager.UpdateEntityPosition.getDefaultInstance();
      private com.google.protobuf.SingleFieldBuilder<
          skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_ParticleManager.UpdateEntityPosition, skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_ParticleManager.UpdateEntityPosition.Builder, skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_ParticleManager.UpdateEntityPositionOrBuilder> updateEntityPositionBuilder_;
      /**
       * <code>optional .CDOTAUserMsg_ParticleManager.UpdateEntityPosition update_entity_position = 17;</code>
       */
      public boolean hasUpdateEntityPosition() {
        return ((bitField0_ & 0x00008000) == 0x00008000);
      }
      /**
       * <code>optional .CDOTAUserMsg_ParticleManager.UpdateEntityPosition update_entity_position = 17;</code>
       */
      public skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_ParticleManager.UpdateEntityPosition getUpdateEntityPosition() {
        if (updateEntityPositionBuilder_ == null) {
          return updateEntityPosition_;
        } else {
          return updateEntityPositionBuilder_.getMessage();
        }
      }
      /**
       * <code>optional .CDOTAUserMsg_ParticleManager.UpdateEntityPosition update_entity_position = 17;</code>
       */
      public Builder setUpdateEntityPosition(skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_ParticleManager.UpdateEntityPosition value) {
        if (updateEntityPositionBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          updateEntityPosition_ = value;
          onChanged();
        } else {
          updateEntityPositionBuilder_.setMessage(value);
        }
        bitField0_ |= 0x00008000;
        return this;
      }
      /**
       * <code>optional .CDOTAUserMsg_ParticleManager.UpdateEntityPosition update_entity_position = 17;</code>
       */
      public Builder setUpdateEntityPosition(
          skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_ParticleManager.UpdateEntityPosition.Builder builderForValue) {
        if (updateEntityPositionBuilder_ == null) {
          updateEntityPosition_ = builderForValue.build();
          onChanged();
        } else {
          updateEntityPositionBuilder_.setMessage(builderForValue.build());
        }
        bitField0_ |= 0x00008000;
        return this;
      }
      /**
       * <code>optional .CDOTAUserMsg_ParticleManager.UpdateEntityPosition update_entity_position = 17;</code>
       */
      public Builder mergeUpdateEntityPosition(skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_ParticleManager.UpdateEntityPosition value) {
        if (updateEntityPositionBuilder_ == null) {
          if (((bitField0_ & 0x00008000) == 0x00008000) &&
              updateEntityPosition_ != skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_ParticleManager.UpdateEntityPosition.getDefaultInstance()) {
            updateEntityPosition_ =
              skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_ParticleManager.UpdateEntityPosition.newBuilder(updateEntityPosition_).mergeFrom(value).buildPartial();
          } else {
            updateEntityPosition_ = value;
          }
          onChanged();
        } else {
          updateEntityPositionBuilder_.mergeFrom(value);
        }
        bitField0_ |= 0x00008000;
        return this;
      }
      /**
       * <code>optional .CDOTAUserMsg_ParticleManager.UpdateEntityPosition update_entity_position = 17;</code>
       */
      public Builder clearUpdateEntityPosition() {
        if (updateEntityPositionBuilder_ == null) {
          updateEntityPosition_ = skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_ParticleManager.UpdateEntityPosition.getDefaultInstance();
          onChanged();
        } else {
          updateEntityPositionBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00008000);
        return this;
      }
      /**
       * <code>optional .CDOTAUserMsg_ParticleManager.UpdateEntityPosition update_entity_position = 17;</code>
       */
      public skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_ParticleManager.UpdateEntityPosition.Builder getUpdateEntityPositionBuilder() {
        bitField0_ |= 0x00008000;
        onChanged();
        return getUpdateEntityPositionFieldBuilder().getBuilder();
      }
      /**
       * <code>optional .CDOTAUserMsg_ParticleManager.UpdateEntityPosition update_entity_position = 17;</code>
       */
      public skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_ParticleManager.UpdateEntityPositionOrBuilder getUpdateEntityPositionOrBuilder() {
        if (updateEntityPositionBuilder_ != null) {
          return updateEntityPositionBuilder_.getMessageOrBuilder();
        } else {
          return updateEntityPosition_;
        }
      }
      /**
       * <code>optional .CDOTAUserMsg_ParticleManager.UpdateEntityPosition update_entity_position = 17;</code>
       */
      private com.google.protobuf.SingleFieldBuilder<
          skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_ParticleManager.UpdateEntityPosition, skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_ParticleManager.UpdateEntityPosition.Builder, skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_ParticleManager.UpdateEntityPositionOrBuilder> 
          getUpdateEntityPositionFieldBuilder() {
        if (updateEntityPositionBuilder_ == null) {
          updateEntityPositionBuilder_ = new com.google.protobuf.SingleFieldBuilder<
              skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_ParticleManager.UpdateEntityPosition, skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_ParticleManager.UpdateEntityPosition.Builder, skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_ParticleManager.UpdateEntityPositionOrBuilder>(
                  getUpdateEntityPosition(),
                  getParentForChildren(),
                  isClean());
          updateEntityPosition_ = null;
        }
        return updateEntityPositionBuilder_;
      }

      // @@protoc_insertion_point(builder_scope:CDOTAUserMsg_ParticleManager)
    }

    static {
      defaultInstance = new CDOTAUserMsg_ParticleManager(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:CDOTAUserMsg_ParticleManager)
  }

  public interface CDOTAUserMsg_OverheadEventOrBuilder extends
      // @@protoc_insertion_point(interface_extends:CDOTAUserMsg_OverheadEvent)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>optional .DOTA_OVERHEAD_ALERT message_type = 1 [default = OVERHEAD_ALERT_GOLD];</code>
     */
    boolean hasMessageType();
    /**
     * <code>optional .DOTA_OVERHEAD_ALERT message_type = 1 [default = OVERHEAD_ALERT_GOLD];</code>
     */
    skadistats.clarity.wire.common.proto.DotaUserMessages.DOTA_OVERHEAD_ALERT getMessageType();

    /**
     * <code>optional int32 value = 2;</code>
     */
    boolean hasValue();
    /**
     * <code>optional int32 value = 2;</code>
     */
    int getValue();

    /**
     * <code>optional int32 target_player_entindex = 3;</code>
     */
    boolean hasTargetPlayerEntindex();
    /**
     * <code>optional int32 target_player_entindex = 3;</code>
     */
    int getTargetPlayerEntindex();

    /**
     * <code>optional int32 target_entindex = 4;</code>
     */
    boolean hasTargetEntindex();
    /**
     * <code>optional int32 target_entindex = 4;</code>
     */
    int getTargetEntindex();

    /**
     * <code>optional int32 source_player_entindex = 5;</code>
     */
    boolean hasSourcePlayerEntindex();
    /**
     * <code>optional int32 source_player_entindex = 5;</code>
     */
    int getSourcePlayerEntindex();
  }
  /**
   * Protobuf type {@code CDOTAUserMsg_OverheadEvent}
   */
  public static final class CDOTAUserMsg_OverheadEvent extends
      com.google.protobuf.GeneratedMessage implements
      // @@protoc_insertion_point(message_implements:CDOTAUserMsg_OverheadEvent)
      CDOTAUserMsg_OverheadEventOrBuilder {
    // Use CDOTAUserMsg_OverheadEvent.newBuilder() to construct.
    private CDOTAUserMsg_OverheadEvent(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private CDOTAUserMsg_OverheadEvent(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final CDOTAUserMsg_OverheadEvent defaultInstance;
    public static CDOTAUserMsg_OverheadEvent getDefaultInstance() {
      return defaultInstance;
    }

    public CDOTAUserMsg_OverheadEvent getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private CDOTAUserMsg_OverheadEvent(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 8: {
              int rawValue = input.readEnum();
              skadistats.clarity.wire.common.proto.DotaUserMessages.DOTA_OVERHEAD_ALERT value = skadistats.clarity.wire.common.proto.DotaUserMessages.DOTA_OVERHEAD_ALERT.valueOf(rawValue);
              if (value == null) {
                unknownFields.mergeVarintField(1, rawValue);
              } else {
                bitField0_ |= 0x00000001;
                messageType_ = value;
              }
              break;
            }
            case 16: {
              bitField0_ |= 0x00000002;
              value_ = input.readInt32();
              break;
            }
            case 24: {
              bitField0_ |= 0x00000004;
              targetPlayerEntindex_ = input.readInt32();
              break;
            }
            case 32: {
              bitField0_ |= 0x00000008;
              targetEntindex_ = input.readInt32();
              break;
            }
            case 40: {
              bitField0_ |= 0x00000010;
              sourcePlayerEntindex_ = input.readInt32();
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return skadistats.clarity.wire.common.proto.DotaUserMessages.internal_static_CDOTAUserMsg_OverheadEvent_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return skadistats.clarity.wire.common.proto.DotaUserMessages.internal_static_CDOTAUserMsg_OverheadEvent_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_OverheadEvent.class, skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_OverheadEvent.Builder.class);
    }

    public static com.google.protobuf.Parser<CDOTAUserMsg_OverheadEvent> PARSER =
        new com.google.protobuf.AbstractParser<CDOTAUserMsg_OverheadEvent>() {
      public CDOTAUserMsg_OverheadEvent parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new CDOTAUserMsg_OverheadEvent(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<CDOTAUserMsg_OverheadEvent> getParserForType() {
      return PARSER;
    }

    private int bitField0_;
    public static final int MESSAGE_TYPE_FIELD_NUMBER = 1;
    private skadistats.clarity.wire.common.proto.DotaUserMessages.DOTA_OVERHEAD_ALERT messageType_;
    /**
     * <code>optional .DOTA_OVERHEAD_ALERT message_type = 1 [default = OVERHEAD_ALERT_GOLD];</code>
     */
    public boolean hasMessageType() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>optional .DOTA_OVERHEAD_ALERT message_type = 1 [default = OVERHEAD_ALERT_GOLD];</code>
     */
    public skadistats.clarity.wire.common.proto.DotaUserMessages.DOTA_OVERHEAD_ALERT getMessageType() {
      return messageType_;
    }

    public static final int VALUE_FIELD_NUMBER = 2;
    private int value_;
    /**
     * <code>optional int32 value = 2;</code>
     */
    public boolean hasValue() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>optional int32 value = 2;</code>
     */
    public int getValue() {
      return value_;
    }

    public static final int TARGET_PLAYER_ENTINDEX_FIELD_NUMBER = 3;
    private int targetPlayerEntindex_;
    /**
     * <code>optional int32 target_player_entindex = 3;</code>
     */
    public boolean hasTargetPlayerEntindex() {
      return ((bitField0_ & 0x00000004) == 0x00000004);
    }
    /**
     * <code>optional int32 target_player_entindex = 3;</code>
     */
    public int getTargetPlayerEntindex() {
      return targetPlayerEntindex_;
    }

    public static final int TARGET_ENTINDEX_FIELD_NUMBER = 4;
    private int targetEntindex_;
    /**
     * <code>optional int32 target_entindex = 4;</code>
     */
    public boolean hasTargetEntindex() {
      return ((bitField0_ & 0x00000008) == 0x00000008);
    }
    /**
     * <code>optional int32 target_entindex = 4;</code>
     */
    public int getTargetEntindex() {
      return targetEntindex_;
    }

    public static final int SOURCE_PLAYER_ENTINDEX_FIELD_NUMBER = 5;
    private int sourcePlayerEntindex_;
    /**
     * <code>optional int32 source_player_entindex = 5;</code>
     */
    public boolean hasSourcePlayerEntindex() {
      return ((bitField0_ & 0x00000010) == 0x00000010);
    }
    /**
     * <code>optional int32 source_player_entindex = 5;</code>
     */
    public int getSourcePlayerEntindex() {
      return sourcePlayerEntindex_;
    }

    private void initFields() {
      messageType_ = skadistats.clarity.wire.common.proto.DotaUserMessages.DOTA_OVERHEAD_ALERT.OVERHEAD_ALERT_GOLD;
      value_ = 0;
      targetPlayerEntindex_ = 0;
      targetEntindex_ = 0;
      sourcePlayerEntindex_ = 0;
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeEnum(1, messageType_.getNumber());
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeInt32(2, value_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        output.writeInt32(3, targetPlayerEntindex_);
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        output.writeInt32(4, targetEntindex_);
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        output.writeInt32(5, sourcePlayerEntindex_);
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeEnumSize(1, messageType_.getNumber());
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(2, value_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(3, targetPlayerEntindex_);
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(4, targetEntindex_);
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(5, sourcePlayerEntindex_);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_OverheadEvent parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_OverheadEvent parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_OverheadEvent parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_OverheadEvent parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_OverheadEvent parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_OverheadEvent parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_OverheadEvent parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_OverheadEvent parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_OverheadEvent parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_OverheadEvent parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_OverheadEvent prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code CDOTAUserMsg_OverheadEvent}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:CDOTAUserMsg_OverheadEvent)
        skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_OverheadEventOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return skadistats.clarity.wire.common.proto.DotaUserMessages.internal_static_CDOTAUserMsg_OverheadEvent_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return skadistats.clarity.wire.common.proto.DotaUserMessages.internal_static_CDOTAUserMsg_OverheadEvent_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_OverheadEvent.class, skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_OverheadEvent.Builder.class);
      }

      // Construct using skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_OverheadEvent.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        messageType_ = skadistats.clarity.wire.common.proto.DotaUserMessages.DOTA_OVERHEAD_ALERT.OVERHEAD_ALERT_GOLD;
        bitField0_ = (bitField0_ & ~0x00000001);
        value_ = 0;
        bitField0_ = (bitField0_ & ~0x00000002);
        targetPlayerEntindex_ = 0;
        bitField0_ = (bitField0_ & ~0x00000004);
        targetEntindex_ = 0;
        bitField0_ = (bitField0_ & ~0x00000008);
        sourcePlayerEntindex_ = 0;
        bitField0_ = (bitField0_ & ~0x00000010);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return skadistats.clarity.wire.common.proto.DotaUserMessages.internal_static_CDOTAUserMsg_OverheadEvent_descriptor;
      }

      public skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_OverheadEvent getDefaultInstanceForType() {
        return skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_OverheadEvent.getDefaultInstance();
      }

      public skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_OverheadEvent build() {
        skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_OverheadEvent result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_OverheadEvent buildPartial() {
        skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_OverheadEvent result = new skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_OverheadEvent(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.messageType_ = messageType_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.value_ = value_;
        if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
          to_bitField0_ |= 0x00000004;
        }
        result.targetPlayerEntindex_ = targetPlayerEntindex_;
        if (((from_bitField0_ & 0x00000008) == 0x00000008)) {
          to_bitField0_ |= 0x00000008;
        }
        result.targetEntindex_ = targetEntindex_;
        if (((from_bitField0_ & 0x00000010) == 0x00000010)) {
          to_bitField0_ |= 0x00000010;
        }
        result.sourcePlayerEntindex_ = sourcePlayerEntindex_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_OverheadEvent) {
          return mergeFrom((skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_OverheadEvent)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_OverheadEvent other) {
        if (other == skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_OverheadEvent.getDefaultInstance()) return this;
        if (other.hasMessageType()) {
          setMessageType(other.getMessageType());
        }
        if (other.hasValue()) {
          setValue(other.getValue());
        }
        if (other.hasTargetPlayerEntindex()) {
          setTargetPlayerEntindex(other.getTargetPlayerEntindex());
        }
        if (other.hasTargetEntindex()) {
          setTargetEntindex(other.getTargetEntindex());
        }
        if (other.hasSourcePlayerEntindex()) {
          setSourcePlayerEntindex(other.getSourcePlayerEntindex());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_OverheadEvent parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_OverheadEvent) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private skadistats.clarity.wire.common.proto.DotaUserMessages.DOTA_OVERHEAD_ALERT messageType_ = skadistats.clarity.wire.common.proto.DotaUserMessages.DOTA_OVERHEAD_ALERT.OVERHEAD_ALERT_GOLD;
      /**
       * <code>optional .DOTA_OVERHEAD_ALERT message_type = 1 [default = OVERHEAD_ALERT_GOLD];</code>
       */
      public boolean hasMessageType() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>optional .DOTA_OVERHEAD_ALERT message_type = 1 [default = OVERHEAD_ALERT_GOLD];</code>
       */
      public skadistats.clarity.wire.common.proto.DotaUserMessages.DOTA_OVERHEAD_ALERT getMessageType() {
        return messageType_;
      }
      /**
       * <code>optional .DOTA_OVERHEAD_ALERT message_type = 1 [default = OVERHEAD_ALERT_GOLD];</code>
       */
      public Builder setMessageType(skadistats.clarity.wire.common.proto.DotaUserMessages.DOTA_OVERHEAD_ALERT value) {
        if (value == null) {
          throw new NullPointerException();
        }
        bitField0_ |= 0x00000001;
        messageType_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional .DOTA_OVERHEAD_ALERT message_type = 1 [default = OVERHEAD_ALERT_GOLD];</code>
       */
      public Builder clearMessageType() {
        bitField0_ = (bitField0_ & ~0x00000001);
        messageType_ = skadistats.clarity.wire.common.proto.DotaUserMessages.DOTA_OVERHEAD_ALERT.OVERHEAD_ALERT_GOLD;
        onChanged();
        return this;
      }

      private int value_ ;
      /**
       * <code>optional int32 value = 2;</code>
       */
      public boolean hasValue() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>optional int32 value = 2;</code>
       */
      public int getValue() {
        return value_;
      }
      /**
       * <code>optional int32 value = 2;</code>
       */
      public Builder setValue(int value) {
        bitField0_ |= 0x00000002;
        value_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 value = 2;</code>
       */
      public Builder clearValue() {
        bitField0_ = (bitField0_ & ~0x00000002);
        value_ = 0;
        onChanged();
        return this;
      }

      private int targetPlayerEntindex_ ;
      /**
       * <code>optional int32 target_player_entindex = 3;</code>
       */
      public boolean hasTargetPlayerEntindex() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }
      /**
       * <code>optional int32 target_player_entindex = 3;</code>
       */
      public int getTargetPlayerEntindex() {
        return targetPlayerEntindex_;
      }
      /**
       * <code>optional int32 target_player_entindex = 3;</code>
       */
      public Builder setTargetPlayerEntindex(int value) {
        bitField0_ |= 0x00000004;
        targetPlayerEntindex_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 target_player_entindex = 3;</code>
       */
      public Builder clearTargetPlayerEntindex() {
        bitField0_ = (bitField0_ & ~0x00000004);
        targetPlayerEntindex_ = 0;
        onChanged();
        return this;
      }

      private int targetEntindex_ ;
      /**
       * <code>optional int32 target_entindex = 4;</code>
       */
      public boolean hasTargetEntindex() {
        return ((bitField0_ & 0x00000008) == 0x00000008);
      }
      /**
       * <code>optional int32 target_entindex = 4;</code>
       */
      public int getTargetEntindex() {
        return targetEntindex_;
      }
      /**
       * <code>optional int32 target_entindex = 4;</code>
       */
      public Builder setTargetEntindex(int value) {
        bitField0_ |= 0x00000008;
        targetEntindex_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 target_entindex = 4;</code>
       */
      public Builder clearTargetEntindex() {
        bitField0_ = (bitField0_ & ~0x00000008);
        targetEntindex_ = 0;
        onChanged();
        return this;
      }

      private int sourcePlayerEntindex_ ;
      /**
       * <code>optional int32 source_player_entindex = 5;</code>
       */
      public boolean hasSourcePlayerEntindex() {
        return ((bitField0_ & 0x00000010) == 0x00000010);
      }
      /**
       * <code>optional int32 source_player_entindex = 5;</code>
       */
      public int getSourcePlayerEntindex() {
        return sourcePlayerEntindex_;
      }
      /**
       * <code>optional int32 source_player_entindex = 5;</code>
       */
      public Builder setSourcePlayerEntindex(int value) {
        bitField0_ |= 0x00000010;
        sourcePlayerEntindex_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 source_player_entindex = 5;</code>
       */
      public Builder clearSourcePlayerEntindex() {
        bitField0_ = (bitField0_ & ~0x00000010);
        sourcePlayerEntindex_ = 0;
        onChanged();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:CDOTAUserMsg_OverheadEvent)
    }

    static {
      defaultInstance = new CDOTAUserMsg_OverheadEvent(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:CDOTAUserMsg_OverheadEvent)
  }

  public interface CDOTAUserMsg_TutorialTipInfoOrBuilder extends
      // @@protoc_insertion_point(interface_extends:CDOTAUserMsg_TutorialTipInfo)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>optional string name = 1;</code>
     */
    boolean hasName();
    /**
     * <code>optional string name = 1;</code>
     */
    java.lang.String getName();
    /**
     * <code>optional string name = 1;</code>
     */
    com.google.protobuf.ByteString
        getNameBytes();

    /**
     * <code>optional int32 progress = 2;</code>
     */
    boolean hasProgress();
    /**
     * <code>optional int32 progress = 2;</code>
     */
    int getProgress();
  }
  /**
   * Protobuf type {@code CDOTAUserMsg_TutorialTipInfo}
   */
  public static final class CDOTAUserMsg_TutorialTipInfo extends
      com.google.protobuf.GeneratedMessage implements
      // @@protoc_insertion_point(message_implements:CDOTAUserMsg_TutorialTipInfo)
      CDOTAUserMsg_TutorialTipInfoOrBuilder {
    // Use CDOTAUserMsg_TutorialTipInfo.newBuilder() to construct.
    private CDOTAUserMsg_TutorialTipInfo(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private CDOTAUserMsg_TutorialTipInfo(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final CDOTAUserMsg_TutorialTipInfo defaultInstance;
    public static CDOTAUserMsg_TutorialTipInfo getDefaultInstance() {
      return defaultInstance;
    }

    public CDOTAUserMsg_TutorialTipInfo getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private CDOTAUserMsg_TutorialTipInfo(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 10: {
              com.google.protobuf.ByteString bs = input.readBytes();
              bitField0_ |= 0x00000001;
              name_ = bs;
              break;
            }
            case 16: {
              bitField0_ |= 0x00000002;
              progress_ = input.readInt32();
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return skadistats.clarity.wire.common.proto.DotaUserMessages.internal_static_CDOTAUserMsg_TutorialTipInfo_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return skadistats.clarity.wire.common.proto.DotaUserMessages.internal_static_CDOTAUserMsg_TutorialTipInfo_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_TutorialTipInfo.class, skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_TutorialTipInfo.Builder.class);
    }

    public static com.google.protobuf.Parser<CDOTAUserMsg_TutorialTipInfo> PARSER =
        new com.google.protobuf.AbstractParser<CDOTAUserMsg_TutorialTipInfo>() {
      public CDOTAUserMsg_TutorialTipInfo parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new CDOTAUserMsg_TutorialTipInfo(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<CDOTAUserMsg_TutorialTipInfo> getParserForType() {
      return PARSER;
    }

    private int bitField0_;
    public static final int NAME_FIELD_NUMBER = 1;
    private java.lang.Object name_;
    /**
     * <code>optional string name = 1;</code>
     */
    public boolean hasName() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>optional string name = 1;</code>
     */
    public java.lang.String getName() {
      java.lang.Object ref = name_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          name_ = s;
        }
        return s;
      }
    }
    /**
     * <code>optional string name = 1;</code>
     */
    public com.google.protobuf.ByteString
        getNameBytes() {
      java.lang.Object ref = name_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        name_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int PROGRESS_FIELD_NUMBER = 2;
    private int progress_;
    /**
     * <code>optional int32 progress = 2;</code>
     */
    public boolean hasProgress() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>optional int32 progress = 2;</code>
     */
    public int getProgress() {
      return progress_;
    }

    private void initFields() {
      name_ = "";
      progress_ = 0;
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeBytes(1, getNameBytes());
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeInt32(2, progress_);
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(1, getNameBytes());
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(2, progress_);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_TutorialTipInfo parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_TutorialTipInfo parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_TutorialTipInfo parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_TutorialTipInfo parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_TutorialTipInfo parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_TutorialTipInfo parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_TutorialTipInfo parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_TutorialTipInfo parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_TutorialTipInfo parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_TutorialTipInfo parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_TutorialTipInfo prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code CDOTAUserMsg_TutorialTipInfo}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:CDOTAUserMsg_TutorialTipInfo)
        skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_TutorialTipInfoOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return skadistats.clarity.wire.common.proto.DotaUserMessages.internal_static_CDOTAUserMsg_TutorialTipInfo_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return skadistats.clarity.wire.common.proto.DotaUserMessages.internal_static_CDOTAUserMsg_TutorialTipInfo_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_TutorialTipInfo.class, skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_TutorialTipInfo.Builder.class);
      }

      // Construct using skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_TutorialTipInfo.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        name_ = "";
        bitField0_ = (bitField0_ & ~0x00000001);
        progress_ = 0;
        bitField0_ = (bitField0_ & ~0x00000002);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return skadistats.clarity.wire.common.proto.DotaUserMessages.internal_static_CDOTAUserMsg_TutorialTipInfo_descriptor;
      }

      public skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_TutorialTipInfo getDefaultInstanceForType() {
        return skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_TutorialTipInfo.getDefaultInstance();
      }

      public skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_TutorialTipInfo build() {
        skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_TutorialTipInfo result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_TutorialTipInfo buildPartial() {
        skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_TutorialTipInfo result = new skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_TutorialTipInfo(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.name_ = name_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.progress_ = progress_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_TutorialTipInfo) {
          return mergeFrom((skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_TutorialTipInfo)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_TutorialTipInfo other) {
        if (other == skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_TutorialTipInfo.getDefaultInstance()) return this;
        if (other.hasName()) {
          bitField0_ |= 0x00000001;
          name_ = other.name_;
          onChanged();
        }
        if (other.hasProgress()) {
          setProgress(other.getProgress());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_TutorialTipInfo parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_TutorialTipInfo) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private java.lang.Object name_ = "";
      /**
       * <code>optional string name = 1;</code>
       */
      public boolean hasName() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>optional string name = 1;</code>
       */
      public java.lang.String getName() {
        java.lang.Object ref = name_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          if (bs.isValidUtf8()) {
            name_ = s;
          }
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>optional string name = 1;</code>
       */
      public com.google.protobuf.ByteString
          getNameBytes() {
        java.lang.Object ref = name_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          name_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>optional string name = 1;</code>
       */
      public Builder setName(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000001;
        name_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional string name = 1;</code>
       */
      public Builder clearName() {
        bitField0_ = (bitField0_ & ~0x00000001);
        name_ = getDefaultInstance().getName();
        onChanged();
        return this;
      }
      /**
       * <code>optional string name = 1;</code>
       */
      public Builder setNameBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000001;
        name_ = value;
        onChanged();
        return this;
      }

      private int progress_ ;
      /**
       * <code>optional int32 progress = 2;</code>
       */
      public boolean hasProgress() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>optional int32 progress = 2;</code>
       */
      public int getProgress() {
        return progress_;
      }
      /**
       * <code>optional int32 progress = 2;</code>
       */
      public Builder setProgress(int value) {
        bitField0_ |= 0x00000002;
        progress_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 progress = 2;</code>
       */
      public Builder clearProgress() {
        bitField0_ = (bitField0_ & ~0x00000002);
        progress_ = 0;
        onChanged();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:CDOTAUserMsg_TutorialTipInfo)
    }

    static {
      defaultInstance = new CDOTAUserMsg_TutorialTipInfo(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:CDOTAUserMsg_TutorialTipInfo)
  }

  public interface CDOTAUserMsg_TutorialFinishOrBuilder extends
      // @@protoc_insertion_point(interface_extends:CDOTAUserMsg_TutorialFinish)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>optional string heading = 1;</code>
     */
    boolean hasHeading();
    /**
     * <code>optional string heading = 1;</code>
     */
    java.lang.String getHeading();
    /**
     * <code>optional string heading = 1;</code>
     */
    com.google.protobuf.ByteString
        getHeadingBytes();

    /**
     * <code>optional string emblem = 2;</code>
     */
    boolean hasEmblem();
    /**
     * <code>optional string emblem = 2;</code>
     */
    java.lang.String getEmblem();
    /**
     * <code>optional string emblem = 2;</code>
     */
    com.google.protobuf.ByteString
        getEmblemBytes();

    /**
     * <code>optional string body = 3;</code>
     */
    boolean hasBody();
    /**
     * <code>optional string body = 3;</code>
     */
    java.lang.String getBody();
    /**
     * <code>optional string body = 3;</code>
     */
    com.google.protobuf.ByteString
        getBodyBytes();

    /**
     * <code>optional bool success = 4;</code>
     */
    boolean hasSuccess();
    /**
     * <code>optional bool success = 4;</code>
     */
    boolean getSuccess();
  }
  /**
   * Protobuf type {@code CDOTAUserMsg_TutorialFinish}
   */
  public static final class CDOTAUserMsg_TutorialFinish extends
      com.google.protobuf.GeneratedMessage implements
      // @@protoc_insertion_point(message_implements:CDOTAUserMsg_TutorialFinish)
      CDOTAUserMsg_TutorialFinishOrBuilder {
    // Use CDOTAUserMsg_TutorialFinish.newBuilder() to construct.
    private CDOTAUserMsg_TutorialFinish(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private CDOTAUserMsg_TutorialFinish(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final CDOTAUserMsg_TutorialFinish defaultInstance;
    public static CDOTAUserMsg_TutorialFinish getDefaultInstance() {
      return defaultInstance;
    }

    public CDOTAUserMsg_TutorialFinish getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private CDOTAUserMsg_TutorialFinish(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 10: {
              com.google.protobuf.ByteString bs = input.readBytes();
              bitField0_ |= 0x00000001;
              heading_ = bs;
              break;
            }
            case 18: {
              com.google.protobuf.ByteString bs = input.readBytes();
              bitField0_ |= 0x00000002;
              emblem_ = bs;
              break;
            }
            case 26: {
              com.google.protobuf.ByteString bs = input.readBytes();
              bitField0_ |= 0x00000004;
              body_ = bs;
              break;
            }
            case 32: {
              bitField0_ |= 0x00000008;
              success_ = input.readBool();
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return skadistats.clarity.wire.common.proto.DotaUserMessages.internal_static_CDOTAUserMsg_TutorialFinish_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return skadistats.clarity.wire.common.proto.DotaUserMessages.internal_static_CDOTAUserMsg_TutorialFinish_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_TutorialFinish.class, skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_TutorialFinish.Builder.class);
    }

    public static com.google.protobuf.Parser<CDOTAUserMsg_TutorialFinish> PARSER =
        new com.google.protobuf.AbstractParser<CDOTAUserMsg_TutorialFinish>() {
      public CDOTAUserMsg_TutorialFinish parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new CDOTAUserMsg_TutorialFinish(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<CDOTAUserMsg_TutorialFinish> getParserForType() {
      return PARSER;
    }

    private int bitField0_;
    public static final int HEADING_FIELD_NUMBER = 1;
    private java.lang.Object heading_;
    /**
     * <code>optional string heading = 1;</code>
     */
    public boolean hasHeading() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>optional string heading = 1;</code>
     */
    public java.lang.String getHeading() {
      java.lang.Object ref = heading_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          heading_ = s;
        }
        return s;
      }
    }
    /**
     * <code>optional string heading = 1;</code>
     */
    public com.google.protobuf.ByteString
        getHeadingBytes() {
      java.lang.Object ref = heading_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        heading_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int EMBLEM_FIELD_NUMBER = 2;
    private java.lang.Object emblem_;
    /**
     * <code>optional string emblem = 2;</code>
     */
    public boolean hasEmblem() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>optional string emblem = 2;</code>
     */
    public java.lang.String getEmblem() {
      java.lang.Object ref = emblem_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          emblem_ = s;
        }
        return s;
      }
    }
    /**
     * <code>optional string emblem = 2;</code>
     */
    public com.google.protobuf.ByteString
        getEmblemBytes() {
      java.lang.Object ref = emblem_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        emblem_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int BODY_FIELD_NUMBER = 3;
    private java.lang.Object body_;
    /**
     * <code>optional string body = 3;</code>
     */
    public boolean hasBody() {
      return ((bitField0_ & 0x00000004) == 0x00000004);
    }
    /**
     * <code>optional string body = 3;</code>
     */
    public java.lang.String getBody() {
      java.lang.Object ref = body_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          body_ = s;
        }
        return s;
      }
    }
    /**
     * <code>optional string body = 3;</code>
     */
    public com.google.protobuf.ByteString
        getBodyBytes() {
      java.lang.Object ref = body_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        body_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int SUCCESS_FIELD_NUMBER = 4;
    private boolean success_;
    /**
     * <code>optional bool success = 4;</code>
     */
    public boolean hasSuccess() {
      return ((bitField0_ & 0x00000008) == 0x00000008);
    }
    /**
     * <code>optional bool success = 4;</code>
     */
    public boolean getSuccess() {
      return success_;
    }

    private void initFields() {
      heading_ = "";
      emblem_ = "";
      body_ = "";
      success_ = false;
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeBytes(1, getHeadingBytes());
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeBytes(2, getEmblemBytes());
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        output.writeBytes(3, getBodyBytes());
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        output.writeBool(4, success_);
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(1, getHeadingBytes());
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(2, getEmblemBytes());
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(3, getBodyBytes());
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBoolSize(4, success_);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_TutorialFinish parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_TutorialFinish parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_TutorialFinish parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_TutorialFinish parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_TutorialFinish parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_TutorialFinish parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_TutorialFinish parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_TutorialFinish parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_TutorialFinish parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_TutorialFinish parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_TutorialFinish prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code CDOTAUserMsg_TutorialFinish}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:CDOTAUserMsg_TutorialFinish)
        skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_TutorialFinishOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return skadistats.clarity.wire.common.proto.DotaUserMessages.internal_static_CDOTAUserMsg_TutorialFinish_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return skadistats.clarity.wire.common.proto.DotaUserMessages.internal_static_CDOTAUserMsg_TutorialFinish_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_TutorialFinish.class, skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_TutorialFinish.Builder.class);
      }

      // Construct using skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_TutorialFinish.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        heading_ = "";
        bitField0_ = (bitField0_ & ~0x00000001);
        emblem_ = "";
        bitField0_ = (bitField0_ & ~0x00000002);
        body_ = "";
        bitField0_ = (bitField0_ & ~0x00000004);
        success_ = false;
        bitField0_ = (bitField0_ & ~0x00000008);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return skadistats.clarity.wire.common.proto.DotaUserMessages.internal_static_CDOTAUserMsg_TutorialFinish_descriptor;
      }

      public skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_TutorialFinish getDefaultInstanceForType() {
        return skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_TutorialFinish.getDefaultInstance();
      }

      public skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_TutorialFinish build() {
        skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_TutorialFinish result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_TutorialFinish buildPartial() {
        skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_TutorialFinish result = new skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_TutorialFinish(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.heading_ = heading_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.emblem_ = emblem_;
        if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
          to_bitField0_ |= 0x00000004;
        }
        result.body_ = body_;
        if (((from_bitField0_ & 0x00000008) == 0x00000008)) {
          to_bitField0_ |= 0x00000008;
        }
        result.success_ = success_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_TutorialFinish) {
          return mergeFrom((skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_TutorialFinish)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_TutorialFinish other) {
        if (other == skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_TutorialFinish.getDefaultInstance()) return this;
        if (other.hasHeading()) {
          bitField0_ |= 0x00000001;
          heading_ = other.heading_;
          onChanged();
        }
        if (other.hasEmblem()) {
          bitField0_ |= 0x00000002;
          emblem_ = other.emblem_;
          onChanged();
        }
        if (other.hasBody()) {
          bitField0_ |= 0x00000004;
          body_ = other.body_;
          onChanged();
        }
        if (other.hasSuccess()) {
          setSuccess(other.getSuccess());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_TutorialFinish parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_TutorialFinish) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private java.lang.Object heading_ = "";
      /**
       * <code>optional string heading = 1;</code>
       */
      public boolean hasHeading() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>optional string heading = 1;</code>
       */
      public java.lang.String getHeading() {
        java.lang.Object ref = heading_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          if (bs.isValidUtf8()) {
            heading_ = s;
          }
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>optional string heading = 1;</code>
       */
      public com.google.protobuf.ByteString
          getHeadingBytes() {
        java.lang.Object ref = heading_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          heading_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>optional string heading = 1;</code>
       */
      public Builder setHeading(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000001;
        heading_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional string heading = 1;</code>
       */
      public Builder clearHeading() {
        bitField0_ = (bitField0_ & ~0x00000001);
        heading_ = getDefaultInstance().getHeading();
        onChanged();
        return this;
      }
      /**
       * <code>optional string heading = 1;</code>
       */
      public Builder setHeadingBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000001;
        heading_ = value;
        onChanged();
        return this;
      }

      private java.lang.Object emblem_ = "";
      /**
       * <code>optional string emblem = 2;</code>
       */
      public boolean hasEmblem() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>optional string emblem = 2;</code>
       */
      public java.lang.String getEmblem() {
        java.lang.Object ref = emblem_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          if (bs.isValidUtf8()) {
            emblem_ = s;
          }
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>optional string emblem = 2;</code>
       */
      public com.google.protobuf.ByteString
          getEmblemBytes() {
        java.lang.Object ref = emblem_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          emblem_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>optional string emblem = 2;</code>
       */
      public Builder setEmblem(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000002;
        emblem_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional string emblem = 2;</code>
       */
      public Builder clearEmblem() {
        bitField0_ = (bitField0_ & ~0x00000002);
        emblem_ = getDefaultInstance().getEmblem();
        onChanged();
        return this;
      }
      /**
       * <code>optional string emblem = 2;</code>
       */
      public Builder setEmblemBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000002;
        emblem_ = value;
        onChanged();
        return this;
      }

      private java.lang.Object body_ = "";
      /**
       * <code>optional string body = 3;</code>
       */
      public boolean hasBody() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }
      /**
       * <code>optional string body = 3;</code>
       */
      public java.lang.String getBody() {
        java.lang.Object ref = body_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          if (bs.isValidUtf8()) {
            body_ = s;
          }
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>optional string body = 3;</code>
       */
      public com.google.protobuf.ByteString
          getBodyBytes() {
        java.lang.Object ref = body_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          body_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>optional string body = 3;</code>
       */
      public Builder setBody(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000004;
        body_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional string body = 3;</code>
       */
      public Builder clearBody() {
        bitField0_ = (bitField0_ & ~0x00000004);
        body_ = getDefaultInstance().getBody();
        onChanged();
        return this;
      }
      /**
       * <code>optional string body = 3;</code>
       */
      public Builder setBodyBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000004;
        body_ = value;
        onChanged();
        return this;
      }

      private boolean success_ ;
      /**
       * <code>optional bool success = 4;</code>
       */
      public boolean hasSuccess() {
        return ((bitField0_ & 0x00000008) == 0x00000008);
      }
      /**
       * <code>optional bool success = 4;</code>
       */
      public boolean getSuccess() {
        return success_;
      }
      /**
       * <code>optional bool success = 4;</code>
       */
      public Builder setSuccess(boolean value) {
        bitField0_ |= 0x00000008;
        success_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional bool success = 4;</code>
       */
      public Builder clearSuccess() {
        bitField0_ = (bitField0_ & ~0x00000008);
        success_ = false;
        onChanged();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:CDOTAUserMsg_TutorialFinish)
    }

    static {
      defaultInstance = new CDOTAUserMsg_TutorialFinish(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:CDOTAUserMsg_TutorialFinish)
  }

  public interface CDOTAUserMsg_TutorialMinimapPositionOrBuilder extends
      // @@protoc_insertion_point(interface_extends:CDOTAUserMsg_TutorialMinimapPosition)
      com.google.protobuf.MessageOrBuilder {
  }
  /**
   * Protobuf type {@code CDOTAUserMsg_TutorialMinimapPosition}
   */
  public static final class CDOTAUserMsg_TutorialMinimapPosition extends
      com.google.protobuf.GeneratedMessage implements
      // @@protoc_insertion_point(message_implements:CDOTAUserMsg_TutorialMinimapPosition)
      CDOTAUserMsg_TutorialMinimapPositionOrBuilder {
    // Use CDOTAUserMsg_TutorialMinimapPosition.newBuilder() to construct.
    private CDOTAUserMsg_TutorialMinimapPosition(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private CDOTAUserMsg_TutorialMinimapPosition(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final CDOTAUserMsg_TutorialMinimapPosition defaultInstance;
    public static CDOTAUserMsg_TutorialMinimapPosition getDefaultInstance() {
      return defaultInstance;
    }

    public CDOTAUserMsg_TutorialMinimapPosition getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private CDOTAUserMsg_TutorialMinimapPosition(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return skadistats.clarity.wire.common.proto.DotaUserMessages.internal_static_CDOTAUserMsg_TutorialMinimapPosition_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return skadistats.clarity.wire.common.proto.DotaUserMessages.internal_static_CDOTAUserMsg_TutorialMinimapPosition_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_TutorialMinimapPosition.class, skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_TutorialMinimapPosition.Builder.class);
    }

    public static com.google.protobuf.Parser<CDOTAUserMsg_TutorialMinimapPosition> PARSER =
        new com.google.protobuf.AbstractParser<CDOTAUserMsg_TutorialMinimapPosition>() {
      public CDOTAUserMsg_TutorialMinimapPosition parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new CDOTAUserMsg_TutorialMinimapPosition(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<CDOTAUserMsg_TutorialMinimapPosition> getParserForType() {
      return PARSER;
    }

    private void initFields() {
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_TutorialMinimapPosition parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_TutorialMinimapPosition parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_TutorialMinimapPosition parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_TutorialMinimapPosition parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_TutorialMinimapPosition parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_TutorialMinimapPosition parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_TutorialMinimapPosition parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_TutorialMinimapPosition parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_TutorialMinimapPosition parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_TutorialMinimapPosition parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_TutorialMinimapPosition prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code CDOTAUserMsg_TutorialMinimapPosition}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:CDOTAUserMsg_TutorialMinimapPosition)
        skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_TutorialMinimapPositionOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return skadistats.clarity.wire.common.proto.DotaUserMessages.internal_static_CDOTAUserMsg_TutorialMinimapPosition_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return skadistats.clarity.wire.common.proto.DotaUserMessages.internal_static_CDOTAUserMsg_TutorialMinimapPosition_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_TutorialMinimapPosition.class, skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_TutorialMinimapPosition.Builder.class);
      }

      // Construct using skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_TutorialMinimapPosition.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return skadistats.clarity.wire.common.proto.DotaUserMessages.internal_static_CDOTAUserMsg_TutorialMinimapPosition_descriptor;
      }

      public skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_TutorialMinimapPosition getDefaultInstanceForType() {
        return skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_TutorialMinimapPosition.getDefaultInstance();
      }

      public skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_TutorialMinimapPosition build() {
        skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_TutorialMinimapPosition result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_TutorialMinimapPosition buildPartial() {
        skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_TutorialMinimapPosition result = new skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_TutorialMinimapPosition(this);
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_TutorialMinimapPosition) {
          return mergeFrom((skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_TutorialMinimapPosition)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_TutorialMinimapPosition other) {
        if (other == skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_TutorialMinimapPosition.getDefaultInstance()) return this;
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_TutorialMinimapPosition parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_TutorialMinimapPosition) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }

      // @@protoc_insertion_point(builder_scope:CDOTAUserMsg_TutorialMinimapPosition)
    }

    static {
      defaultInstance = new CDOTAUserMsg_TutorialMinimapPosition(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:CDOTAUserMsg_TutorialMinimapPosition)
  }

  public interface CDOTAUserMsg_SendGenericToolTipOrBuilder extends
      // @@protoc_insertion_point(interface_extends:CDOTAUserMsg_SendGenericToolTip)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>optional string title = 1;</code>
     */
    boolean hasTitle();
    /**
     * <code>optional string title = 1;</code>
     */
    java.lang.String getTitle();
    /**
     * <code>optional string title = 1;</code>
     */
    com.google.protobuf.ByteString
        getTitleBytes();

    /**
     * <code>optional string text = 2;</code>
     */
    boolean hasText();
    /**
     * <code>optional string text = 2;</code>
     */
    java.lang.String getText();
    /**
     * <code>optional string text = 2;</code>
     */
    com.google.protobuf.ByteString
        getTextBytes();

    /**
     * <code>optional int32 entindex = 3;</code>
     */
    boolean hasEntindex();
    /**
     * <code>optional int32 entindex = 3;</code>
     */
    int getEntindex();

    /**
     * <code>optional bool close = 4;</code>
     */
    boolean hasClose();
    /**
     * <code>optional bool close = 4;</code>
     */
    boolean getClose();
  }
  /**
   * Protobuf type {@code CDOTAUserMsg_SendGenericToolTip}
   */
  public static final class CDOTAUserMsg_SendGenericToolTip extends
      com.google.protobuf.GeneratedMessage implements
      // @@protoc_insertion_point(message_implements:CDOTAUserMsg_SendGenericToolTip)
      CDOTAUserMsg_SendGenericToolTipOrBuilder {
    // Use CDOTAUserMsg_SendGenericToolTip.newBuilder() to construct.
    private CDOTAUserMsg_SendGenericToolTip(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private CDOTAUserMsg_SendGenericToolTip(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final CDOTAUserMsg_SendGenericToolTip defaultInstance;
    public static CDOTAUserMsg_SendGenericToolTip getDefaultInstance() {
      return defaultInstance;
    }

    public CDOTAUserMsg_SendGenericToolTip getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private CDOTAUserMsg_SendGenericToolTip(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 10: {
              com.google.protobuf.ByteString bs = input.readBytes();
              bitField0_ |= 0x00000001;
              title_ = bs;
              break;
            }
            case 18: {
              com.google.protobuf.ByteString bs = input.readBytes();
              bitField0_ |= 0x00000002;
              text_ = bs;
              break;
            }
            case 24: {
              bitField0_ |= 0x00000004;
              entindex_ = input.readInt32();
              break;
            }
            case 32: {
              bitField0_ |= 0x00000008;
              close_ = input.readBool();
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return skadistats.clarity.wire.common.proto.DotaUserMessages.internal_static_CDOTAUserMsg_SendGenericToolTip_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return skadistats.clarity.wire.common.proto.DotaUserMessages.internal_static_CDOTAUserMsg_SendGenericToolTip_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_SendGenericToolTip.class, skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_SendGenericToolTip.Builder.class);
    }

    public static com.google.protobuf.Parser<CDOTAUserMsg_SendGenericToolTip> PARSER =
        new com.google.protobuf.AbstractParser<CDOTAUserMsg_SendGenericToolTip>() {
      public CDOTAUserMsg_SendGenericToolTip parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new CDOTAUserMsg_SendGenericToolTip(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<CDOTAUserMsg_SendGenericToolTip> getParserForType() {
      return PARSER;
    }

    private int bitField0_;
    public static final int TITLE_FIELD_NUMBER = 1;
    private java.lang.Object title_;
    /**
     * <code>optional string title = 1;</code>
     */
    public boolean hasTitle() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>optional string title = 1;</code>
     */
    public java.lang.String getTitle() {
      java.lang.Object ref = title_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          title_ = s;
        }
        return s;
      }
    }
    /**
     * <code>optional string title = 1;</code>
     */
    public com.google.protobuf.ByteString
        getTitleBytes() {
      java.lang.Object ref = title_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        title_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int TEXT_FIELD_NUMBER = 2;
    private java.lang.Object text_;
    /**
     * <code>optional string text = 2;</code>
     */
    public boolean hasText() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>optional string text = 2;</code>
     */
    public java.lang.String getText() {
      java.lang.Object ref = text_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          text_ = s;
        }
        return s;
      }
    }
    /**
     * <code>optional string text = 2;</code>
     */
    public com.google.protobuf.ByteString
        getTextBytes() {
      java.lang.Object ref = text_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        text_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int ENTINDEX_FIELD_NUMBER = 3;
    private int entindex_;
    /**
     * <code>optional int32 entindex = 3;</code>
     */
    public boolean hasEntindex() {
      return ((bitField0_ & 0x00000004) == 0x00000004);
    }
    /**
     * <code>optional int32 entindex = 3;</code>
     */
    public int getEntindex() {
      return entindex_;
    }

    public static final int CLOSE_FIELD_NUMBER = 4;
    private boolean close_;
    /**
     * <code>optional bool close = 4;</code>
     */
    public boolean hasClose() {
      return ((bitField0_ & 0x00000008) == 0x00000008);
    }
    /**
     * <code>optional bool close = 4;</code>
     */
    public boolean getClose() {
      return close_;
    }

    private void initFields() {
      title_ = "";
      text_ = "";
      entindex_ = 0;
      close_ = false;
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeBytes(1, getTitleBytes());
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeBytes(2, getTextBytes());
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        output.writeInt32(3, entindex_);
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        output.writeBool(4, close_);
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(1, getTitleBytes());
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(2, getTextBytes());
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(3, entindex_);
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBoolSize(4, close_);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_SendGenericToolTip parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_SendGenericToolTip parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_SendGenericToolTip parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_SendGenericToolTip parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_SendGenericToolTip parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_SendGenericToolTip parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_SendGenericToolTip parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_SendGenericToolTip parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_SendGenericToolTip parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_SendGenericToolTip parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_SendGenericToolTip prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code CDOTAUserMsg_SendGenericToolTip}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:CDOTAUserMsg_SendGenericToolTip)
        skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_SendGenericToolTipOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return skadistats.clarity.wire.common.proto.DotaUserMessages.internal_static_CDOTAUserMsg_SendGenericToolTip_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return skadistats.clarity.wire.common.proto.DotaUserMessages.internal_static_CDOTAUserMsg_SendGenericToolTip_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_SendGenericToolTip.class, skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_SendGenericToolTip.Builder.class);
      }

      // Construct using skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_SendGenericToolTip.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        title_ = "";
        bitField0_ = (bitField0_ & ~0x00000001);
        text_ = "";
        bitField0_ = (bitField0_ & ~0x00000002);
        entindex_ = 0;
        bitField0_ = (bitField0_ & ~0x00000004);
        close_ = false;
        bitField0_ = (bitField0_ & ~0x00000008);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return skadistats.clarity.wire.common.proto.DotaUserMessages.internal_static_CDOTAUserMsg_SendGenericToolTip_descriptor;
      }

      public skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_SendGenericToolTip getDefaultInstanceForType() {
        return skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_SendGenericToolTip.getDefaultInstance();
      }

      public skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_SendGenericToolTip build() {
        skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_SendGenericToolTip result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_SendGenericToolTip buildPartial() {
        skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_SendGenericToolTip result = new skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_SendGenericToolTip(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.title_ = title_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.text_ = text_;
        if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
          to_bitField0_ |= 0x00000004;
        }
        result.entindex_ = entindex_;
        if (((from_bitField0_ & 0x00000008) == 0x00000008)) {
          to_bitField0_ |= 0x00000008;
        }
        result.close_ = close_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_SendGenericToolTip) {
          return mergeFrom((skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_SendGenericToolTip)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_SendGenericToolTip other) {
        if (other == skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_SendGenericToolTip.getDefaultInstance()) return this;
        if (other.hasTitle()) {
          bitField0_ |= 0x00000001;
          title_ = other.title_;
          onChanged();
        }
        if (other.hasText()) {
          bitField0_ |= 0x00000002;
          text_ = other.text_;
          onChanged();
        }
        if (other.hasEntindex()) {
          setEntindex(other.getEntindex());
        }
        if (other.hasClose()) {
          setClose(other.getClose());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_SendGenericToolTip parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_SendGenericToolTip) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private java.lang.Object title_ = "";
      /**
       * <code>optional string title = 1;</code>
       */
      public boolean hasTitle() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>optional string title = 1;</code>
       */
      public java.lang.String getTitle() {
        java.lang.Object ref = title_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          if (bs.isValidUtf8()) {
            title_ = s;
          }
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>optional string title = 1;</code>
       */
      public com.google.protobuf.ByteString
          getTitleBytes() {
        java.lang.Object ref = title_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          title_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>optional string title = 1;</code>
       */
      public Builder setTitle(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000001;
        title_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional string title = 1;</code>
       */
      public Builder clearTitle() {
        bitField0_ = (bitField0_ & ~0x00000001);
        title_ = getDefaultInstance().getTitle();
        onChanged();
        return this;
      }
      /**
       * <code>optional string title = 1;</code>
       */
      public Builder setTitleBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000001;
        title_ = value;
        onChanged();
        return this;
      }

      private java.lang.Object text_ = "";
      /**
       * <code>optional string text = 2;</code>
       */
      public boolean hasText() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>optional string text = 2;</code>
       */
      public java.lang.String getText() {
        java.lang.Object ref = text_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          if (bs.isValidUtf8()) {
            text_ = s;
          }
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>optional string text = 2;</code>
       */
      public com.google.protobuf.ByteString
          getTextBytes() {
        java.lang.Object ref = text_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          text_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>optional string text = 2;</code>
       */
      public Builder setText(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000002;
        text_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional string text = 2;</code>
       */
      public Builder clearText() {
        bitField0_ = (bitField0_ & ~0x00000002);
        text_ = getDefaultInstance().getText();
        onChanged();
        return this;
      }
      /**
       * <code>optional string text = 2;</code>
       */
      public Builder setTextBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000002;
        text_ = value;
        onChanged();
        return this;
      }

      private int entindex_ ;
      /**
       * <code>optional int32 entindex = 3;</code>
       */
      public boolean hasEntindex() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }
      /**
       * <code>optional int32 entindex = 3;</code>
       */
      public int getEntindex() {
        return entindex_;
      }
      /**
       * <code>optional int32 entindex = 3;</code>
       */
      public Builder setEntindex(int value) {
        bitField0_ |= 0x00000004;
        entindex_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 entindex = 3;</code>
       */
      public Builder clearEntindex() {
        bitField0_ = (bitField0_ & ~0x00000004);
        entindex_ = 0;
        onChanged();
        return this;
      }

      private boolean close_ ;
      /**
       * <code>optional bool close = 4;</code>
       */
      public boolean hasClose() {
        return ((bitField0_ & 0x00000008) == 0x00000008);
      }
      /**
       * <code>optional bool close = 4;</code>
       */
      public boolean getClose() {
        return close_;
      }
      /**
       * <code>optional bool close = 4;</code>
       */
      public Builder setClose(boolean value) {
        bitField0_ |= 0x00000008;
        close_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional bool close = 4;</code>
       */
      public Builder clearClose() {
        bitField0_ = (bitField0_ & ~0x00000008);
        close_ = false;
        onChanged();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:CDOTAUserMsg_SendGenericToolTip)
    }

    static {
      defaultInstance = new CDOTAUserMsg_SendGenericToolTip(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:CDOTAUserMsg_SendGenericToolTip)
  }

  public interface CDOTAUserMsg_WorldLineOrBuilder extends
      // @@protoc_insertion_point(interface_extends:CDOTAUserMsg_WorldLine)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>optional int32 player_id = 1;</code>
     */
    boolean hasPlayerId();
    /**
     * <code>optional int32 player_id = 1;</code>
     */
    int getPlayerId();

    /**
     * <code>optional .CDOTAMsg_WorldLine worldline = 2;</code>
     */
    boolean hasWorldline();
    /**
     * <code>optional .CDOTAMsg_WorldLine worldline = 2;</code>
     */
    skadistats.clarity.wire.common.proto.DotaCommonMessages.CDOTAMsg_WorldLine getWorldline();
    /**
     * <code>optional .CDOTAMsg_WorldLine worldline = 2;</code>
     */
    skadistats.clarity.wire.common.proto.DotaCommonMessages.CDOTAMsg_WorldLineOrBuilder getWorldlineOrBuilder();
  }
  /**
   * Protobuf type {@code CDOTAUserMsg_WorldLine}
   */
  public static final class CDOTAUserMsg_WorldLine extends
      com.google.protobuf.GeneratedMessage implements
      // @@protoc_insertion_point(message_implements:CDOTAUserMsg_WorldLine)
      CDOTAUserMsg_WorldLineOrBuilder {
    // Use CDOTAUserMsg_WorldLine.newBuilder() to construct.
    private CDOTAUserMsg_WorldLine(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private CDOTAUserMsg_WorldLine(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final CDOTAUserMsg_WorldLine defaultInstance;
    public static CDOTAUserMsg_WorldLine getDefaultInstance() {
      return defaultInstance;
    }

    public CDOTAUserMsg_WorldLine getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private CDOTAUserMsg_WorldLine(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 8: {
              bitField0_ |= 0x00000001;
              playerId_ = input.readInt32();
              break;
            }
            case 18: {
              skadistats.clarity.wire.common.proto.DotaCommonMessages.CDOTAMsg_WorldLine.Builder subBuilder = null;
              if (((bitField0_ & 0x00000002) == 0x00000002)) {
                subBuilder = worldline_.toBuilder();
              }
              worldline_ = input.readMessage(skadistats.clarity.wire.common.proto.DotaCommonMessages.CDOTAMsg_WorldLine.PARSER, extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(worldline_);
                worldline_ = subBuilder.buildPartial();
              }
              bitField0_ |= 0x00000002;
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return skadistats.clarity.wire.common.proto.DotaUserMessages.internal_static_CDOTAUserMsg_WorldLine_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return skadistats.clarity.wire.common.proto.DotaUserMessages.internal_static_CDOTAUserMsg_WorldLine_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_WorldLine.class, skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_WorldLine.Builder.class);
    }

    public static com.google.protobuf.Parser<CDOTAUserMsg_WorldLine> PARSER =
        new com.google.protobuf.AbstractParser<CDOTAUserMsg_WorldLine>() {
      public CDOTAUserMsg_WorldLine parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new CDOTAUserMsg_WorldLine(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<CDOTAUserMsg_WorldLine> getParserForType() {
      return PARSER;
    }

    private int bitField0_;
    public static final int PLAYER_ID_FIELD_NUMBER = 1;
    private int playerId_;
    /**
     * <code>optional int32 player_id = 1;</code>
     */
    public boolean hasPlayerId() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>optional int32 player_id = 1;</code>
     */
    public int getPlayerId() {
      return playerId_;
    }

    public static final int WORLDLINE_FIELD_NUMBER = 2;
    private skadistats.clarity.wire.common.proto.DotaCommonMessages.CDOTAMsg_WorldLine worldline_;
    /**
     * <code>optional .CDOTAMsg_WorldLine worldline = 2;</code>
     */
    public boolean hasWorldline() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>optional .CDOTAMsg_WorldLine worldline = 2;</code>
     */
    public skadistats.clarity.wire.common.proto.DotaCommonMessages.CDOTAMsg_WorldLine getWorldline() {
      return worldline_;
    }
    /**
     * <code>optional .CDOTAMsg_WorldLine worldline = 2;</code>
     */
    public skadistats.clarity.wire.common.proto.DotaCommonMessages.CDOTAMsg_WorldLineOrBuilder getWorldlineOrBuilder() {
      return worldline_;
    }

    private void initFields() {
      playerId_ = 0;
      worldline_ = skadistats.clarity.wire.common.proto.DotaCommonMessages.CDOTAMsg_WorldLine.getDefaultInstance();
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeInt32(1, playerId_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeMessage(2, worldline_);
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(1, playerId_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(2, worldline_);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_WorldLine parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_WorldLine parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_WorldLine parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_WorldLine parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_WorldLine parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_WorldLine parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_WorldLine parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_WorldLine parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_WorldLine parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_WorldLine parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_WorldLine prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code CDOTAUserMsg_WorldLine}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:CDOTAUserMsg_WorldLine)
        skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_WorldLineOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return skadistats.clarity.wire.common.proto.DotaUserMessages.internal_static_CDOTAUserMsg_WorldLine_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return skadistats.clarity.wire.common.proto.DotaUserMessages.internal_static_CDOTAUserMsg_WorldLine_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_WorldLine.class, skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_WorldLine.Builder.class);
      }

      // Construct using skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_WorldLine.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
          getWorldlineFieldBuilder();
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        playerId_ = 0;
        bitField0_ = (bitField0_ & ~0x00000001);
        if (worldlineBuilder_ == null) {
          worldline_ = skadistats.clarity.wire.common.proto.DotaCommonMessages.CDOTAMsg_WorldLine.getDefaultInstance();
        } else {
          worldlineBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000002);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return skadistats.clarity.wire.common.proto.DotaUserMessages.internal_static_CDOTAUserMsg_WorldLine_descriptor;
      }

      public skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_WorldLine getDefaultInstanceForType() {
        return skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_WorldLine.getDefaultInstance();
      }

      public skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_WorldLine build() {
        skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_WorldLine result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_WorldLine buildPartial() {
        skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_WorldLine result = new skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_WorldLine(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.playerId_ = playerId_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        if (worldlineBuilder_ == null) {
          result.worldline_ = worldline_;
        } else {
          result.worldline_ = worldlineBuilder_.build();
        }
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_WorldLine) {
          return mergeFrom((skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_WorldLine)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_WorldLine other) {
        if (other == skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_WorldLine.getDefaultInstance()) return this;
        if (other.hasPlayerId()) {
          setPlayerId(other.getPlayerId());
        }
        if (other.hasWorldline()) {
          mergeWorldline(other.getWorldline());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_WorldLine parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_WorldLine) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private int playerId_ ;
      /**
       * <code>optional int32 player_id = 1;</code>
       */
      public boolean hasPlayerId() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>optional int32 player_id = 1;</code>
       */
      public int getPlayerId() {
        return playerId_;
      }
      /**
       * <code>optional int32 player_id = 1;</code>
       */
      public Builder setPlayerId(int value) {
        bitField0_ |= 0x00000001;
        playerId_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 player_id = 1;</code>
       */
      public Builder clearPlayerId() {
        bitField0_ = (bitField0_ & ~0x00000001);
        playerId_ = 0;
        onChanged();
        return this;
      }

      private skadistats.clarity.wire.common.proto.DotaCommonMessages.CDOTAMsg_WorldLine worldline_ = skadistats.clarity.wire.common.proto.DotaCommonMessages.CDOTAMsg_WorldLine.getDefaultInstance();
      private com.google.protobuf.SingleFieldBuilder<
          skadistats.clarity.wire.common.proto.DotaCommonMessages.CDOTAMsg_WorldLine, skadistats.clarity.wire.common.proto.DotaCommonMessages.CDOTAMsg_WorldLine.Builder, skadistats.clarity.wire.common.proto.DotaCommonMessages.CDOTAMsg_WorldLineOrBuilder> worldlineBuilder_;
      /**
       * <code>optional .CDOTAMsg_WorldLine worldline = 2;</code>
       */
      public boolean hasWorldline() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>optional .CDOTAMsg_WorldLine worldline = 2;</code>
       */
      public skadistats.clarity.wire.common.proto.DotaCommonMessages.CDOTAMsg_WorldLine getWorldline() {
        if (worldlineBuilder_ == null) {
          return worldline_;
        } else {
          return worldlineBuilder_.getMessage();
        }
      }
      /**
       * <code>optional .CDOTAMsg_WorldLine worldline = 2;</code>
       */
      public Builder setWorldline(skadistats.clarity.wire.common.proto.DotaCommonMessages.CDOTAMsg_WorldLine value) {
        if (worldlineBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          worldline_ = value;
          onChanged();
        } else {
          worldlineBuilder_.setMessage(value);
        }
        bitField0_ |= 0x00000002;
        return this;
      }
      /**
       * <code>optional .CDOTAMsg_WorldLine worldline = 2;</code>
       */
      public Builder setWorldline(
          skadistats.clarity.wire.common.proto.DotaCommonMessages.CDOTAMsg_WorldLine.Builder builderForValue) {
        if (worldlineBuilder_ == null) {
          worldline_ = builderForValue.build();
          onChanged();
        } else {
          worldlineBuilder_.setMessage(builderForValue.build());
        }
        bitField0_ |= 0x00000002;
        return this;
      }
      /**
       * <code>optional .CDOTAMsg_WorldLine worldline = 2;</code>
       */
      public Builder mergeWorldline(skadistats.clarity.wire.common.proto.DotaCommonMessages.CDOTAMsg_WorldLine value) {
        if (worldlineBuilder_ == null) {
          if (((bitField0_ & 0x00000002) == 0x00000002) &&
              worldline_ != skadistats.clarity.wire.common.proto.DotaCommonMessages.CDOTAMsg_WorldLine.getDefaultInstance()) {
            worldline_ =
              skadistats.clarity.wire.common.proto.DotaCommonMessages.CDOTAMsg_WorldLine.newBuilder(worldline_).mergeFrom(value).buildPartial();
          } else {
            worldline_ = value;
          }
          onChanged();
        } else {
          worldlineBuilder_.mergeFrom(value);
        }
        bitField0_ |= 0x00000002;
        return this;
      }
      /**
       * <code>optional .CDOTAMsg_WorldLine worldline = 2;</code>
       */
      public Builder clearWorldline() {
        if (worldlineBuilder_ == null) {
          worldline_ = skadistats.clarity.wire.common.proto.DotaCommonMessages.CDOTAMsg_WorldLine.getDefaultInstance();
          onChanged();
        } else {
          worldlineBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000002);
        return this;
      }
      /**
       * <code>optional .CDOTAMsg_WorldLine worldline = 2;</code>
       */
      public skadistats.clarity.wire.common.proto.DotaCommonMessages.CDOTAMsg_WorldLine.Builder getWorldlineBuilder() {
        bitField0_ |= 0x00000002;
        onChanged();
        return getWorldlineFieldBuilder().getBuilder();
      }
      /**
       * <code>optional .CDOTAMsg_WorldLine worldline = 2;</code>
       */
      public skadistats.clarity.wire.common.proto.DotaCommonMessages.CDOTAMsg_WorldLineOrBuilder getWorldlineOrBuilder() {
        if (worldlineBuilder_ != null) {
          return worldlineBuilder_.getMessageOrBuilder();
        } else {
          return worldline_;
        }
      }
      /**
       * <code>optional .CDOTAMsg_WorldLine worldline = 2;</code>
       */
      private com.google.protobuf.SingleFieldBuilder<
          skadistats.clarity.wire.common.proto.DotaCommonMessages.CDOTAMsg_WorldLine, skadistats.clarity.wire.common.proto.DotaCommonMessages.CDOTAMsg_WorldLine.Builder, skadistats.clarity.wire.common.proto.DotaCommonMessages.CDOTAMsg_WorldLineOrBuilder> 
          getWorldlineFieldBuilder() {
        if (worldlineBuilder_ == null) {
          worldlineBuilder_ = new com.google.protobuf.SingleFieldBuilder<
              skadistats.clarity.wire.common.proto.DotaCommonMessages.CDOTAMsg_WorldLine, skadistats.clarity.wire.common.proto.DotaCommonMessages.CDOTAMsg_WorldLine.Builder, skadistats.clarity.wire.common.proto.DotaCommonMessages.CDOTAMsg_WorldLineOrBuilder>(
                  getWorldline(),
                  getParentForChildren(),
                  isClean());
          worldline_ = null;
        }
        return worldlineBuilder_;
      }

      // @@protoc_insertion_point(builder_scope:CDOTAUserMsg_WorldLine)
    }

    static {
      defaultInstance = new CDOTAUserMsg_WorldLine(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:CDOTAUserMsg_WorldLine)
  }

  public interface CDOTAUserMsg_ChatWheelOrBuilder extends
      // @@protoc_insertion_point(interface_extends:CDOTAUserMsg_ChatWheel)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>optional .EDOTAChatWheelMessage chat_message = 1 [default = k_EDOTA_CW_Ok];</code>
     */
    boolean hasChatMessage();
    /**
     * <code>optional .EDOTAChatWheelMessage chat_message = 1 [default = k_EDOTA_CW_Ok];</code>
     */
    skadistats.clarity.wire.common.proto.DotaCommonMessages.EDOTAChatWheelMessage getChatMessage();

    /**
     * <code>optional uint32 player_id = 2;</code>
     */
    boolean hasPlayerId();
    /**
     * <code>optional uint32 player_id = 2;</code>
     */
    int getPlayerId();

    /**
     * <code>optional uint32 account_id = 3;</code>
     */
    boolean hasAccountId();
    /**
     * <code>optional uint32 account_id = 3;</code>
     */
    int getAccountId();

    /**
     * <code>optional uint32 param_hero_id = 4;</code>
     */
    boolean hasParamHeroId();
    /**
     * <code>optional uint32 param_hero_id = 4;</code>
     */
    int getParamHeroId();
  }
  /**
   * Protobuf type {@code CDOTAUserMsg_ChatWheel}
   */
  public static final class CDOTAUserMsg_ChatWheel extends
      com.google.protobuf.GeneratedMessage implements
      // @@protoc_insertion_point(message_implements:CDOTAUserMsg_ChatWheel)
      CDOTAUserMsg_ChatWheelOrBuilder {
    // Use CDOTAUserMsg_ChatWheel.newBuilder() to construct.
    private CDOTAUserMsg_ChatWheel(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private CDOTAUserMsg_ChatWheel(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final CDOTAUserMsg_ChatWheel defaultInstance;
    public static CDOTAUserMsg_ChatWheel getDefaultInstance() {
      return defaultInstance;
    }

    public CDOTAUserMsg_ChatWheel getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private CDOTAUserMsg_ChatWheel(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 8: {
              int rawValue = input.readEnum();
              skadistats.clarity.wire.common.proto.DotaCommonMessages.EDOTAChatWheelMessage value = skadistats.clarity.wire.common.proto.DotaCommonMessages.EDOTAChatWheelMessage.valueOf(rawValue);
              if (value == null) {
                unknownFields.mergeVarintField(1, rawValue);
              } else {
                bitField0_ |= 0x00000001;
                chatMessage_ = value;
              }
              break;
            }
            case 16: {
              bitField0_ |= 0x00000002;
              playerId_ = input.readUInt32();
              break;
            }
            case 24: {
              bitField0_ |= 0x00000004;
              accountId_ = input.readUInt32();
              break;
            }
            case 32: {
              bitField0_ |= 0x00000008;
              paramHeroId_ = input.readUInt32();
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return skadistats.clarity.wire.common.proto.DotaUserMessages.internal_static_CDOTAUserMsg_ChatWheel_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return skadistats.clarity.wire.common.proto.DotaUserMessages.internal_static_CDOTAUserMsg_ChatWheel_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_ChatWheel.class, skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_ChatWheel.Builder.class);
    }

    public static com.google.protobuf.Parser<CDOTAUserMsg_ChatWheel> PARSER =
        new com.google.protobuf.AbstractParser<CDOTAUserMsg_ChatWheel>() {
      public CDOTAUserMsg_ChatWheel parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new CDOTAUserMsg_ChatWheel(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<CDOTAUserMsg_ChatWheel> getParserForType() {
      return PARSER;
    }

    private int bitField0_;
    public static final int CHAT_MESSAGE_FIELD_NUMBER = 1;
    private skadistats.clarity.wire.common.proto.DotaCommonMessages.EDOTAChatWheelMessage chatMessage_;
    /**
     * <code>optional .EDOTAChatWheelMessage chat_message = 1 [default = k_EDOTA_CW_Ok];</code>
     */
    public boolean hasChatMessage() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>optional .EDOTAChatWheelMessage chat_message = 1 [default = k_EDOTA_CW_Ok];</code>
     */
    public skadistats.clarity.wire.common.proto.DotaCommonMessages.EDOTAChatWheelMessage getChatMessage() {
      return chatMessage_;
    }

    public static final int PLAYER_ID_FIELD_NUMBER = 2;
    private int playerId_;
    /**
     * <code>optional uint32 player_id = 2;</code>
     */
    public boolean hasPlayerId() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>optional uint32 player_id = 2;</code>
     */
    public int getPlayerId() {
      return playerId_;
    }

    public static final int ACCOUNT_ID_FIELD_NUMBER = 3;
    private int accountId_;
    /**
     * <code>optional uint32 account_id = 3;</code>
     */
    public boolean hasAccountId() {
      return ((bitField0_ & 0x00000004) == 0x00000004);
    }
    /**
     * <code>optional uint32 account_id = 3;</code>
     */
    public int getAccountId() {
      return accountId_;
    }

    public static final int PARAM_HERO_ID_FIELD_NUMBER = 4;
    private int paramHeroId_;
    /**
     * <code>optional uint32 param_hero_id = 4;</code>
     */
    public boolean hasParamHeroId() {
      return ((bitField0_ & 0x00000008) == 0x00000008);
    }
    /**
     * <code>optional uint32 param_hero_id = 4;</code>
     */
    public int getParamHeroId() {
      return paramHeroId_;
    }

    private void initFields() {
      chatMessage_ = skadistats.clarity.wire.common.proto.DotaCommonMessages.EDOTAChatWheelMessage.k_EDOTA_CW_Ok;
      playerId_ = 0;
      accountId_ = 0;
      paramHeroId_ = 0;
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeEnum(1, chatMessage_.getNumber());
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeUInt32(2, playerId_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        output.writeUInt32(3, accountId_);
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        output.writeUInt32(4, paramHeroId_);
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeEnumSize(1, chatMessage_.getNumber());
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(2, playerId_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(3, accountId_);
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(4, paramHeroId_);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_ChatWheel parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_ChatWheel parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_ChatWheel parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_ChatWheel parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_ChatWheel parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_ChatWheel parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_ChatWheel parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_ChatWheel parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_ChatWheel parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_ChatWheel parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_ChatWheel prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code CDOTAUserMsg_ChatWheel}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:CDOTAUserMsg_ChatWheel)
        skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_ChatWheelOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return skadistats.clarity.wire.common.proto.DotaUserMessages.internal_static_CDOTAUserMsg_ChatWheel_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return skadistats.clarity.wire.common.proto.DotaUserMessages.internal_static_CDOTAUserMsg_ChatWheel_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_ChatWheel.class, skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_ChatWheel.Builder.class);
      }

      // Construct using skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_ChatWheel.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        chatMessage_ = skadistats.clarity.wire.common.proto.DotaCommonMessages.EDOTAChatWheelMessage.k_EDOTA_CW_Ok;
        bitField0_ = (bitField0_ & ~0x00000001);
        playerId_ = 0;
        bitField0_ = (bitField0_ & ~0x00000002);
        accountId_ = 0;
        bitField0_ = (bitField0_ & ~0x00000004);
        paramHeroId_ = 0;
        bitField0_ = (bitField0_ & ~0x00000008);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return skadistats.clarity.wire.common.proto.DotaUserMessages.internal_static_CDOTAUserMsg_ChatWheel_descriptor;
      }

      public skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_ChatWheel getDefaultInstanceForType() {
        return skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_ChatWheel.getDefaultInstance();
      }

      public skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_ChatWheel build() {
        skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_ChatWheel result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_ChatWheel buildPartial() {
        skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_ChatWheel result = new skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_ChatWheel(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.chatMessage_ = chatMessage_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.playerId_ = playerId_;
        if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
          to_bitField0_ |= 0x00000004;
        }
        result.accountId_ = accountId_;
        if (((from_bitField0_ & 0x00000008) == 0x00000008)) {
          to_bitField0_ |= 0x00000008;
        }
        result.paramHeroId_ = paramHeroId_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_ChatWheel) {
          return mergeFrom((skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_ChatWheel)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_ChatWheel other) {
        if (other == skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_ChatWheel.getDefaultInstance()) return this;
        if (other.hasChatMessage()) {
          setChatMessage(other.getChatMessage());
        }
        if (other.hasPlayerId()) {
          setPlayerId(other.getPlayerId());
        }
        if (other.hasAccountId()) {
          setAccountId(other.getAccountId());
        }
        if (other.hasParamHeroId()) {
          setParamHeroId(other.getParamHeroId());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_ChatWheel parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_ChatWheel) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private skadistats.clarity.wire.common.proto.DotaCommonMessages.EDOTAChatWheelMessage chatMessage_ = skadistats.clarity.wire.common.proto.DotaCommonMessages.EDOTAChatWheelMessage.k_EDOTA_CW_Ok;
      /**
       * <code>optional .EDOTAChatWheelMessage chat_message = 1 [default = k_EDOTA_CW_Ok];</code>
       */
      public boolean hasChatMessage() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>optional .EDOTAChatWheelMessage chat_message = 1 [default = k_EDOTA_CW_Ok];</code>
       */
      public skadistats.clarity.wire.common.proto.DotaCommonMessages.EDOTAChatWheelMessage getChatMessage() {
        return chatMessage_;
      }
      /**
       * <code>optional .EDOTAChatWheelMessage chat_message = 1 [default = k_EDOTA_CW_Ok];</code>
       */
      public Builder setChatMessage(skadistats.clarity.wire.common.proto.DotaCommonMessages.EDOTAChatWheelMessage value) {
        if (value == null) {
          throw new NullPointerException();
        }
        bitField0_ |= 0x00000001;
        chatMessage_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional .EDOTAChatWheelMessage chat_message = 1 [default = k_EDOTA_CW_Ok];</code>
       */
      public Builder clearChatMessage() {
        bitField0_ = (bitField0_ & ~0x00000001);
        chatMessage_ = skadistats.clarity.wire.common.proto.DotaCommonMessages.EDOTAChatWheelMessage.k_EDOTA_CW_Ok;
        onChanged();
        return this;
      }

      private int playerId_ ;
      /**
       * <code>optional uint32 player_id = 2;</code>
       */
      public boolean hasPlayerId() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>optional uint32 player_id = 2;</code>
       */
      public int getPlayerId() {
        return playerId_;
      }
      /**
       * <code>optional uint32 player_id = 2;</code>
       */
      public Builder setPlayerId(int value) {
        bitField0_ |= 0x00000002;
        playerId_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional uint32 player_id = 2;</code>
       */
      public Builder clearPlayerId() {
        bitField0_ = (bitField0_ & ~0x00000002);
        playerId_ = 0;
        onChanged();
        return this;
      }

      private int accountId_ ;
      /**
       * <code>optional uint32 account_id = 3;</code>
       */
      public boolean hasAccountId() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }
      /**
       * <code>optional uint32 account_id = 3;</code>
       */
      public int getAccountId() {
        return accountId_;
      }
      /**
       * <code>optional uint32 account_id = 3;</code>
       */
      public Builder setAccountId(int value) {
        bitField0_ |= 0x00000004;
        accountId_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional uint32 account_id = 3;</code>
       */
      public Builder clearAccountId() {
        bitField0_ = (bitField0_ & ~0x00000004);
        accountId_ = 0;
        onChanged();
        return this;
      }

      private int paramHeroId_ ;
      /**
       * <code>optional uint32 param_hero_id = 4;</code>
       */
      public boolean hasParamHeroId() {
        return ((bitField0_ & 0x00000008) == 0x00000008);
      }
      /**
       * <code>optional uint32 param_hero_id = 4;</code>
       */
      public int getParamHeroId() {
        return paramHeroId_;
      }
      /**
       * <code>optional uint32 param_hero_id = 4;</code>
       */
      public Builder setParamHeroId(int value) {
        bitField0_ |= 0x00000008;
        paramHeroId_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional uint32 param_hero_id = 4;</code>
       */
      public Builder clearParamHeroId() {
        bitField0_ = (bitField0_ & ~0x00000008);
        paramHeroId_ = 0;
        onChanged();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:CDOTAUserMsg_ChatWheel)
    }

    static {
      defaultInstance = new CDOTAUserMsg_ChatWheel(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:CDOTAUserMsg_ChatWheel)
  }

  public interface CDOTAUserMsg_ReceivedXmasGiftOrBuilder extends
      // @@protoc_insertion_point(interface_extends:CDOTAUserMsg_ReceivedXmasGift)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>optional int32 player_id = 1;</code>
     */
    boolean hasPlayerId();
    /**
     * <code>optional int32 player_id = 1;</code>
     */
    int getPlayerId();

    /**
     * <code>optional string item_name = 2;</code>
     */
    boolean hasItemName();
    /**
     * <code>optional string item_name = 2;</code>
     */
    java.lang.String getItemName();
    /**
     * <code>optional string item_name = 2;</code>
     */
    com.google.protobuf.ByteString
        getItemNameBytes();

    /**
     * <code>optional int32 inventory_slot = 3;</code>
     */
    boolean hasInventorySlot();
    /**
     * <code>optional int32 inventory_slot = 3;</code>
     */
    int getInventorySlot();
  }
  /**
   * Protobuf type {@code CDOTAUserMsg_ReceivedXmasGift}
   */
  public static final class CDOTAUserMsg_ReceivedXmasGift extends
      com.google.protobuf.GeneratedMessage implements
      // @@protoc_insertion_point(message_implements:CDOTAUserMsg_ReceivedXmasGift)
      CDOTAUserMsg_ReceivedXmasGiftOrBuilder {
    // Use CDOTAUserMsg_ReceivedXmasGift.newBuilder() to construct.
    private CDOTAUserMsg_ReceivedXmasGift(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private CDOTAUserMsg_ReceivedXmasGift(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final CDOTAUserMsg_ReceivedXmasGift defaultInstance;
    public static CDOTAUserMsg_ReceivedXmasGift getDefaultInstance() {
      return defaultInstance;
    }

    public CDOTAUserMsg_ReceivedXmasGift getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private CDOTAUserMsg_ReceivedXmasGift(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 8: {
              bitField0_ |= 0x00000001;
              playerId_ = input.readInt32();
              break;
            }
            case 18: {
              com.google.protobuf.ByteString bs = input.readBytes();
              bitField0_ |= 0x00000002;
              itemName_ = bs;
              break;
            }
            case 24: {
              bitField0_ |= 0x00000004;
              inventorySlot_ = input.readInt32();
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return skadistats.clarity.wire.common.proto.DotaUserMessages.internal_static_CDOTAUserMsg_ReceivedXmasGift_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return skadistats.clarity.wire.common.proto.DotaUserMessages.internal_static_CDOTAUserMsg_ReceivedXmasGift_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_ReceivedXmasGift.class, skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_ReceivedXmasGift.Builder.class);
    }

    public static com.google.protobuf.Parser<CDOTAUserMsg_ReceivedXmasGift> PARSER =
        new com.google.protobuf.AbstractParser<CDOTAUserMsg_ReceivedXmasGift>() {
      public CDOTAUserMsg_ReceivedXmasGift parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new CDOTAUserMsg_ReceivedXmasGift(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<CDOTAUserMsg_ReceivedXmasGift> getParserForType() {
      return PARSER;
    }

    private int bitField0_;
    public static final int PLAYER_ID_FIELD_NUMBER = 1;
    private int playerId_;
    /**
     * <code>optional int32 player_id = 1;</code>
     */
    public boolean hasPlayerId() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>optional int32 player_id = 1;</code>
     */
    public int getPlayerId() {
      return playerId_;
    }

    public static final int ITEM_NAME_FIELD_NUMBER = 2;
    private java.lang.Object itemName_;
    /**
     * <code>optional string item_name = 2;</code>
     */
    public boolean hasItemName() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>optional string item_name = 2;</code>
     */
    public java.lang.String getItemName() {
      java.lang.Object ref = itemName_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          itemName_ = s;
        }
        return s;
      }
    }
    /**
     * <code>optional string item_name = 2;</code>
     */
    public com.google.protobuf.ByteString
        getItemNameBytes() {
      java.lang.Object ref = itemName_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        itemName_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int INVENTORY_SLOT_FIELD_NUMBER = 3;
    private int inventorySlot_;
    /**
     * <code>optional int32 inventory_slot = 3;</code>
     */
    public boolean hasInventorySlot() {
      return ((bitField0_ & 0x00000004) == 0x00000004);
    }
    /**
     * <code>optional int32 inventory_slot = 3;</code>
     */
    public int getInventorySlot() {
      return inventorySlot_;
    }

    private void initFields() {
      playerId_ = 0;
      itemName_ = "";
      inventorySlot_ = 0;
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeInt32(1, playerId_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeBytes(2, getItemNameBytes());
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        output.writeInt32(3, inventorySlot_);
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(1, playerId_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(2, getItemNameBytes());
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(3, inventorySlot_);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_ReceivedXmasGift parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_ReceivedXmasGift parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_ReceivedXmasGift parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_ReceivedXmasGift parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_ReceivedXmasGift parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_ReceivedXmasGift parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_ReceivedXmasGift parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_ReceivedXmasGift parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_ReceivedXmasGift parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_ReceivedXmasGift parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_ReceivedXmasGift prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code CDOTAUserMsg_ReceivedXmasGift}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:CDOTAUserMsg_ReceivedXmasGift)
        skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_ReceivedXmasGiftOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return skadistats.clarity.wire.common.proto.DotaUserMessages.internal_static_CDOTAUserMsg_ReceivedXmasGift_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return skadistats.clarity.wire.common.proto.DotaUserMessages.internal_static_CDOTAUserMsg_ReceivedXmasGift_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_ReceivedXmasGift.class, skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_ReceivedXmasGift.Builder.class);
      }

      // Construct using skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_ReceivedXmasGift.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        playerId_ = 0;
        bitField0_ = (bitField0_ & ~0x00000001);
        itemName_ = "";
        bitField0_ = (bitField0_ & ~0x00000002);
        inventorySlot_ = 0;
        bitField0_ = (bitField0_ & ~0x00000004);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return skadistats.clarity.wire.common.proto.DotaUserMessages.internal_static_CDOTAUserMsg_ReceivedXmasGift_descriptor;
      }

      public skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_ReceivedXmasGift getDefaultInstanceForType() {
        return skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_ReceivedXmasGift.getDefaultInstance();
      }

      public skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_ReceivedXmasGift build() {
        skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_ReceivedXmasGift result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_ReceivedXmasGift buildPartial() {
        skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_ReceivedXmasGift result = new skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_ReceivedXmasGift(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.playerId_ = playerId_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.itemName_ = itemName_;
        if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
          to_bitField0_ |= 0x00000004;
        }
        result.inventorySlot_ = inventorySlot_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_ReceivedXmasGift) {
          return mergeFrom((skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_ReceivedXmasGift)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_ReceivedXmasGift other) {
        if (other == skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_ReceivedXmasGift.getDefaultInstance()) return this;
        if (other.hasPlayerId()) {
          setPlayerId(other.getPlayerId());
        }
        if (other.hasItemName()) {
          bitField0_ |= 0x00000002;
          itemName_ = other.itemName_;
          onChanged();
        }
        if (other.hasInventorySlot()) {
          setInventorySlot(other.getInventorySlot());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_ReceivedXmasGift parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_ReceivedXmasGift) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private int playerId_ ;
      /**
       * <code>optional int32 player_id = 1;</code>
       */
      public boolean hasPlayerId() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>optional int32 player_id = 1;</code>
       */
      public int getPlayerId() {
        return playerId_;
      }
      /**
       * <code>optional int32 player_id = 1;</code>
       */
      public Builder setPlayerId(int value) {
        bitField0_ |= 0x00000001;
        playerId_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 player_id = 1;</code>
       */
      public Builder clearPlayerId() {
        bitField0_ = (bitField0_ & ~0x00000001);
        playerId_ = 0;
        onChanged();
        return this;
      }

      private java.lang.Object itemName_ = "";
      /**
       * <code>optional string item_name = 2;</code>
       */
      public boolean hasItemName() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>optional string item_name = 2;</code>
       */
      public java.lang.String getItemName() {
        java.lang.Object ref = itemName_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          if (bs.isValidUtf8()) {
            itemName_ = s;
          }
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>optional string item_name = 2;</code>
       */
      public com.google.protobuf.ByteString
          getItemNameBytes() {
        java.lang.Object ref = itemName_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          itemName_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>optional string item_name = 2;</code>
       */
      public Builder setItemName(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000002;
        itemName_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional string item_name = 2;</code>
       */
      public Builder clearItemName() {
        bitField0_ = (bitField0_ & ~0x00000002);
        itemName_ = getDefaultInstance().getItemName();
        onChanged();
        return this;
      }
      /**
       * <code>optional string item_name = 2;</code>
       */
      public Builder setItemNameBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000002;
        itemName_ = value;
        onChanged();
        return this;
      }

      private int inventorySlot_ ;
      /**
       * <code>optional int32 inventory_slot = 3;</code>
       */
      public boolean hasInventorySlot() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }
      /**
       * <code>optional int32 inventory_slot = 3;</code>
       */
      public int getInventorySlot() {
        return inventorySlot_;
      }
      /**
       * <code>optional int32 inventory_slot = 3;</code>
       */
      public Builder setInventorySlot(int value) {
        bitField0_ |= 0x00000004;
        inventorySlot_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 inventory_slot = 3;</code>
       */
      public Builder clearInventorySlot() {
        bitField0_ = (bitField0_ & ~0x00000004);
        inventorySlot_ = 0;
        onChanged();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:CDOTAUserMsg_ReceivedXmasGift)
    }

    static {
      defaultInstance = new CDOTAUserMsg_ReceivedXmasGift(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:CDOTAUserMsg_ReceivedXmasGift)
  }

  public interface CDOTAUserMsg_ShowSurveyOrBuilder extends
      // @@protoc_insertion_point(interface_extends:CDOTAUserMsg_ShowSurvey)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>optional int32 survey_id = 1;</code>
     */
    boolean hasSurveyId();
    /**
     * <code>optional int32 survey_id = 1;</code>
     */
    int getSurveyId();

    /**
     * <code>optional uint32 match_id = 2;</code>
     */
    boolean hasMatchId();
    /**
     * <code>optional uint32 match_id = 2;</code>
     */
    int getMatchId();

    /**
     * <code>optional string response_style = 3;</code>
     */
    boolean hasResponseStyle();
    /**
     * <code>optional string response_style = 3;</code>
     */
    java.lang.String getResponseStyle();
    /**
     * <code>optional string response_style = 3;</code>
     */
    com.google.protobuf.ByteString
        getResponseStyleBytes();

    /**
     * <code>optional uint32 teammate_hero_id = 4;</code>
     */
    boolean hasTeammateHeroId();
    /**
     * <code>optional uint32 teammate_hero_id = 4;</code>
     */
    int getTeammateHeroId();

    /**
     * <code>optional string teammate_name = 5;</code>
     */
    boolean hasTeammateName();
    /**
     * <code>optional string teammate_name = 5;</code>
     */
    java.lang.String getTeammateName();
    /**
     * <code>optional string teammate_name = 5;</code>
     */
    com.google.protobuf.ByteString
        getTeammateNameBytes();

    /**
     * <code>optional uint32 teammate_account_id = 6;</code>
     */
    boolean hasTeammateAccountId();
    /**
     * <code>optional uint32 teammate_account_id = 6;</code>
     */
    int getTeammateAccountId();
  }
  /**
   * Protobuf type {@code CDOTAUserMsg_ShowSurvey}
   */
  public static final class CDOTAUserMsg_ShowSurvey extends
      com.google.protobuf.GeneratedMessage implements
      // @@protoc_insertion_point(message_implements:CDOTAUserMsg_ShowSurvey)
      CDOTAUserMsg_ShowSurveyOrBuilder {
    // Use CDOTAUserMsg_ShowSurvey.newBuilder() to construct.
    private CDOTAUserMsg_ShowSurvey(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private CDOTAUserMsg_ShowSurvey(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final CDOTAUserMsg_ShowSurvey defaultInstance;
    public static CDOTAUserMsg_ShowSurvey getDefaultInstance() {
      return defaultInstance;
    }

    public CDOTAUserMsg_ShowSurvey getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private CDOTAUserMsg_ShowSurvey(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 8: {
              bitField0_ |= 0x00000001;
              surveyId_ = input.readInt32();
              break;
            }
            case 16: {
              bitField0_ |= 0x00000002;
              matchId_ = input.readUInt32();
              break;
            }
            case 26: {
              com.google.protobuf.ByteString bs = input.readBytes();
              bitField0_ |= 0x00000004;
              responseStyle_ = bs;
              break;
            }
            case 32: {
              bitField0_ |= 0x00000008;
              teammateHeroId_ = input.readUInt32();
              break;
            }
            case 42: {
              com.google.protobuf.ByteString bs = input.readBytes();
              bitField0_ |= 0x00000010;
              teammateName_ = bs;
              break;
            }
            case 48: {
              bitField0_ |= 0x00000020;
              teammateAccountId_ = input.readUInt32();
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return skadistats.clarity.wire.common.proto.DotaUserMessages.internal_static_CDOTAUserMsg_ShowSurvey_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return skadistats.clarity.wire.common.proto.DotaUserMessages.internal_static_CDOTAUserMsg_ShowSurvey_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_ShowSurvey.class, skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_ShowSurvey.Builder.class);
    }

    public static com.google.protobuf.Parser<CDOTAUserMsg_ShowSurvey> PARSER =
        new com.google.protobuf.AbstractParser<CDOTAUserMsg_ShowSurvey>() {
      public CDOTAUserMsg_ShowSurvey parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new CDOTAUserMsg_ShowSurvey(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<CDOTAUserMsg_ShowSurvey> getParserForType() {
      return PARSER;
    }

    private int bitField0_;
    public static final int SURVEY_ID_FIELD_NUMBER = 1;
    private int surveyId_;
    /**
     * <code>optional int32 survey_id = 1;</code>
     */
    public boolean hasSurveyId() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>optional int32 survey_id = 1;</code>
     */
    public int getSurveyId() {
      return surveyId_;
    }

    public static final int MATCH_ID_FIELD_NUMBER = 2;
    private int matchId_;
    /**
     * <code>optional uint32 match_id = 2;</code>
     */
    public boolean hasMatchId() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>optional uint32 match_id = 2;</code>
     */
    public int getMatchId() {
      return matchId_;
    }

    public static final int RESPONSE_STYLE_FIELD_NUMBER = 3;
    private java.lang.Object responseStyle_;
    /**
     * <code>optional string response_style = 3;</code>
     */
    public boolean hasResponseStyle() {
      return ((bitField0_ & 0x00000004) == 0x00000004);
    }
    /**
     * <code>optional string response_style = 3;</code>
     */
    public java.lang.String getResponseStyle() {
      java.lang.Object ref = responseStyle_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          responseStyle_ = s;
        }
        return s;
      }
    }
    /**
     * <code>optional string response_style = 3;</code>
     */
    public com.google.protobuf.ByteString
        getResponseStyleBytes() {
      java.lang.Object ref = responseStyle_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        responseStyle_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int TEAMMATE_HERO_ID_FIELD_NUMBER = 4;
    private int teammateHeroId_;
    /**
     * <code>optional uint32 teammate_hero_id = 4;</code>
     */
    public boolean hasTeammateHeroId() {
      return ((bitField0_ & 0x00000008) == 0x00000008);
    }
    /**
     * <code>optional uint32 teammate_hero_id = 4;</code>
     */
    public int getTeammateHeroId() {
      return teammateHeroId_;
    }

    public static final int TEAMMATE_NAME_FIELD_NUMBER = 5;
    private java.lang.Object teammateName_;
    /**
     * <code>optional string teammate_name = 5;</code>
     */
    public boolean hasTeammateName() {
      return ((bitField0_ & 0x00000010) == 0x00000010);
    }
    /**
     * <code>optional string teammate_name = 5;</code>
     */
    public java.lang.String getTeammateName() {
      java.lang.Object ref = teammateName_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          teammateName_ = s;
        }
        return s;
      }
    }
    /**
     * <code>optional string teammate_name = 5;</code>
     */
    public com.google.protobuf.ByteString
        getTeammateNameBytes() {
      java.lang.Object ref = teammateName_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        teammateName_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int TEAMMATE_ACCOUNT_ID_FIELD_NUMBER = 6;
    private int teammateAccountId_;
    /**
     * <code>optional uint32 teammate_account_id = 6;</code>
     */
    public boolean hasTeammateAccountId() {
      return ((bitField0_ & 0x00000020) == 0x00000020);
    }
    /**
     * <code>optional uint32 teammate_account_id = 6;</code>
     */
    public int getTeammateAccountId() {
      return teammateAccountId_;
    }

    private void initFields() {
      surveyId_ = 0;
      matchId_ = 0;
      responseStyle_ = "";
      teammateHeroId_ = 0;
      teammateName_ = "";
      teammateAccountId_ = 0;
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeInt32(1, surveyId_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeUInt32(2, matchId_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        output.writeBytes(3, getResponseStyleBytes());
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        output.writeUInt32(4, teammateHeroId_);
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        output.writeBytes(5, getTeammateNameBytes());
      }
      if (((bitField0_ & 0x00000020) == 0x00000020)) {
        output.writeUInt32(6, teammateAccountId_);
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(1, surveyId_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(2, matchId_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(3, getResponseStyleBytes());
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(4, teammateHeroId_);
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(5, getTeammateNameBytes());
      }
      if (((bitField0_ & 0x00000020) == 0x00000020)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(6, teammateAccountId_);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_ShowSurvey parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_ShowSurvey parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_ShowSurvey parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_ShowSurvey parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_ShowSurvey parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_ShowSurvey parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_ShowSurvey parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_ShowSurvey parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_ShowSurvey parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_ShowSurvey parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_ShowSurvey prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code CDOTAUserMsg_ShowSurvey}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:CDOTAUserMsg_ShowSurvey)
        skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_ShowSurveyOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return skadistats.clarity.wire.common.proto.DotaUserMessages.internal_static_CDOTAUserMsg_ShowSurvey_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return skadistats.clarity.wire.common.proto.DotaUserMessages.internal_static_CDOTAUserMsg_ShowSurvey_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_ShowSurvey.class, skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_ShowSurvey.Builder.class);
      }

      // Construct using skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_ShowSurvey.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        surveyId_ = 0;
        bitField0_ = (bitField0_ & ~0x00000001);
        matchId_ = 0;
        bitField0_ = (bitField0_ & ~0x00000002);
        responseStyle_ = "";
        bitField0_ = (bitField0_ & ~0x00000004);
        teammateHeroId_ = 0;
        bitField0_ = (bitField0_ & ~0x00000008);
        teammateName_ = "";
        bitField0_ = (bitField0_ & ~0x00000010);
        teammateAccountId_ = 0;
        bitField0_ = (bitField0_ & ~0x00000020);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return skadistats.clarity.wire.common.proto.DotaUserMessages.internal_static_CDOTAUserMsg_ShowSurvey_descriptor;
      }

      public skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_ShowSurvey getDefaultInstanceForType() {
        return skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_ShowSurvey.getDefaultInstance();
      }

      public skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_ShowSurvey build() {
        skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_ShowSurvey result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_ShowSurvey buildPartial() {
        skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_ShowSurvey result = new skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_ShowSurvey(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.surveyId_ = surveyId_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.matchId_ = matchId_;
        if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
          to_bitField0_ |= 0x00000004;
        }
        result.responseStyle_ = responseStyle_;
        if (((from_bitField0_ & 0x00000008) == 0x00000008)) {
          to_bitField0_ |= 0x00000008;
        }
        result.teammateHeroId_ = teammateHeroId_;
        if (((from_bitField0_ & 0x00000010) == 0x00000010)) {
          to_bitField0_ |= 0x00000010;
        }
        result.teammateName_ = teammateName_;
        if (((from_bitField0_ & 0x00000020) == 0x00000020)) {
          to_bitField0_ |= 0x00000020;
        }
        result.teammateAccountId_ = teammateAccountId_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_ShowSurvey) {
          return mergeFrom((skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_ShowSurvey)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_ShowSurvey other) {
        if (other == skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_ShowSurvey.getDefaultInstance()) return this;
        if (other.hasSurveyId()) {
          setSurveyId(other.getSurveyId());
        }
        if (other.hasMatchId()) {
          setMatchId(other.getMatchId());
        }
        if (other.hasResponseStyle()) {
          bitField0_ |= 0x00000004;
          responseStyle_ = other.responseStyle_;
          onChanged();
        }
        if (other.hasTeammateHeroId()) {
          setTeammateHeroId(other.getTeammateHeroId());
        }
        if (other.hasTeammateName()) {
          bitField0_ |= 0x00000010;
          teammateName_ = other.teammateName_;
          onChanged();
        }
        if (other.hasTeammateAccountId()) {
          setTeammateAccountId(other.getTeammateAccountId());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_ShowSurvey parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_ShowSurvey) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private int surveyId_ ;
      /**
       * <code>optional int32 survey_id = 1;</code>
       */
      public boolean hasSurveyId() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>optional int32 survey_id = 1;</code>
       */
      public int getSurveyId() {
        return surveyId_;
      }
      /**
       * <code>optional int32 survey_id = 1;</code>
       */
      public Builder setSurveyId(int value) {
        bitField0_ |= 0x00000001;
        surveyId_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 survey_id = 1;</code>
       */
      public Builder clearSurveyId() {
        bitField0_ = (bitField0_ & ~0x00000001);
        surveyId_ = 0;
        onChanged();
        return this;
      }

      private int matchId_ ;
      /**
       * <code>optional uint32 match_id = 2;</code>
       */
      public boolean hasMatchId() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>optional uint32 match_id = 2;</code>
       */
      public int getMatchId() {
        return matchId_;
      }
      /**
       * <code>optional uint32 match_id = 2;</code>
       */
      public Builder setMatchId(int value) {
        bitField0_ |= 0x00000002;
        matchId_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional uint32 match_id = 2;</code>
       */
      public Builder clearMatchId() {
        bitField0_ = (bitField0_ & ~0x00000002);
        matchId_ = 0;
        onChanged();
        return this;
      }

      private java.lang.Object responseStyle_ = "";
      /**
       * <code>optional string response_style = 3;</code>
       */
      public boolean hasResponseStyle() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }
      /**
       * <code>optional string response_style = 3;</code>
       */
      public java.lang.String getResponseStyle() {
        java.lang.Object ref = responseStyle_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          if (bs.isValidUtf8()) {
            responseStyle_ = s;
          }
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>optional string response_style = 3;</code>
       */
      public com.google.protobuf.ByteString
          getResponseStyleBytes() {
        java.lang.Object ref = responseStyle_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          responseStyle_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>optional string response_style = 3;</code>
       */
      public Builder setResponseStyle(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000004;
        responseStyle_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional string response_style = 3;</code>
       */
      public Builder clearResponseStyle() {
        bitField0_ = (bitField0_ & ~0x00000004);
        responseStyle_ = getDefaultInstance().getResponseStyle();
        onChanged();
        return this;
      }
      /**
       * <code>optional string response_style = 3;</code>
       */
      public Builder setResponseStyleBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000004;
        responseStyle_ = value;
        onChanged();
        return this;
      }

      private int teammateHeroId_ ;
      /**
       * <code>optional uint32 teammate_hero_id = 4;</code>
       */
      public boolean hasTeammateHeroId() {
        return ((bitField0_ & 0x00000008) == 0x00000008);
      }
      /**
       * <code>optional uint32 teammate_hero_id = 4;</code>
       */
      public int getTeammateHeroId() {
        return teammateHeroId_;
      }
      /**
       * <code>optional uint32 teammate_hero_id = 4;</code>
       */
      public Builder setTeammateHeroId(int value) {
        bitField0_ |= 0x00000008;
        teammateHeroId_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional uint32 teammate_hero_id = 4;</code>
       */
      public Builder clearTeammateHeroId() {
        bitField0_ = (bitField0_ & ~0x00000008);
        teammateHeroId_ = 0;
        onChanged();
        return this;
      }

      private java.lang.Object teammateName_ = "";
      /**
       * <code>optional string teammate_name = 5;</code>
       */
      public boolean hasTeammateName() {
        return ((bitField0_ & 0x00000010) == 0x00000010);
      }
      /**
       * <code>optional string teammate_name = 5;</code>
       */
      public java.lang.String getTeammateName() {
        java.lang.Object ref = teammateName_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          if (bs.isValidUtf8()) {
            teammateName_ = s;
          }
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>optional string teammate_name = 5;</code>
       */
      public com.google.protobuf.ByteString
          getTeammateNameBytes() {
        java.lang.Object ref = teammateName_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          teammateName_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>optional string teammate_name = 5;</code>
       */
      public Builder setTeammateName(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000010;
        teammateName_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional string teammate_name = 5;</code>
       */
      public Builder clearTeammateName() {
        bitField0_ = (bitField0_ & ~0x00000010);
        teammateName_ = getDefaultInstance().getTeammateName();
        onChanged();
        return this;
      }
      /**
       * <code>optional string teammate_name = 5;</code>
       */
      public Builder setTeammateNameBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000010;
        teammateName_ = value;
        onChanged();
        return this;
      }

      private int teammateAccountId_ ;
      /**
       * <code>optional uint32 teammate_account_id = 6;</code>
       */
      public boolean hasTeammateAccountId() {
        return ((bitField0_ & 0x00000020) == 0x00000020);
      }
      /**
       * <code>optional uint32 teammate_account_id = 6;</code>
       */
      public int getTeammateAccountId() {
        return teammateAccountId_;
      }
      /**
       * <code>optional uint32 teammate_account_id = 6;</code>
       */
      public Builder setTeammateAccountId(int value) {
        bitField0_ |= 0x00000020;
        teammateAccountId_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional uint32 teammate_account_id = 6;</code>
       */
      public Builder clearTeammateAccountId() {
        bitField0_ = (bitField0_ & ~0x00000020);
        teammateAccountId_ = 0;
        onChanged();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:CDOTAUserMsg_ShowSurvey)
    }

    static {
      defaultInstance = new CDOTAUserMsg_ShowSurvey(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:CDOTAUserMsg_ShowSurvey)
  }

  public interface CDOTAUserMsg_UpdateSharedContentOrBuilder extends
      // @@protoc_insertion_point(interface_extends:CDOTAUserMsg_UpdateSharedContent)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>optional int32 slot_type = 1;</code>
     */
    boolean hasSlotType();
    /**
     * <code>optional int32 slot_type = 1;</code>
     */
    int getSlotType();
  }
  /**
   * Protobuf type {@code CDOTAUserMsg_UpdateSharedContent}
   */
  public static final class CDOTAUserMsg_UpdateSharedContent extends
      com.google.protobuf.GeneratedMessage implements
      // @@protoc_insertion_point(message_implements:CDOTAUserMsg_UpdateSharedContent)
      CDOTAUserMsg_UpdateSharedContentOrBuilder {
    // Use CDOTAUserMsg_UpdateSharedContent.newBuilder() to construct.
    private CDOTAUserMsg_UpdateSharedContent(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private CDOTAUserMsg_UpdateSharedContent(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final CDOTAUserMsg_UpdateSharedContent defaultInstance;
    public static CDOTAUserMsg_UpdateSharedContent getDefaultInstance() {
      return defaultInstance;
    }

    public CDOTAUserMsg_UpdateSharedContent getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private CDOTAUserMsg_UpdateSharedContent(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 8: {
              bitField0_ |= 0x00000001;
              slotType_ = input.readInt32();
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return skadistats.clarity.wire.common.proto.DotaUserMessages.internal_static_CDOTAUserMsg_UpdateSharedContent_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return skadistats.clarity.wire.common.proto.DotaUserMessages.internal_static_CDOTAUserMsg_UpdateSharedContent_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_UpdateSharedContent.class, skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_UpdateSharedContent.Builder.class);
    }

    public static com.google.protobuf.Parser<CDOTAUserMsg_UpdateSharedContent> PARSER =
        new com.google.protobuf.AbstractParser<CDOTAUserMsg_UpdateSharedContent>() {
      public CDOTAUserMsg_UpdateSharedContent parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new CDOTAUserMsg_UpdateSharedContent(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<CDOTAUserMsg_UpdateSharedContent> getParserForType() {
      return PARSER;
    }

    private int bitField0_;
    public static final int SLOT_TYPE_FIELD_NUMBER = 1;
    private int slotType_;
    /**
     * <code>optional int32 slot_type = 1;</code>
     */
    public boolean hasSlotType() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>optional int32 slot_type = 1;</code>
     */
    public int getSlotType() {
      return slotType_;
    }

    private void initFields() {
      slotType_ = 0;
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeInt32(1, slotType_);
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(1, slotType_);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_UpdateSharedContent parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_UpdateSharedContent parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_UpdateSharedContent parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_UpdateSharedContent parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_UpdateSharedContent parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_UpdateSharedContent parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_UpdateSharedContent parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_UpdateSharedContent parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_UpdateSharedContent parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_UpdateSharedContent parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_UpdateSharedContent prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code CDOTAUserMsg_UpdateSharedContent}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:CDOTAUserMsg_UpdateSharedContent)
        skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_UpdateSharedContentOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return skadistats.clarity.wire.common.proto.DotaUserMessages.internal_static_CDOTAUserMsg_UpdateSharedContent_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return skadistats.clarity.wire.common.proto.DotaUserMessages.internal_static_CDOTAUserMsg_UpdateSharedContent_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_UpdateSharedContent.class, skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_UpdateSharedContent.Builder.class);
      }

      // Construct using skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_UpdateSharedContent.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        slotType_ = 0;
        bitField0_ = (bitField0_ & ~0x00000001);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return skadistats.clarity.wire.common.proto.DotaUserMessages.internal_static_CDOTAUserMsg_UpdateSharedContent_descriptor;
      }

      public skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_UpdateSharedContent getDefaultInstanceForType() {
        return skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_UpdateSharedContent.getDefaultInstance();
      }

      public skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_UpdateSharedContent build() {
        skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_UpdateSharedContent result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_UpdateSharedContent buildPartial() {
        skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_UpdateSharedContent result = new skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_UpdateSharedContent(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.slotType_ = slotType_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_UpdateSharedContent) {
          return mergeFrom((skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_UpdateSharedContent)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_UpdateSharedContent other) {
        if (other == skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_UpdateSharedContent.getDefaultInstance()) return this;
        if (other.hasSlotType()) {
          setSlotType(other.getSlotType());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_UpdateSharedContent parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_UpdateSharedContent) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private int slotType_ ;
      /**
       * <code>optional int32 slot_type = 1;</code>
       */
      public boolean hasSlotType() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>optional int32 slot_type = 1;</code>
       */
      public int getSlotType() {
        return slotType_;
      }
      /**
       * <code>optional int32 slot_type = 1;</code>
       */
      public Builder setSlotType(int value) {
        bitField0_ |= 0x00000001;
        slotType_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 slot_type = 1;</code>
       */
      public Builder clearSlotType() {
        bitField0_ = (bitField0_ & ~0x00000001);
        slotType_ = 0;
        onChanged();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:CDOTAUserMsg_UpdateSharedContent)
    }

    static {
      defaultInstance = new CDOTAUserMsg_UpdateSharedContent(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:CDOTAUserMsg_UpdateSharedContent)
  }

  public interface CDOTAUserMsg_TutorialRequestExpOrBuilder extends
      // @@protoc_insertion_point(interface_extends:CDOTAUserMsg_TutorialRequestExp)
      com.google.protobuf.MessageOrBuilder {
  }
  /**
   * Protobuf type {@code CDOTAUserMsg_TutorialRequestExp}
   */
  public static final class CDOTAUserMsg_TutorialRequestExp extends
      com.google.protobuf.GeneratedMessage implements
      // @@protoc_insertion_point(message_implements:CDOTAUserMsg_TutorialRequestExp)
      CDOTAUserMsg_TutorialRequestExpOrBuilder {
    // Use CDOTAUserMsg_TutorialRequestExp.newBuilder() to construct.
    private CDOTAUserMsg_TutorialRequestExp(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private CDOTAUserMsg_TutorialRequestExp(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final CDOTAUserMsg_TutorialRequestExp defaultInstance;
    public static CDOTAUserMsg_TutorialRequestExp getDefaultInstance() {
      return defaultInstance;
    }

    public CDOTAUserMsg_TutorialRequestExp getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private CDOTAUserMsg_TutorialRequestExp(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return skadistats.clarity.wire.common.proto.DotaUserMessages.internal_static_CDOTAUserMsg_TutorialRequestExp_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return skadistats.clarity.wire.common.proto.DotaUserMessages.internal_static_CDOTAUserMsg_TutorialRequestExp_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_TutorialRequestExp.class, skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_TutorialRequestExp.Builder.class);
    }

    public static com.google.protobuf.Parser<CDOTAUserMsg_TutorialRequestExp> PARSER =
        new com.google.protobuf.AbstractParser<CDOTAUserMsg_TutorialRequestExp>() {
      public CDOTAUserMsg_TutorialRequestExp parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new CDOTAUserMsg_TutorialRequestExp(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<CDOTAUserMsg_TutorialRequestExp> getParserForType() {
      return PARSER;
    }

    private void initFields() {
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_TutorialRequestExp parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_TutorialRequestExp parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_TutorialRequestExp parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_TutorialRequestExp parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_TutorialRequestExp parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_TutorialRequestExp parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_TutorialRequestExp parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_TutorialRequestExp parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_TutorialRequestExp parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_TutorialRequestExp parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_TutorialRequestExp prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code CDOTAUserMsg_TutorialRequestExp}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:CDOTAUserMsg_TutorialRequestExp)
        skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_TutorialRequestExpOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return skadistats.clarity.wire.common.proto.DotaUserMessages.internal_static_CDOTAUserMsg_TutorialRequestExp_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return skadistats.clarity.wire.common.proto.DotaUserMessages.internal_static_CDOTAUserMsg_TutorialRequestExp_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_TutorialRequestExp.class, skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_TutorialRequestExp.Builder.class);
      }

      // Construct using skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_TutorialRequestExp.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return skadistats.clarity.wire.common.proto.DotaUserMessages.internal_static_CDOTAUserMsg_TutorialRequestExp_descriptor;
      }

      public skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_TutorialRequestExp getDefaultInstanceForType() {
        return skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_TutorialRequestExp.getDefaultInstance();
      }

      public skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_TutorialRequestExp build() {
        skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_TutorialRequestExp result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_TutorialRequestExp buildPartial() {
        skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_TutorialRequestExp result = new skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_TutorialRequestExp(this);
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_TutorialRequestExp) {
          return mergeFrom((skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_TutorialRequestExp)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_TutorialRequestExp other) {
        if (other == skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_TutorialRequestExp.getDefaultInstance()) return this;
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_TutorialRequestExp parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_TutorialRequestExp) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }

      // @@protoc_insertion_point(builder_scope:CDOTAUserMsg_TutorialRequestExp)
    }

    static {
      defaultInstance = new CDOTAUserMsg_TutorialRequestExp(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:CDOTAUserMsg_TutorialRequestExp)
  }

  public interface CDOTAUserMsg_TutorialFadeOrBuilder extends
      // @@protoc_insertion_point(interface_extends:CDOTAUserMsg_TutorialFade)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>optional int32 tgt_alpha = 1;</code>
     */
    boolean hasTgtAlpha();
    /**
     * <code>optional int32 tgt_alpha = 1;</code>
     */
    int getTgtAlpha();
  }
  /**
   * Protobuf type {@code CDOTAUserMsg_TutorialFade}
   */
  public static final class CDOTAUserMsg_TutorialFade extends
      com.google.protobuf.GeneratedMessage implements
      // @@protoc_insertion_point(message_implements:CDOTAUserMsg_TutorialFade)
      CDOTAUserMsg_TutorialFadeOrBuilder {
    // Use CDOTAUserMsg_TutorialFade.newBuilder() to construct.
    private CDOTAUserMsg_TutorialFade(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private CDOTAUserMsg_TutorialFade(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final CDOTAUserMsg_TutorialFade defaultInstance;
    public static CDOTAUserMsg_TutorialFade getDefaultInstance() {
      return defaultInstance;
    }

    public CDOTAUserMsg_TutorialFade getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private CDOTAUserMsg_TutorialFade(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 8: {
              bitField0_ |= 0x00000001;
              tgtAlpha_ = input.readInt32();
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return skadistats.clarity.wire.common.proto.DotaUserMessages.internal_static_CDOTAUserMsg_TutorialFade_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return skadistats.clarity.wire.common.proto.DotaUserMessages.internal_static_CDOTAUserMsg_TutorialFade_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_TutorialFade.class, skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_TutorialFade.Builder.class);
    }

    public static com.google.protobuf.Parser<CDOTAUserMsg_TutorialFade> PARSER =
        new com.google.protobuf.AbstractParser<CDOTAUserMsg_TutorialFade>() {
      public CDOTAUserMsg_TutorialFade parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new CDOTAUserMsg_TutorialFade(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<CDOTAUserMsg_TutorialFade> getParserForType() {
      return PARSER;
    }

    private int bitField0_;
    public static final int TGT_ALPHA_FIELD_NUMBER = 1;
    private int tgtAlpha_;
    /**
     * <code>optional int32 tgt_alpha = 1;</code>
     */
    public boolean hasTgtAlpha() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>optional int32 tgt_alpha = 1;</code>
     */
    public int getTgtAlpha() {
      return tgtAlpha_;
    }

    private void initFields() {
      tgtAlpha_ = 0;
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeInt32(1, tgtAlpha_);
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(1, tgtAlpha_);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_TutorialFade parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_TutorialFade parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_TutorialFade parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_TutorialFade parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_TutorialFade parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_TutorialFade parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_TutorialFade parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_TutorialFade parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_TutorialFade parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_TutorialFade parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_TutorialFade prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code CDOTAUserMsg_TutorialFade}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:CDOTAUserMsg_TutorialFade)
        skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_TutorialFadeOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return skadistats.clarity.wire.common.proto.DotaUserMessages.internal_static_CDOTAUserMsg_TutorialFade_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return skadistats.clarity.wire.common.proto.DotaUserMessages.internal_static_CDOTAUserMsg_TutorialFade_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_TutorialFade.class, skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_TutorialFade.Builder.class);
      }

      // Construct using skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_TutorialFade.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        tgtAlpha_ = 0;
        bitField0_ = (bitField0_ & ~0x00000001);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return skadistats.clarity.wire.common.proto.DotaUserMessages.internal_static_CDOTAUserMsg_TutorialFade_descriptor;
      }

      public skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_TutorialFade getDefaultInstanceForType() {
        return skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_TutorialFade.getDefaultInstance();
      }

      public skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_TutorialFade build() {
        skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_TutorialFade result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_TutorialFade buildPartial() {
        skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_TutorialFade result = new skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_TutorialFade(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.tgtAlpha_ = tgtAlpha_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_TutorialFade) {
          return mergeFrom((skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_TutorialFade)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_TutorialFade other) {
        if (other == skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_TutorialFade.getDefaultInstance()) return this;
        if (other.hasTgtAlpha()) {
          setTgtAlpha(other.getTgtAlpha());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_TutorialFade parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_TutorialFade) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private int tgtAlpha_ ;
      /**
       * <code>optional int32 tgt_alpha = 1;</code>
       */
      public boolean hasTgtAlpha() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>optional int32 tgt_alpha = 1;</code>
       */
      public int getTgtAlpha() {
        return tgtAlpha_;
      }
      /**
       * <code>optional int32 tgt_alpha = 1;</code>
       */
      public Builder setTgtAlpha(int value) {
        bitField0_ |= 0x00000001;
        tgtAlpha_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 tgt_alpha = 1;</code>
       */
      public Builder clearTgtAlpha() {
        bitField0_ = (bitField0_ & ~0x00000001);
        tgtAlpha_ = 0;
        onChanged();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:CDOTAUserMsg_TutorialFade)
    }

    static {
      defaultInstance = new CDOTAUserMsg_TutorialFade(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:CDOTAUserMsg_TutorialFade)
  }

  public interface CDOTAUserMsg_TutorialPingMinimapOrBuilder extends
      // @@protoc_insertion_point(interface_extends:CDOTAUserMsg_TutorialPingMinimap)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>optional uint32 player_id = 1;</code>
     */
    boolean hasPlayerId();
    /**
     * <code>optional uint32 player_id = 1;</code>
     */
    int getPlayerId();

    /**
     * <code>optional float pos_x = 2;</code>
     */
    boolean hasPosX();
    /**
     * <code>optional float pos_x = 2;</code>
     */
    float getPosX();

    /**
     * <code>optional float pos_y = 3;</code>
     */
    boolean hasPosY();
    /**
     * <code>optional float pos_y = 3;</code>
     */
    float getPosY();

    /**
     * <code>optional float pos_z = 4;</code>
     */
    boolean hasPosZ();
    /**
     * <code>optional float pos_z = 4;</code>
     */
    float getPosZ();

    /**
     * <code>optional int32 entity_index = 5;</code>
     */
    boolean hasEntityIndex();
    /**
     * <code>optional int32 entity_index = 5;</code>
     */
    int getEntityIndex();
  }
  /**
   * Protobuf type {@code CDOTAUserMsg_TutorialPingMinimap}
   */
  public static final class CDOTAUserMsg_TutorialPingMinimap extends
      com.google.protobuf.GeneratedMessage implements
      // @@protoc_insertion_point(message_implements:CDOTAUserMsg_TutorialPingMinimap)
      CDOTAUserMsg_TutorialPingMinimapOrBuilder {
    // Use CDOTAUserMsg_TutorialPingMinimap.newBuilder() to construct.
    private CDOTAUserMsg_TutorialPingMinimap(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private CDOTAUserMsg_TutorialPingMinimap(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final CDOTAUserMsg_TutorialPingMinimap defaultInstance;
    public static CDOTAUserMsg_TutorialPingMinimap getDefaultInstance() {
      return defaultInstance;
    }

    public CDOTAUserMsg_TutorialPingMinimap getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private CDOTAUserMsg_TutorialPingMinimap(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 8: {
              bitField0_ |= 0x00000001;
              playerId_ = input.readUInt32();
              break;
            }
            case 21: {
              bitField0_ |= 0x00000002;
              posX_ = input.readFloat();
              break;
            }
            case 29: {
              bitField0_ |= 0x00000004;
              posY_ = input.readFloat();
              break;
            }
            case 37: {
              bitField0_ |= 0x00000008;
              posZ_ = input.readFloat();
              break;
            }
            case 40: {
              bitField0_ |= 0x00000010;
              entityIndex_ = input.readInt32();
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return skadistats.clarity.wire.common.proto.DotaUserMessages.internal_static_CDOTAUserMsg_TutorialPingMinimap_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return skadistats.clarity.wire.common.proto.DotaUserMessages.internal_static_CDOTAUserMsg_TutorialPingMinimap_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_TutorialPingMinimap.class, skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_TutorialPingMinimap.Builder.class);
    }

    public static com.google.protobuf.Parser<CDOTAUserMsg_TutorialPingMinimap> PARSER =
        new com.google.protobuf.AbstractParser<CDOTAUserMsg_TutorialPingMinimap>() {
      public CDOTAUserMsg_TutorialPingMinimap parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new CDOTAUserMsg_TutorialPingMinimap(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<CDOTAUserMsg_TutorialPingMinimap> getParserForType() {
      return PARSER;
    }

    private int bitField0_;
    public static final int PLAYER_ID_FIELD_NUMBER = 1;
    private int playerId_;
    /**
     * <code>optional uint32 player_id = 1;</code>
     */
    public boolean hasPlayerId() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>optional uint32 player_id = 1;</code>
     */
    public int getPlayerId() {
      return playerId_;
    }

    public static final int POS_X_FIELD_NUMBER = 2;
    private float posX_;
    /**
     * <code>optional float pos_x = 2;</code>
     */
    public boolean hasPosX() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>optional float pos_x = 2;</code>
     */
    public float getPosX() {
      return posX_;
    }

    public static final int POS_Y_FIELD_NUMBER = 3;
    private float posY_;
    /**
     * <code>optional float pos_y = 3;</code>
     */
    public boolean hasPosY() {
      return ((bitField0_ & 0x00000004) == 0x00000004);
    }
    /**
     * <code>optional float pos_y = 3;</code>
     */
    public float getPosY() {
      return posY_;
    }

    public static final int POS_Z_FIELD_NUMBER = 4;
    private float posZ_;
    /**
     * <code>optional float pos_z = 4;</code>
     */
    public boolean hasPosZ() {
      return ((bitField0_ & 0x00000008) == 0x00000008);
    }
    /**
     * <code>optional float pos_z = 4;</code>
     */
    public float getPosZ() {
      return posZ_;
    }

    public static final int ENTITY_INDEX_FIELD_NUMBER = 5;
    private int entityIndex_;
    /**
     * <code>optional int32 entity_index = 5;</code>
     */
    public boolean hasEntityIndex() {
      return ((bitField0_ & 0x00000010) == 0x00000010);
    }
    /**
     * <code>optional int32 entity_index = 5;</code>
     */
    public int getEntityIndex() {
      return entityIndex_;
    }

    private void initFields() {
      playerId_ = 0;
      posX_ = 0F;
      posY_ = 0F;
      posZ_ = 0F;
      entityIndex_ = 0;
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeUInt32(1, playerId_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeFloat(2, posX_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        output.writeFloat(3, posY_);
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        output.writeFloat(4, posZ_);
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        output.writeInt32(5, entityIndex_);
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(1, playerId_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeFloatSize(2, posX_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        size += com.google.protobuf.CodedOutputStream
          .computeFloatSize(3, posY_);
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        size += com.google.protobuf.CodedOutputStream
          .computeFloatSize(4, posZ_);
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(5, entityIndex_);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_TutorialPingMinimap parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_TutorialPingMinimap parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_TutorialPingMinimap parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_TutorialPingMinimap parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_TutorialPingMinimap parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_TutorialPingMinimap parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_TutorialPingMinimap parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_TutorialPingMinimap parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_TutorialPingMinimap parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_TutorialPingMinimap parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_TutorialPingMinimap prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code CDOTAUserMsg_TutorialPingMinimap}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:CDOTAUserMsg_TutorialPingMinimap)
        skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_TutorialPingMinimapOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return skadistats.clarity.wire.common.proto.DotaUserMessages.internal_static_CDOTAUserMsg_TutorialPingMinimap_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return skadistats.clarity.wire.common.proto.DotaUserMessages.internal_static_CDOTAUserMsg_TutorialPingMinimap_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_TutorialPingMinimap.class, skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_TutorialPingMinimap.Builder.class);
      }

      // Construct using skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_TutorialPingMinimap.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        playerId_ = 0;
        bitField0_ = (bitField0_ & ~0x00000001);
        posX_ = 0F;
        bitField0_ = (bitField0_ & ~0x00000002);
        posY_ = 0F;
        bitField0_ = (bitField0_ & ~0x00000004);
        posZ_ = 0F;
        bitField0_ = (bitField0_ & ~0x00000008);
        entityIndex_ = 0;
        bitField0_ = (bitField0_ & ~0x00000010);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return skadistats.clarity.wire.common.proto.DotaUserMessages.internal_static_CDOTAUserMsg_TutorialPingMinimap_descriptor;
      }

      public skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_TutorialPingMinimap getDefaultInstanceForType() {
        return skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_TutorialPingMinimap.getDefaultInstance();
      }

      public skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_TutorialPingMinimap build() {
        skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_TutorialPingMinimap result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_TutorialPingMinimap buildPartial() {
        skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_TutorialPingMinimap result = new skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_TutorialPingMinimap(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.playerId_ = playerId_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.posX_ = posX_;
        if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
          to_bitField0_ |= 0x00000004;
        }
        result.posY_ = posY_;
        if (((from_bitField0_ & 0x00000008) == 0x00000008)) {
          to_bitField0_ |= 0x00000008;
        }
        result.posZ_ = posZ_;
        if (((from_bitField0_ & 0x00000010) == 0x00000010)) {
          to_bitField0_ |= 0x00000010;
        }
        result.entityIndex_ = entityIndex_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_TutorialPingMinimap) {
          return mergeFrom((skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_TutorialPingMinimap)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_TutorialPingMinimap other) {
        if (other == skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_TutorialPingMinimap.getDefaultInstance()) return this;
        if (other.hasPlayerId()) {
          setPlayerId(other.getPlayerId());
        }
        if (other.hasPosX()) {
          setPosX(other.getPosX());
        }
        if (other.hasPosY()) {
          setPosY(other.getPosY());
        }
        if (other.hasPosZ()) {
          setPosZ(other.getPosZ());
        }
        if (other.hasEntityIndex()) {
          setEntityIndex(other.getEntityIndex());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_TutorialPingMinimap parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_TutorialPingMinimap) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private int playerId_ ;
      /**
       * <code>optional uint32 player_id = 1;</code>
       */
      public boolean hasPlayerId() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>optional uint32 player_id = 1;</code>
       */
      public int getPlayerId() {
        return playerId_;
      }
      /**
       * <code>optional uint32 player_id = 1;</code>
       */
      public Builder setPlayerId(int value) {
        bitField0_ |= 0x00000001;
        playerId_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional uint32 player_id = 1;</code>
       */
      public Builder clearPlayerId() {
        bitField0_ = (bitField0_ & ~0x00000001);
        playerId_ = 0;
        onChanged();
        return this;
      }

      private float posX_ ;
      /**
       * <code>optional float pos_x = 2;</code>
       */
      public boolean hasPosX() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>optional float pos_x = 2;</code>
       */
      public float getPosX() {
        return posX_;
      }
      /**
       * <code>optional float pos_x = 2;</code>
       */
      public Builder setPosX(float value) {
        bitField0_ |= 0x00000002;
        posX_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional float pos_x = 2;</code>
       */
      public Builder clearPosX() {
        bitField0_ = (bitField0_ & ~0x00000002);
        posX_ = 0F;
        onChanged();
        return this;
      }

      private float posY_ ;
      /**
       * <code>optional float pos_y = 3;</code>
       */
      public boolean hasPosY() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }
      /**
       * <code>optional float pos_y = 3;</code>
       */
      public float getPosY() {
        return posY_;
      }
      /**
       * <code>optional float pos_y = 3;</code>
       */
      public Builder setPosY(float value) {
        bitField0_ |= 0x00000004;
        posY_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional float pos_y = 3;</code>
       */
      public Builder clearPosY() {
        bitField0_ = (bitField0_ & ~0x00000004);
        posY_ = 0F;
        onChanged();
        return this;
      }

      private float posZ_ ;
      /**
       * <code>optional float pos_z = 4;</code>
       */
      public boolean hasPosZ() {
        return ((bitField0_ & 0x00000008) == 0x00000008);
      }
      /**
       * <code>optional float pos_z = 4;</code>
       */
      public float getPosZ() {
        return posZ_;
      }
      /**
       * <code>optional float pos_z = 4;</code>
       */
      public Builder setPosZ(float value) {
        bitField0_ |= 0x00000008;
        posZ_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional float pos_z = 4;</code>
       */
      public Builder clearPosZ() {
        bitField0_ = (bitField0_ & ~0x00000008);
        posZ_ = 0F;
        onChanged();
        return this;
      }

      private int entityIndex_ ;
      /**
       * <code>optional int32 entity_index = 5;</code>
       */
      public boolean hasEntityIndex() {
        return ((bitField0_ & 0x00000010) == 0x00000010);
      }
      /**
       * <code>optional int32 entity_index = 5;</code>
       */
      public int getEntityIndex() {
        return entityIndex_;
      }
      /**
       * <code>optional int32 entity_index = 5;</code>
       */
      public Builder setEntityIndex(int value) {
        bitField0_ |= 0x00000010;
        entityIndex_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 entity_index = 5;</code>
       */
      public Builder clearEntityIndex() {
        bitField0_ = (bitField0_ & ~0x00000010);
        entityIndex_ = 0;
        onChanged();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:CDOTAUserMsg_TutorialPingMinimap)
    }

    static {
      defaultInstance = new CDOTAUserMsg_TutorialPingMinimap(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:CDOTAUserMsg_TutorialPingMinimap)
  }

  public interface CDOTAUserMsg_GamerulesStateChangedOrBuilder extends
      // @@protoc_insertion_point(interface_extends:CDOTAUserMsg_GamerulesStateChanged)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>optional uint32 state = 1;</code>
     */
    boolean hasState();
    /**
     * <code>optional uint32 state = 1;</code>
     */
    int getState();
  }
  /**
   * Protobuf type {@code CDOTAUserMsg_GamerulesStateChanged}
   */
  public static final class CDOTAUserMsg_GamerulesStateChanged extends
      com.google.protobuf.GeneratedMessage implements
      // @@protoc_insertion_point(message_implements:CDOTAUserMsg_GamerulesStateChanged)
      CDOTAUserMsg_GamerulesStateChangedOrBuilder {
    // Use CDOTAUserMsg_GamerulesStateChanged.newBuilder() to construct.
    private CDOTAUserMsg_GamerulesStateChanged(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private CDOTAUserMsg_GamerulesStateChanged(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final CDOTAUserMsg_GamerulesStateChanged defaultInstance;
    public static CDOTAUserMsg_GamerulesStateChanged getDefaultInstance() {
      return defaultInstance;
    }

    public CDOTAUserMsg_GamerulesStateChanged getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private CDOTAUserMsg_GamerulesStateChanged(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 8: {
              bitField0_ |= 0x00000001;
              state_ = input.readUInt32();
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return skadistats.clarity.wire.common.proto.DotaUserMessages.internal_static_CDOTAUserMsg_GamerulesStateChanged_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return skadistats.clarity.wire.common.proto.DotaUserMessages.internal_static_CDOTAUserMsg_GamerulesStateChanged_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_GamerulesStateChanged.class, skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_GamerulesStateChanged.Builder.class);
    }

    public static com.google.protobuf.Parser<CDOTAUserMsg_GamerulesStateChanged> PARSER =
        new com.google.protobuf.AbstractParser<CDOTAUserMsg_GamerulesStateChanged>() {
      public CDOTAUserMsg_GamerulesStateChanged parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new CDOTAUserMsg_GamerulesStateChanged(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<CDOTAUserMsg_GamerulesStateChanged> getParserForType() {
      return PARSER;
    }

    private int bitField0_;
    public static final int STATE_FIELD_NUMBER = 1;
    private int state_;
    /**
     * <code>optional uint32 state = 1;</code>
     */
    public boolean hasState() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>optional uint32 state = 1;</code>
     */
    public int getState() {
      return state_;
    }

    private void initFields() {
      state_ = 0;
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeUInt32(1, state_);
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(1, state_);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_GamerulesStateChanged parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_GamerulesStateChanged parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_GamerulesStateChanged parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_GamerulesStateChanged parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_GamerulesStateChanged parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_GamerulesStateChanged parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_GamerulesStateChanged parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_GamerulesStateChanged parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_GamerulesStateChanged parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_GamerulesStateChanged parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_GamerulesStateChanged prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code CDOTAUserMsg_GamerulesStateChanged}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:CDOTAUserMsg_GamerulesStateChanged)
        skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_GamerulesStateChangedOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return skadistats.clarity.wire.common.proto.DotaUserMessages.internal_static_CDOTAUserMsg_GamerulesStateChanged_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return skadistats.clarity.wire.common.proto.DotaUserMessages.internal_static_CDOTAUserMsg_GamerulesStateChanged_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_GamerulesStateChanged.class, skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_GamerulesStateChanged.Builder.class);
      }

      // Construct using skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_GamerulesStateChanged.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        state_ = 0;
        bitField0_ = (bitField0_ & ~0x00000001);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return skadistats.clarity.wire.common.proto.DotaUserMessages.internal_static_CDOTAUserMsg_GamerulesStateChanged_descriptor;
      }

      public skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_GamerulesStateChanged getDefaultInstanceForType() {
        return skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_GamerulesStateChanged.getDefaultInstance();
      }

      public skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_GamerulesStateChanged build() {
        skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_GamerulesStateChanged result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_GamerulesStateChanged buildPartial() {
        skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_GamerulesStateChanged result = new skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_GamerulesStateChanged(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.state_ = state_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_GamerulesStateChanged) {
          return mergeFrom((skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_GamerulesStateChanged)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_GamerulesStateChanged other) {
        if (other == skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_GamerulesStateChanged.getDefaultInstance()) return this;
        if (other.hasState()) {
          setState(other.getState());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_GamerulesStateChanged parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_GamerulesStateChanged) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private int state_ ;
      /**
       * <code>optional uint32 state = 1;</code>
       */
      public boolean hasState() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>optional uint32 state = 1;</code>
       */
      public int getState() {
        return state_;
      }
      /**
       * <code>optional uint32 state = 1;</code>
       */
      public Builder setState(int value) {
        bitField0_ |= 0x00000001;
        state_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional uint32 state = 1;</code>
       */
      public Builder clearState() {
        bitField0_ = (bitField0_ & ~0x00000001);
        state_ = 0;
        onChanged();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:CDOTAUserMsg_GamerulesStateChanged)
    }

    static {
      defaultInstance = new CDOTAUserMsg_GamerulesStateChanged(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:CDOTAUserMsg_GamerulesStateChanged)
  }

  public interface CDOTAUserMsg_AddQuestLogEntryOrBuilder extends
      // @@protoc_insertion_point(interface_extends:CDOTAUserMsg_AddQuestLogEntry)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>optional string npc_name = 1;</code>
     */
    boolean hasNpcName();
    /**
     * <code>optional string npc_name = 1;</code>
     */
    java.lang.String getNpcName();
    /**
     * <code>optional string npc_name = 1;</code>
     */
    com.google.protobuf.ByteString
        getNpcNameBytes();

    /**
     * <code>optional string npc_dialog = 2;</code>
     */
    boolean hasNpcDialog();
    /**
     * <code>optional string npc_dialog = 2;</code>
     */
    java.lang.String getNpcDialog();
    /**
     * <code>optional string npc_dialog = 2;</code>
     */
    com.google.protobuf.ByteString
        getNpcDialogBytes();
  }
  /**
   * Protobuf type {@code CDOTAUserMsg_AddQuestLogEntry}
   */
  public static final class CDOTAUserMsg_AddQuestLogEntry extends
      com.google.protobuf.GeneratedMessage implements
      // @@protoc_insertion_point(message_implements:CDOTAUserMsg_AddQuestLogEntry)
      CDOTAUserMsg_AddQuestLogEntryOrBuilder {
    // Use CDOTAUserMsg_AddQuestLogEntry.newBuilder() to construct.
    private CDOTAUserMsg_AddQuestLogEntry(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private CDOTAUserMsg_AddQuestLogEntry(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final CDOTAUserMsg_AddQuestLogEntry defaultInstance;
    public static CDOTAUserMsg_AddQuestLogEntry getDefaultInstance() {
      return defaultInstance;
    }

    public CDOTAUserMsg_AddQuestLogEntry getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private CDOTAUserMsg_AddQuestLogEntry(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 10: {
              com.google.protobuf.ByteString bs = input.readBytes();
              bitField0_ |= 0x00000001;
              npcName_ = bs;
              break;
            }
            case 18: {
              com.google.protobuf.ByteString bs = input.readBytes();
              bitField0_ |= 0x00000002;
              npcDialog_ = bs;
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return skadistats.clarity.wire.common.proto.DotaUserMessages.internal_static_CDOTAUserMsg_AddQuestLogEntry_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return skadistats.clarity.wire.common.proto.DotaUserMessages.internal_static_CDOTAUserMsg_AddQuestLogEntry_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_AddQuestLogEntry.class, skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_AddQuestLogEntry.Builder.class);
    }

    public static com.google.protobuf.Parser<CDOTAUserMsg_AddQuestLogEntry> PARSER =
        new com.google.protobuf.AbstractParser<CDOTAUserMsg_AddQuestLogEntry>() {
      public CDOTAUserMsg_AddQuestLogEntry parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new CDOTAUserMsg_AddQuestLogEntry(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<CDOTAUserMsg_AddQuestLogEntry> getParserForType() {
      return PARSER;
    }

    private int bitField0_;
    public static final int NPC_NAME_FIELD_NUMBER = 1;
    private java.lang.Object npcName_;
    /**
     * <code>optional string npc_name = 1;</code>
     */
    public boolean hasNpcName() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>optional string npc_name = 1;</code>
     */
    public java.lang.String getNpcName() {
      java.lang.Object ref = npcName_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          npcName_ = s;
        }
        return s;
      }
    }
    /**
     * <code>optional string npc_name = 1;</code>
     */
    public com.google.protobuf.ByteString
        getNpcNameBytes() {
      java.lang.Object ref = npcName_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        npcName_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int NPC_DIALOG_FIELD_NUMBER = 2;
    private java.lang.Object npcDialog_;
    /**
     * <code>optional string npc_dialog = 2;</code>
     */
    public boolean hasNpcDialog() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>optional string npc_dialog = 2;</code>
     */
    public java.lang.String getNpcDialog() {
      java.lang.Object ref = npcDialog_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          npcDialog_ = s;
        }
        return s;
      }
    }
    /**
     * <code>optional string npc_dialog = 2;</code>
     */
    public com.google.protobuf.ByteString
        getNpcDialogBytes() {
      java.lang.Object ref = npcDialog_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        npcDialog_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    private void initFields() {
      npcName_ = "";
      npcDialog_ = "";
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeBytes(1, getNpcNameBytes());
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeBytes(2, getNpcDialogBytes());
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(1, getNpcNameBytes());
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(2, getNpcDialogBytes());
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_AddQuestLogEntry parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_AddQuestLogEntry parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_AddQuestLogEntry parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_AddQuestLogEntry parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_AddQuestLogEntry parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_AddQuestLogEntry parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_AddQuestLogEntry parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_AddQuestLogEntry parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_AddQuestLogEntry parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_AddQuestLogEntry parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_AddQuestLogEntry prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code CDOTAUserMsg_AddQuestLogEntry}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:CDOTAUserMsg_AddQuestLogEntry)
        skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_AddQuestLogEntryOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return skadistats.clarity.wire.common.proto.DotaUserMessages.internal_static_CDOTAUserMsg_AddQuestLogEntry_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return skadistats.clarity.wire.common.proto.DotaUserMessages.internal_static_CDOTAUserMsg_AddQuestLogEntry_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_AddQuestLogEntry.class, skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_AddQuestLogEntry.Builder.class);
      }

      // Construct using skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_AddQuestLogEntry.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        npcName_ = "";
        bitField0_ = (bitField0_ & ~0x00000001);
        npcDialog_ = "";
        bitField0_ = (bitField0_ & ~0x00000002);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return skadistats.clarity.wire.common.proto.DotaUserMessages.internal_static_CDOTAUserMsg_AddQuestLogEntry_descriptor;
      }

      public skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_AddQuestLogEntry getDefaultInstanceForType() {
        return skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_AddQuestLogEntry.getDefaultInstance();
      }

      public skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_AddQuestLogEntry build() {
        skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_AddQuestLogEntry result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_AddQuestLogEntry buildPartial() {
        skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_AddQuestLogEntry result = new skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_AddQuestLogEntry(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.npcName_ = npcName_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.npcDialog_ = npcDialog_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_AddQuestLogEntry) {
          return mergeFrom((skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_AddQuestLogEntry)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_AddQuestLogEntry other) {
        if (other == skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_AddQuestLogEntry.getDefaultInstance()) return this;
        if (other.hasNpcName()) {
          bitField0_ |= 0x00000001;
          npcName_ = other.npcName_;
          onChanged();
        }
        if (other.hasNpcDialog()) {
          bitField0_ |= 0x00000002;
          npcDialog_ = other.npcDialog_;
          onChanged();
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_AddQuestLogEntry parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_AddQuestLogEntry) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private java.lang.Object npcName_ = "";
      /**
       * <code>optional string npc_name = 1;</code>
       */
      public boolean hasNpcName() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>optional string npc_name = 1;</code>
       */
      public java.lang.String getNpcName() {
        java.lang.Object ref = npcName_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          if (bs.isValidUtf8()) {
            npcName_ = s;
          }
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>optional string npc_name = 1;</code>
       */
      public com.google.protobuf.ByteString
          getNpcNameBytes() {
        java.lang.Object ref = npcName_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          npcName_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>optional string npc_name = 1;</code>
       */
      public Builder setNpcName(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000001;
        npcName_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional string npc_name = 1;</code>
       */
      public Builder clearNpcName() {
        bitField0_ = (bitField0_ & ~0x00000001);
        npcName_ = getDefaultInstance().getNpcName();
        onChanged();
        return this;
      }
      /**
       * <code>optional string npc_name = 1;</code>
       */
      public Builder setNpcNameBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000001;
        npcName_ = value;
        onChanged();
        return this;
      }

      private java.lang.Object npcDialog_ = "";
      /**
       * <code>optional string npc_dialog = 2;</code>
       */
      public boolean hasNpcDialog() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>optional string npc_dialog = 2;</code>
       */
      public java.lang.String getNpcDialog() {
        java.lang.Object ref = npcDialog_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          if (bs.isValidUtf8()) {
            npcDialog_ = s;
          }
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>optional string npc_dialog = 2;</code>
       */
      public com.google.protobuf.ByteString
          getNpcDialogBytes() {
        java.lang.Object ref = npcDialog_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          npcDialog_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>optional string npc_dialog = 2;</code>
       */
      public Builder setNpcDialog(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000002;
        npcDialog_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional string npc_dialog = 2;</code>
       */
      public Builder clearNpcDialog() {
        bitField0_ = (bitField0_ & ~0x00000002);
        npcDialog_ = getDefaultInstance().getNpcDialog();
        onChanged();
        return this;
      }
      /**
       * <code>optional string npc_dialog = 2;</code>
       */
      public Builder setNpcDialogBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000002;
        npcDialog_ = value;
        onChanged();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:CDOTAUserMsg_AddQuestLogEntry)
    }

    static {
      defaultInstance = new CDOTAUserMsg_AddQuestLogEntry(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:CDOTAUserMsg_AddQuestLogEntry)
  }

  public interface CDOTAUserMsg_SendStatPopupOrBuilder extends
      // @@protoc_insertion_point(interface_extends:CDOTAUserMsg_SendStatPopup)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>optional int32 player_id = 1;</code>
     */
    boolean hasPlayerId();
    /**
     * <code>optional int32 player_id = 1;</code>
     */
    int getPlayerId();

    /**
     * <code>optional .CDOTAMsg_SendStatPopup statpopup = 2;</code>
     */
    boolean hasStatpopup();
    /**
     * <code>optional .CDOTAMsg_SendStatPopup statpopup = 2;</code>
     */
    skadistats.clarity.wire.common.proto.DotaCommonMessages.CDOTAMsg_SendStatPopup getStatpopup();
    /**
     * <code>optional .CDOTAMsg_SendStatPopup statpopup = 2;</code>
     */
    skadistats.clarity.wire.common.proto.DotaCommonMessages.CDOTAMsg_SendStatPopupOrBuilder getStatpopupOrBuilder();
  }
  /**
   * Protobuf type {@code CDOTAUserMsg_SendStatPopup}
   */
  public static final class CDOTAUserMsg_SendStatPopup extends
      com.google.protobuf.GeneratedMessage implements
      // @@protoc_insertion_point(message_implements:CDOTAUserMsg_SendStatPopup)
      CDOTAUserMsg_SendStatPopupOrBuilder {
    // Use CDOTAUserMsg_SendStatPopup.newBuilder() to construct.
    private CDOTAUserMsg_SendStatPopup(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private CDOTAUserMsg_SendStatPopup(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final CDOTAUserMsg_SendStatPopup defaultInstance;
    public static CDOTAUserMsg_SendStatPopup getDefaultInstance() {
      return defaultInstance;
    }

    public CDOTAUserMsg_SendStatPopup getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private CDOTAUserMsg_SendStatPopup(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 8: {
              bitField0_ |= 0x00000001;
              playerId_ = input.readInt32();
              break;
            }
            case 18: {
              skadistats.clarity.wire.common.proto.DotaCommonMessages.CDOTAMsg_SendStatPopup.Builder subBuilder = null;
              if (((bitField0_ & 0x00000002) == 0x00000002)) {
                subBuilder = statpopup_.toBuilder();
              }
              statpopup_ = input.readMessage(skadistats.clarity.wire.common.proto.DotaCommonMessages.CDOTAMsg_SendStatPopup.PARSER, extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(statpopup_);
                statpopup_ = subBuilder.buildPartial();
              }
              bitField0_ |= 0x00000002;
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return skadistats.clarity.wire.common.proto.DotaUserMessages.internal_static_CDOTAUserMsg_SendStatPopup_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return skadistats.clarity.wire.common.proto.DotaUserMessages.internal_static_CDOTAUserMsg_SendStatPopup_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_SendStatPopup.class, skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_SendStatPopup.Builder.class);
    }

    public static com.google.protobuf.Parser<CDOTAUserMsg_SendStatPopup> PARSER =
        new com.google.protobuf.AbstractParser<CDOTAUserMsg_SendStatPopup>() {
      public CDOTAUserMsg_SendStatPopup parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new CDOTAUserMsg_SendStatPopup(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<CDOTAUserMsg_SendStatPopup> getParserForType() {
      return PARSER;
    }

    private int bitField0_;
    public static final int PLAYER_ID_FIELD_NUMBER = 1;
    private int playerId_;
    /**
     * <code>optional int32 player_id = 1;</code>
     */
    public boolean hasPlayerId() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>optional int32 player_id = 1;</code>
     */
    public int getPlayerId() {
      return playerId_;
    }

    public static final int STATPOPUP_FIELD_NUMBER = 2;
    private skadistats.clarity.wire.common.proto.DotaCommonMessages.CDOTAMsg_SendStatPopup statpopup_;
    /**
     * <code>optional .CDOTAMsg_SendStatPopup statpopup = 2;</code>
     */
    public boolean hasStatpopup() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>optional .CDOTAMsg_SendStatPopup statpopup = 2;</code>
     */
    public skadistats.clarity.wire.common.proto.DotaCommonMessages.CDOTAMsg_SendStatPopup getStatpopup() {
      return statpopup_;
    }
    /**
     * <code>optional .CDOTAMsg_SendStatPopup statpopup = 2;</code>
     */
    public skadistats.clarity.wire.common.proto.DotaCommonMessages.CDOTAMsg_SendStatPopupOrBuilder getStatpopupOrBuilder() {
      return statpopup_;
    }

    private void initFields() {
      playerId_ = 0;
      statpopup_ = skadistats.clarity.wire.common.proto.DotaCommonMessages.CDOTAMsg_SendStatPopup.getDefaultInstance();
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeInt32(1, playerId_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeMessage(2, statpopup_);
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(1, playerId_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(2, statpopup_);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_SendStatPopup parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_SendStatPopup parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_SendStatPopup parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_SendStatPopup parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_SendStatPopup parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_SendStatPopup parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_SendStatPopup parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_SendStatPopup parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_SendStatPopup parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_SendStatPopup parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_SendStatPopup prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code CDOTAUserMsg_SendStatPopup}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:CDOTAUserMsg_SendStatPopup)
        skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_SendStatPopupOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return skadistats.clarity.wire.common.proto.DotaUserMessages.internal_static_CDOTAUserMsg_SendStatPopup_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return skadistats.clarity.wire.common.proto.DotaUserMessages.internal_static_CDOTAUserMsg_SendStatPopup_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_SendStatPopup.class, skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_SendStatPopup.Builder.class);
      }

      // Construct using skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_SendStatPopup.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
          getStatpopupFieldBuilder();
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        playerId_ = 0;
        bitField0_ = (bitField0_ & ~0x00000001);
        if (statpopupBuilder_ == null) {
          statpopup_ = skadistats.clarity.wire.common.proto.DotaCommonMessages.CDOTAMsg_SendStatPopup.getDefaultInstance();
        } else {
          statpopupBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000002);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return skadistats.clarity.wire.common.proto.DotaUserMessages.internal_static_CDOTAUserMsg_SendStatPopup_descriptor;
      }

      public skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_SendStatPopup getDefaultInstanceForType() {
        return skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_SendStatPopup.getDefaultInstance();
      }

      public skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_SendStatPopup build() {
        skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_SendStatPopup result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_SendStatPopup buildPartial() {
        skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_SendStatPopup result = new skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_SendStatPopup(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.playerId_ = playerId_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        if (statpopupBuilder_ == null) {
          result.statpopup_ = statpopup_;
        } else {
          result.statpopup_ = statpopupBuilder_.build();
        }
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_SendStatPopup) {
          return mergeFrom((skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_SendStatPopup)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_SendStatPopup other) {
        if (other == skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_SendStatPopup.getDefaultInstance()) return this;
        if (other.hasPlayerId()) {
          setPlayerId(other.getPlayerId());
        }
        if (other.hasStatpopup()) {
          mergeStatpopup(other.getStatpopup());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_SendStatPopup parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_SendStatPopup) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private int playerId_ ;
      /**
       * <code>optional int32 player_id = 1;</code>
       */
      public boolean hasPlayerId() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>optional int32 player_id = 1;</code>
       */
      public int getPlayerId() {
        return playerId_;
      }
      /**
       * <code>optional int32 player_id = 1;</code>
       */
      public Builder setPlayerId(int value) {
        bitField0_ |= 0x00000001;
        playerId_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 player_id = 1;</code>
       */
      public Builder clearPlayerId() {
        bitField0_ = (bitField0_ & ~0x00000001);
        playerId_ = 0;
        onChanged();
        return this;
      }

      private skadistats.clarity.wire.common.proto.DotaCommonMessages.CDOTAMsg_SendStatPopup statpopup_ = skadistats.clarity.wire.common.proto.DotaCommonMessages.CDOTAMsg_SendStatPopup.getDefaultInstance();
      private com.google.protobuf.SingleFieldBuilder<
          skadistats.clarity.wire.common.proto.DotaCommonMessages.CDOTAMsg_SendStatPopup, skadistats.clarity.wire.common.proto.DotaCommonMessages.CDOTAMsg_SendStatPopup.Builder, skadistats.clarity.wire.common.proto.DotaCommonMessages.CDOTAMsg_SendStatPopupOrBuilder> statpopupBuilder_;
      /**
       * <code>optional .CDOTAMsg_SendStatPopup statpopup = 2;</code>
       */
      public boolean hasStatpopup() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>optional .CDOTAMsg_SendStatPopup statpopup = 2;</code>
       */
      public skadistats.clarity.wire.common.proto.DotaCommonMessages.CDOTAMsg_SendStatPopup getStatpopup() {
        if (statpopupBuilder_ == null) {
          return statpopup_;
        } else {
          return statpopupBuilder_.getMessage();
        }
      }
      /**
       * <code>optional .CDOTAMsg_SendStatPopup statpopup = 2;</code>
       */
      public Builder setStatpopup(skadistats.clarity.wire.common.proto.DotaCommonMessages.CDOTAMsg_SendStatPopup value) {
        if (statpopupBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          statpopup_ = value;
          onChanged();
        } else {
          statpopupBuilder_.setMessage(value);
        }
        bitField0_ |= 0x00000002;
        return this;
      }
      /**
       * <code>optional .CDOTAMsg_SendStatPopup statpopup = 2;</code>
       */
      public Builder setStatpopup(
          skadistats.clarity.wire.common.proto.DotaCommonMessages.CDOTAMsg_SendStatPopup.Builder builderForValue) {
        if (statpopupBuilder_ == null) {
          statpopup_ = builderForValue.build();
          onChanged();
        } else {
          statpopupBuilder_.setMessage(builderForValue.build());
        }
        bitField0_ |= 0x00000002;
        return this;
      }
      /**
       * <code>optional .CDOTAMsg_SendStatPopup statpopup = 2;</code>
       */
      public Builder mergeStatpopup(skadistats.clarity.wire.common.proto.DotaCommonMessages.CDOTAMsg_SendStatPopup value) {
        if (statpopupBuilder_ == null) {
          if (((bitField0_ & 0x00000002) == 0x00000002) &&
              statpopup_ != skadistats.clarity.wire.common.proto.DotaCommonMessages.CDOTAMsg_SendStatPopup.getDefaultInstance()) {
            statpopup_ =
              skadistats.clarity.wire.common.proto.DotaCommonMessages.CDOTAMsg_SendStatPopup.newBuilder(statpopup_).mergeFrom(value).buildPartial();
          } else {
            statpopup_ = value;
          }
          onChanged();
        } else {
          statpopupBuilder_.mergeFrom(value);
        }
        bitField0_ |= 0x00000002;
        return this;
      }
      /**
       * <code>optional .CDOTAMsg_SendStatPopup statpopup = 2;</code>
       */
      public Builder clearStatpopup() {
        if (statpopupBuilder_ == null) {
          statpopup_ = skadistats.clarity.wire.common.proto.DotaCommonMessages.CDOTAMsg_SendStatPopup.getDefaultInstance();
          onChanged();
        } else {
          statpopupBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000002);
        return this;
      }
      /**
       * <code>optional .CDOTAMsg_SendStatPopup statpopup = 2;</code>
       */
      public skadistats.clarity.wire.common.proto.DotaCommonMessages.CDOTAMsg_SendStatPopup.Builder getStatpopupBuilder() {
        bitField0_ |= 0x00000002;
        onChanged();
        return getStatpopupFieldBuilder().getBuilder();
      }
      /**
       * <code>optional .CDOTAMsg_SendStatPopup statpopup = 2;</code>
       */
      public skadistats.clarity.wire.common.proto.DotaCommonMessages.CDOTAMsg_SendStatPopupOrBuilder getStatpopupOrBuilder() {
        if (statpopupBuilder_ != null) {
          return statpopupBuilder_.getMessageOrBuilder();
        } else {
          return statpopup_;
        }
      }
      /**
       * <code>optional .CDOTAMsg_SendStatPopup statpopup = 2;</code>
       */
      private com.google.protobuf.SingleFieldBuilder<
          skadistats.clarity.wire.common.proto.DotaCommonMessages.CDOTAMsg_SendStatPopup, skadistats.clarity.wire.common.proto.DotaCommonMessages.CDOTAMsg_SendStatPopup.Builder, skadistats.clarity.wire.common.proto.DotaCommonMessages.CDOTAMsg_SendStatPopupOrBuilder> 
          getStatpopupFieldBuilder() {
        if (statpopupBuilder_ == null) {
          statpopupBuilder_ = new com.google.protobuf.SingleFieldBuilder<
              skadistats.clarity.wire.common.proto.DotaCommonMessages.CDOTAMsg_SendStatPopup, skadistats.clarity.wire.common.proto.DotaCommonMessages.CDOTAMsg_SendStatPopup.Builder, skadistats.clarity.wire.common.proto.DotaCommonMessages.CDOTAMsg_SendStatPopupOrBuilder>(
                  getStatpopup(),
                  getParentForChildren(),
                  isClean());
          statpopup_ = null;
        }
        return statpopupBuilder_;
      }

      // @@protoc_insertion_point(builder_scope:CDOTAUserMsg_SendStatPopup)
    }

    static {
      defaultInstance = new CDOTAUserMsg_SendStatPopup(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:CDOTAUserMsg_SendStatPopup)
  }

  public interface CDOTAUserMsg_SendRoshanPopupOrBuilder extends
      // @@protoc_insertion_point(interface_extends:CDOTAUserMsg_SendRoshanPopup)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>optional bool reclaimed = 1;</code>
     */
    boolean hasReclaimed();
    /**
     * <code>optional bool reclaimed = 1;</code>
     */
    boolean getReclaimed();

    /**
     * <code>optional int32 gametime = 2;</code>
     */
    boolean hasGametime();
    /**
     * <code>optional int32 gametime = 2;</code>
     */
    int getGametime();
  }
  /**
   * Protobuf type {@code CDOTAUserMsg_SendRoshanPopup}
   */
  public static final class CDOTAUserMsg_SendRoshanPopup extends
      com.google.protobuf.GeneratedMessage implements
      // @@protoc_insertion_point(message_implements:CDOTAUserMsg_SendRoshanPopup)
      CDOTAUserMsg_SendRoshanPopupOrBuilder {
    // Use CDOTAUserMsg_SendRoshanPopup.newBuilder() to construct.
    private CDOTAUserMsg_SendRoshanPopup(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private CDOTAUserMsg_SendRoshanPopup(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final CDOTAUserMsg_SendRoshanPopup defaultInstance;
    public static CDOTAUserMsg_SendRoshanPopup getDefaultInstance() {
      return defaultInstance;
    }

    public CDOTAUserMsg_SendRoshanPopup getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private CDOTAUserMsg_SendRoshanPopup(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 8: {
              bitField0_ |= 0x00000001;
              reclaimed_ = input.readBool();
              break;
            }
            case 16: {
              bitField0_ |= 0x00000002;
              gametime_ = input.readInt32();
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return skadistats.clarity.wire.common.proto.DotaUserMessages.internal_static_CDOTAUserMsg_SendRoshanPopup_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return skadistats.clarity.wire.common.proto.DotaUserMessages.internal_static_CDOTAUserMsg_SendRoshanPopup_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_SendRoshanPopup.class, skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_SendRoshanPopup.Builder.class);
    }

    public static com.google.protobuf.Parser<CDOTAUserMsg_SendRoshanPopup> PARSER =
        new com.google.protobuf.AbstractParser<CDOTAUserMsg_SendRoshanPopup>() {
      public CDOTAUserMsg_SendRoshanPopup parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new CDOTAUserMsg_SendRoshanPopup(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<CDOTAUserMsg_SendRoshanPopup> getParserForType() {
      return PARSER;
    }

    private int bitField0_;
    public static final int RECLAIMED_FIELD_NUMBER = 1;
    private boolean reclaimed_;
    /**
     * <code>optional bool reclaimed = 1;</code>
     */
    public boolean hasReclaimed() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>optional bool reclaimed = 1;</code>
     */
    public boolean getReclaimed() {
      return reclaimed_;
    }

    public static final int GAMETIME_FIELD_NUMBER = 2;
    private int gametime_;
    /**
     * <code>optional int32 gametime = 2;</code>
     */
    public boolean hasGametime() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>optional int32 gametime = 2;</code>
     */
    public int getGametime() {
      return gametime_;
    }

    private void initFields() {
      reclaimed_ = false;
      gametime_ = 0;
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeBool(1, reclaimed_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeInt32(2, gametime_);
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBoolSize(1, reclaimed_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(2, gametime_);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_SendRoshanPopup parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_SendRoshanPopup parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_SendRoshanPopup parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_SendRoshanPopup parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_SendRoshanPopup parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_SendRoshanPopup parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_SendRoshanPopup parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_SendRoshanPopup parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_SendRoshanPopup parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_SendRoshanPopup parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_SendRoshanPopup prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code CDOTAUserMsg_SendRoshanPopup}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:CDOTAUserMsg_SendRoshanPopup)
        skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_SendRoshanPopupOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return skadistats.clarity.wire.common.proto.DotaUserMessages.internal_static_CDOTAUserMsg_SendRoshanPopup_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return skadistats.clarity.wire.common.proto.DotaUserMessages.internal_static_CDOTAUserMsg_SendRoshanPopup_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_SendRoshanPopup.class, skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_SendRoshanPopup.Builder.class);
      }

      // Construct using skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_SendRoshanPopup.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        reclaimed_ = false;
        bitField0_ = (bitField0_ & ~0x00000001);
        gametime_ = 0;
        bitField0_ = (bitField0_ & ~0x00000002);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return skadistats.clarity.wire.common.proto.DotaUserMessages.internal_static_CDOTAUserMsg_SendRoshanPopup_descriptor;
      }

      public skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_SendRoshanPopup getDefaultInstanceForType() {
        return skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_SendRoshanPopup.getDefaultInstance();
      }

      public skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_SendRoshanPopup build() {
        skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_SendRoshanPopup result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_SendRoshanPopup buildPartial() {
        skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_SendRoshanPopup result = new skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_SendRoshanPopup(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.reclaimed_ = reclaimed_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.gametime_ = gametime_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_SendRoshanPopup) {
          return mergeFrom((skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_SendRoshanPopup)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_SendRoshanPopup other) {
        if (other == skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_SendRoshanPopup.getDefaultInstance()) return this;
        if (other.hasReclaimed()) {
          setReclaimed(other.getReclaimed());
        }
        if (other.hasGametime()) {
          setGametime(other.getGametime());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_SendRoshanPopup parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_SendRoshanPopup) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private boolean reclaimed_ ;
      /**
       * <code>optional bool reclaimed = 1;</code>
       */
      public boolean hasReclaimed() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>optional bool reclaimed = 1;</code>
       */
      public boolean getReclaimed() {
        return reclaimed_;
      }
      /**
       * <code>optional bool reclaimed = 1;</code>
       */
      public Builder setReclaimed(boolean value) {
        bitField0_ |= 0x00000001;
        reclaimed_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional bool reclaimed = 1;</code>
       */
      public Builder clearReclaimed() {
        bitField0_ = (bitField0_ & ~0x00000001);
        reclaimed_ = false;
        onChanged();
        return this;
      }

      private int gametime_ ;
      /**
       * <code>optional int32 gametime = 2;</code>
       */
      public boolean hasGametime() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>optional int32 gametime = 2;</code>
       */
      public int getGametime() {
        return gametime_;
      }
      /**
       * <code>optional int32 gametime = 2;</code>
       */
      public Builder setGametime(int value) {
        bitField0_ |= 0x00000002;
        gametime_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 gametime = 2;</code>
       */
      public Builder clearGametime() {
        bitField0_ = (bitField0_ & ~0x00000002);
        gametime_ = 0;
        onChanged();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:CDOTAUserMsg_SendRoshanPopup)
    }

    static {
      defaultInstance = new CDOTAUserMsg_SendRoshanPopup(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:CDOTAUserMsg_SendRoshanPopup)
  }

  public interface CDOTAUserMsg_SendFinalGoldOrBuilder extends
      // @@protoc_insertion_point(interface_extends:CDOTAUserMsg_SendFinalGold)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>repeated uint32 reliable_gold = 1;</code>
     */
    java.util.List<java.lang.Integer> getReliableGoldList();
    /**
     * <code>repeated uint32 reliable_gold = 1;</code>
     */
    int getReliableGoldCount();
    /**
     * <code>repeated uint32 reliable_gold = 1;</code>
     */
    int getReliableGold(int index);

    /**
     * <code>repeated uint32 unreliable_gold = 2;</code>
     */
    java.util.List<java.lang.Integer> getUnreliableGoldList();
    /**
     * <code>repeated uint32 unreliable_gold = 2;</code>
     */
    int getUnreliableGoldCount();
    /**
     * <code>repeated uint32 unreliable_gold = 2;</code>
     */
    int getUnreliableGold(int index);
  }
  /**
   * Protobuf type {@code CDOTAUserMsg_SendFinalGold}
   */
  public static final class CDOTAUserMsg_SendFinalGold extends
      com.google.protobuf.GeneratedMessage implements
      // @@protoc_insertion_point(message_implements:CDOTAUserMsg_SendFinalGold)
      CDOTAUserMsg_SendFinalGoldOrBuilder {
    // Use CDOTAUserMsg_SendFinalGold.newBuilder() to construct.
    private CDOTAUserMsg_SendFinalGold(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private CDOTAUserMsg_SendFinalGold(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final CDOTAUserMsg_SendFinalGold defaultInstance;
    public static CDOTAUserMsg_SendFinalGold getDefaultInstance() {
      return defaultInstance;
    }

    public CDOTAUserMsg_SendFinalGold getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private CDOTAUserMsg_SendFinalGold(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 8: {
              if (!((mutable_bitField0_ & 0x00000001) == 0x00000001)) {
                reliableGold_ = new java.util.ArrayList<java.lang.Integer>();
                mutable_bitField0_ |= 0x00000001;
              }
              reliableGold_.add(input.readUInt32());
              break;
            }
            case 10: {
              int length = input.readRawVarint32();
              int limit = input.pushLimit(length);
              if (!((mutable_bitField0_ & 0x00000001) == 0x00000001) && input.getBytesUntilLimit() > 0) {
                reliableGold_ = new java.util.ArrayList<java.lang.Integer>();
                mutable_bitField0_ |= 0x00000001;
              }
              while (input.getBytesUntilLimit() > 0) {
                reliableGold_.add(input.readUInt32());
              }
              input.popLimit(limit);
              break;
            }
            case 16: {
              if (!((mutable_bitField0_ & 0x00000002) == 0x00000002)) {
                unreliableGold_ = new java.util.ArrayList<java.lang.Integer>();
                mutable_bitField0_ |= 0x00000002;
              }
              unreliableGold_.add(input.readUInt32());
              break;
            }
            case 18: {
              int length = input.readRawVarint32();
              int limit = input.pushLimit(length);
              if (!((mutable_bitField0_ & 0x00000002) == 0x00000002) && input.getBytesUntilLimit() > 0) {
                unreliableGold_ = new java.util.ArrayList<java.lang.Integer>();
                mutable_bitField0_ |= 0x00000002;
              }
              while (input.getBytesUntilLimit() > 0) {
                unreliableGold_.add(input.readUInt32());
              }
              input.popLimit(limit);
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        if (((mutable_bitField0_ & 0x00000001) == 0x00000001)) {
          reliableGold_ = java.util.Collections.unmodifiableList(reliableGold_);
        }
        if (((mutable_bitField0_ & 0x00000002) == 0x00000002)) {
          unreliableGold_ = java.util.Collections.unmodifiableList(unreliableGold_);
        }
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return skadistats.clarity.wire.common.proto.DotaUserMessages.internal_static_CDOTAUserMsg_SendFinalGold_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return skadistats.clarity.wire.common.proto.DotaUserMessages.internal_static_CDOTAUserMsg_SendFinalGold_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_SendFinalGold.class, skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_SendFinalGold.Builder.class);
    }

    public static com.google.protobuf.Parser<CDOTAUserMsg_SendFinalGold> PARSER =
        new com.google.protobuf.AbstractParser<CDOTAUserMsg_SendFinalGold>() {
      public CDOTAUserMsg_SendFinalGold parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new CDOTAUserMsg_SendFinalGold(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<CDOTAUserMsg_SendFinalGold> getParserForType() {
      return PARSER;
    }

    public static final int RELIABLE_GOLD_FIELD_NUMBER = 1;
    private java.util.List<java.lang.Integer> reliableGold_;
    /**
     * <code>repeated uint32 reliable_gold = 1;</code>
     */
    public java.util.List<java.lang.Integer>
        getReliableGoldList() {
      return reliableGold_;
    }
    /**
     * <code>repeated uint32 reliable_gold = 1;</code>
     */
    public int getReliableGoldCount() {
      return reliableGold_.size();
    }
    /**
     * <code>repeated uint32 reliable_gold = 1;</code>
     */
    public int getReliableGold(int index) {
      return reliableGold_.get(index);
    }

    public static final int UNRELIABLE_GOLD_FIELD_NUMBER = 2;
    private java.util.List<java.lang.Integer> unreliableGold_;
    /**
     * <code>repeated uint32 unreliable_gold = 2;</code>
     */
    public java.util.List<java.lang.Integer>
        getUnreliableGoldList() {
      return unreliableGold_;
    }
    /**
     * <code>repeated uint32 unreliable_gold = 2;</code>
     */
    public int getUnreliableGoldCount() {
      return unreliableGold_.size();
    }
    /**
     * <code>repeated uint32 unreliable_gold = 2;</code>
     */
    public int getUnreliableGold(int index) {
      return unreliableGold_.get(index);
    }

    private void initFields() {
      reliableGold_ = java.util.Collections.emptyList();
      unreliableGold_ = java.util.Collections.emptyList();
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      for (int i = 0; i < reliableGold_.size(); i++) {
        output.writeUInt32(1, reliableGold_.get(i));
      }
      for (int i = 0; i < unreliableGold_.size(); i++) {
        output.writeUInt32(2, unreliableGold_.get(i));
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      {
        int dataSize = 0;
        for (int i = 0; i < reliableGold_.size(); i++) {
          dataSize += com.google.protobuf.CodedOutputStream
            .computeUInt32SizeNoTag(reliableGold_.get(i));
        }
        size += dataSize;
        size += 1 * getReliableGoldList().size();
      }
      {
        int dataSize = 0;
        for (int i = 0; i < unreliableGold_.size(); i++) {
          dataSize += com.google.protobuf.CodedOutputStream
            .computeUInt32SizeNoTag(unreliableGold_.get(i));
        }
        size += dataSize;
        size += 1 * getUnreliableGoldList().size();
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_SendFinalGold parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_SendFinalGold parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_SendFinalGold parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_SendFinalGold parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_SendFinalGold parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_SendFinalGold parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_SendFinalGold parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_SendFinalGold parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_SendFinalGold parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_SendFinalGold parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_SendFinalGold prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code CDOTAUserMsg_SendFinalGold}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:CDOTAUserMsg_SendFinalGold)
        skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_SendFinalGoldOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return skadistats.clarity.wire.common.proto.DotaUserMessages.internal_static_CDOTAUserMsg_SendFinalGold_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return skadistats.clarity.wire.common.proto.DotaUserMessages.internal_static_CDOTAUserMsg_SendFinalGold_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_SendFinalGold.class, skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_SendFinalGold.Builder.class);
      }

      // Construct using skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_SendFinalGold.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        reliableGold_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000001);
        unreliableGold_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000002);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return skadistats.clarity.wire.common.proto.DotaUserMessages.internal_static_CDOTAUserMsg_SendFinalGold_descriptor;
      }

      public skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_SendFinalGold getDefaultInstanceForType() {
        return skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_SendFinalGold.getDefaultInstance();
      }

      public skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_SendFinalGold build() {
        skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_SendFinalGold result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_SendFinalGold buildPartial() {
        skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_SendFinalGold result = new skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_SendFinalGold(this);
        int from_bitField0_ = bitField0_;
        if (((bitField0_ & 0x00000001) == 0x00000001)) {
          reliableGold_ = java.util.Collections.unmodifiableList(reliableGold_);
          bitField0_ = (bitField0_ & ~0x00000001);
        }
        result.reliableGold_ = reliableGold_;
        if (((bitField0_ & 0x00000002) == 0x00000002)) {
          unreliableGold_ = java.util.Collections.unmodifiableList(unreliableGold_);
          bitField0_ = (bitField0_ & ~0x00000002);
        }
        result.unreliableGold_ = unreliableGold_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_SendFinalGold) {
          return mergeFrom((skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_SendFinalGold)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_SendFinalGold other) {
        if (other == skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_SendFinalGold.getDefaultInstance()) return this;
        if (!other.reliableGold_.isEmpty()) {
          if (reliableGold_.isEmpty()) {
            reliableGold_ = other.reliableGold_;
            bitField0_ = (bitField0_ & ~0x00000001);
          } else {
            ensureReliableGoldIsMutable();
            reliableGold_.addAll(other.reliableGold_);
          }
          onChanged();
        }
        if (!other.unreliableGold_.isEmpty()) {
          if (unreliableGold_.isEmpty()) {
            unreliableGold_ = other.unreliableGold_;
            bitField0_ = (bitField0_ & ~0x00000002);
          } else {
            ensureUnreliableGoldIsMutable();
            unreliableGold_.addAll(other.unreliableGold_);
          }
          onChanged();
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_SendFinalGold parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_SendFinalGold) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private java.util.List<java.lang.Integer> reliableGold_ = java.util.Collections.emptyList();
      private void ensureReliableGoldIsMutable() {
        if (!((bitField0_ & 0x00000001) == 0x00000001)) {
          reliableGold_ = new java.util.ArrayList<java.lang.Integer>(reliableGold_);
          bitField0_ |= 0x00000001;
         }
      }
      /**
       * <code>repeated uint32 reliable_gold = 1;</code>
       */
      public java.util.List<java.lang.Integer>
          getReliableGoldList() {
        return java.util.Collections.unmodifiableList(reliableGold_);
      }
      /**
       * <code>repeated uint32 reliable_gold = 1;</code>
       */
      public int getReliableGoldCount() {
        return reliableGold_.size();
      }
      /**
       * <code>repeated uint32 reliable_gold = 1;</code>
       */
      public int getReliableGold(int index) {
        return reliableGold_.get(index);
      }
      /**
       * <code>repeated uint32 reliable_gold = 1;</code>
       */
      public Builder setReliableGold(
          int index, int value) {
        ensureReliableGoldIsMutable();
        reliableGold_.set(index, value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated uint32 reliable_gold = 1;</code>
       */
      public Builder addReliableGold(int value) {
        ensureReliableGoldIsMutable();
        reliableGold_.add(value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated uint32 reliable_gold = 1;</code>
       */
      public Builder addAllReliableGold(
          java.lang.Iterable<? extends java.lang.Integer> values) {
        ensureReliableGoldIsMutable();
        com.google.protobuf.AbstractMessageLite.Builder.addAll(
            values, reliableGold_);
        onChanged();
        return this;
      }
      /**
       * <code>repeated uint32 reliable_gold = 1;</code>
       */
      public Builder clearReliableGold() {
        reliableGold_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000001);
        onChanged();
        return this;
      }

      private java.util.List<java.lang.Integer> unreliableGold_ = java.util.Collections.emptyList();
      private void ensureUnreliableGoldIsMutable() {
        if (!((bitField0_ & 0x00000002) == 0x00000002)) {
          unreliableGold_ = new java.util.ArrayList<java.lang.Integer>(unreliableGold_);
          bitField0_ |= 0x00000002;
         }
      }
      /**
       * <code>repeated uint32 unreliable_gold = 2;</code>
       */
      public java.util.List<java.lang.Integer>
          getUnreliableGoldList() {
        return java.util.Collections.unmodifiableList(unreliableGold_);
      }
      /**
       * <code>repeated uint32 unreliable_gold = 2;</code>
       */
      public int getUnreliableGoldCount() {
        return unreliableGold_.size();
      }
      /**
       * <code>repeated uint32 unreliable_gold = 2;</code>
       */
      public int getUnreliableGold(int index) {
        return unreliableGold_.get(index);
      }
      /**
       * <code>repeated uint32 unreliable_gold = 2;</code>
       */
      public Builder setUnreliableGold(
          int index, int value) {
        ensureUnreliableGoldIsMutable();
        unreliableGold_.set(index, value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated uint32 unreliable_gold = 2;</code>
       */
      public Builder addUnreliableGold(int value) {
        ensureUnreliableGoldIsMutable();
        unreliableGold_.add(value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated uint32 unreliable_gold = 2;</code>
       */
      public Builder addAllUnreliableGold(
          java.lang.Iterable<? extends java.lang.Integer> values) {
        ensureUnreliableGoldIsMutable();
        com.google.protobuf.AbstractMessageLite.Builder.addAll(
            values, unreliableGold_);
        onChanged();
        return this;
      }
      /**
       * <code>repeated uint32 unreliable_gold = 2;</code>
       */
      public Builder clearUnreliableGold() {
        unreliableGold_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000002);
        onChanged();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:CDOTAUserMsg_SendFinalGold)
    }

    static {
      defaultInstance = new CDOTAUserMsg_SendFinalGold(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:CDOTAUserMsg_SendFinalGold)
  }

  public interface CDOTAUserMsg_CustomMsgOrBuilder extends
      // @@protoc_insertion_point(interface_extends:CDOTAUserMsg_CustomMsg)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>optional string message = 1;</code>
     */
    boolean hasMessage();
    /**
     * <code>optional string message = 1;</code>
     */
    java.lang.String getMessage();
    /**
     * <code>optional string message = 1;</code>
     */
    com.google.protobuf.ByteString
        getMessageBytes();

    /**
     * <code>optional int32 player_id = 2;</code>
     */
    boolean hasPlayerId();
    /**
     * <code>optional int32 player_id = 2;</code>
     */
    int getPlayerId();

    /**
     * <code>optional int32 value = 3;</code>
     */
    boolean hasValue();
    /**
     * <code>optional int32 value = 3;</code>
     */
    int getValue();
  }
  /**
   * Protobuf type {@code CDOTAUserMsg_CustomMsg}
   */
  public static final class CDOTAUserMsg_CustomMsg extends
      com.google.protobuf.GeneratedMessage implements
      // @@protoc_insertion_point(message_implements:CDOTAUserMsg_CustomMsg)
      CDOTAUserMsg_CustomMsgOrBuilder {
    // Use CDOTAUserMsg_CustomMsg.newBuilder() to construct.
    private CDOTAUserMsg_CustomMsg(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private CDOTAUserMsg_CustomMsg(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final CDOTAUserMsg_CustomMsg defaultInstance;
    public static CDOTAUserMsg_CustomMsg getDefaultInstance() {
      return defaultInstance;
    }

    public CDOTAUserMsg_CustomMsg getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private CDOTAUserMsg_CustomMsg(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 10: {
              com.google.protobuf.ByteString bs = input.readBytes();
              bitField0_ |= 0x00000001;
              message_ = bs;
              break;
            }
            case 16: {
              bitField0_ |= 0x00000002;
              playerId_ = input.readInt32();
              break;
            }
            case 24: {
              bitField0_ |= 0x00000004;
              value_ = input.readInt32();
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return skadistats.clarity.wire.common.proto.DotaUserMessages.internal_static_CDOTAUserMsg_CustomMsg_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return skadistats.clarity.wire.common.proto.DotaUserMessages.internal_static_CDOTAUserMsg_CustomMsg_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_CustomMsg.class, skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_CustomMsg.Builder.class);
    }

    public static com.google.protobuf.Parser<CDOTAUserMsg_CustomMsg> PARSER =
        new com.google.protobuf.AbstractParser<CDOTAUserMsg_CustomMsg>() {
      public CDOTAUserMsg_CustomMsg parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new CDOTAUserMsg_CustomMsg(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<CDOTAUserMsg_CustomMsg> getParserForType() {
      return PARSER;
    }

    private int bitField0_;
    public static final int MESSAGE_FIELD_NUMBER = 1;
    private java.lang.Object message_;
    /**
     * <code>optional string message = 1;</code>
     */
    public boolean hasMessage() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>optional string message = 1;</code>
     */
    public java.lang.String getMessage() {
      java.lang.Object ref = message_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          message_ = s;
        }
        return s;
      }
    }
    /**
     * <code>optional string message = 1;</code>
     */
    public com.google.protobuf.ByteString
        getMessageBytes() {
      java.lang.Object ref = message_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        message_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int PLAYER_ID_FIELD_NUMBER = 2;
    private int playerId_;
    /**
     * <code>optional int32 player_id = 2;</code>
     */
    public boolean hasPlayerId() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>optional int32 player_id = 2;</code>
     */
    public int getPlayerId() {
      return playerId_;
    }

    public static final int VALUE_FIELD_NUMBER = 3;
    private int value_;
    /**
     * <code>optional int32 value = 3;</code>
     */
    public boolean hasValue() {
      return ((bitField0_ & 0x00000004) == 0x00000004);
    }
    /**
     * <code>optional int32 value = 3;</code>
     */
    public int getValue() {
      return value_;
    }

    private void initFields() {
      message_ = "";
      playerId_ = 0;
      value_ = 0;
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeBytes(1, getMessageBytes());
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeInt32(2, playerId_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        output.writeInt32(3, value_);
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(1, getMessageBytes());
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(2, playerId_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(3, value_);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_CustomMsg parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_CustomMsg parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_CustomMsg parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_CustomMsg parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_CustomMsg parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_CustomMsg parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_CustomMsg parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_CustomMsg parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_CustomMsg parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_CustomMsg parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_CustomMsg prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code CDOTAUserMsg_CustomMsg}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:CDOTAUserMsg_CustomMsg)
        skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_CustomMsgOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return skadistats.clarity.wire.common.proto.DotaUserMessages.internal_static_CDOTAUserMsg_CustomMsg_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return skadistats.clarity.wire.common.proto.DotaUserMessages.internal_static_CDOTAUserMsg_CustomMsg_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_CustomMsg.class, skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_CustomMsg.Builder.class);
      }

      // Construct using skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_CustomMsg.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        message_ = "";
        bitField0_ = (bitField0_ & ~0x00000001);
        playerId_ = 0;
        bitField0_ = (bitField0_ & ~0x00000002);
        value_ = 0;
        bitField0_ = (bitField0_ & ~0x00000004);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return skadistats.clarity.wire.common.proto.DotaUserMessages.internal_static_CDOTAUserMsg_CustomMsg_descriptor;
      }

      public skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_CustomMsg getDefaultInstanceForType() {
        return skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_CustomMsg.getDefaultInstance();
      }

      public skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_CustomMsg build() {
        skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_CustomMsg result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_CustomMsg buildPartial() {
        skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_CustomMsg result = new skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_CustomMsg(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.message_ = message_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.playerId_ = playerId_;
        if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
          to_bitField0_ |= 0x00000004;
        }
        result.value_ = value_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_CustomMsg) {
          return mergeFrom((skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_CustomMsg)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_CustomMsg other) {
        if (other == skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_CustomMsg.getDefaultInstance()) return this;
        if (other.hasMessage()) {
          bitField0_ |= 0x00000001;
          message_ = other.message_;
          onChanged();
        }
        if (other.hasPlayerId()) {
          setPlayerId(other.getPlayerId());
        }
        if (other.hasValue()) {
          setValue(other.getValue());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_CustomMsg parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_CustomMsg) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private java.lang.Object message_ = "";
      /**
       * <code>optional string message = 1;</code>
       */
      public boolean hasMessage() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>optional string message = 1;</code>
       */
      public java.lang.String getMessage() {
        java.lang.Object ref = message_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          if (bs.isValidUtf8()) {
            message_ = s;
          }
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>optional string message = 1;</code>
       */
      public com.google.protobuf.ByteString
          getMessageBytes() {
        java.lang.Object ref = message_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          message_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>optional string message = 1;</code>
       */
      public Builder setMessage(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000001;
        message_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional string message = 1;</code>
       */
      public Builder clearMessage() {
        bitField0_ = (bitField0_ & ~0x00000001);
        message_ = getDefaultInstance().getMessage();
        onChanged();
        return this;
      }
      /**
       * <code>optional string message = 1;</code>
       */
      public Builder setMessageBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000001;
        message_ = value;
        onChanged();
        return this;
      }

      private int playerId_ ;
      /**
       * <code>optional int32 player_id = 2;</code>
       */
      public boolean hasPlayerId() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>optional int32 player_id = 2;</code>
       */
      public int getPlayerId() {
        return playerId_;
      }
      /**
       * <code>optional int32 player_id = 2;</code>
       */
      public Builder setPlayerId(int value) {
        bitField0_ |= 0x00000002;
        playerId_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 player_id = 2;</code>
       */
      public Builder clearPlayerId() {
        bitField0_ = (bitField0_ & ~0x00000002);
        playerId_ = 0;
        onChanged();
        return this;
      }

      private int value_ ;
      /**
       * <code>optional int32 value = 3;</code>
       */
      public boolean hasValue() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }
      /**
       * <code>optional int32 value = 3;</code>
       */
      public int getValue() {
        return value_;
      }
      /**
       * <code>optional int32 value = 3;</code>
       */
      public Builder setValue(int value) {
        bitField0_ |= 0x00000004;
        value_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 value = 3;</code>
       */
      public Builder clearValue() {
        bitField0_ = (bitField0_ & ~0x00000004);
        value_ = 0;
        onChanged();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:CDOTAUserMsg_CustomMsg)
    }

    static {
      defaultInstance = new CDOTAUserMsg_CustomMsg(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:CDOTAUserMsg_CustomMsg)
  }

  public interface CDOTAUserMsg_CoachHUDPingOrBuilder extends
      // @@protoc_insertion_point(interface_extends:CDOTAUserMsg_CoachHUDPing)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>optional uint32 player_id = 1;</code>
     */
    boolean hasPlayerId();
    /**
     * <code>optional uint32 player_id = 1;</code>
     */
    int getPlayerId();

    /**
     * <code>optional .CDOTAMsg_CoachHUDPing hud_ping = 2;</code>
     */
    boolean hasHudPing();
    /**
     * <code>optional .CDOTAMsg_CoachHUDPing hud_ping = 2;</code>
     */
    skadistats.clarity.wire.common.proto.DotaCommonMessages.CDOTAMsg_CoachHUDPing getHudPing();
    /**
     * <code>optional .CDOTAMsg_CoachHUDPing hud_ping = 2;</code>
     */
    skadistats.clarity.wire.common.proto.DotaCommonMessages.CDOTAMsg_CoachHUDPingOrBuilder getHudPingOrBuilder();
  }
  /**
   * Protobuf type {@code CDOTAUserMsg_CoachHUDPing}
   */
  public static final class CDOTAUserMsg_CoachHUDPing extends
      com.google.protobuf.GeneratedMessage implements
      // @@protoc_insertion_point(message_implements:CDOTAUserMsg_CoachHUDPing)
      CDOTAUserMsg_CoachHUDPingOrBuilder {
    // Use CDOTAUserMsg_CoachHUDPing.newBuilder() to construct.
    private CDOTAUserMsg_CoachHUDPing(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private CDOTAUserMsg_CoachHUDPing(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final CDOTAUserMsg_CoachHUDPing defaultInstance;
    public static CDOTAUserMsg_CoachHUDPing getDefaultInstance() {
      return defaultInstance;
    }

    public CDOTAUserMsg_CoachHUDPing getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private CDOTAUserMsg_CoachHUDPing(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 8: {
              bitField0_ |= 0x00000001;
              playerId_ = input.readUInt32();
              break;
            }
            case 18: {
              skadistats.clarity.wire.common.proto.DotaCommonMessages.CDOTAMsg_CoachHUDPing.Builder subBuilder = null;
              if (((bitField0_ & 0x00000002) == 0x00000002)) {
                subBuilder = hudPing_.toBuilder();
              }
              hudPing_ = input.readMessage(skadistats.clarity.wire.common.proto.DotaCommonMessages.CDOTAMsg_CoachHUDPing.PARSER, extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(hudPing_);
                hudPing_ = subBuilder.buildPartial();
              }
              bitField0_ |= 0x00000002;
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return skadistats.clarity.wire.common.proto.DotaUserMessages.internal_static_CDOTAUserMsg_CoachHUDPing_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return skadistats.clarity.wire.common.proto.DotaUserMessages.internal_static_CDOTAUserMsg_CoachHUDPing_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_CoachHUDPing.class, skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_CoachHUDPing.Builder.class);
    }

    public static com.google.protobuf.Parser<CDOTAUserMsg_CoachHUDPing> PARSER =
        new com.google.protobuf.AbstractParser<CDOTAUserMsg_CoachHUDPing>() {
      public CDOTAUserMsg_CoachHUDPing parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new CDOTAUserMsg_CoachHUDPing(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<CDOTAUserMsg_CoachHUDPing> getParserForType() {
      return PARSER;
    }

    private int bitField0_;
    public static final int PLAYER_ID_FIELD_NUMBER = 1;
    private int playerId_;
    /**
     * <code>optional uint32 player_id = 1;</code>
     */
    public boolean hasPlayerId() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>optional uint32 player_id = 1;</code>
     */
    public int getPlayerId() {
      return playerId_;
    }

    public static final int HUD_PING_FIELD_NUMBER = 2;
    private skadistats.clarity.wire.common.proto.DotaCommonMessages.CDOTAMsg_CoachHUDPing hudPing_;
    /**
     * <code>optional .CDOTAMsg_CoachHUDPing hud_ping = 2;</code>
     */
    public boolean hasHudPing() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>optional .CDOTAMsg_CoachHUDPing hud_ping = 2;</code>
     */
    public skadistats.clarity.wire.common.proto.DotaCommonMessages.CDOTAMsg_CoachHUDPing getHudPing() {
      return hudPing_;
    }
    /**
     * <code>optional .CDOTAMsg_CoachHUDPing hud_ping = 2;</code>
     */
    public skadistats.clarity.wire.common.proto.DotaCommonMessages.CDOTAMsg_CoachHUDPingOrBuilder getHudPingOrBuilder() {
      return hudPing_;
    }

    private void initFields() {
      playerId_ = 0;
      hudPing_ = skadistats.clarity.wire.common.proto.DotaCommonMessages.CDOTAMsg_CoachHUDPing.getDefaultInstance();
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeUInt32(1, playerId_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeMessage(2, hudPing_);
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(1, playerId_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(2, hudPing_);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_CoachHUDPing parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_CoachHUDPing parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_CoachHUDPing parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_CoachHUDPing parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_CoachHUDPing parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_CoachHUDPing parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_CoachHUDPing parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_CoachHUDPing parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_CoachHUDPing parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_CoachHUDPing parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_CoachHUDPing prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code CDOTAUserMsg_CoachHUDPing}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:CDOTAUserMsg_CoachHUDPing)
        skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_CoachHUDPingOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return skadistats.clarity.wire.common.proto.DotaUserMessages.internal_static_CDOTAUserMsg_CoachHUDPing_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return skadistats.clarity.wire.common.proto.DotaUserMessages.internal_static_CDOTAUserMsg_CoachHUDPing_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_CoachHUDPing.class, skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_CoachHUDPing.Builder.class);
      }

      // Construct using skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_CoachHUDPing.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
          getHudPingFieldBuilder();
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        playerId_ = 0;
        bitField0_ = (bitField0_ & ~0x00000001);
        if (hudPingBuilder_ == null) {
          hudPing_ = skadistats.clarity.wire.common.proto.DotaCommonMessages.CDOTAMsg_CoachHUDPing.getDefaultInstance();
        } else {
          hudPingBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000002);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return skadistats.clarity.wire.common.proto.DotaUserMessages.internal_static_CDOTAUserMsg_CoachHUDPing_descriptor;
      }

      public skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_CoachHUDPing getDefaultInstanceForType() {
        return skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_CoachHUDPing.getDefaultInstance();
      }

      public skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_CoachHUDPing build() {
        skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_CoachHUDPing result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_CoachHUDPing buildPartial() {
        skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_CoachHUDPing result = new skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_CoachHUDPing(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.playerId_ = playerId_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        if (hudPingBuilder_ == null) {
          result.hudPing_ = hudPing_;
        } else {
          result.hudPing_ = hudPingBuilder_.build();
        }
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_CoachHUDPing) {
          return mergeFrom((skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_CoachHUDPing)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_CoachHUDPing other) {
        if (other == skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_CoachHUDPing.getDefaultInstance()) return this;
        if (other.hasPlayerId()) {
          setPlayerId(other.getPlayerId());
        }
        if (other.hasHudPing()) {
          mergeHudPing(other.getHudPing());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_CoachHUDPing parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_CoachHUDPing) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private int playerId_ ;
      /**
       * <code>optional uint32 player_id = 1;</code>
       */
      public boolean hasPlayerId() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>optional uint32 player_id = 1;</code>
       */
      public int getPlayerId() {
        return playerId_;
      }
      /**
       * <code>optional uint32 player_id = 1;</code>
       */
      public Builder setPlayerId(int value) {
        bitField0_ |= 0x00000001;
        playerId_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional uint32 player_id = 1;</code>
       */
      public Builder clearPlayerId() {
        bitField0_ = (bitField0_ & ~0x00000001);
        playerId_ = 0;
        onChanged();
        return this;
      }

      private skadistats.clarity.wire.common.proto.DotaCommonMessages.CDOTAMsg_CoachHUDPing hudPing_ = skadistats.clarity.wire.common.proto.DotaCommonMessages.CDOTAMsg_CoachHUDPing.getDefaultInstance();
      private com.google.protobuf.SingleFieldBuilder<
          skadistats.clarity.wire.common.proto.DotaCommonMessages.CDOTAMsg_CoachHUDPing, skadistats.clarity.wire.common.proto.DotaCommonMessages.CDOTAMsg_CoachHUDPing.Builder, skadistats.clarity.wire.common.proto.DotaCommonMessages.CDOTAMsg_CoachHUDPingOrBuilder> hudPingBuilder_;
      /**
       * <code>optional .CDOTAMsg_CoachHUDPing hud_ping = 2;</code>
       */
      public boolean hasHudPing() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>optional .CDOTAMsg_CoachHUDPing hud_ping = 2;</code>
       */
      public skadistats.clarity.wire.common.proto.DotaCommonMessages.CDOTAMsg_CoachHUDPing getHudPing() {
        if (hudPingBuilder_ == null) {
          return hudPing_;
        } else {
          return hudPingBuilder_.getMessage();
        }
      }
      /**
       * <code>optional .CDOTAMsg_CoachHUDPing hud_ping = 2;</code>
       */
      public Builder setHudPing(skadistats.clarity.wire.common.proto.DotaCommonMessages.CDOTAMsg_CoachHUDPing value) {
        if (hudPingBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          hudPing_ = value;
          onChanged();
        } else {
          hudPingBuilder_.setMessage(value);
        }
        bitField0_ |= 0x00000002;
        return this;
      }
      /**
       * <code>optional .CDOTAMsg_CoachHUDPing hud_ping = 2;</code>
       */
      public Builder setHudPing(
          skadistats.clarity.wire.common.proto.DotaCommonMessages.CDOTAMsg_CoachHUDPing.Builder builderForValue) {
        if (hudPingBuilder_ == null) {
          hudPing_ = builderForValue.build();
          onChanged();
        } else {
          hudPingBuilder_.setMessage(builderForValue.build());
        }
        bitField0_ |= 0x00000002;
        return this;
      }
      /**
       * <code>optional .CDOTAMsg_CoachHUDPing hud_ping = 2;</code>
       */
      public Builder mergeHudPing(skadistats.clarity.wire.common.proto.DotaCommonMessages.CDOTAMsg_CoachHUDPing value) {
        if (hudPingBuilder_ == null) {
          if (((bitField0_ & 0x00000002) == 0x00000002) &&
              hudPing_ != skadistats.clarity.wire.common.proto.DotaCommonMessages.CDOTAMsg_CoachHUDPing.getDefaultInstance()) {
            hudPing_ =
              skadistats.clarity.wire.common.proto.DotaCommonMessages.CDOTAMsg_CoachHUDPing.newBuilder(hudPing_).mergeFrom(value).buildPartial();
          } else {
            hudPing_ = value;
          }
          onChanged();
        } else {
          hudPingBuilder_.mergeFrom(value);
        }
        bitField0_ |= 0x00000002;
        return this;
      }
      /**
       * <code>optional .CDOTAMsg_CoachHUDPing hud_ping = 2;</code>
       */
      public Builder clearHudPing() {
        if (hudPingBuilder_ == null) {
          hudPing_ = skadistats.clarity.wire.common.proto.DotaCommonMessages.CDOTAMsg_CoachHUDPing.getDefaultInstance();
          onChanged();
        } else {
          hudPingBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000002);
        return this;
      }
      /**
       * <code>optional .CDOTAMsg_CoachHUDPing hud_ping = 2;</code>
       */
      public skadistats.clarity.wire.common.proto.DotaCommonMessages.CDOTAMsg_CoachHUDPing.Builder getHudPingBuilder() {
        bitField0_ |= 0x00000002;
        onChanged();
        return getHudPingFieldBuilder().getBuilder();
      }
      /**
       * <code>optional .CDOTAMsg_CoachHUDPing hud_ping = 2;</code>
       */
      public skadistats.clarity.wire.common.proto.DotaCommonMessages.CDOTAMsg_CoachHUDPingOrBuilder getHudPingOrBuilder() {
        if (hudPingBuilder_ != null) {
          return hudPingBuilder_.getMessageOrBuilder();
        } else {
          return hudPing_;
        }
      }
      /**
       * <code>optional .CDOTAMsg_CoachHUDPing hud_ping = 2;</code>
       */
      private com.google.protobuf.SingleFieldBuilder<
          skadistats.clarity.wire.common.proto.DotaCommonMessages.CDOTAMsg_CoachHUDPing, skadistats.clarity.wire.common.proto.DotaCommonMessages.CDOTAMsg_CoachHUDPing.Builder, skadistats.clarity.wire.common.proto.DotaCommonMessages.CDOTAMsg_CoachHUDPingOrBuilder> 
          getHudPingFieldBuilder() {
        if (hudPingBuilder_ == null) {
          hudPingBuilder_ = new com.google.protobuf.SingleFieldBuilder<
              skadistats.clarity.wire.common.proto.DotaCommonMessages.CDOTAMsg_CoachHUDPing, skadistats.clarity.wire.common.proto.DotaCommonMessages.CDOTAMsg_CoachHUDPing.Builder, skadistats.clarity.wire.common.proto.DotaCommonMessages.CDOTAMsg_CoachHUDPingOrBuilder>(
                  getHudPing(),
                  getParentForChildren(),
                  isClean());
          hudPing_ = null;
        }
        return hudPingBuilder_;
      }

      // @@protoc_insertion_point(builder_scope:CDOTAUserMsg_CoachHUDPing)
    }

    static {
      defaultInstance = new CDOTAUserMsg_CoachHUDPing(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:CDOTAUserMsg_CoachHUDPing)
  }

  public interface CDOTAUserMsg_ClientLoadGridNavOrBuilder extends
      // @@protoc_insertion_point(interface_extends:CDOTAUserMsg_ClientLoadGridNav)
      com.google.protobuf.MessageOrBuilder {
  }
  /**
   * Protobuf type {@code CDOTAUserMsg_ClientLoadGridNav}
   */
  public static final class CDOTAUserMsg_ClientLoadGridNav extends
      com.google.protobuf.GeneratedMessage implements
      // @@protoc_insertion_point(message_implements:CDOTAUserMsg_ClientLoadGridNav)
      CDOTAUserMsg_ClientLoadGridNavOrBuilder {
    // Use CDOTAUserMsg_ClientLoadGridNav.newBuilder() to construct.
    private CDOTAUserMsg_ClientLoadGridNav(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private CDOTAUserMsg_ClientLoadGridNav(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final CDOTAUserMsg_ClientLoadGridNav defaultInstance;
    public static CDOTAUserMsg_ClientLoadGridNav getDefaultInstance() {
      return defaultInstance;
    }

    public CDOTAUserMsg_ClientLoadGridNav getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private CDOTAUserMsg_ClientLoadGridNav(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return skadistats.clarity.wire.common.proto.DotaUserMessages.internal_static_CDOTAUserMsg_ClientLoadGridNav_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return skadistats.clarity.wire.common.proto.DotaUserMessages.internal_static_CDOTAUserMsg_ClientLoadGridNav_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_ClientLoadGridNav.class, skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_ClientLoadGridNav.Builder.class);
    }

    public static com.google.protobuf.Parser<CDOTAUserMsg_ClientLoadGridNav> PARSER =
        new com.google.protobuf.AbstractParser<CDOTAUserMsg_ClientLoadGridNav>() {
      public CDOTAUserMsg_ClientLoadGridNav parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new CDOTAUserMsg_ClientLoadGridNav(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<CDOTAUserMsg_ClientLoadGridNav> getParserForType() {
      return PARSER;
    }

    private void initFields() {
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_ClientLoadGridNav parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_ClientLoadGridNav parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_ClientLoadGridNav parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_ClientLoadGridNav parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_ClientLoadGridNav parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_ClientLoadGridNav parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_ClientLoadGridNav parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_ClientLoadGridNav parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_ClientLoadGridNav parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_ClientLoadGridNav parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_ClientLoadGridNav prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code CDOTAUserMsg_ClientLoadGridNav}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:CDOTAUserMsg_ClientLoadGridNav)
        skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_ClientLoadGridNavOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return skadistats.clarity.wire.common.proto.DotaUserMessages.internal_static_CDOTAUserMsg_ClientLoadGridNav_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return skadistats.clarity.wire.common.proto.DotaUserMessages.internal_static_CDOTAUserMsg_ClientLoadGridNav_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_ClientLoadGridNav.class, skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_ClientLoadGridNav.Builder.class);
      }

      // Construct using skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_ClientLoadGridNav.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return skadistats.clarity.wire.common.proto.DotaUserMessages.internal_static_CDOTAUserMsg_ClientLoadGridNav_descriptor;
      }

      public skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_ClientLoadGridNav getDefaultInstanceForType() {
        return skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_ClientLoadGridNav.getDefaultInstance();
      }

      public skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_ClientLoadGridNav build() {
        skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_ClientLoadGridNav result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_ClientLoadGridNav buildPartial() {
        skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_ClientLoadGridNav result = new skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_ClientLoadGridNav(this);
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_ClientLoadGridNav) {
          return mergeFrom((skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_ClientLoadGridNav)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_ClientLoadGridNav other) {
        if (other == skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_ClientLoadGridNav.getDefaultInstance()) return this;
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_ClientLoadGridNav parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_ClientLoadGridNav) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }

      // @@protoc_insertion_point(builder_scope:CDOTAUserMsg_ClientLoadGridNav)
    }

    static {
      defaultInstance = new CDOTAUserMsg_ClientLoadGridNav(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:CDOTAUserMsg_ClientLoadGridNav)
  }

  public interface CDOTAUserMsg_TE_ProjectileOrBuilder extends
      // @@protoc_insertion_point(interface_extends:CDOTAUserMsg_TE_Projectile)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>optional int32 hSource = 1;</code>
     */
    boolean hasHSource();
    /**
     * <code>optional int32 hSource = 1;</code>
     */
    int getHSource();

    /**
     * <code>optional int32 hTarget = 2;</code>
     */
    boolean hasHTarget();
    /**
     * <code>optional int32 hTarget = 2;</code>
     */
    int getHTarget();

    /**
     * <code>optional int32 moveSpeed = 3;</code>
     */
    boolean hasMoveSpeed();
    /**
     * <code>optional int32 moveSpeed = 3;</code>
     */
    int getMoveSpeed();

    /**
     * <code>optional int32 sourceAttachment = 4;</code>
     */
    boolean hasSourceAttachment();
    /**
     * <code>optional int32 sourceAttachment = 4;</code>
     */
    int getSourceAttachment();

    /**
     * <code>optional int64 particleSystemHandle = 5;</code>
     */
    boolean hasParticleSystemHandle();
    /**
     * <code>optional int64 particleSystemHandle = 5;</code>
     */
    long getParticleSystemHandle();

    /**
     * <code>optional bool dodgeable = 6;</code>
     */
    boolean hasDodgeable();
    /**
     * <code>optional bool dodgeable = 6;</code>
     */
    boolean getDodgeable();

    /**
     * <code>optional bool isAttack = 7;</code>
     */
    boolean hasIsAttack();
    /**
     * <code>optional bool isAttack = 7;</code>
     */
    boolean getIsAttack();

    /**
     * <code>optional bool isEvaded = 8;</code>
     */
    boolean hasIsEvaded();
    /**
     * <code>optional bool isEvaded = 8;</code>
     */
    boolean getIsEvaded();

    /**
     * <code>optional float expireTime = 9;</code>
     */
    boolean hasExpireTime();
    /**
     * <code>optional float expireTime = 9;</code>
     */
    float getExpireTime();

    /**
     * <code>optional float maximpacttime = 10;</code>
     */
    boolean hasMaximpacttime();
    /**
     * <code>optional float maximpacttime = 10;</code>
     */
    float getMaximpacttime();

    /**
     * <code>optional fixed32 colorgemcolor = 11;</code>
     */
    boolean hasColorgemcolor();
    /**
     * <code>optional fixed32 colorgemcolor = 11;</code>
     */
    int getColorgemcolor();
  }
  /**
   * Protobuf type {@code CDOTAUserMsg_TE_Projectile}
   */
  public static final class CDOTAUserMsg_TE_Projectile extends
      com.google.protobuf.GeneratedMessage implements
      // @@protoc_insertion_point(message_implements:CDOTAUserMsg_TE_Projectile)
      CDOTAUserMsg_TE_ProjectileOrBuilder {
    // Use CDOTAUserMsg_TE_Projectile.newBuilder() to construct.
    private CDOTAUserMsg_TE_Projectile(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private CDOTAUserMsg_TE_Projectile(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final CDOTAUserMsg_TE_Projectile defaultInstance;
    public static CDOTAUserMsg_TE_Projectile getDefaultInstance() {
      return defaultInstance;
    }

    public CDOTAUserMsg_TE_Projectile getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private CDOTAUserMsg_TE_Projectile(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 8: {
              bitField0_ |= 0x00000001;
              hSource_ = input.readInt32();
              break;
            }
            case 16: {
              bitField0_ |= 0x00000002;
              hTarget_ = input.readInt32();
              break;
            }
            case 24: {
              bitField0_ |= 0x00000004;
              moveSpeed_ = input.readInt32();
              break;
            }
            case 32: {
              bitField0_ |= 0x00000008;
              sourceAttachment_ = input.readInt32();
              break;
            }
            case 40: {
              bitField0_ |= 0x00000010;
              particleSystemHandle_ = input.readInt64();
              break;
            }
            case 48: {
              bitField0_ |= 0x00000020;
              dodgeable_ = input.readBool();
              break;
            }
            case 56: {
              bitField0_ |= 0x00000040;
              isAttack_ = input.readBool();
              break;
            }
            case 64: {
              bitField0_ |= 0x00000080;
              isEvaded_ = input.readBool();
              break;
            }
            case 77: {
              bitField0_ |= 0x00000100;
              expireTime_ = input.readFloat();
              break;
            }
            case 85: {
              bitField0_ |= 0x00000200;
              maximpacttime_ = input.readFloat();
              break;
            }
            case 93: {
              bitField0_ |= 0x00000400;
              colorgemcolor_ = input.readFixed32();
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return skadistats.clarity.wire.common.proto.DotaUserMessages.internal_static_CDOTAUserMsg_TE_Projectile_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return skadistats.clarity.wire.common.proto.DotaUserMessages.internal_static_CDOTAUserMsg_TE_Projectile_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_TE_Projectile.class, skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_TE_Projectile.Builder.class);
    }

    public static com.google.protobuf.Parser<CDOTAUserMsg_TE_Projectile> PARSER =
        new com.google.protobuf.AbstractParser<CDOTAUserMsg_TE_Projectile>() {
      public CDOTAUserMsg_TE_Projectile parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new CDOTAUserMsg_TE_Projectile(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<CDOTAUserMsg_TE_Projectile> getParserForType() {
      return PARSER;
    }

    private int bitField0_;
    public static final int HSOURCE_FIELD_NUMBER = 1;
    private int hSource_;
    /**
     * <code>optional int32 hSource = 1;</code>
     */
    public boolean hasHSource() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>optional int32 hSource = 1;</code>
     */
    public int getHSource() {
      return hSource_;
    }

    public static final int HTARGET_FIELD_NUMBER = 2;
    private int hTarget_;
    /**
     * <code>optional int32 hTarget = 2;</code>
     */
    public boolean hasHTarget() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>optional int32 hTarget = 2;</code>
     */
    public int getHTarget() {
      return hTarget_;
    }

    public static final int MOVESPEED_FIELD_NUMBER = 3;
    private int moveSpeed_;
    /**
     * <code>optional int32 moveSpeed = 3;</code>
     */
    public boolean hasMoveSpeed() {
      return ((bitField0_ & 0x00000004) == 0x00000004);
    }
    /**
     * <code>optional int32 moveSpeed = 3;</code>
     */
    public int getMoveSpeed() {
      return moveSpeed_;
    }

    public static final int SOURCEATTACHMENT_FIELD_NUMBER = 4;
    private int sourceAttachment_;
    /**
     * <code>optional int32 sourceAttachment = 4;</code>
     */
    public boolean hasSourceAttachment() {
      return ((bitField0_ & 0x00000008) == 0x00000008);
    }
    /**
     * <code>optional int32 sourceAttachment = 4;</code>
     */
    public int getSourceAttachment() {
      return sourceAttachment_;
    }

    public static final int PARTICLESYSTEMHANDLE_FIELD_NUMBER = 5;
    private long particleSystemHandle_;
    /**
     * <code>optional int64 particleSystemHandle = 5;</code>
     */
    public boolean hasParticleSystemHandle() {
      return ((bitField0_ & 0x00000010) == 0x00000010);
    }
    /**
     * <code>optional int64 particleSystemHandle = 5;</code>
     */
    public long getParticleSystemHandle() {
      return particleSystemHandle_;
    }

    public static final int DODGEABLE_FIELD_NUMBER = 6;
    private boolean dodgeable_;
    /**
     * <code>optional bool dodgeable = 6;</code>
     */
    public boolean hasDodgeable() {
      return ((bitField0_ & 0x00000020) == 0x00000020);
    }
    /**
     * <code>optional bool dodgeable = 6;</code>
     */
    public boolean getDodgeable() {
      return dodgeable_;
    }

    public static final int ISATTACK_FIELD_NUMBER = 7;
    private boolean isAttack_;
    /**
     * <code>optional bool isAttack = 7;</code>
     */
    public boolean hasIsAttack() {
      return ((bitField0_ & 0x00000040) == 0x00000040);
    }
    /**
     * <code>optional bool isAttack = 7;</code>
     */
    public boolean getIsAttack() {
      return isAttack_;
    }

    public static final int ISEVADED_FIELD_NUMBER = 8;
    private boolean isEvaded_;
    /**
     * <code>optional bool isEvaded = 8;</code>
     */
    public boolean hasIsEvaded() {
      return ((bitField0_ & 0x00000080) == 0x00000080);
    }
    /**
     * <code>optional bool isEvaded = 8;</code>
     */
    public boolean getIsEvaded() {
      return isEvaded_;
    }

    public static final int EXPIRETIME_FIELD_NUMBER = 9;
    private float expireTime_;
    /**
     * <code>optional float expireTime = 9;</code>
     */
    public boolean hasExpireTime() {
      return ((bitField0_ & 0x00000100) == 0x00000100);
    }
    /**
     * <code>optional float expireTime = 9;</code>
     */
    public float getExpireTime() {
      return expireTime_;
    }

    public static final int MAXIMPACTTIME_FIELD_NUMBER = 10;
    private float maximpacttime_;
    /**
     * <code>optional float maximpacttime = 10;</code>
     */
    public boolean hasMaximpacttime() {
      return ((bitField0_ & 0x00000200) == 0x00000200);
    }
    /**
     * <code>optional float maximpacttime = 10;</code>
     */
    public float getMaximpacttime() {
      return maximpacttime_;
    }

    public static final int COLORGEMCOLOR_FIELD_NUMBER = 11;
    private int colorgemcolor_;
    /**
     * <code>optional fixed32 colorgemcolor = 11;</code>
     */
    public boolean hasColorgemcolor() {
      return ((bitField0_ & 0x00000400) == 0x00000400);
    }
    /**
     * <code>optional fixed32 colorgemcolor = 11;</code>
     */
    public int getColorgemcolor() {
      return colorgemcolor_;
    }

    private void initFields() {
      hSource_ = 0;
      hTarget_ = 0;
      moveSpeed_ = 0;
      sourceAttachment_ = 0;
      particleSystemHandle_ = 0L;
      dodgeable_ = false;
      isAttack_ = false;
      isEvaded_ = false;
      expireTime_ = 0F;
      maximpacttime_ = 0F;
      colorgemcolor_ = 0;
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeInt32(1, hSource_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeInt32(2, hTarget_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        output.writeInt32(3, moveSpeed_);
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        output.writeInt32(4, sourceAttachment_);
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        output.writeInt64(5, particleSystemHandle_);
      }
      if (((bitField0_ & 0x00000020) == 0x00000020)) {
        output.writeBool(6, dodgeable_);
      }
      if (((bitField0_ & 0x00000040) == 0x00000040)) {
        output.writeBool(7, isAttack_);
      }
      if (((bitField0_ & 0x00000080) == 0x00000080)) {
        output.writeBool(8, isEvaded_);
      }
      if (((bitField0_ & 0x00000100) == 0x00000100)) {
        output.writeFloat(9, expireTime_);
      }
      if (((bitField0_ & 0x00000200) == 0x00000200)) {
        output.writeFloat(10, maximpacttime_);
      }
      if (((bitField0_ & 0x00000400) == 0x00000400)) {
        output.writeFixed32(11, colorgemcolor_);
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(1, hSource_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(2, hTarget_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(3, moveSpeed_);
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(4, sourceAttachment_);
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt64Size(5, particleSystemHandle_);
      }
      if (((bitField0_ & 0x00000020) == 0x00000020)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBoolSize(6, dodgeable_);
      }
      if (((bitField0_ & 0x00000040) == 0x00000040)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBoolSize(7, isAttack_);
      }
      if (((bitField0_ & 0x00000080) == 0x00000080)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBoolSize(8, isEvaded_);
      }
      if (((bitField0_ & 0x00000100) == 0x00000100)) {
        size += com.google.protobuf.CodedOutputStream
          .computeFloatSize(9, expireTime_);
      }
      if (((bitField0_ & 0x00000200) == 0x00000200)) {
        size += com.google.protobuf.CodedOutputStream
          .computeFloatSize(10, maximpacttime_);
      }
      if (((bitField0_ & 0x00000400) == 0x00000400)) {
        size += com.google.protobuf.CodedOutputStream
          .computeFixed32Size(11, colorgemcolor_);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_TE_Projectile parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_TE_Projectile parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_TE_Projectile parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_TE_Projectile parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_TE_Projectile parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_TE_Projectile parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_TE_Projectile parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_TE_Projectile parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_TE_Projectile parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_TE_Projectile parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_TE_Projectile prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code CDOTAUserMsg_TE_Projectile}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:CDOTAUserMsg_TE_Projectile)
        skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_TE_ProjectileOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return skadistats.clarity.wire.common.proto.DotaUserMessages.internal_static_CDOTAUserMsg_TE_Projectile_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return skadistats.clarity.wire.common.proto.DotaUserMessages.internal_static_CDOTAUserMsg_TE_Projectile_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_TE_Projectile.class, skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_TE_Projectile.Builder.class);
      }

      // Construct using skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_TE_Projectile.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        hSource_ = 0;
        bitField0_ = (bitField0_ & ~0x00000001);
        hTarget_ = 0;
        bitField0_ = (bitField0_ & ~0x00000002);
        moveSpeed_ = 0;
        bitField0_ = (bitField0_ & ~0x00000004);
        sourceAttachment_ = 0;
        bitField0_ = (bitField0_ & ~0x00000008);
        particleSystemHandle_ = 0L;
        bitField0_ = (bitField0_ & ~0x00000010);
        dodgeable_ = false;
        bitField0_ = (bitField0_ & ~0x00000020);
        isAttack_ = false;
        bitField0_ = (bitField0_ & ~0x00000040);
        isEvaded_ = false;
        bitField0_ = (bitField0_ & ~0x00000080);
        expireTime_ = 0F;
        bitField0_ = (bitField0_ & ~0x00000100);
        maximpacttime_ = 0F;
        bitField0_ = (bitField0_ & ~0x00000200);
        colorgemcolor_ = 0;
        bitField0_ = (bitField0_ & ~0x00000400);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return skadistats.clarity.wire.common.proto.DotaUserMessages.internal_static_CDOTAUserMsg_TE_Projectile_descriptor;
      }

      public skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_TE_Projectile getDefaultInstanceForType() {
        return skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_TE_Projectile.getDefaultInstance();
      }

      public skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_TE_Projectile build() {
        skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_TE_Projectile result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_TE_Projectile buildPartial() {
        skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_TE_Projectile result = new skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_TE_Projectile(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.hSource_ = hSource_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.hTarget_ = hTarget_;
        if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
          to_bitField0_ |= 0x00000004;
        }
        result.moveSpeed_ = moveSpeed_;
        if (((from_bitField0_ & 0x00000008) == 0x00000008)) {
          to_bitField0_ |= 0x00000008;
        }
        result.sourceAttachment_ = sourceAttachment_;
        if (((from_bitField0_ & 0x00000010) == 0x00000010)) {
          to_bitField0_ |= 0x00000010;
        }
        result.particleSystemHandle_ = particleSystemHandle_;
        if (((from_bitField0_ & 0x00000020) == 0x00000020)) {
          to_bitField0_ |= 0x00000020;
        }
        result.dodgeable_ = dodgeable_;
        if (((from_bitField0_ & 0x00000040) == 0x00000040)) {
          to_bitField0_ |= 0x00000040;
        }
        result.isAttack_ = isAttack_;
        if (((from_bitField0_ & 0x00000080) == 0x00000080)) {
          to_bitField0_ |= 0x00000080;
        }
        result.isEvaded_ = isEvaded_;
        if (((from_bitField0_ & 0x00000100) == 0x00000100)) {
          to_bitField0_ |= 0x00000100;
        }
        result.expireTime_ = expireTime_;
        if (((from_bitField0_ & 0x00000200) == 0x00000200)) {
          to_bitField0_ |= 0x00000200;
        }
        result.maximpacttime_ = maximpacttime_;
        if (((from_bitField0_ & 0x00000400) == 0x00000400)) {
          to_bitField0_ |= 0x00000400;
        }
        result.colorgemcolor_ = colorgemcolor_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_TE_Projectile) {
          return mergeFrom((skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_TE_Projectile)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_TE_Projectile other) {
        if (other == skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_TE_Projectile.getDefaultInstance()) return this;
        if (other.hasHSource()) {
          setHSource(other.getHSource());
        }
        if (other.hasHTarget()) {
          setHTarget(other.getHTarget());
        }
        if (other.hasMoveSpeed()) {
          setMoveSpeed(other.getMoveSpeed());
        }
        if (other.hasSourceAttachment()) {
          setSourceAttachment(other.getSourceAttachment());
        }
        if (other.hasParticleSystemHandle()) {
          setParticleSystemHandle(other.getParticleSystemHandle());
        }
        if (other.hasDodgeable()) {
          setDodgeable(other.getDodgeable());
        }
        if (other.hasIsAttack()) {
          setIsAttack(other.getIsAttack());
        }
        if (other.hasIsEvaded()) {
          setIsEvaded(other.getIsEvaded());
        }
        if (other.hasExpireTime()) {
          setExpireTime(other.getExpireTime());
        }
        if (other.hasMaximpacttime()) {
          setMaximpacttime(other.getMaximpacttime());
        }
        if (other.hasColorgemcolor()) {
          setColorgemcolor(other.getColorgemcolor());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_TE_Projectile parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_TE_Projectile) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private int hSource_ ;
      /**
       * <code>optional int32 hSource = 1;</code>
       */
      public boolean hasHSource() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>optional int32 hSource = 1;</code>
       */
      public int getHSource() {
        return hSource_;
      }
      /**
       * <code>optional int32 hSource = 1;</code>
       */
      public Builder setHSource(int value) {
        bitField0_ |= 0x00000001;
        hSource_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 hSource = 1;</code>
       */
      public Builder clearHSource() {
        bitField0_ = (bitField0_ & ~0x00000001);
        hSource_ = 0;
        onChanged();
        return this;
      }

      private int hTarget_ ;
      /**
       * <code>optional int32 hTarget = 2;</code>
       */
      public boolean hasHTarget() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>optional int32 hTarget = 2;</code>
       */
      public int getHTarget() {
        return hTarget_;
      }
      /**
       * <code>optional int32 hTarget = 2;</code>
       */
      public Builder setHTarget(int value) {
        bitField0_ |= 0x00000002;
        hTarget_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 hTarget = 2;</code>
       */
      public Builder clearHTarget() {
        bitField0_ = (bitField0_ & ~0x00000002);
        hTarget_ = 0;
        onChanged();
        return this;
      }

      private int moveSpeed_ ;
      /**
       * <code>optional int32 moveSpeed = 3;</code>
       */
      public boolean hasMoveSpeed() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }
      /**
       * <code>optional int32 moveSpeed = 3;</code>
       */
      public int getMoveSpeed() {
        return moveSpeed_;
      }
      /**
       * <code>optional int32 moveSpeed = 3;</code>
       */
      public Builder setMoveSpeed(int value) {
        bitField0_ |= 0x00000004;
        moveSpeed_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 moveSpeed = 3;</code>
       */
      public Builder clearMoveSpeed() {
        bitField0_ = (bitField0_ & ~0x00000004);
        moveSpeed_ = 0;
        onChanged();
        return this;
      }

      private int sourceAttachment_ ;
      /**
       * <code>optional int32 sourceAttachment = 4;</code>
       */
      public boolean hasSourceAttachment() {
        return ((bitField0_ & 0x00000008) == 0x00000008);
      }
      /**
       * <code>optional int32 sourceAttachment = 4;</code>
       */
      public int getSourceAttachment() {
        return sourceAttachment_;
      }
      /**
       * <code>optional int32 sourceAttachment = 4;</code>
       */
      public Builder setSourceAttachment(int value) {
        bitField0_ |= 0x00000008;
        sourceAttachment_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 sourceAttachment = 4;</code>
       */
      public Builder clearSourceAttachment() {
        bitField0_ = (bitField0_ & ~0x00000008);
        sourceAttachment_ = 0;
        onChanged();
        return this;
      }

      private long particleSystemHandle_ ;
      /**
       * <code>optional int64 particleSystemHandle = 5;</code>
       */
      public boolean hasParticleSystemHandle() {
        return ((bitField0_ & 0x00000010) == 0x00000010);
      }
      /**
       * <code>optional int64 particleSystemHandle = 5;</code>
       */
      public long getParticleSystemHandle() {
        return particleSystemHandle_;
      }
      /**
       * <code>optional int64 particleSystemHandle = 5;</code>
       */
      public Builder setParticleSystemHandle(long value) {
        bitField0_ |= 0x00000010;
        particleSystemHandle_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int64 particleSystemHandle = 5;</code>
       */
      public Builder clearParticleSystemHandle() {
        bitField0_ = (bitField0_ & ~0x00000010);
        particleSystemHandle_ = 0L;
        onChanged();
        return this;
      }

      private boolean dodgeable_ ;
      /**
       * <code>optional bool dodgeable = 6;</code>
       */
      public boolean hasDodgeable() {
        return ((bitField0_ & 0x00000020) == 0x00000020);
      }
      /**
       * <code>optional bool dodgeable = 6;</code>
       */
      public boolean getDodgeable() {
        return dodgeable_;
      }
      /**
       * <code>optional bool dodgeable = 6;</code>
       */
      public Builder setDodgeable(boolean value) {
        bitField0_ |= 0x00000020;
        dodgeable_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional bool dodgeable = 6;</code>
       */
      public Builder clearDodgeable() {
        bitField0_ = (bitField0_ & ~0x00000020);
        dodgeable_ = false;
        onChanged();
        return this;
      }

      private boolean isAttack_ ;
      /**
       * <code>optional bool isAttack = 7;</code>
       */
      public boolean hasIsAttack() {
        return ((bitField0_ & 0x00000040) == 0x00000040);
      }
      /**
       * <code>optional bool isAttack = 7;</code>
       */
      public boolean getIsAttack() {
        return isAttack_;
      }
      /**
       * <code>optional bool isAttack = 7;</code>
       */
      public Builder setIsAttack(boolean value) {
        bitField0_ |= 0x00000040;
        isAttack_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional bool isAttack = 7;</code>
       */
      public Builder clearIsAttack() {
        bitField0_ = (bitField0_ & ~0x00000040);
        isAttack_ = false;
        onChanged();
        return this;
      }

      private boolean isEvaded_ ;
      /**
       * <code>optional bool isEvaded = 8;</code>
       */
      public boolean hasIsEvaded() {
        return ((bitField0_ & 0x00000080) == 0x00000080);
      }
      /**
       * <code>optional bool isEvaded = 8;</code>
       */
      public boolean getIsEvaded() {
        return isEvaded_;
      }
      /**
       * <code>optional bool isEvaded = 8;</code>
       */
      public Builder setIsEvaded(boolean value) {
        bitField0_ |= 0x00000080;
        isEvaded_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional bool isEvaded = 8;</code>
       */
      public Builder clearIsEvaded() {
        bitField0_ = (bitField0_ & ~0x00000080);
        isEvaded_ = false;
        onChanged();
        return this;
      }

      private float expireTime_ ;
      /**
       * <code>optional float expireTime = 9;</code>
       */
      public boolean hasExpireTime() {
        return ((bitField0_ & 0x00000100) == 0x00000100);
      }
      /**
       * <code>optional float expireTime = 9;</code>
       */
      public float getExpireTime() {
        return expireTime_;
      }
      /**
       * <code>optional float expireTime = 9;</code>
       */
      public Builder setExpireTime(float value) {
        bitField0_ |= 0x00000100;
        expireTime_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional float expireTime = 9;</code>
       */
      public Builder clearExpireTime() {
        bitField0_ = (bitField0_ & ~0x00000100);
        expireTime_ = 0F;
        onChanged();
        return this;
      }

      private float maximpacttime_ ;
      /**
       * <code>optional float maximpacttime = 10;</code>
       */
      public boolean hasMaximpacttime() {
        return ((bitField0_ & 0x00000200) == 0x00000200);
      }
      /**
       * <code>optional float maximpacttime = 10;</code>
       */
      public float getMaximpacttime() {
        return maximpacttime_;
      }
      /**
       * <code>optional float maximpacttime = 10;</code>
       */
      public Builder setMaximpacttime(float value) {
        bitField0_ |= 0x00000200;
        maximpacttime_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional float maximpacttime = 10;</code>
       */
      public Builder clearMaximpacttime() {
        bitField0_ = (bitField0_ & ~0x00000200);
        maximpacttime_ = 0F;
        onChanged();
        return this;
      }

      private int colorgemcolor_ ;
      /**
       * <code>optional fixed32 colorgemcolor = 11;</code>
       */
      public boolean hasColorgemcolor() {
        return ((bitField0_ & 0x00000400) == 0x00000400);
      }
      /**
       * <code>optional fixed32 colorgemcolor = 11;</code>
       */
      public int getColorgemcolor() {
        return colorgemcolor_;
      }
      /**
       * <code>optional fixed32 colorgemcolor = 11;</code>
       */
      public Builder setColorgemcolor(int value) {
        bitField0_ |= 0x00000400;
        colorgemcolor_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional fixed32 colorgemcolor = 11;</code>
       */
      public Builder clearColorgemcolor() {
        bitField0_ = (bitField0_ & ~0x00000400);
        colorgemcolor_ = 0;
        onChanged();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:CDOTAUserMsg_TE_Projectile)
    }

    static {
      defaultInstance = new CDOTAUserMsg_TE_Projectile(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:CDOTAUserMsg_TE_Projectile)
  }

  public interface CDOTAUserMsg_TE_ProjectileLocOrBuilder extends
      // @@protoc_insertion_point(interface_extends:CDOTAUserMsg_TE_ProjectileLoc)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>optional .CMsgVector vSourceLoc = 1;</code>
     */
    boolean hasVSourceLoc();
    /**
     * <code>optional .CMsgVector vSourceLoc = 1;</code>
     */
    skadistats.clarity.wire.common.proto.NetworkBaseTypes.CMsgVector getVSourceLoc();
    /**
     * <code>optional .CMsgVector vSourceLoc = 1;</code>
     */
    skadistats.clarity.wire.common.proto.NetworkBaseTypes.CMsgVectorOrBuilder getVSourceLocOrBuilder();

    /**
     * <code>optional int32 hTarget = 2;</code>
     */
    boolean hasHTarget();
    /**
     * <code>optional int32 hTarget = 2;</code>
     */
    int getHTarget();

    /**
     * <code>optional int32 moveSpeed = 3;</code>
     */
    boolean hasMoveSpeed();
    /**
     * <code>optional int32 moveSpeed = 3;</code>
     */
    int getMoveSpeed();

    /**
     * <code>optional int64 particleSystemHandle = 4;</code>
     */
    boolean hasParticleSystemHandle();
    /**
     * <code>optional int64 particleSystemHandle = 4;</code>
     */
    long getParticleSystemHandle();

    /**
     * <code>optional bool dodgeable = 5;</code>
     */
    boolean hasDodgeable();
    /**
     * <code>optional bool dodgeable = 5;</code>
     */
    boolean getDodgeable();

    /**
     * <code>optional bool isAttack = 6;</code>
     */
    boolean hasIsAttack();
    /**
     * <code>optional bool isAttack = 6;</code>
     */
    boolean getIsAttack();

    /**
     * <code>optional bool isEvaded = 8;</code>
     */
    boolean hasIsEvaded();
    /**
     * <code>optional bool isEvaded = 8;</code>
     */
    boolean getIsEvaded();

    /**
     * <code>optional float expireTime = 9;</code>
     */
    boolean hasExpireTime();
    /**
     * <code>optional float expireTime = 9;</code>
     */
    float getExpireTime();

    /**
     * <code>optional .CMsgVector vTargetLoc = 10;</code>
     */
    boolean hasVTargetLoc();
    /**
     * <code>optional .CMsgVector vTargetLoc = 10;</code>
     */
    skadistats.clarity.wire.common.proto.NetworkBaseTypes.CMsgVector getVTargetLoc();
    /**
     * <code>optional .CMsgVector vTargetLoc = 10;</code>
     */
    skadistats.clarity.wire.common.proto.NetworkBaseTypes.CMsgVectorOrBuilder getVTargetLocOrBuilder();

    /**
     * <code>optional fixed32 colorgemcolor = 11;</code>
     */
    boolean hasColorgemcolor();
    /**
     * <code>optional fixed32 colorgemcolor = 11;</code>
     */
    int getColorgemcolor();
  }
  /**
   * Protobuf type {@code CDOTAUserMsg_TE_ProjectileLoc}
   */
  public static final class CDOTAUserMsg_TE_ProjectileLoc extends
      com.google.protobuf.GeneratedMessage implements
      // @@protoc_insertion_point(message_implements:CDOTAUserMsg_TE_ProjectileLoc)
      CDOTAUserMsg_TE_ProjectileLocOrBuilder {
    // Use CDOTAUserMsg_TE_ProjectileLoc.newBuilder() to construct.
    private CDOTAUserMsg_TE_ProjectileLoc(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private CDOTAUserMsg_TE_ProjectileLoc(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final CDOTAUserMsg_TE_ProjectileLoc defaultInstance;
    public static CDOTAUserMsg_TE_ProjectileLoc getDefaultInstance() {
      return defaultInstance;
    }

    public CDOTAUserMsg_TE_ProjectileLoc getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private CDOTAUserMsg_TE_ProjectileLoc(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 10: {
              skadistats.clarity.wire.common.proto.NetworkBaseTypes.CMsgVector.Builder subBuilder = null;
              if (((bitField0_ & 0x00000001) == 0x00000001)) {
                subBuilder = vSourceLoc_.toBuilder();
              }
              vSourceLoc_ = input.readMessage(skadistats.clarity.wire.common.proto.NetworkBaseTypes.CMsgVector.PARSER, extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(vSourceLoc_);
                vSourceLoc_ = subBuilder.buildPartial();
              }
              bitField0_ |= 0x00000001;
              break;
            }
            case 16: {
              bitField0_ |= 0x00000002;
              hTarget_ = input.readInt32();
              break;
            }
            case 24: {
              bitField0_ |= 0x00000004;
              moveSpeed_ = input.readInt32();
              break;
            }
            case 32: {
              bitField0_ |= 0x00000008;
              particleSystemHandle_ = input.readInt64();
              break;
            }
            case 40: {
              bitField0_ |= 0x00000010;
              dodgeable_ = input.readBool();
              break;
            }
            case 48: {
              bitField0_ |= 0x00000020;
              isAttack_ = input.readBool();
              break;
            }
            case 64: {
              bitField0_ |= 0x00000040;
              isEvaded_ = input.readBool();
              break;
            }
            case 77: {
              bitField0_ |= 0x00000080;
              expireTime_ = input.readFloat();
              break;
            }
            case 82: {
              skadistats.clarity.wire.common.proto.NetworkBaseTypes.CMsgVector.Builder subBuilder = null;
              if (((bitField0_ & 0x00000100) == 0x00000100)) {
                subBuilder = vTargetLoc_.toBuilder();
              }
              vTargetLoc_ = input.readMessage(skadistats.clarity.wire.common.proto.NetworkBaseTypes.CMsgVector.PARSER, extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(vTargetLoc_);
                vTargetLoc_ = subBuilder.buildPartial();
              }
              bitField0_ |= 0x00000100;
              break;
            }
            case 93: {
              bitField0_ |= 0x00000200;
              colorgemcolor_ = input.readFixed32();
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return skadistats.clarity.wire.common.proto.DotaUserMessages.internal_static_CDOTAUserMsg_TE_ProjectileLoc_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return skadistats.clarity.wire.common.proto.DotaUserMessages.internal_static_CDOTAUserMsg_TE_ProjectileLoc_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_TE_ProjectileLoc.class, skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_TE_ProjectileLoc.Builder.class);
    }

    public static com.google.protobuf.Parser<CDOTAUserMsg_TE_ProjectileLoc> PARSER =
        new com.google.protobuf.AbstractParser<CDOTAUserMsg_TE_ProjectileLoc>() {
      public CDOTAUserMsg_TE_ProjectileLoc parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new CDOTAUserMsg_TE_ProjectileLoc(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<CDOTAUserMsg_TE_ProjectileLoc> getParserForType() {
      return PARSER;
    }

    private int bitField0_;
    public static final int VSOURCELOC_FIELD_NUMBER = 1;
    private skadistats.clarity.wire.common.proto.NetworkBaseTypes.CMsgVector vSourceLoc_;
    /**
     * <code>optional .CMsgVector vSourceLoc = 1;</code>
     */
    public boolean hasVSourceLoc() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>optional .CMsgVector vSourceLoc = 1;</code>
     */
    public skadistats.clarity.wire.common.proto.NetworkBaseTypes.CMsgVector getVSourceLoc() {
      return vSourceLoc_;
    }
    /**
     * <code>optional .CMsgVector vSourceLoc = 1;</code>
     */
    public skadistats.clarity.wire.common.proto.NetworkBaseTypes.CMsgVectorOrBuilder getVSourceLocOrBuilder() {
      return vSourceLoc_;
    }

    public static final int HTARGET_FIELD_NUMBER = 2;
    private int hTarget_;
    /**
     * <code>optional int32 hTarget = 2;</code>
     */
    public boolean hasHTarget() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>optional int32 hTarget = 2;</code>
     */
    public int getHTarget() {
      return hTarget_;
    }

    public static final int MOVESPEED_FIELD_NUMBER = 3;
    private int moveSpeed_;
    /**
     * <code>optional int32 moveSpeed = 3;</code>
     */
    public boolean hasMoveSpeed() {
      return ((bitField0_ & 0x00000004) == 0x00000004);
    }
    /**
     * <code>optional int32 moveSpeed = 3;</code>
     */
    public int getMoveSpeed() {
      return moveSpeed_;
    }

    public static final int PARTICLESYSTEMHANDLE_FIELD_NUMBER = 4;
    private long particleSystemHandle_;
    /**
     * <code>optional int64 particleSystemHandle = 4;</code>
     */
    public boolean hasParticleSystemHandle() {
      return ((bitField0_ & 0x00000008) == 0x00000008);
    }
    /**
     * <code>optional int64 particleSystemHandle = 4;</code>
     */
    public long getParticleSystemHandle() {
      return particleSystemHandle_;
    }

    public static final int DODGEABLE_FIELD_NUMBER = 5;
    private boolean dodgeable_;
    /**
     * <code>optional bool dodgeable = 5;</code>
     */
    public boolean hasDodgeable() {
      return ((bitField0_ & 0x00000010) == 0x00000010);
    }
    /**
     * <code>optional bool dodgeable = 5;</code>
     */
    public boolean getDodgeable() {
      return dodgeable_;
    }

    public static final int ISATTACK_FIELD_NUMBER = 6;
    private boolean isAttack_;
    /**
     * <code>optional bool isAttack = 6;</code>
     */
    public boolean hasIsAttack() {
      return ((bitField0_ & 0x00000020) == 0x00000020);
    }
    /**
     * <code>optional bool isAttack = 6;</code>
     */
    public boolean getIsAttack() {
      return isAttack_;
    }

    public static final int ISEVADED_FIELD_NUMBER = 8;
    private boolean isEvaded_;
    /**
     * <code>optional bool isEvaded = 8;</code>
     */
    public boolean hasIsEvaded() {
      return ((bitField0_ & 0x00000040) == 0x00000040);
    }
    /**
     * <code>optional bool isEvaded = 8;</code>
     */
    public boolean getIsEvaded() {
      return isEvaded_;
    }

    public static final int EXPIRETIME_FIELD_NUMBER = 9;
    private float expireTime_;
    /**
     * <code>optional float expireTime = 9;</code>
     */
    public boolean hasExpireTime() {
      return ((bitField0_ & 0x00000080) == 0x00000080);
    }
    /**
     * <code>optional float expireTime = 9;</code>
     */
    public float getExpireTime() {
      return expireTime_;
    }

    public static final int VTARGETLOC_FIELD_NUMBER = 10;
    private skadistats.clarity.wire.common.proto.NetworkBaseTypes.CMsgVector vTargetLoc_;
    /**
     * <code>optional .CMsgVector vTargetLoc = 10;</code>
     */
    public boolean hasVTargetLoc() {
      return ((bitField0_ & 0x00000100) == 0x00000100);
    }
    /**
     * <code>optional .CMsgVector vTargetLoc = 10;</code>
     */
    public skadistats.clarity.wire.common.proto.NetworkBaseTypes.CMsgVector getVTargetLoc() {
      return vTargetLoc_;
    }
    /**
     * <code>optional .CMsgVector vTargetLoc = 10;</code>
     */
    public skadistats.clarity.wire.common.proto.NetworkBaseTypes.CMsgVectorOrBuilder getVTargetLocOrBuilder() {
      return vTargetLoc_;
    }

    public static final int COLORGEMCOLOR_FIELD_NUMBER = 11;
    private int colorgemcolor_;
    /**
     * <code>optional fixed32 colorgemcolor = 11;</code>
     */
    public boolean hasColorgemcolor() {
      return ((bitField0_ & 0x00000200) == 0x00000200);
    }
    /**
     * <code>optional fixed32 colorgemcolor = 11;</code>
     */
    public int getColorgemcolor() {
      return colorgemcolor_;
    }

    private void initFields() {
      vSourceLoc_ = skadistats.clarity.wire.common.proto.NetworkBaseTypes.CMsgVector.getDefaultInstance();
      hTarget_ = 0;
      moveSpeed_ = 0;
      particleSystemHandle_ = 0L;
      dodgeable_ = false;
      isAttack_ = false;
      isEvaded_ = false;
      expireTime_ = 0F;
      vTargetLoc_ = skadistats.clarity.wire.common.proto.NetworkBaseTypes.CMsgVector.getDefaultInstance();
      colorgemcolor_ = 0;
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeMessage(1, vSourceLoc_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeInt32(2, hTarget_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        output.writeInt32(3, moveSpeed_);
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        output.writeInt64(4, particleSystemHandle_);
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        output.writeBool(5, dodgeable_);
      }
      if (((bitField0_ & 0x00000020) == 0x00000020)) {
        output.writeBool(6, isAttack_);
      }
      if (((bitField0_ & 0x00000040) == 0x00000040)) {
        output.writeBool(8, isEvaded_);
      }
      if (((bitField0_ & 0x00000080) == 0x00000080)) {
        output.writeFloat(9, expireTime_);
      }
      if (((bitField0_ & 0x00000100) == 0x00000100)) {
        output.writeMessage(10, vTargetLoc_);
      }
      if (((bitField0_ & 0x00000200) == 0x00000200)) {
        output.writeFixed32(11, colorgemcolor_);
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(1, vSourceLoc_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(2, hTarget_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(3, moveSpeed_);
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt64Size(4, particleSystemHandle_);
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBoolSize(5, dodgeable_);
      }
      if (((bitField0_ & 0x00000020) == 0x00000020)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBoolSize(6, isAttack_);
      }
      if (((bitField0_ & 0x00000040) == 0x00000040)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBoolSize(8, isEvaded_);
      }
      if (((bitField0_ & 0x00000080) == 0x00000080)) {
        size += com.google.protobuf.CodedOutputStream
          .computeFloatSize(9, expireTime_);
      }
      if (((bitField0_ & 0x00000100) == 0x00000100)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(10, vTargetLoc_);
      }
      if (((bitField0_ & 0x00000200) == 0x00000200)) {
        size += com.google.protobuf.CodedOutputStream
          .computeFixed32Size(11, colorgemcolor_);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_TE_ProjectileLoc parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_TE_ProjectileLoc parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_TE_ProjectileLoc parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_TE_ProjectileLoc parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_TE_ProjectileLoc parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_TE_ProjectileLoc parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_TE_ProjectileLoc parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_TE_ProjectileLoc parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_TE_ProjectileLoc parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_TE_ProjectileLoc parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_TE_ProjectileLoc prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code CDOTAUserMsg_TE_ProjectileLoc}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:CDOTAUserMsg_TE_ProjectileLoc)
        skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_TE_ProjectileLocOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return skadistats.clarity.wire.common.proto.DotaUserMessages.internal_static_CDOTAUserMsg_TE_ProjectileLoc_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return skadistats.clarity.wire.common.proto.DotaUserMessages.internal_static_CDOTAUserMsg_TE_ProjectileLoc_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_TE_ProjectileLoc.class, skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_TE_ProjectileLoc.Builder.class);
      }

      // Construct using skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_TE_ProjectileLoc.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
          getVSourceLocFieldBuilder();
          getVTargetLocFieldBuilder();
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        if (vSourceLocBuilder_ == null) {
          vSourceLoc_ = skadistats.clarity.wire.common.proto.NetworkBaseTypes.CMsgVector.getDefaultInstance();
        } else {
          vSourceLocBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000001);
        hTarget_ = 0;
        bitField0_ = (bitField0_ & ~0x00000002);
        moveSpeed_ = 0;
        bitField0_ = (bitField0_ & ~0x00000004);
        particleSystemHandle_ = 0L;
        bitField0_ = (bitField0_ & ~0x00000008);
        dodgeable_ = false;
        bitField0_ = (bitField0_ & ~0x00000010);
        isAttack_ = false;
        bitField0_ = (bitField0_ & ~0x00000020);
        isEvaded_ = false;
        bitField0_ = (bitField0_ & ~0x00000040);
        expireTime_ = 0F;
        bitField0_ = (bitField0_ & ~0x00000080);
        if (vTargetLocBuilder_ == null) {
          vTargetLoc_ = skadistats.clarity.wire.common.proto.NetworkBaseTypes.CMsgVector.getDefaultInstance();
        } else {
          vTargetLocBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000100);
        colorgemcolor_ = 0;
        bitField0_ = (bitField0_ & ~0x00000200);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return skadistats.clarity.wire.common.proto.DotaUserMessages.internal_static_CDOTAUserMsg_TE_ProjectileLoc_descriptor;
      }

      public skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_TE_ProjectileLoc getDefaultInstanceForType() {
        return skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_TE_ProjectileLoc.getDefaultInstance();
      }

      public skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_TE_ProjectileLoc build() {
        skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_TE_ProjectileLoc result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_TE_ProjectileLoc buildPartial() {
        skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_TE_ProjectileLoc result = new skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_TE_ProjectileLoc(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        if (vSourceLocBuilder_ == null) {
          result.vSourceLoc_ = vSourceLoc_;
        } else {
          result.vSourceLoc_ = vSourceLocBuilder_.build();
        }
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.hTarget_ = hTarget_;
        if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
          to_bitField0_ |= 0x00000004;
        }
        result.moveSpeed_ = moveSpeed_;
        if (((from_bitField0_ & 0x00000008) == 0x00000008)) {
          to_bitField0_ |= 0x00000008;
        }
        result.particleSystemHandle_ = particleSystemHandle_;
        if (((from_bitField0_ & 0x00000010) == 0x00000010)) {
          to_bitField0_ |= 0x00000010;
        }
        result.dodgeable_ = dodgeable_;
        if (((from_bitField0_ & 0x00000020) == 0x00000020)) {
          to_bitField0_ |= 0x00000020;
        }
        result.isAttack_ = isAttack_;
        if (((from_bitField0_ & 0x00000040) == 0x00000040)) {
          to_bitField0_ |= 0x00000040;
        }
        result.isEvaded_ = isEvaded_;
        if (((from_bitField0_ & 0x00000080) == 0x00000080)) {
          to_bitField0_ |= 0x00000080;
        }
        result.expireTime_ = expireTime_;
        if (((from_bitField0_ & 0x00000100) == 0x00000100)) {
          to_bitField0_ |= 0x00000100;
        }
        if (vTargetLocBuilder_ == null) {
          result.vTargetLoc_ = vTargetLoc_;
        } else {
          result.vTargetLoc_ = vTargetLocBuilder_.build();
        }
        if (((from_bitField0_ & 0x00000200) == 0x00000200)) {
          to_bitField0_ |= 0x00000200;
        }
        result.colorgemcolor_ = colorgemcolor_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_TE_ProjectileLoc) {
          return mergeFrom((skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_TE_ProjectileLoc)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_TE_ProjectileLoc other) {
        if (other == skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_TE_ProjectileLoc.getDefaultInstance()) return this;
        if (other.hasVSourceLoc()) {
          mergeVSourceLoc(other.getVSourceLoc());
        }
        if (other.hasHTarget()) {
          setHTarget(other.getHTarget());
        }
        if (other.hasMoveSpeed()) {
          setMoveSpeed(other.getMoveSpeed());
        }
        if (other.hasParticleSystemHandle()) {
          setParticleSystemHandle(other.getParticleSystemHandle());
        }
        if (other.hasDodgeable()) {
          setDodgeable(other.getDodgeable());
        }
        if (other.hasIsAttack()) {
          setIsAttack(other.getIsAttack());
        }
        if (other.hasIsEvaded()) {
          setIsEvaded(other.getIsEvaded());
        }
        if (other.hasExpireTime()) {
          setExpireTime(other.getExpireTime());
        }
        if (other.hasVTargetLoc()) {
          mergeVTargetLoc(other.getVTargetLoc());
        }
        if (other.hasColorgemcolor()) {
          setColorgemcolor(other.getColorgemcolor());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_TE_ProjectileLoc parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_TE_ProjectileLoc) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private skadistats.clarity.wire.common.proto.NetworkBaseTypes.CMsgVector vSourceLoc_ = skadistats.clarity.wire.common.proto.NetworkBaseTypes.CMsgVector.getDefaultInstance();
      private com.google.protobuf.SingleFieldBuilder<
          skadistats.clarity.wire.common.proto.NetworkBaseTypes.CMsgVector, skadistats.clarity.wire.common.proto.NetworkBaseTypes.CMsgVector.Builder, skadistats.clarity.wire.common.proto.NetworkBaseTypes.CMsgVectorOrBuilder> vSourceLocBuilder_;
      /**
       * <code>optional .CMsgVector vSourceLoc = 1;</code>
       */
      public boolean hasVSourceLoc() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>optional .CMsgVector vSourceLoc = 1;</code>
       */
      public skadistats.clarity.wire.common.proto.NetworkBaseTypes.CMsgVector getVSourceLoc() {
        if (vSourceLocBuilder_ == null) {
          return vSourceLoc_;
        } else {
          return vSourceLocBuilder_.getMessage();
        }
      }
      /**
       * <code>optional .CMsgVector vSourceLoc = 1;</code>
       */
      public Builder setVSourceLoc(skadistats.clarity.wire.common.proto.NetworkBaseTypes.CMsgVector value) {
        if (vSourceLocBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          vSourceLoc_ = value;
          onChanged();
        } else {
          vSourceLocBuilder_.setMessage(value);
        }
        bitField0_ |= 0x00000001;
        return this;
      }
      /**
       * <code>optional .CMsgVector vSourceLoc = 1;</code>
       */
      public Builder setVSourceLoc(
          skadistats.clarity.wire.common.proto.NetworkBaseTypes.CMsgVector.Builder builderForValue) {
        if (vSourceLocBuilder_ == null) {
          vSourceLoc_ = builderForValue.build();
          onChanged();
        } else {
          vSourceLocBuilder_.setMessage(builderForValue.build());
        }
        bitField0_ |= 0x00000001;
        return this;
      }
      /**
       * <code>optional .CMsgVector vSourceLoc = 1;</code>
       */
      public Builder mergeVSourceLoc(skadistats.clarity.wire.common.proto.NetworkBaseTypes.CMsgVector value) {
        if (vSourceLocBuilder_ == null) {
          if (((bitField0_ & 0x00000001) == 0x00000001) &&
              vSourceLoc_ != skadistats.clarity.wire.common.proto.NetworkBaseTypes.CMsgVector.getDefaultInstance()) {
            vSourceLoc_ =
              skadistats.clarity.wire.common.proto.NetworkBaseTypes.CMsgVector.newBuilder(vSourceLoc_).mergeFrom(value).buildPartial();
          } else {
            vSourceLoc_ = value;
          }
          onChanged();
        } else {
          vSourceLocBuilder_.mergeFrom(value);
        }
        bitField0_ |= 0x00000001;
        return this;
      }
      /**
       * <code>optional .CMsgVector vSourceLoc = 1;</code>
       */
      public Builder clearVSourceLoc() {
        if (vSourceLocBuilder_ == null) {
          vSourceLoc_ = skadistats.clarity.wire.common.proto.NetworkBaseTypes.CMsgVector.getDefaultInstance();
          onChanged();
        } else {
          vSourceLocBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000001);
        return this;
      }
      /**
       * <code>optional .CMsgVector vSourceLoc = 1;</code>
       */
      public skadistats.clarity.wire.common.proto.NetworkBaseTypes.CMsgVector.Builder getVSourceLocBuilder() {
        bitField0_ |= 0x00000001;
        onChanged();
        return getVSourceLocFieldBuilder().getBuilder();
      }
      /**
       * <code>optional .CMsgVector vSourceLoc = 1;</code>
       */
      public skadistats.clarity.wire.common.proto.NetworkBaseTypes.CMsgVectorOrBuilder getVSourceLocOrBuilder() {
        if (vSourceLocBuilder_ != null) {
          return vSourceLocBuilder_.getMessageOrBuilder();
        } else {
          return vSourceLoc_;
        }
      }
      /**
       * <code>optional .CMsgVector vSourceLoc = 1;</code>
       */
      private com.google.protobuf.SingleFieldBuilder<
          skadistats.clarity.wire.common.proto.NetworkBaseTypes.CMsgVector, skadistats.clarity.wire.common.proto.NetworkBaseTypes.CMsgVector.Builder, skadistats.clarity.wire.common.proto.NetworkBaseTypes.CMsgVectorOrBuilder> 
          getVSourceLocFieldBuilder() {
        if (vSourceLocBuilder_ == null) {
          vSourceLocBuilder_ = new com.google.protobuf.SingleFieldBuilder<
              skadistats.clarity.wire.common.proto.NetworkBaseTypes.CMsgVector, skadistats.clarity.wire.common.proto.NetworkBaseTypes.CMsgVector.Builder, skadistats.clarity.wire.common.proto.NetworkBaseTypes.CMsgVectorOrBuilder>(
                  getVSourceLoc(),
                  getParentForChildren(),
                  isClean());
          vSourceLoc_ = null;
        }
        return vSourceLocBuilder_;
      }

      private int hTarget_ ;
      /**
       * <code>optional int32 hTarget = 2;</code>
       */
      public boolean hasHTarget() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>optional int32 hTarget = 2;</code>
       */
      public int getHTarget() {
        return hTarget_;
      }
      /**
       * <code>optional int32 hTarget = 2;</code>
       */
      public Builder setHTarget(int value) {
        bitField0_ |= 0x00000002;
        hTarget_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 hTarget = 2;</code>
       */
      public Builder clearHTarget() {
        bitField0_ = (bitField0_ & ~0x00000002);
        hTarget_ = 0;
        onChanged();
        return this;
      }

      private int moveSpeed_ ;
      /**
       * <code>optional int32 moveSpeed = 3;</code>
       */
      public boolean hasMoveSpeed() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }
      /**
       * <code>optional int32 moveSpeed = 3;</code>
       */
      public int getMoveSpeed() {
        return moveSpeed_;
      }
      /**
       * <code>optional int32 moveSpeed = 3;</code>
       */
      public Builder setMoveSpeed(int value) {
        bitField0_ |= 0x00000004;
        moveSpeed_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 moveSpeed = 3;</code>
       */
      public Builder clearMoveSpeed() {
        bitField0_ = (bitField0_ & ~0x00000004);
        moveSpeed_ = 0;
        onChanged();
        return this;
      }

      private long particleSystemHandle_ ;
      /**
       * <code>optional int64 particleSystemHandle = 4;</code>
       */
      public boolean hasParticleSystemHandle() {
        return ((bitField0_ & 0x00000008) == 0x00000008);
      }
      /**
       * <code>optional int64 particleSystemHandle = 4;</code>
       */
      public long getParticleSystemHandle() {
        return particleSystemHandle_;
      }
      /**
       * <code>optional int64 particleSystemHandle = 4;</code>
       */
      public Builder setParticleSystemHandle(long value) {
        bitField0_ |= 0x00000008;
        particleSystemHandle_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int64 particleSystemHandle = 4;</code>
       */
      public Builder clearParticleSystemHandle() {
        bitField0_ = (bitField0_ & ~0x00000008);
        particleSystemHandle_ = 0L;
        onChanged();
        return this;
      }

      private boolean dodgeable_ ;
      /**
       * <code>optional bool dodgeable = 5;</code>
       */
      public boolean hasDodgeable() {
        return ((bitField0_ & 0x00000010) == 0x00000010);
      }
      /**
       * <code>optional bool dodgeable = 5;</code>
       */
      public boolean getDodgeable() {
        return dodgeable_;
      }
      /**
       * <code>optional bool dodgeable = 5;</code>
       */
      public Builder setDodgeable(boolean value) {
        bitField0_ |= 0x00000010;
        dodgeable_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional bool dodgeable = 5;</code>
       */
      public Builder clearDodgeable() {
        bitField0_ = (bitField0_ & ~0x00000010);
        dodgeable_ = false;
        onChanged();
        return this;
      }

      private boolean isAttack_ ;
      /**
       * <code>optional bool isAttack = 6;</code>
       */
      public boolean hasIsAttack() {
        return ((bitField0_ & 0x00000020) == 0x00000020);
      }
      /**
       * <code>optional bool isAttack = 6;</code>
       */
      public boolean getIsAttack() {
        return isAttack_;
      }
      /**
       * <code>optional bool isAttack = 6;</code>
       */
      public Builder setIsAttack(boolean value) {
        bitField0_ |= 0x00000020;
        isAttack_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional bool isAttack = 6;</code>
       */
      public Builder clearIsAttack() {
        bitField0_ = (bitField0_ & ~0x00000020);
        isAttack_ = false;
        onChanged();
        return this;
      }

      private boolean isEvaded_ ;
      /**
       * <code>optional bool isEvaded = 8;</code>
       */
      public boolean hasIsEvaded() {
        return ((bitField0_ & 0x00000040) == 0x00000040);
      }
      /**
       * <code>optional bool isEvaded = 8;</code>
       */
      public boolean getIsEvaded() {
        return isEvaded_;
      }
      /**
       * <code>optional bool isEvaded = 8;</code>
       */
      public Builder setIsEvaded(boolean value) {
        bitField0_ |= 0x00000040;
        isEvaded_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional bool isEvaded = 8;</code>
       */
      public Builder clearIsEvaded() {
        bitField0_ = (bitField0_ & ~0x00000040);
        isEvaded_ = false;
        onChanged();
        return this;
      }

      private float expireTime_ ;
      /**
       * <code>optional float expireTime = 9;</code>
       */
      public boolean hasExpireTime() {
        return ((bitField0_ & 0x00000080) == 0x00000080);
      }
      /**
       * <code>optional float expireTime = 9;</code>
       */
      public float getExpireTime() {
        return expireTime_;
      }
      /**
       * <code>optional float expireTime = 9;</code>
       */
      public Builder setExpireTime(float value) {
        bitField0_ |= 0x00000080;
        expireTime_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional float expireTime = 9;</code>
       */
      public Builder clearExpireTime() {
        bitField0_ = (bitField0_ & ~0x00000080);
        expireTime_ = 0F;
        onChanged();
        return this;
      }

      private skadistats.clarity.wire.common.proto.NetworkBaseTypes.CMsgVector vTargetLoc_ = skadistats.clarity.wire.common.proto.NetworkBaseTypes.CMsgVector.getDefaultInstance();
      private com.google.protobuf.SingleFieldBuilder<
          skadistats.clarity.wire.common.proto.NetworkBaseTypes.CMsgVector, skadistats.clarity.wire.common.proto.NetworkBaseTypes.CMsgVector.Builder, skadistats.clarity.wire.common.proto.NetworkBaseTypes.CMsgVectorOrBuilder> vTargetLocBuilder_;
      /**
       * <code>optional .CMsgVector vTargetLoc = 10;</code>
       */
      public boolean hasVTargetLoc() {
        return ((bitField0_ & 0x00000100) == 0x00000100);
      }
      /**
       * <code>optional .CMsgVector vTargetLoc = 10;</code>
       */
      public skadistats.clarity.wire.common.proto.NetworkBaseTypes.CMsgVector getVTargetLoc() {
        if (vTargetLocBuilder_ == null) {
          return vTargetLoc_;
        } else {
          return vTargetLocBuilder_.getMessage();
        }
      }
      /**
       * <code>optional .CMsgVector vTargetLoc = 10;</code>
       */
      public Builder setVTargetLoc(skadistats.clarity.wire.common.proto.NetworkBaseTypes.CMsgVector value) {
        if (vTargetLocBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          vTargetLoc_ = value;
          onChanged();
        } else {
          vTargetLocBuilder_.setMessage(value);
        }
        bitField0_ |= 0x00000100;
        return this;
      }
      /**
       * <code>optional .CMsgVector vTargetLoc = 10;</code>
       */
      public Builder setVTargetLoc(
          skadistats.clarity.wire.common.proto.NetworkBaseTypes.CMsgVector.Builder builderForValue) {
        if (vTargetLocBuilder_ == null) {
          vTargetLoc_ = builderForValue.build();
          onChanged();
        } else {
          vTargetLocBuilder_.setMessage(builderForValue.build());
        }
        bitField0_ |= 0x00000100;
        return this;
      }
      /**
       * <code>optional .CMsgVector vTargetLoc = 10;</code>
       */
      public Builder mergeVTargetLoc(skadistats.clarity.wire.common.proto.NetworkBaseTypes.CMsgVector value) {
        if (vTargetLocBuilder_ == null) {
          if (((bitField0_ & 0x00000100) == 0x00000100) &&
              vTargetLoc_ != skadistats.clarity.wire.common.proto.NetworkBaseTypes.CMsgVector.getDefaultInstance()) {
            vTargetLoc_ =
              skadistats.clarity.wire.common.proto.NetworkBaseTypes.CMsgVector.newBuilder(vTargetLoc_).mergeFrom(value).buildPartial();
          } else {
            vTargetLoc_ = value;
          }
          onChanged();
        } else {
          vTargetLocBuilder_.mergeFrom(value);
        }
        bitField0_ |= 0x00000100;
        return this;
      }
      /**
       * <code>optional .CMsgVector vTargetLoc = 10;</code>
       */
      public Builder clearVTargetLoc() {
        if (vTargetLocBuilder_ == null) {
          vTargetLoc_ = skadistats.clarity.wire.common.proto.NetworkBaseTypes.CMsgVector.getDefaultInstance();
          onChanged();
        } else {
          vTargetLocBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000100);
        return this;
      }
      /**
       * <code>optional .CMsgVector vTargetLoc = 10;</code>
       */
      public skadistats.clarity.wire.common.proto.NetworkBaseTypes.CMsgVector.Builder getVTargetLocBuilder() {
        bitField0_ |= 0x00000100;
        onChanged();
        return getVTargetLocFieldBuilder().getBuilder();
      }
      /**
       * <code>optional .CMsgVector vTargetLoc = 10;</code>
       */
      public skadistats.clarity.wire.common.proto.NetworkBaseTypes.CMsgVectorOrBuilder getVTargetLocOrBuilder() {
        if (vTargetLocBuilder_ != null) {
          return vTargetLocBuilder_.getMessageOrBuilder();
        } else {
          return vTargetLoc_;
        }
      }
      /**
       * <code>optional .CMsgVector vTargetLoc = 10;</code>
       */
      private com.google.protobuf.SingleFieldBuilder<
          skadistats.clarity.wire.common.proto.NetworkBaseTypes.CMsgVector, skadistats.clarity.wire.common.proto.NetworkBaseTypes.CMsgVector.Builder, skadistats.clarity.wire.common.proto.NetworkBaseTypes.CMsgVectorOrBuilder> 
          getVTargetLocFieldBuilder() {
        if (vTargetLocBuilder_ == null) {
          vTargetLocBuilder_ = new com.google.protobuf.SingleFieldBuilder<
              skadistats.clarity.wire.common.proto.NetworkBaseTypes.CMsgVector, skadistats.clarity.wire.common.proto.NetworkBaseTypes.CMsgVector.Builder, skadistats.clarity.wire.common.proto.NetworkBaseTypes.CMsgVectorOrBuilder>(
                  getVTargetLoc(),
                  getParentForChildren(),
                  isClean());
          vTargetLoc_ = null;
        }
        return vTargetLocBuilder_;
      }

      private int colorgemcolor_ ;
      /**
       * <code>optional fixed32 colorgemcolor = 11;</code>
       */
      public boolean hasColorgemcolor() {
        return ((bitField0_ & 0x00000200) == 0x00000200);
      }
      /**
       * <code>optional fixed32 colorgemcolor = 11;</code>
       */
      public int getColorgemcolor() {
        return colorgemcolor_;
      }
      /**
       * <code>optional fixed32 colorgemcolor = 11;</code>
       */
      public Builder setColorgemcolor(int value) {
        bitField0_ |= 0x00000200;
        colorgemcolor_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional fixed32 colorgemcolor = 11;</code>
       */
      public Builder clearColorgemcolor() {
        bitField0_ = (bitField0_ & ~0x00000200);
        colorgemcolor_ = 0;
        onChanged();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:CDOTAUserMsg_TE_ProjectileLoc)
    }

    static {
      defaultInstance = new CDOTAUserMsg_TE_ProjectileLoc(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:CDOTAUserMsg_TE_ProjectileLoc)
  }

  public interface CDOTAUserMsg_TE_DotaBloodImpactOrBuilder extends
      // @@protoc_insertion_point(interface_extends:CDOTAUserMsg_TE_DotaBloodImpact)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>optional int32 entity = 1;</code>
     */
    boolean hasEntity();
    /**
     * <code>optional int32 entity = 1;</code>
     */
    int getEntity();

    /**
     * <code>optional float scale = 2;</code>
     */
    boolean hasScale();
    /**
     * <code>optional float scale = 2;</code>
     */
    float getScale();

    /**
     * <code>optional float xnormal = 3;</code>
     */
    boolean hasXnormal();
    /**
     * <code>optional float xnormal = 3;</code>
     */
    float getXnormal();

    /**
     * <code>optional float ynormal = 4;</code>
     */
    boolean hasYnormal();
    /**
     * <code>optional float ynormal = 4;</code>
     */
    float getYnormal();
  }
  /**
   * Protobuf type {@code CDOTAUserMsg_TE_DotaBloodImpact}
   */
  public static final class CDOTAUserMsg_TE_DotaBloodImpact extends
      com.google.protobuf.GeneratedMessage implements
      // @@protoc_insertion_point(message_implements:CDOTAUserMsg_TE_DotaBloodImpact)
      CDOTAUserMsg_TE_DotaBloodImpactOrBuilder {
    // Use CDOTAUserMsg_TE_DotaBloodImpact.newBuilder() to construct.
    private CDOTAUserMsg_TE_DotaBloodImpact(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private CDOTAUserMsg_TE_DotaBloodImpact(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final CDOTAUserMsg_TE_DotaBloodImpact defaultInstance;
    public static CDOTAUserMsg_TE_DotaBloodImpact getDefaultInstance() {
      return defaultInstance;
    }

    public CDOTAUserMsg_TE_DotaBloodImpact getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private CDOTAUserMsg_TE_DotaBloodImpact(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 8: {
              bitField0_ |= 0x00000001;
              entity_ = input.readInt32();
              break;
            }
            case 21: {
              bitField0_ |= 0x00000002;
              scale_ = input.readFloat();
              break;
            }
            case 29: {
              bitField0_ |= 0x00000004;
              xnormal_ = input.readFloat();
              break;
            }
            case 37: {
              bitField0_ |= 0x00000008;
              ynormal_ = input.readFloat();
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return skadistats.clarity.wire.common.proto.DotaUserMessages.internal_static_CDOTAUserMsg_TE_DotaBloodImpact_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return skadistats.clarity.wire.common.proto.DotaUserMessages.internal_static_CDOTAUserMsg_TE_DotaBloodImpact_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_TE_DotaBloodImpact.class, skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_TE_DotaBloodImpact.Builder.class);
    }

    public static com.google.protobuf.Parser<CDOTAUserMsg_TE_DotaBloodImpact> PARSER =
        new com.google.protobuf.AbstractParser<CDOTAUserMsg_TE_DotaBloodImpact>() {
      public CDOTAUserMsg_TE_DotaBloodImpact parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new CDOTAUserMsg_TE_DotaBloodImpact(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<CDOTAUserMsg_TE_DotaBloodImpact> getParserForType() {
      return PARSER;
    }

    private int bitField0_;
    public static final int ENTITY_FIELD_NUMBER = 1;
    private int entity_;
    /**
     * <code>optional int32 entity = 1;</code>
     */
    public boolean hasEntity() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>optional int32 entity = 1;</code>
     */
    public int getEntity() {
      return entity_;
    }

    public static final int SCALE_FIELD_NUMBER = 2;
    private float scale_;
    /**
     * <code>optional float scale = 2;</code>
     */
    public boolean hasScale() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>optional float scale = 2;</code>
     */
    public float getScale() {
      return scale_;
    }

    public static final int XNORMAL_FIELD_NUMBER = 3;
    private float xnormal_;
    /**
     * <code>optional float xnormal = 3;</code>
     */
    public boolean hasXnormal() {
      return ((bitField0_ & 0x00000004) == 0x00000004);
    }
    /**
     * <code>optional float xnormal = 3;</code>
     */
    public float getXnormal() {
      return xnormal_;
    }

    public static final int YNORMAL_FIELD_NUMBER = 4;
    private float ynormal_;
    /**
     * <code>optional float ynormal = 4;</code>
     */
    public boolean hasYnormal() {
      return ((bitField0_ & 0x00000008) == 0x00000008);
    }
    /**
     * <code>optional float ynormal = 4;</code>
     */
    public float getYnormal() {
      return ynormal_;
    }

    private void initFields() {
      entity_ = 0;
      scale_ = 0F;
      xnormal_ = 0F;
      ynormal_ = 0F;
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeInt32(1, entity_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeFloat(2, scale_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        output.writeFloat(3, xnormal_);
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        output.writeFloat(4, ynormal_);
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(1, entity_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeFloatSize(2, scale_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        size += com.google.protobuf.CodedOutputStream
          .computeFloatSize(3, xnormal_);
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        size += com.google.protobuf.CodedOutputStream
          .computeFloatSize(4, ynormal_);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_TE_DotaBloodImpact parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_TE_DotaBloodImpact parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_TE_DotaBloodImpact parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_TE_DotaBloodImpact parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_TE_DotaBloodImpact parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_TE_DotaBloodImpact parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_TE_DotaBloodImpact parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_TE_DotaBloodImpact parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_TE_DotaBloodImpact parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_TE_DotaBloodImpact parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_TE_DotaBloodImpact prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code CDOTAUserMsg_TE_DotaBloodImpact}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:CDOTAUserMsg_TE_DotaBloodImpact)
        skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_TE_DotaBloodImpactOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return skadistats.clarity.wire.common.proto.DotaUserMessages.internal_static_CDOTAUserMsg_TE_DotaBloodImpact_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return skadistats.clarity.wire.common.proto.DotaUserMessages.internal_static_CDOTAUserMsg_TE_DotaBloodImpact_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_TE_DotaBloodImpact.class, skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_TE_DotaBloodImpact.Builder.class);
      }

      // Construct using skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_TE_DotaBloodImpact.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        entity_ = 0;
        bitField0_ = (bitField0_ & ~0x00000001);
        scale_ = 0F;
        bitField0_ = (bitField0_ & ~0x00000002);
        xnormal_ = 0F;
        bitField0_ = (bitField0_ & ~0x00000004);
        ynormal_ = 0F;
        bitField0_ = (bitField0_ & ~0x00000008);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return skadistats.clarity.wire.common.proto.DotaUserMessages.internal_static_CDOTAUserMsg_TE_DotaBloodImpact_descriptor;
      }

      public skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_TE_DotaBloodImpact getDefaultInstanceForType() {
        return skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_TE_DotaBloodImpact.getDefaultInstance();
      }

      public skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_TE_DotaBloodImpact build() {
        skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_TE_DotaBloodImpact result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_TE_DotaBloodImpact buildPartial() {
        skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_TE_DotaBloodImpact result = new skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_TE_DotaBloodImpact(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.entity_ = entity_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.scale_ = scale_;
        if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
          to_bitField0_ |= 0x00000004;
        }
        result.xnormal_ = xnormal_;
        if (((from_bitField0_ & 0x00000008) == 0x00000008)) {
          to_bitField0_ |= 0x00000008;
        }
        result.ynormal_ = ynormal_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_TE_DotaBloodImpact) {
          return mergeFrom((skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_TE_DotaBloodImpact)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_TE_DotaBloodImpact other) {
        if (other == skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_TE_DotaBloodImpact.getDefaultInstance()) return this;
        if (other.hasEntity()) {
          setEntity(other.getEntity());
        }
        if (other.hasScale()) {
          setScale(other.getScale());
        }
        if (other.hasXnormal()) {
          setXnormal(other.getXnormal());
        }
        if (other.hasYnormal()) {
          setYnormal(other.getYnormal());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_TE_DotaBloodImpact parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_TE_DotaBloodImpact) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private int entity_ ;
      /**
       * <code>optional int32 entity = 1;</code>
       */
      public boolean hasEntity() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>optional int32 entity = 1;</code>
       */
      public int getEntity() {
        return entity_;
      }
      /**
       * <code>optional int32 entity = 1;</code>
       */
      public Builder setEntity(int value) {
        bitField0_ |= 0x00000001;
        entity_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 entity = 1;</code>
       */
      public Builder clearEntity() {
        bitField0_ = (bitField0_ & ~0x00000001);
        entity_ = 0;
        onChanged();
        return this;
      }

      private float scale_ ;
      /**
       * <code>optional float scale = 2;</code>
       */
      public boolean hasScale() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>optional float scale = 2;</code>
       */
      public float getScale() {
        return scale_;
      }
      /**
       * <code>optional float scale = 2;</code>
       */
      public Builder setScale(float value) {
        bitField0_ |= 0x00000002;
        scale_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional float scale = 2;</code>
       */
      public Builder clearScale() {
        bitField0_ = (bitField0_ & ~0x00000002);
        scale_ = 0F;
        onChanged();
        return this;
      }

      private float xnormal_ ;
      /**
       * <code>optional float xnormal = 3;</code>
       */
      public boolean hasXnormal() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }
      /**
       * <code>optional float xnormal = 3;</code>
       */
      public float getXnormal() {
        return xnormal_;
      }
      /**
       * <code>optional float xnormal = 3;</code>
       */
      public Builder setXnormal(float value) {
        bitField0_ |= 0x00000004;
        xnormal_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional float xnormal = 3;</code>
       */
      public Builder clearXnormal() {
        bitField0_ = (bitField0_ & ~0x00000004);
        xnormal_ = 0F;
        onChanged();
        return this;
      }

      private float ynormal_ ;
      /**
       * <code>optional float ynormal = 4;</code>
       */
      public boolean hasYnormal() {
        return ((bitField0_ & 0x00000008) == 0x00000008);
      }
      /**
       * <code>optional float ynormal = 4;</code>
       */
      public float getYnormal() {
        return ynormal_;
      }
      /**
       * <code>optional float ynormal = 4;</code>
       */
      public Builder setYnormal(float value) {
        bitField0_ |= 0x00000008;
        ynormal_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional float ynormal = 4;</code>
       */
      public Builder clearYnormal() {
        bitField0_ = (bitField0_ & ~0x00000008);
        ynormal_ = 0F;
        onChanged();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:CDOTAUserMsg_TE_DotaBloodImpact)
    }

    static {
      defaultInstance = new CDOTAUserMsg_TE_DotaBloodImpact(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:CDOTAUserMsg_TE_DotaBloodImpact)
  }

  public interface CDOTAUserMsg_AbilityPingOrBuilder extends
      // @@protoc_insertion_point(interface_extends:CDOTAUserMsg_AbilityPing)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>optional uint32 player_id = 1;</code>
     */
    boolean hasPlayerId();
    /**
     * <code>optional uint32 player_id = 1;</code>
     */
    int getPlayerId();

    /**
     * <code>optional uint32 ability_id = 2;</code>
     */
    boolean hasAbilityId();
    /**
     * <code>optional uint32 ability_id = 2;</code>
     */
    int getAbilityId();

    /**
     * <code>optional .DOTA_ABILITY_PING_TYPE type = 3 [default = ABILITY_PING_READY];</code>
     */
    boolean hasType();
    /**
     * <code>optional .DOTA_ABILITY_PING_TYPE type = 3 [default = ABILITY_PING_READY];</code>
     */
    skadistats.clarity.wire.common.proto.DotaUserMessages.DOTA_ABILITY_PING_TYPE getType();

    /**
     * <code>optional uint32 cooldown_seconds = 4;</code>
     */
    boolean hasCooldownSeconds();
    /**
     * <code>optional uint32 cooldown_seconds = 4;</code>
     */
    int getCooldownSeconds();

    /**
     * <code>optional uint32 level = 5;</code>
     */
    boolean hasLevel();
    /**
     * <code>optional uint32 level = 5;</code>
     */
    int getLevel();

    /**
     * <code>optional bool passive = 6;</code>
     */
    boolean hasPassive();
    /**
     * <code>optional bool passive = 6;</code>
     */
    boolean getPassive();

    /**
     * <code>optional uint32 mana_needed = 7;</code>
     */
    boolean hasManaNeeded();
    /**
     * <code>optional uint32 mana_needed = 7;</code>
     */
    int getManaNeeded();
  }
  /**
   * Protobuf type {@code CDOTAUserMsg_AbilityPing}
   */
  public static final class CDOTAUserMsg_AbilityPing extends
      com.google.protobuf.GeneratedMessage implements
      // @@protoc_insertion_point(message_implements:CDOTAUserMsg_AbilityPing)
      CDOTAUserMsg_AbilityPingOrBuilder {
    // Use CDOTAUserMsg_AbilityPing.newBuilder() to construct.
    private CDOTAUserMsg_AbilityPing(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private CDOTAUserMsg_AbilityPing(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final CDOTAUserMsg_AbilityPing defaultInstance;
    public static CDOTAUserMsg_AbilityPing getDefaultInstance() {
      return defaultInstance;
    }

    public CDOTAUserMsg_AbilityPing getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private CDOTAUserMsg_AbilityPing(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 8: {
              bitField0_ |= 0x00000001;
              playerId_ = input.readUInt32();
              break;
            }
            case 16: {
              bitField0_ |= 0x00000002;
              abilityId_ = input.readUInt32();
              break;
            }
            case 24: {
              int rawValue = input.readEnum();
              skadistats.clarity.wire.common.proto.DotaUserMessages.DOTA_ABILITY_PING_TYPE value = skadistats.clarity.wire.common.proto.DotaUserMessages.DOTA_ABILITY_PING_TYPE.valueOf(rawValue);
              if (value == null) {
                unknownFields.mergeVarintField(3, rawValue);
              } else {
                bitField0_ |= 0x00000004;
                type_ = value;
              }
              break;
            }
            case 32: {
              bitField0_ |= 0x00000008;
              cooldownSeconds_ = input.readUInt32();
              break;
            }
            case 40: {
              bitField0_ |= 0x00000010;
              level_ = input.readUInt32();
              break;
            }
            case 48: {
              bitField0_ |= 0x00000020;
              passive_ = input.readBool();
              break;
            }
            case 56: {
              bitField0_ |= 0x00000040;
              manaNeeded_ = input.readUInt32();
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return skadistats.clarity.wire.common.proto.DotaUserMessages.internal_static_CDOTAUserMsg_AbilityPing_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return skadistats.clarity.wire.common.proto.DotaUserMessages.internal_static_CDOTAUserMsg_AbilityPing_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_AbilityPing.class, skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_AbilityPing.Builder.class);
    }

    public static com.google.protobuf.Parser<CDOTAUserMsg_AbilityPing> PARSER =
        new com.google.protobuf.AbstractParser<CDOTAUserMsg_AbilityPing>() {
      public CDOTAUserMsg_AbilityPing parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new CDOTAUserMsg_AbilityPing(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<CDOTAUserMsg_AbilityPing> getParserForType() {
      return PARSER;
    }

    private int bitField0_;
    public static final int PLAYER_ID_FIELD_NUMBER = 1;
    private int playerId_;
    /**
     * <code>optional uint32 player_id = 1;</code>
     */
    public boolean hasPlayerId() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>optional uint32 player_id = 1;</code>
     */
    public int getPlayerId() {
      return playerId_;
    }

    public static final int ABILITY_ID_FIELD_NUMBER = 2;
    private int abilityId_;
    /**
     * <code>optional uint32 ability_id = 2;</code>
     */
    public boolean hasAbilityId() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>optional uint32 ability_id = 2;</code>
     */
    public int getAbilityId() {
      return abilityId_;
    }

    public static final int TYPE_FIELD_NUMBER = 3;
    private skadistats.clarity.wire.common.proto.DotaUserMessages.DOTA_ABILITY_PING_TYPE type_;
    /**
     * <code>optional .DOTA_ABILITY_PING_TYPE type = 3 [default = ABILITY_PING_READY];</code>
     */
    public boolean hasType() {
      return ((bitField0_ & 0x00000004) == 0x00000004);
    }
    /**
     * <code>optional .DOTA_ABILITY_PING_TYPE type = 3 [default = ABILITY_PING_READY];</code>
     */
    public skadistats.clarity.wire.common.proto.DotaUserMessages.DOTA_ABILITY_PING_TYPE getType() {
      return type_;
    }

    public static final int COOLDOWN_SECONDS_FIELD_NUMBER = 4;
    private int cooldownSeconds_;
    /**
     * <code>optional uint32 cooldown_seconds = 4;</code>
     */
    public boolean hasCooldownSeconds() {
      return ((bitField0_ & 0x00000008) == 0x00000008);
    }
    /**
     * <code>optional uint32 cooldown_seconds = 4;</code>
     */
    public int getCooldownSeconds() {
      return cooldownSeconds_;
    }

    public static final int LEVEL_FIELD_NUMBER = 5;
    private int level_;
    /**
     * <code>optional uint32 level = 5;</code>
     */
    public boolean hasLevel() {
      return ((bitField0_ & 0x00000010) == 0x00000010);
    }
    /**
     * <code>optional uint32 level = 5;</code>
     */
    public int getLevel() {
      return level_;
    }

    public static final int PASSIVE_FIELD_NUMBER = 6;
    private boolean passive_;
    /**
     * <code>optional bool passive = 6;</code>
     */
    public boolean hasPassive() {
      return ((bitField0_ & 0x00000020) == 0x00000020);
    }
    /**
     * <code>optional bool passive = 6;</code>
     */
    public boolean getPassive() {
      return passive_;
    }

    public static final int MANA_NEEDED_FIELD_NUMBER = 7;
    private int manaNeeded_;
    /**
     * <code>optional uint32 mana_needed = 7;</code>
     */
    public boolean hasManaNeeded() {
      return ((bitField0_ & 0x00000040) == 0x00000040);
    }
    /**
     * <code>optional uint32 mana_needed = 7;</code>
     */
    public int getManaNeeded() {
      return manaNeeded_;
    }

    private void initFields() {
      playerId_ = 0;
      abilityId_ = 0;
      type_ = skadistats.clarity.wire.common.proto.DotaUserMessages.DOTA_ABILITY_PING_TYPE.ABILITY_PING_READY;
      cooldownSeconds_ = 0;
      level_ = 0;
      passive_ = false;
      manaNeeded_ = 0;
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeUInt32(1, playerId_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeUInt32(2, abilityId_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        output.writeEnum(3, type_.getNumber());
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        output.writeUInt32(4, cooldownSeconds_);
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        output.writeUInt32(5, level_);
      }
      if (((bitField0_ & 0x00000020) == 0x00000020)) {
        output.writeBool(6, passive_);
      }
      if (((bitField0_ & 0x00000040) == 0x00000040)) {
        output.writeUInt32(7, manaNeeded_);
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(1, playerId_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(2, abilityId_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        size += com.google.protobuf.CodedOutputStream
          .computeEnumSize(3, type_.getNumber());
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(4, cooldownSeconds_);
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(5, level_);
      }
      if (((bitField0_ & 0x00000020) == 0x00000020)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBoolSize(6, passive_);
      }
      if (((bitField0_ & 0x00000040) == 0x00000040)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(7, manaNeeded_);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_AbilityPing parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_AbilityPing parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_AbilityPing parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_AbilityPing parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_AbilityPing parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_AbilityPing parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_AbilityPing parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_AbilityPing parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_AbilityPing parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_AbilityPing parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_AbilityPing prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code CDOTAUserMsg_AbilityPing}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:CDOTAUserMsg_AbilityPing)
        skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_AbilityPingOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return skadistats.clarity.wire.common.proto.DotaUserMessages.internal_static_CDOTAUserMsg_AbilityPing_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return skadistats.clarity.wire.common.proto.DotaUserMessages.internal_static_CDOTAUserMsg_AbilityPing_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_AbilityPing.class, skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_AbilityPing.Builder.class);
      }

      // Construct using skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_AbilityPing.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        playerId_ = 0;
        bitField0_ = (bitField0_ & ~0x00000001);
        abilityId_ = 0;
        bitField0_ = (bitField0_ & ~0x00000002);
        type_ = skadistats.clarity.wire.common.proto.DotaUserMessages.DOTA_ABILITY_PING_TYPE.ABILITY_PING_READY;
        bitField0_ = (bitField0_ & ~0x00000004);
        cooldownSeconds_ = 0;
        bitField0_ = (bitField0_ & ~0x00000008);
        level_ = 0;
        bitField0_ = (bitField0_ & ~0x00000010);
        passive_ = false;
        bitField0_ = (bitField0_ & ~0x00000020);
        manaNeeded_ = 0;
        bitField0_ = (bitField0_ & ~0x00000040);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return skadistats.clarity.wire.common.proto.DotaUserMessages.internal_static_CDOTAUserMsg_AbilityPing_descriptor;
      }

      public skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_AbilityPing getDefaultInstanceForType() {
        return skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_AbilityPing.getDefaultInstance();
      }

      public skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_AbilityPing build() {
        skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_AbilityPing result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_AbilityPing buildPartial() {
        skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_AbilityPing result = new skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_AbilityPing(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.playerId_ = playerId_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.abilityId_ = abilityId_;
        if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
          to_bitField0_ |= 0x00000004;
        }
        result.type_ = type_;
        if (((from_bitField0_ & 0x00000008) == 0x00000008)) {
          to_bitField0_ |= 0x00000008;
        }
        result.cooldownSeconds_ = cooldownSeconds_;
        if (((from_bitField0_ & 0x00000010) == 0x00000010)) {
          to_bitField0_ |= 0x00000010;
        }
        result.level_ = level_;
        if (((from_bitField0_ & 0x00000020) == 0x00000020)) {
          to_bitField0_ |= 0x00000020;
        }
        result.passive_ = passive_;
        if (((from_bitField0_ & 0x00000040) == 0x00000040)) {
          to_bitField0_ |= 0x00000040;
        }
        result.manaNeeded_ = manaNeeded_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_AbilityPing) {
          return mergeFrom((skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_AbilityPing)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_AbilityPing other) {
        if (other == skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_AbilityPing.getDefaultInstance()) return this;
        if (other.hasPlayerId()) {
          setPlayerId(other.getPlayerId());
        }
        if (other.hasAbilityId()) {
          setAbilityId(other.getAbilityId());
        }
        if (other.hasType()) {
          setType(other.getType());
        }
        if (other.hasCooldownSeconds()) {
          setCooldownSeconds(other.getCooldownSeconds());
        }
        if (other.hasLevel()) {
          setLevel(other.getLevel());
        }
        if (other.hasPassive()) {
          setPassive(other.getPassive());
        }
        if (other.hasManaNeeded()) {
          setManaNeeded(other.getManaNeeded());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_AbilityPing parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_AbilityPing) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private int playerId_ ;
      /**
       * <code>optional uint32 player_id = 1;</code>
       */
      public boolean hasPlayerId() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>optional uint32 player_id = 1;</code>
       */
      public int getPlayerId() {
        return playerId_;
      }
      /**
       * <code>optional uint32 player_id = 1;</code>
       */
      public Builder setPlayerId(int value) {
        bitField0_ |= 0x00000001;
        playerId_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional uint32 player_id = 1;</code>
       */
      public Builder clearPlayerId() {
        bitField0_ = (bitField0_ & ~0x00000001);
        playerId_ = 0;
        onChanged();
        return this;
      }

      private int abilityId_ ;
      /**
       * <code>optional uint32 ability_id = 2;</code>
       */
      public boolean hasAbilityId() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>optional uint32 ability_id = 2;</code>
       */
      public int getAbilityId() {
        return abilityId_;
      }
      /**
       * <code>optional uint32 ability_id = 2;</code>
       */
      public Builder setAbilityId(int value) {
        bitField0_ |= 0x00000002;
        abilityId_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional uint32 ability_id = 2;</code>
       */
      public Builder clearAbilityId() {
        bitField0_ = (bitField0_ & ~0x00000002);
        abilityId_ = 0;
        onChanged();
        return this;
      }

      private skadistats.clarity.wire.common.proto.DotaUserMessages.DOTA_ABILITY_PING_TYPE type_ = skadistats.clarity.wire.common.proto.DotaUserMessages.DOTA_ABILITY_PING_TYPE.ABILITY_PING_READY;
      /**
       * <code>optional .DOTA_ABILITY_PING_TYPE type = 3 [default = ABILITY_PING_READY];</code>
       */
      public boolean hasType() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }
      /**
       * <code>optional .DOTA_ABILITY_PING_TYPE type = 3 [default = ABILITY_PING_READY];</code>
       */
      public skadistats.clarity.wire.common.proto.DotaUserMessages.DOTA_ABILITY_PING_TYPE getType() {
        return type_;
      }
      /**
       * <code>optional .DOTA_ABILITY_PING_TYPE type = 3 [default = ABILITY_PING_READY];</code>
       */
      public Builder setType(skadistats.clarity.wire.common.proto.DotaUserMessages.DOTA_ABILITY_PING_TYPE value) {
        if (value == null) {
          throw new NullPointerException();
        }
        bitField0_ |= 0x00000004;
        type_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional .DOTA_ABILITY_PING_TYPE type = 3 [default = ABILITY_PING_READY];</code>
       */
      public Builder clearType() {
        bitField0_ = (bitField0_ & ~0x00000004);
        type_ = skadistats.clarity.wire.common.proto.DotaUserMessages.DOTA_ABILITY_PING_TYPE.ABILITY_PING_READY;
        onChanged();
        return this;
      }

      private int cooldownSeconds_ ;
      /**
       * <code>optional uint32 cooldown_seconds = 4;</code>
       */
      public boolean hasCooldownSeconds() {
        return ((bitField0_ & 0x00000008) == 0x00000008);
      }
      /**
       * <code>optional uint32 cooldown_seconds = 4;</code>
       */
      public int getCooldownSeconds() {
        return cooldownSeconds_;
      }
      /**
       * <code>optional uint32 cooldown_seconds = 4;</code>
       */
      public Builder setCooldownSeconds(int value) {
        bitField0_ |= 0x00000008;
        cooldownSeconds_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional uint32 cooldown_seconds = 4;</code>
       */
      public Builder clearCooldownSeconds() {
        bitField0_ = (bitField0_ & ~0x00000008);
        cooldownSeconds_ = 0;
        onChanged();
        return this;
      }

      private int level_ ;
      /**
       * <code>optional uint32 level = 5;</code>
       */
      public boolean hasLevel() {
        return ((bitField0_ & 0x00000010) == 0x00000010);
      }
      /**
       * <code>optional uint32 level = 5;</code>
       */
      public int getLevel() {
        return level_;
      }
      /**
       * <code>optional uint32 level = 5;</code>
       */
      public Builder setLevel(int value) {
        bitField0_ |= 0x00000010;
        level_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional uint32 level = 5;</code>
       */
      public Builder clearLevel() {
        bitField0_ = (bitField0_ & ~0x00000010);
        level_ = 0;
        onChanged();
        return this;
      }

      private boolean passive_ ;
      /**
       * <code>optional bool passive = 6;</code>
       */
      public boolean hasPassive() {
        return ((bitField0_ & 0x00000020) == 0x00000020);
      }
      /**
       * <code>optional bool passive = 6;</code>
       */
      public boolean getPassive() {
        return passive_;
      }
      /**
       * <code>optional bool passive = 6;</code>
       */
      public Builder setPassive(boolean value) {
        bitField0_ |= 0x00000020;
        passive_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional bool passive = 6;</code>
       */
      public Builder clearPassive() {
        bitField0_ = (bitField0_ & ~0x00000020);
        passive_ = false;
        onChanged();
        return this;
      }

      private int manaNeeded_ ;
      /**
       * <code>optional uint32 mana_needed = 7;</code>
       */
      public boolean hasManaNeeded() {
        return ((bitField0_ & 0x00000040) == 0x00000040);
      }
      /**
       * <code>optional uint32 mana_needed = 7;</code>
       */
      public int getManaNeeded() {
        return manaNeeded_;
      }
      /**
       * <code>optional uint32 mana_needed = 7;</code>
       */
      public Builder setManaNeeded(int value) {
        bitField0_ |= 0x00000040;
        manaNeeded_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional uint32 mana_needed = 7;</code>
       */
      public Builder clearManaNeeded() {
        bitField0_ = (bitField0_ & ~0x00000040);
        manaNeeded_ = 0;
        onChanged();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:CDOTAUserMsg_AbilityPing)
    }

    static {
      defaultInstance = new CDOTAUserMsg_AbilityPing(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:CDOTAUserMsg_AbilityPing)
  }

  public interface CDOTAUserMsg_TE_UnitAnimationOrBuilder extends
      // @@protoc_insertion_point(interface_extends:CDOTAUserMsg_TE_UnitAnimation)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>optional int32 entity = 1;</code>
     */
    boolean hasEntity();
    /**
     * <code>optional int32 entity = 1;</code>
     */
    int getEntity();

    /**
     * <code>optional int32 sequenceVariant = 2;</code>
     */
    boolean hasSequenceVariant();
    /**
     * <code>optional int32 sequenceVariant = 2;</code>
     */
    int getSequenceVariant();

    /**
     * <code>optional float playbackrate = 3;</code>
     */
    boolean hasPlaybackrate();
    /**
     * <code>optional float playbackrate = 3;</code>
     */
    float getPlaybackrate();

    /**
     * <code>optional float castpoint = 4;</code>
     */
    boolean hasCastpoint();
    /**
     * <code>optional float castpoint = 4;</code>
     */
    float getCastpoint();

    /**
     * <code>optional int32 type = 5;</code>
     */
    boolean hasType();
    /**
     * <code>optional int32 type = 5;</code>
     */
    int getType();

    /**
     * <code>optional int32 activity = 6;</code>
     */
    boolean hasActivity();
    /**
     * <code>optional int32 activity = 6;</code>
     */
    int getActivity();
  }
  /**
   * Protobuf type {@code CDOTAUserMsg_TE_UnitAnimation}
   */
  public static final class CDOTAUserMsg_TE_UnitAnimation extends
      com.google.protobuf.GeneratedMessage implements
      // @@protoc_insertion_point(message_implements:CDOTAUserMsg_TE_UnitAnimation)
      CDOTAUserMsg_TE_UnitAnimationOrBuilder {
    // Use CDOTAUserMsg_TE_UnitAnimation.newBuilder() to construct.
    private CDOTAUserMsg_TE_UnitAnimation(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private CDOTAUserMsg_TE_UnitAnimation(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final CDOTAUserMsg_TE_UnitAnimation defaultInstance;
    public static CDOTAUserMsg_TE_UnitAnimation getDefaultInstance() {
      return defaultInstance;
    }

    public CDOTAUserMsg_TE_UnitAnimation getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private CDOTAUserMsg_TE_UnitAnimation(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 8: {
              bitField0_ |= 0x00000001;
              entity_ = input.readInt32();
              break;
            }
            case 16: {
              bitField0_ |= 0x00000002;
              sequenceVariant_ = input.readInt32();
              break;
            }
            case 29: {
              bitField0_ |= 0x00000004;
              playbackrate_ = input.readFloat();
              break;
            }
            case 37: {
              bitField0_ |= 0x00000008;
              castpoint_ = input.readFloat();
              break;
            }
            case 40: {
              bitField0_ |= 0x00000010;
              type_ = input.readInt32();
              break;
            }
            case 48: {
              bitField0_ |= 0x00000020;
              activity_ = input.readInt32();
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return skadistats.clarity.wire.common.proto.DotaUserMessages.internal_static_CDOTAUserMsg_TE_UnitAnimation_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return skadistats.clarity.wire.common.proto.DotaUserMessages.internal_static_CDOTAUserMsg_TE_UnitAnimation_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_TE_UnitAnimation.class, skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_TE_UnitAnimation.Builder.class);
    }

    public static com.google.protobuf.Parser<CDOTAUserMsg_TE_UnitAnimation> PARSER =
        new com.google.protobuf.AbstractParser<CDOTAUserMsg_TE_UnitAnimation>() {
      public CDOTAUserMsg_TE_UnitAnimation parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new CDOTAUserMsg_TE_UnitAnimation(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<CDOTAUserMsg_TE_UnitAnimation> getParserForType() {
      return PARSER;
    }

    private int bitField0_;
    public static final int ENTITY_FIELD_NUMBER = 1;
    private int entity_;
    /**
     * <code>optional int32 entity = 1;</code>
     */
    public boolean hasEntity() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>optional int32 entity = 1;</code>
     */
    public int getEntity() {
      return entity_;
    }

    public static final int SEQUENCEVARIANT_FIELD_NUMBER = 2;
    private int sequenceVariant_;
    /**
     * <code>optional int32 sequenceVariant = 2;</code>
     */
    public boolean hasSequenceVariant() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>optional int32 sequenceVariant = 2;</code>
     */
    public int getSequenceVariant() {
      return sequenceVariant_;
    }

    public static final int PLAYBACKRATE_FIELD_NUMBER = 3;
    private float playbackrate_;
    /**
     * <code>optional float playbackrate = 3;</code>
     */
    public boolean hasPlaybackrate() {
      return ((bitField0_ & 0x00000004) == 0x00000004);
    }
    /**
     * <code>optional float playbackrate = 3;</code>
     */
    public float getPlaybackrate() {
      return playbackrate_;
    }

    public static final int CASTPOINT_FIELD_NUMBER = 4;
    private float castpoint_;
    /**
     * <code>optional float castpoint = 4;</code>
     */
    public boolean hasCastpoint() {
      return ((bitField0_ & 0x00000008) == 0x00000008);
    }
    /**
     * <code>optional float castpoint = 4;</code>
     */
    public float getCastpoint() {
      return castpoint_;
    }

    public static final int TYPE_FIELD_NUMBER = 5;
    private int type_;
    /**
     * <code>optional int32 type = 5;</code>
     */
    public boolean hasType() {
      return ((bitField0_ & 0x00000010) == 0x00000010);
    }
    /**
     * <code>optional int32 type = 5;</code>
     */
    public int getType() {
      return type_;
    }

    public static final int ACTIVITY_FIELD_NUMBER = 6;
    private int activity_;
    /**
     * <code>optional int32 activity = 6;</code>
     */
    public boolean hasActivity() {
      return ((bitField0_ & 0x00000020) == 0x00000020);
    }
    /**
     * <code>optional int32 activity = 6;</code>
     */
    public int getActivity() {
      return activity_;
    }

    private void initFields() {
      entity_ = 0;
      sequenceVariant_ = 0;
      playbackrate_ = 0F;
      castpoint_ = 0F;
      type_ = 0;
      activity_ = 0;
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeInt32(1, entity_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeInt32(2, sequenceVariant_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        output.writeFloat(3, playbackrate_);
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        output.writeFloat(4, castpoint_);
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        output.writeInt32(5, type_);
      }
      if (((bitField0_ & 0x00000020) == 0x00000020)) {
        output.writeInt32(6, activity_);
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(1, entity_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(2, sequenceVariant_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        size += com.google.protobuf.CodedOutputStream
          .computeFloatSize(3, playbackrate_);
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        size += com.google.protobuf.CodedOutputStream
          .computeFloatSize(4, castpoint_);
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(5, type_);
      }
      if (((bitField0_ & 0x00000020) == 0x00000020)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(6, activity_);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_TE_UnitAnimation parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_TE_UnitAnimation parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_TE_UnitAnimation parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_TE_UnitAnimation parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_TE_UnitAnimation parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_TE_UnitAnimation parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_TE_UnitAnimation parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_TE_UnitAnimation parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_TE_UnitAnimation parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_TE_UnitAnimation parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_TE_UnitAnimation prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code CDOTAUserMsg_TE_UnitAnimation}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:CDOTAUserMsg_TE_UnitAnimation)
        skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_TE_UnitAnimationOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return skadistats.clarity.wire.common.proto.DotaUserMessages.internal_static_CDOTAUserMsg_TE_UnitAnimation_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return skadistats.clarity.wire.common.proto.DotaUserMessages.internal_static_CDOTAUserMsg_TE_UnitAnimation_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_TE_UnitAnimation.class, skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_TE_UnitAnimation.Builder.class);
      }

      // Construct using skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_TE_UnitAnimation.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        entity_ = 0;
        bitField0_ = (bitField0_ & ~0x00000001);
        sequenceVariant_ = 0;
        bitField0_ = (bitField0_ & ~0x00000002);
        playbackrate_ = 0F;
        bitField0_ = (bitField0_ & ~0x00000004);
        castpoint_ = 0F;
        bitField0_ = (bitField0_ & ~0x00000008);
        type_ = 0;
        bitField0_ = (bitField0_ & ~0x00000010);
        activity_ = 0;
        bitField0_ = (bitField0_ & ~0x00000020);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return skadistats.clarity.wire.common.proto.DotaUserMessages.internal_static_CDOTAUserMsg_TE_UnitAnimation_descriptor;
      }

      public skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_TE_UnitAnimation getDefaultInstanceForType() {
        return skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_TE_UnitAnimation.getDefaultInstance();
      }

      public skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_TE_UnitAnimation build() {
        skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_TE_UnitAnimation result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_TE_UnitAnimation buildPartial() {
        skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_TE_UnitAnimation result = new skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_TE_UnitAnimation(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.entity_ = entity_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.sequenceVariant_ = sequenceVariant_;
        if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
          to_bitField0_ |= 0x00000004;
        }
        result.playbackrate_ = playbackrate_;
        if (((from_bitField0_ & 0x00000008) == 0x00000008)) {
          to_bitField0_ |= 0x00000008;
        }
        result.castpoint_ = castpoint_;
        if (((from_bitField0_ & 0x00000010) == 0x00000010)) {
          to_bitField0_ |= 0x00000010;
        }
        result.type_ = type_;
        if (((from_bitField0_ & 0x00000020) == 0x00000020)) {
          to_bitField0_ |= 0x00000020;
        }
        result.activity_ = activity_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_TE_UnitAnimation) {
          return mergeFrom((skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_TE_UnitAnimation)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_TE_UnitAnimation other) {
        if (other == skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_TE_UnitAnimation.getDefaultInstance()) return this;
        if (other.hasEntity()) {
          setEntity(other.getEntity());
        }
        if (other.hasSequenceVariant()) {
          setSequenceVariant(other.getSequenceVariant());
        }
        if (other.hasPlaybackrate()) {
          setPlaybackrate(other.getPlaybackrate());
        }
        if (other.hasCastpoint()) {
          setCastpoint(other.getCastpoint());
        }
        if (other.hasType()) {
          setType(other.getType());
        }
        if (other.hasActivity()) {
          setActivity(other.getActivity());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_TE_UnitAnimation parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_TE_UnitAnimation) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private int entity_ ;
      /**
       * <code>optional int32 entity = 1;</code>
       */
      public boolean hasEntity() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>optional int32 entity = 1;</code>
       */
      public int getEntity() {
        return entity_;
      }
      /**
       * <code>optional int32 entity = 1;</code>
       */
      public Builder setEntity(int value) {
        bitField0_ |= 0x00000001;
        entity_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 entity = 1;</code>
       */
      public Builder clearEntity() {
        bitField0_ = (bitField0_ & ~0x00000001);
        entity_ = 0;
        onChanged();
        return this;
      }

      private int sequenceVariant_ ;
      /**
       * <code>optional int32 sequenceVariant = 2;</code>
       */
      public boolean hasSequenceVariant() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>optional int32 sequenceVariant = 2;</code>
       */
      public int getSequenceVariant() {
        return sequenceVariant_;
      }
      /**
       * <code>optional int32 sequenceVariant = 2;</code>
       */
      public Builder setSequenceVariant(int value) {
        bitField0_ |= 0x00000002;
        sequenceVariant_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 sequenceVariant = 2;</code>
       */
      public Builder clearSequenceVariant() {
        bitField0_ = (bitField0_ & ~0x00000002);
        sequenceVariant_ = 0;
        onChanged();
        return this;
      }

      private float playbackrate_ ;
      /**
       * <code>optional float playbackrate = 3;</code>
       */
      public boolean hasPlaybackrate() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }
      /**
       * <code>optional float playbackrate = 3;</code>
       */
      public float getPlaybackrate() {
        return playbackrate_;
      }
      /**
       * <code>optional float playbackrate = 3;</code>
       */
      public Builder setPlaybackrate(float value) {
        bitField0_ |= 0x00000004;
        playbackrate_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional float playbackrate = 3;</code>
       */
      public Builder clearPlaybackrate() {
        bitField0_ = (bitField0_ & ~0x00000004);
        playbackrate_ = 0F;
        onChanged();
        return this;
      }

      private float castpoint_ ;
      /**
       * <code>optional float castpoint = 4;</code>
       */
      public boolean hasCastpoint() {
        return ((bitField0_ & 0x00000008) == 0x00000008);
      }
      /**
       * <code>optional float castpoint = 4;</code>
       */
      public float getCastpoint() {
        return castpoint_;
      }
      /**
       * <code>optional float castpoint = 4;</code>
       */
      public Builder setCastpoint(float value) {
        bitField0_ |= 0x00000008;
        castpoint_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional float castpoint = 4;</code>
       */
      public Builder clearCastpoint() {
        bitField0_ = (bitField0_ & ~0x00000008);
        castpoint_ = 0F;
        onChanged();
        return this;
      }

      private int type_ ;
      /**
       * <code>optional int32 type = 5;</code>
       */
      public boolean hasType() {
        return ((bitField0_ & 0x00000010) == 0x00000010);
      }
      /**
       * <code>optional int32 type = 5;</code>
       */
      public int getType() {
        return type_;
      }
      /**
       * <code>optional int32 type = 5;</code>
       */
      public Builder setType(int value) {
        bitField0_ |= 0x00000010;
        type_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 type = 5;</code>
       */
      public Builder clearType() {
        bitField0_ = (bitField0_ & ~0x00000010);
        type_ = 0;
        onChanged();
        return this;
      }

      private int activity_ ;
      /**
       * <code>optional int32 activity = 6;</code>
       */
      public boolean hasActivity() {
        return ((bitField0_ & 0x00000020) == 0x00000020);
      }
      /**
       * <code>optional int32 activity = 6;</code>
       */
      public int getActivity() {
        return activity_;
      }
      /**
       * <code>optional int32 activity = 6;</code>
       */
      public Builder setActivity(int value) {
        bitField0_ |= 0x00000020;
        activity_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 activity = 6;</code>
       */
      public Builder clearActivity() {
        bitField0_ = (bitField0_ & ~0x00000020);
        activity_ = 0;
        onChanged();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:CDOTAUserMsg_TE_UnitAnimation)
    }

    static {
      defaultInstance = new CDOTAUserMsg_TE_UnitAnimation(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:CDOTAUserMsg_TE_UnitAnimation)
  }

  public interface CDOTAUserMsg_TE_UnitAnimationEndOrBuilder extends
      // @@protoc_insertion_point(interface_extends:CDOTAUserMsg_TE_UnitAnimationEnd)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>optional int32 entity = 1;</code>
     */
    boolean hasEntity();
    /**
     * <code>optional int32 entity = 1;</code>
     */
    int getEntity();

    /**
     * <code>optional bool snap = 2;</code>
     */
    boolean hasSnap();
    /**
     * <code>optional bool snap = 2;</code>
     */
    boolean getSnap();
  }
  /**
   * Protobuf type {@code CDOTAUserMsg_TE_UnitAnimationEnd}
   */
  public static final class CDOTAUserMsg_TE_UnitAnimationEnd extends
      com.google.protobuf.GeneratedMessage implements
      // @@protoc_insertion_point(message_implements:CDOTAUserMsg_TE_UnitAnimationEnd)
      CDOTAUserMsg_TE_UnitAnimationEndOrBuilder {
    // Use CDOTAUserMsg_TE_UnitAnimationEnd.newBuilder() to construct.
    private CDOTAUserMsg_TE_UnitAnimationEnd(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private CDOTAUserMsg_TE_UnitAnimationEnd(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final CDOTAUserMsg_TE_UnitAnimationEnd defaultInstance;
    public static CDOTAUserMsg_TE_UnitAnimationEnd getDefaultInstance() {
      return defaultInstance;
    }

    public CDOTAUserMsg_TE_UnitAnimationEnd getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private CDOTAUserMsg_TE_UnitAnimationEnd(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 8: {
              bitField0_ |= 0x00000001;
              entity_ = input.readInt32();
              break;
            }
            case 16: {
              bitField0_ |= 0x00000002;
              snap_ = input.readBool();
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return skadistats.clarity.wire.common.proto.DotaUserMessages.internal_static_CDOTAUserMsg_TE_UnitAnimationEnd_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return skadistats.clarity.wire.common.proto.DotaUserMessages.internal_static_CDOTAUserMsg_TE_UnitAnimationEnd_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_TE_UnitAnimationEnd.class, skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_TE_UnitAnimationEnd.Builder.class);
    }

    public static com.google.protobuf.Parser<CDOTAUserMsg_TE_UnitAnimationEnd> PARSER =
        new com.google.protobuf.AbstractParser<CDOTAUserMsg_TE_UnitAnimationEnd>() {
      public CDOTAUserMsg_TE_UnitAnimationEnd parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new CDOTAUserMsg_TE_UnitAnimationEnd(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<CDOTAUserMsg_TE_UnitAnimationEnd> getParserForType() {
      return PARSER;
    }

    private int bitField0_;
    public static final int ENTITY_FIELD_NUMBER = 1;
    private int entity_;
    /**
     * <code>optional int32 entity = 1;</code>
     */
    public boolean hasEntity() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>optional int32 entity = 1;</code>
     */
    public int getEntity() {
      return entity_;
    }

    public static final int SNAP_FIELD_NUMBER = 2;
    private boolean snap_;
    /**
     * <code>optional bool snap = 2;</code>
     */
    public boolean hasSnap() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>optional bool snap = 2;</code>
     */
    public boolean getSnap() {
      return snap_;
    }

    private void initFields() {
      entity_ = 0;
      snap_ = false;
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeInt32(1, entity_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeBool(2, snap_);
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(1, entity_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBoolSize(2, snap_);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_TE_UnitAnimationEnd parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_TE_UnitAnimationEnd parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_TE_UnitAnimationEnd parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_TE_UnitAnimationEnd parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_TE_UnitAnimationEnd parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_TE_UnitAnimationEnd parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_TE_UnitAnimationEnd parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_TE_UnitAnimationEnd parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_TE_UnitAnimationEnd parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_TE_UnitAnimationEnd parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_TE_UnitAnimationEnd prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code CDOTAUserMsg_TE_UnitAnimationEnd}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:CDOTAUserMsg_TE_UnitAnimationEnd)
        skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_TE_UnitAnimationEndOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return skadistats.clarity.wire.common.proto.DotaUserMessages.internal_static_CDOTAUserMsg_TE_UnitAnimationEnd_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return skadistats.clarity.wire.common.proto.DotaUserMessages.internal_static_CDOTAUserMsg_TE_UnitAnimationEnd_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_TE_UnitAnimationEnd.class, skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_TE_UnitAnimationEnd.Builder.class);
      }

      // Construct using skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_TE_UnitAnimationEnd.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        entity_ = 0;
        bitField0_ = (bitField0_ & ~0x00000001);
        snap_ = false;
        bitField0_ = (bitField0_ & ~0x00000002);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return skadistats.clarity.wire.common.proto.DotaUserMessages.internal_static_CDOTAUserMsg_TE_UnitAnimationEnd_descriptor;
      }

      public skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_TE_UnitAnimationEnd getDefaultInstanceForType() {
        return skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_TE_UnitAnimationEnd.getDefaultInstance();
      }

      public skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_TE_UnitAnimationEnd build() {
        skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_TE_UnitAnimationEnd result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_TE_UnitAnimationEnd buildPartial() {
        skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_TE_UnitAnimationEnd result = new skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_TE_UnitAnimationEnd(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.entity_ = entity_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.snap_ = snap_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_TE_UnitAnimationEnd) {
          return mergeFrom((skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_TE_UnitAnimationEnd)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_TE_UnitAnimationEnd other) {
        if (other == skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_TE_UnitAnimationEnd.getDefaultInstance()) return this;
        if (other.hasEntity()) {
          setEntity(other.getEntity());
        }
        if (other.hasSnap()) {
          setSnap(other.getSnap());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_TE_UnitAnimationEnd parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_TE_UnitAnimationEnd) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private int entity_ ;
      /**
       * <code>optional int32 entity = 1;</code>
       */
      public boolean hasEntity() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>optional int32 entity = 1;</code>
       */
      public int getEntity() {
        return entity_;
      }
      /**
       * <code>optional int32 entity = 1;</code>
       */
      public Builder setEntity(int value) {
        bitField0_ |= 0x00000001;
        entity_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 entity = 1;</code>
       */
      public Builder clearEntity() {
        bitField0_ = (bitField0_ & ~0x00000001);
        entity_ = 0;
        onChanged();
        return this;
      }

      private boolean snap_ ;
      /**
       * <code>optional bool snap = 2;</code>
       */
      public boolean hasSnap() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>optional bool snap = 2;</code>
       */
      public boolean getSnap() {
        return snap_;
      }
      /**
       * <code>optional bool snap = 2;</code>
       */
      public Builder setSnap(boolean value) {
        bitField0_ |= 0x00000002;
        snap_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional bool snap = 2;</code>
       */
      public Builder clearSnap() {
        bitField0_ = (bitField0_ & ~0x00000002);
        snap_ = false;
        onChanged();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:CDOTAUserMsg_TE_UnitAnimationEnd)
    }

    static {
      defaultInstance = new CDOTAUserMsg_TE_UnitAnimationEnd(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:CDOTAUserMsg_TE_UnitAnimationEnd)
  }

  public interface CDOTAUserMsg_ShowGenericPopupOrBuilder extends
      // @@protoc_insertion_point(interface_extends:CDOTAUserMsg_ShowGenericPopup)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>required string header = 1;</code>
     */
    boolean hasHeader();
    /**
     * <code>required string header = 1;</code>
     */
    java.lang.String getHeader();
    /**
     * <code>required string header = 1;</code>
     */
    com.google.protobuf.ByteString
        getHeaderBytes();

    /**
     * <code>required string body = 2;</code>
     */
    boolean hasBody();
    /**
     * <code>required string body = 2;</code>
     */
    java.lang.String getBody();
    /**
     * <code>required string body = 2;</code>
     */
    com.google.protobuf.ByteString
        getBodyBytes();

    /**
     * <code>optional string param1 = 3;</code>
     */
    boolean hasParam1();
    /**
     * <code>optional string param1 = 3;</code>
     */
    java.lang.String getParam1();
    /**
     * <code>optional string param1 = 3;</code>
     */
    com.google.protobuf.ByteString
        getParam1Bytes();

    /**
     * <code>optional string param2 = 4;</code>
     */
    boolean hasParam2();
    /**
     * <code>optional string param2 = 4;</code>
     */
    java.lang.String getParam2();
    /**
     * <code>optional string param2 = 4;</code>
     */
    com.google.protobuf.ByteString
        getParam2Bytes();

    /**
     * <code>optional bool tint_screen = 5;</code>
     */
    boolean hasTintScreen();
    /**
     * <code>optional bool tint_screen = 5;</code>
     */
    boolean getTintScreen();

    /**
     * <code>optional bool show_no_other_dialogs = 6;</code>
     */
    boolean hasShowNoOtherDialogs();
    /**
     * <code>optional bool show_no_other_dialogs = 6;</code>
     */
    boolean getShowNoOtherDialogs();
  }
  /**
   * Protobuf type {@code CDOTAUserMsg_ShowGenericPopup}
   */
  public static final class CDOTAUserMsg_ShowGenericPopup extends
      com.google.protobuf.GeneratedMessage implements
      // @@protoc_insertion_point(message_implements:CDOTAUserMsg_ShowGenericPopup)
      CDOTAUserMsg_ShowGenericPopupOrBuilder {
    // Use CDOTAUserMsg_ShowGenericPopup.newBuilder() to construct.
    private CDOTAUserMsg_ShowGenericPopup(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private CDOTAUserMsg_ShowGenericPopup(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final CDOTAUserMsg_ShowGenericPopup defaultInstance;
    public static CDOTAUserMsg_ShowGenericPopup getDefaultInstance() {
      return defaultInstance;
    }

    public CDOTAUserMsg_ShowGenericPopup getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private CDOTAUserMsg_ShowGenericPopup(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 10: {
              com.google.protobuf.ByteString bs = input.readBytes();
              bitField0_ |= 0x00000001;
              header_ = bs;
              break;
            }
            case 18: {
              com.google.protobuf.ByteString bs = input.readBytes();
              bitField0_ |= 0x00000002;
              body_ = bs;
              break;
            }
            case 26: {
              com.google.protobuf.ByteString bs = input.readBytes();
              bitField0_ |= 0x00000004;
              param1_ = bs;
              break;
            }
            case 34: {
              com.google.protobuf.ByteString bs = input.readBytes();
              bitField0_ |= 0x00000008;
              param2_ = bs;
              break;
            }
            case 40: {
              bitField0_ |= 0x00000010;
              tintScreen_ = input.readBool();
              break;
            }
            case 48: {
              bitField0_ |= 0x00000020;
              showNoOtherDialogs_ = input.readBool();
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return skadistats.clarity.wire.common.proto.DotaUserMessages.internal_static_CDOTAUserMsg_ShowGenericPopup_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return skadistats.clarity.wire.common.proto.DotaUserMessages.internal_static_CDOTAUserMsg_ShowGenericPopup_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_ShowGenericPopup.class, skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_ShowGenericPopup.Builder.class);
    }

    public static com.google.protobuf.Parser<CDOTAUserMsg_ShowGenericPopup> PARSER =
        new com.google.protobuf.AbstractParser<CDOTAUserMsg_ShowGenericPopup>() {
      public CDOTAUserMsg_ShowGenericPopup parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new CDOTAUserMsg_ShowGenericPopup(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<CDOTAUserMsg_ShowGenericPopup> getParserForType() {
      return PARSER;
    }

    private int bitField0_;
    public static final int HEADER_FIELD_NUMBER = 1;
    private java.lang.Object header_;
    /**
     * <code>required string header = 1;</code>
     */
    public boolean hasHeader() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>required string header = 1;</code>
     */
    public java.lang.String getHeader() {
      java.lang.Object ref = header_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          header_ = s;
        }
        return s;
      }
    }
    /**
     * <code>required string header = 1;</code>
     */
    public com.google.protobuf.ByteString
        getHeaderBytes() {
      java.lang.Object ref = header_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        header_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int BODY_FIELD_NUMBER = 2;
    private java.lang.Object body_;
    /**
     * <code>required string body = 2;</code>
     */
    public boolean hasBody() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>required string body = 2;</code>
     */
    public java.lang.String getBody() {
      java.lang.Object ref = body_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          body_ = s;
        }
        return s;
      }
    }
    /**
     * <code>required string body = 2;</code>
     */
    public com.google.protobuf.ByteString
        getBodyBytes() {
      java.lang.Object ref = body_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        body_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int PARAM1_FIELD_NUMBER = 3;
    private java.lang.Object param1_;
    /**
     * <code>optional string param1 = 3;</code>
     */
    public boolean hasParam1() {
      return ((bitField0_ & 0x00000004) == 0x00000004);
    }
    /**
     * <code>optional string param1 = 3;</code>
     */
    public java.lang.String getParam1() {
      java.lang.Object ref = param1_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          param1_ = s;
        }
        return s;
      }
    }
    /**
     * <code>optional string param1 = 3;</code>
     */
    public com.google.protobuf.ByteString
        getParam1Bytes() {
      java.lang.Object ref = param1_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        param1_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int PARAM2_FIELD_NUMBER = 4;
    private java.lang.Object param2_;
    /**
     * <code>optional string param2 = 4;</code>
     */
    public boolean hasParam2() {
      return ((bitField0_ & 0x00000008) == 0x00000008);
    }
    /**
     * <code>optional string param2 = 4;</code>
     */
    public java.lang.String getParam2() {
      java.lang.Object ref = param2_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          param2_ = s;
        }
        return s;
      }
    }
    /**
     * <code>optional string param2 = 4;</code>
     */
    public com.google.protobuf.ByteString
        getParam2Bytes() {
      java.lang.Object ref = param2_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        param2_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int TINT_SCREEN_FIELD_NUMBER = 5;
    private boolean tintScreen_;
    /**
     * <code>optional bool tint_screen = 5;</code>
     */
    public boolean hasTintScreen() {
      return ((bitField0_ & 0x00000010) == 0x00000010);
    }
    /**
     * <code>optional bool tint_screen = 5;</code>
     */
    public boolean getTintScreen() {
      return tintScreen_;
    }

    public static final int SHOW_NO_OTHER_DIALOGS_FIELD_NUMBER = 6;
    private boolean showNoOtherDialogs_;
    /**
     * <code>optional bool show_no_other_dialogs = 6;</code>
     */
    public boolean hasShowNoOtherDialogs() {
      return ((bitField0_ & 0x00000020) == 0x00000020);
    }
    /**
     * <code>optional bool show_no_other_dialogs = 6;</code>
     */
    public boolean getShowNoOtherDialogs() {
      return showNoOtherDialogs_;
    }

    private void initFields() {
      header_ = "";
      body_ = "";
      param1_ = "";
      param2_ = "";
      tintScreen_ = false;
      showNoOtherDialogs_ = false;
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      if (!hasHeader()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasBody()) {
        memoizedIsInitialized = 0;
        return false;
      }
      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeBytes(1, getHeaderBytes());
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeBytes(2, getBodyBytes());
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        output.writeBytes(3, getParam1Bytes());
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        output.writeBytes(4, getParam2Bytes());
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        output.writeBool(5, tintScreen_);
      }
      if (((bitField0_ & 0x00000020) == 0x00000020)) {
        output.writeBool(6, showNoOtherDialogs_);
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(1, getHeaderBytes());
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(2, getBodyBytes());
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(3, getParam1Bytes());
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(4, getParam2Bytes());
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBoolSize(5, tintScreen_);
      }
      if (((bitField0_ & 0x00000020) == 0x00000020)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBoolSize(6, showNoOtherDialogs_);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_ShowGenericPopup parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_ShowGenericPopup parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_ShowGenericPopup parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_ShowGenericPopup parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_ShowGenericPopup parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_ShowGenericPopup parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_ShowGenericPopup parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_ShowGenericPopup parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_ShowGenericPopup parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_ShowGenericPopup parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_ShowGenericPopup prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code CDOTAUserMsg_ShowGenericPopup}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:CDOTAUserMsg_ShowGenericPopup)
        skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_ShowGenericPopupOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return skadistats.clarity.wire.common.proto.DotaUserMessages.internal_static_CDOTAUserMsg_ShowGenericPopup_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return skadistats.clarity.wire.common.proto.DotaUserMessages.internal_static_CDOTAUserMsg_ShowGenericPopup_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_ShowGenericPopup.class, skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_ShowGenericPopup.Builder.class);
      }

      // Construct using skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_ShowGenericPopup.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        header_ = "";
        bitField0_ = (bitField0_ & ~0x00000001);
        body_ = "";
        bitField0_ = (bitField0_ & ~0x00000002);
        param1_ = "";
        bitField0_ = (bitField0_ & ~0x00000004);
        param2_ = "";
        bitField0_ = (bitField0_ & ~0x00000008);
        tintScreen_ = false;
        bitField0_ = (bitField0_ & ~0x00000010);
        showNoOtherDialogs_ = false;
        bitField0_ = (bitField0_ & ~0x00000020);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return skadistats.clarity.wire.common.proto.DotaUserMessages.internal_static_CDOTAUserMsg_ShowGenericPopup_descriptor;
      }

      public skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_ShowGenericPopup getDefaultInstanceForType() {
        return skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_ShowGenericPopup.getDefaultInstance();
      }

      public skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_ShowGenericPopup build() {
        skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_ShowGenericPopup result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_ShowGenericPopup buildPartial() {
        skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_ShowGenericPopup result = new skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_ShowGenericPopup(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.header_ = header_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.body_ = body_;
        if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
          to_bitField0_ |= 0x00000004;
        }
        result.param1_ = param1_;
        if (((from_bitField0_ & 0x00000008) == 0x00000008)) {
          to_bitField0_ |= 0x00000008;
        }
        result.param2_ = param2_;
        if (((from_bitField0_ & 0x00000010) == 0x00000010)) {
          to_bitField0_ |= 0x00000010;
        }
        result.tintScreen_ = tintScreen_;
        if (((from_bitField0_ & 0x00000020) == 0x00000020)) {
          to_bitField0_ |= 0x00000020;
        }
        result.showNoOtherDialogs_ = showNoOtherDialogs_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_ShowGenericPopup) {
          return mergeFrom((skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_ShowGenericPopup)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_ShowGenericPopup other) {
        if (other == skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_ShowGenericPopup.getDefaultInstance()) return this;
        if (other.hasHeader()) {
          bitField0_ |= 0x00000001;
          header_ = other.header_;
          onChanged();
        }
        if (other.hasBody()) {
          bitField0_ |= 0x00000002;
          body_ = other.body_;
          onChanged();
        }
        if (other.hasParam1()) {
          bitField0_ |= 0x00000004;
          param1_ = other.param1_;
          onChanged();
        }
        if (other.hasParam2()) {
          bitField0_ |= 0x00000008;
          param2_ = other.param2_;
          onChanged();
        }
        if (other.hasTintScreen()) {
          setTintScreen(other.getTintScreen());
        }
        if (other.hasShowNoOtherDialogs()) {
          setShowNoOtherDialogs(other.getShowNoOtherDialogs());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        if (!hasHeader()) {
          
          return false;
        }
        if (!hasBody()) {
          
          return false;
        }
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_ShowGenericPopup parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_ShowGenericPopup) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private java.lang.Object header_ = "";
      /**
       * <code>required string header = 1;</code>
       */
      public boolean hasHeader() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>required string header = 1;</code>
       */
      public java.lang.String getHeader() {
        java.lang.Object ref = header_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          if (bs.isValidUtf8()) {
            header_ = s;
          }
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>required string header = 1;</code>
       */
      public com.google.protobuf.ByteString
          getHeaderBytes() {
        java.lang.Object ref = header_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          header_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>required string header = 1;</code>
       */
      public Builder setHeader(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000001;
        header_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required string header = 1;</code>
       */
      public Builder clearHeader() {
        bitField0_ = (bitField0_ & ~0x00000001);
        header_ = getDefaultInstance().getHeader();
        onChanged();
        return this;
      }
      /**
       * <code>required string header = 1;</code>
       */
      public Builder setHeaderBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000001;
        header_ = value;
        onChanged();
        return this;
      }

      private java.lang.Object body_ = "";
      /**
       * <code>required string body = 2;</code>
       */
      public boolean hasBody() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>required string body = 2;</code>
       */
      public java.lang.String getBody() {
        java.lang.Object ref = body_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          if (bs.isValidUtf8()) {
            body_ = s;
          }
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>required string body = 2;</code>
       */
      public com.google.protobuf.ByteString
          getBodyBytes() {
        java.lang.Object ref = body_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          body_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>required string body = 2;</code>
       */
      public Builder setBody(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000002;
        body_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required string body = 2;</code>
       */
      public Builder clearBody() {
        bitField0_ = (bitField0_ & ~0x00000002);
        body_ = getDefaultInstance().getBody();
        onChanged();
        return this;
      }
      /**
       * <code>required string body = 2;</code>
       */
      public Builder setBodyBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000002;
        body_ = value;
        onChanged();
        return this;
      }

      private java.lang.Object param1_ = "";
      /**
       * <code>optional string param1 = 3;</code>
       */
      public boolean hasParam1() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }
      /**
       * <code>optional string param1 = 3;</code>
       */
      public java.lang.String getParam1() {
        java.lang.Object ref = param1_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          if (bs.isValidUtf8()) {
            param1_ = s;
          }
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>optional string param1 = 3;</code>
       */
      public com.google.protobuf.ByteString
          getParam1Bytes() {
        java.lang.Object ref = param1_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          param1_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>optional string param1 = 3;</code>
       */
      public Builder setParam1(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000004;
        param1_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional string param1 = 3;</code>
       */
      public Builder clearParam1() {
        bitField0_ = (bitField0_ & ~0x00000004);
        param1_ = getDefaultInstance().getParam1();
        onChanged();
        return this;
      }
      /**
       * <code>optional string param1 = 3;</code>
       */
      public Builder setParam1Bytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000004;
        param1_ = value;
        onChanged();
        return this;
      }

      private java.lang.Object param2_ = "";
      /**
       * <code>optional string param2 = 4;</code>
       */
      public boolean hasParam2() {
        return ((bitField0_ & 0x00000008) == 0x00000008);
      }
      /**
       * <code>optional string param2 = 4;</code>
       */
      public java.lang.String getParam2() {
        java.lang.Object ref = param2_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          if (bs.isValidUtf8()) {
            param2_ = s;
          }
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>optional string param2 = 4;</code>
       */
      public com.google.protobuf.ByteString
          getParam2Bytes() {
        java.lang.Object ref = param2_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          param2_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>optional string param2 = 4;</code>
       */
      public Builder setParam2(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000008;
        param2_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional string param2 = 4;</code>
       */
      public Builder clearParam2() {
        bitField0_ = (bitField0_ & ~0x00000008);
        param2_ = getDefaultInstance().getParam2();
        onChanged();
        return this;
      }
      /**
       * <code>optional string param2 = 4;</code>
       */
      public Builder setParam2Bytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000008;
        param2_ = value;
        onChanged();
        return this;
      }

      private boolean tintScreen_ ;
      /**
       * <code>optional bool tint_screen = 5;</code>
       */
      public boolean hasTintScreen() {
        return ((bitField0_ & 0x00000010) == 0x00000010);
      }
      /**
       * <code>optional bool tint_screen = 5;</code>
       */
      public boolean getTintScreen() {
        return tintScreen_;
      }
      /**
       * <code>optional bool tint_screen = 5;</code>
       */
      public Builder setTintScreen(boolean value) {
        bitField0_ |= 0x00000010;
        tintScreen_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional bool tint_screen = 5;</code>
       */
      public Builder clearTintScreen() {
        bitField0_ = (bitField0_ & ~0x00000010);
        tintScreen_ = false;
        onChanged();
        return this;
      }

      private boolean showNoOtherDialogs_ ;
      /**
       * <code>optional bool show_no_other_dialogs = 6;</code>
       */
      public boolean hasShowNoOtherDialogs() {
        return ((bitField0_ & 0x00000020) == 0x00000020);
      }
      /**
       * <code>optional bool show_no_other_dialogs = 6;</code>
       */
      public boolean getShowNoOtherDialogs() {
        return showNoOtherDialogs_;
      }
      /**
       * <code>optional bool show_no_other_dialogs = 6;</code>
       */
      public Builder setShowNoOtherDialogs(boolean value) {
        bitField0_ |= 0x00000020;
        showNoOtherDialogs_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional bool show_no_other_dialogs = 6;</code>
       */
      public Builder clearShowNoOtherDialogs() {
        bitField0_ = (bitField0_ & ~0x00000020);
        showNoOtherDialogs_ = false;
        onChanged();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:CDOTAUserMsg_ShowGenericPopup)
    }

    static {
      defaultInstance = new CDOTAUserMsg_ShowGenericPopup(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:CDOTAUserMsg_ShowGenericPopup)
  }

  public interface CDOTAUserMsg_VoteStartOrBuilder extends
      // @@protoc_insertion_point(interface_extends:CDOTAUserMsg_VoteStart)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>optional string title = 1;</code>
     */
    boolean hasTitle();
    /**
     * <code>optional string title = 1;</code>
     */
    java.lang.String getTitle();
    /**
     * <code>optional string title = 1;</code>
     */
    com.google.protobuf.ByteString
        getTitleBytes();

    /**
     * <code>optional float duration = 2;</code>
     */
    boolean hasDuration();
    /**
     * <code>optional float duration = 2;</code>
     */
    float getDuration();

    /**
     * <code>optional int32 choice_count = 3;</code>
     */
    boolean hasChoiceCount();
    /**
     * <code>optional int32 choice_count = 3;</code>
     */
    int getChoiceCount();

    /**
     * <code>repeated string choices = 4;</code>
     */
    com.google.protobuf.ProtocolStringList
        getChoicesList();
    /**
     * <code>repeated string choices = 4;</code>
     */
    int getChoicesCount();
    /**
     * <code>repeated string choices = 4;</code>
     */
    java.lang.String getChoices(int index);
    /**
     * <code>repeated string choices = 4;</code>
     */
    com.google.protobuf.ByteString
        getChoicesBytes(int index);
  }
  /**
   * Protobuf type {@code CDOTAUserMsg_VoteStart}
   */
  public static final class CDOTAUserMsg_VoteStart extends
      com.google.protobuf.GeneratedMessage implements
      // @@protoc_insertion_point(message_implements:CDOTAUserMsg_VoteStart)
      CDOTAUserMsg_VoteStartOrBuilder {
    // Use CDOTAUserMsg_VoteStart.newBuilder() to construct.
    private CDOTAUserMsg_VoteStart(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private CDOTAUserMsg_VoteStart(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final CDOTAUserMsg_VoteStart defaultInstance;
    public static CDOTAUserMsg_VoteStart getDefaultInstance() {
      return defaultInstance;
    }

    public CDOTAUserMsg_VoteStart getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private CDOTAUserMsg_VoteStart(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 10: {
              com.google.protobuf.ByteString bs = input.readBytes();
              bitField0_ |= 0x00000001;
              title_ = bs;
              break;
            }
            case 21: {
              bitField0_ |= 0x00000002;
              duration_ = input.readFloat();
              break;
            }
            case 24: {
              bitField0_ |= 0x00000004;
              choiceCount_ = input.readInt32();
              break;
            }
            case 34: {
              com.google.protobuf.ByteString bs = input.readBytes();
              if (!((mutable_bitField0_ & 0x00000008) == 0x00000008)) {
                choices_ = new com.google.protobuf.LazyStringArrayList();
                mutable_bitField0_ |= 0x00000008;
              }
              choices_.add(bs);
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        if (((mutable_bitField0_ & 0x00000008) == 0x00000008)) {
          choices_ = choices_.getUnmodifiableView();
        }
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return skadistats.clarity.wire.common.proto.DotaUserMessages.internal_static_CDOTAUserMsg_VoteStart_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return skadistats.clarity.wire.common.proto.DotaUserMessages.internal_static_CDOTAUserMsg_VoteStart_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_VoteStart.class, skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_VoteStart.Builder.class);
    }

    public static com.google.protobuf.Parser<CDOTAUserMsg_VoteStart> PARSER =
        new com.google.protobuf.AbstractParser<CDOTAUserMsg_VoteStart>() {
      public CDOTAUserMsg_VoteStart parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new CDOTAUserMsg_VoteStart(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<CDOTAUserMsg_VoteStart> getParserForType() {
      return PARSER;
    }

    private int bitField0_;
    public static final int TITLE_FIELD_NUMBER = 1;
    private java.lang.Object title_;
    /**
     * <code>optional string title = 1;</code>
     */
    public boolean hasTitle() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>optional string title = 1;</code>
     */
    public java.lang.String getTitle() {
      java.lang.Object ref = title_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          title_ = s;
        }
        return s;
      }
    }
    /**
     * <code>optional string title = 1;</code>
     */
    public com.google.protobuf.ByteString
        getTitleBytes() {
      java.lang.Object ref = title_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        title_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int DURATION_FIELD_NUMBER = 2;
    private float duration_;
    /**
     * <code>optional float duration = 2;</code>
     */
    public boolean hasDuration() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>optional float duration = 2;</code>
     */
    public float getDuration() {
      return duration_;
    }

    public static final int CHOICE_COUNT_FIELD_NUMBER = 3;
    private int choiceCount_;
    /**
     * <code>optional int32 choice_count = 3;</code>
     */
    public boolean hasChoiceCount() {
      return ((bitField0_ & 0x00000004) == 0x00000004);
    }
    /**
     * <code>optional int32 choice_count = 3;</code>
     */
    public int getChoiceCount() {
      return choiceCount_;
    }

    public static final int CHOICES_FIELD_NUMBER = 4;
    private com.google.protobuf.LazyStringList choices_;
    /**
     * <code>repeated string choices = 4;</code>
     */
    public com.google.protobuf.ProtocolStringList
        getChoicesList() {
      return choices_;
    }
    /**
     * <code>repeated string choices = 4;</code>
     */
    public int getChoicesCount() {
      return choices_.size();
    }
    /**
     * <code>repeated string choices = 4;</code>
     */
    public java.lang.String getChoices(int index) {
      return choices_.get(index);
    }
    /**
     * <code>repeated string choices = 4;</code>
     */
    public com.google.protobuf.ByteString
        getChoicesBytes(int index) {
      return choices_.getByteString(index);
    }

    private void initFields() {
      title_ = "";
      duration_ = 0F;
      choiceCount_ = 0;
      choices_ = com.google.protobuf.LazyStringArrayList.EMPTY;
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeBytes(1, getTitleBytes());
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeFloat(2, duration_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        output.writeInt32(3, choiceCount_);
      }
      for (int i = 0; i < choices_.size(); i++) {
        output.writeBytes(4, choices_.getByteString(i));
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(1, getTitleBytes());
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeFloatSize(2, duration_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(3, choiceCount_);
      }
      {
        int dataSize = 0;
        for (int i = 0; i < choices_.size(); i++) {
          dataSize += com.google.protobuf.CodedOutputStream
            .computeBytesSizeNoTag(choices_.getByteString(i));
        }
        size += dataSize;
        size += 1 * getChoicesList().size();
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_VoteStart parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_VoteStart parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_VoteStart parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_VoteStart parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_VoteStart parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_VoteStart parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_VoteStart parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_VoteStart parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_VoteStart parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_VoteStart parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_VoteStart prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code CDOTAUserMsg_VoteStart}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:CDOTAUserMsg_VoteStart)
        skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_VoteStartOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return skadistats.clarity.wire.common.proto.DotaUserMessages.internal_static_CDOTAUserMsg_VoteStart_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return skadistats.clarity.wire.common.proto.DotaUserMessages.internal_static_CDOTAUserMsg_VoteStart_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_VoteStart.class, skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_VoteStart.Builder.class);
      }

      // Construct using skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_VoteStart.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        title_ = "";
        bitField0_ = (bitField0_ & ~0x00000001);
        duration_ = 0F;
        bitField0_ = (bitField0_ & ~0x00000002);
        choiceCount_ = 0;
        bitField0_ = (bitField0_ & ~0x00000004);
        choices_ = com.google.protobuf.LazyStringArrayList.EMPTY;
        bitField0_ = (bitField0_ & ~0x00000008);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return skadistats.clarity.wire.common.proto.DotaUserMessages.internal_static_CDOTAUserMsg_VoteStart_descriptor;
      }

      public skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_VoteStart getDefaultInstanceForType() {
        return skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_VoteStart.getDefaultInstance();
      }

      public skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_VoteStart build() {
        skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_VoteStart result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_VoteStart buildPartial() {
        skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_VoteStart result = new skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_VoteStart(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.title_ = title_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.duration_ = duration_;
        if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
          to_bitField0_ |= 0x00000004;
        }
        result.choiceCount_ = choiceCount_;
        if (((bitField0_ & 0x00000008) == 0x00000008)) {
          choices_ = choices_.getUnmodifiableView();
          bitField0_ = (bitField0_ & ~0x00000008);
        }
        result.choices_ = choices_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_VoteStart) {
          return mergeFrom((skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_VoteStart)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_VoteStart other) {
        if (other == skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_VoteStart.getDefaultInstance()) return this;
        if (other.hasTitle()) {
          bitField0_ |= 0x00000001;
          title_ = other.title_;
          onChanged();
        }
        if (other.hasDuration()) {
          setDuration(other.getDuration());
        }
        if (other.hasChoiceCount()) {
          setChoiceCount(other.getChoiceCount());
        }
        if (!other.choices_.isEmpty()) {
          if (choices_.isEmpty()) {
            choices_ = other.choices_;
            bitField0_ = (bitField0_ & ~0x00000008);
          } else {
            ensureChoicesIsMutable();
            choices_.addAll(other.choices_);
          }
          onChanged();
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_VoteStart parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_VoteStart) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private java.lang.Object title_ = "";
      /**
       * <code>optional string title = 1;</code>
       */
      public boolean hasTitle() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>optional string title = 1;</code>
       */
      public java.lang.String getTitle() {
        java.lang.Object ref = title_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          if (bs.isValidUtf8()) {
            title_ = s;
          }
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>optional string title = 1;</code>
       */
      public com.google.protobuf.ByteString
          getTitleBytes() {
        java.lang.Object ref = title_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          title_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>optional string title = 1;</code>
       */
      public Builder setTitle(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000001;
        title_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional string title = 1;</code>
       */
      public Builder clearTitle() {
        bitField0_ = (bitField0_ & ~0x00000001);
        title_ = getDefaultInstance().getTitle();
        onChanged();
        return this;
      }
      /**
       * <code>optional string title = 1;</code>
       */
      public Builder setTitleBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000001;
        title_ = value;
        onChanged();
        return this;
      }

      private float duration_ ;
      /**
       * <code>optional float duration = 2;</code>
       */
      public boolean hasDuration() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>optional float duration = 2;</code>
       */
      public float getDuration() {
        return duration_;
      }
      /**
       * <code>optional float duration = 2;</code>
       */
      public Builder setDuration(float value) {
        bitField0_ |= 0x00000002;
        duration_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional float duration = 2;</code>
       */
      public Builder clearDuration() {
        bitField0_ = (bitField0_ & ~0x00000002);
        duration_ = 0F;
        onChanged();
        return this;
      }

      private int choiceCount_ ;
      /**
       * <code>optional int32 choice_count = 3;</code>
       */
      public boolean hasChoiceCount() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }
      /**
       * <code>optional int32 choice_count = 3;</code>
       */
      public int getChoiceCount() {
        return choiceCount_;
      }
      /**
       * <code>optional int32 choice_count = 3;</code>
       */
      public Builder setChoiceCount(int value) {
        bitField0_ |= 0x00000004;
        choiceCount_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 choice_count = 3;</code>
       */
      public Builder clearChoiceCount() {
        bitField0_ = (bitField0_ & ~0x00000004);
        choiceCount_ = 0;
        onChanged();
        return this;
      }

      private com.google.protobuf.LazyStringList choices_ = com.google.protobuf.LazyStringArrayList.EMPTY;
      private void ensureChoicesIsMutable() {
        if (!((bitField0_ & 0x00000008) == 0x00000008)) {
          choices_ = new com.google.protobuf.LazyStringArrayList(choices_);
          bitField0_ |= 0x00000008;
         }
      }
      /**
       * <code>repeated string choices = 4;</code>
       */
      public com.google.protobuf.ProtocolStringList
          getChoicesList() {
        return choices_.getUnmodifiableView();
      }
      /**
       * <code>repeated string choices = 4;</code>
       */
      public int getChoicesCount() {
        return choices_.size();
      }
      /**
       * <code>repeated string choices = 4;</code>
       */
      public java.lang.String getChoices(int index) {
        return choices_.get(index);
      }
      /**
       * <code>repeated string choices = 4;</code>
       */
      public com.google.protobuf.ByteString
          getChoicesBytes(int index) {
        return choices_.getByteString(index);
      }
      /**
       * <code>repeated string choices = 4;</code>
       */
      public Builder setChoices(
          int index, java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  ensureChoicesIsMutable();
        choices_.set(index, value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated string choices = 4;</code>
       */
      public Builder addChoices(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  ensureChoicesIsMutable();
        choices_.add(value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated string choices = 4;</code>
       */
      public Builder addAllChoices(
          java.lang.Iterable<java.lang.String> values) {
        ensureChoicesIsMutable();
        com.google.protobuf.AbstractMessageLite.Builder.addAll(
            values, choices_);
        onChanged();
        return this;
      }
      /**
       * <code>repeated string choices = 4;</code>
       */
      public Builder clearChoices() {
        choices_ = com.google.protobuf.LazyStringArrayList.EMPTY;
        bitField0_ = (bitField0_ & ~0x00000008);
        onChanged();
        return this;
      }
      /**
       * <code>repeated string choices = 4;</code>
       */
      public Builder addChoicesBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  ensureChoicesIsMutable();
        choices_.add(value);
        onChanged();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:CDOTAUserMsg_VoteStart)
    }

    static {
      defaultInstance = new CDOTAUserMsg_VoteStart(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:CDOTAUserMsg_VoteStart)
  }

  public interface CDOTAUserMsg_VoteUpdateOrBuilder extends
      // @@protoc_insertion_point(interface_extends:CDOTAUserMsg_VoteUpdate)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>repeated int32 choice_counts = 1;</code>
     */
    java.util.List<java.lang.Integer> getChoiceCountsList();
    /**
     * <code>repeated int32 choice_counts = 1;</code>
     */
    int getChoiceCountsCount();
    /**
     * <code>repeated int32 choice_counts = 1;</code>
     */
    int getChoiceCounts(int index);
  }
  /**
   * Protobuf type {@code CDOTAUserMsg_VoteUpdate}
   */
  public static final class CDOTAUserMsg_VoteUpdate extends
      com.google.protobuf.GeneratedMessage implements
      // @@protoc_insertion_point(message_implements:CDOTAUserMsg_VoteUpdate)
      CDOTAUserMsg_VoteUpdateOrBuilder {
    // Use CDOTAUserMsg_VoteUpdate.newBuilder() to construct.
    private CDOTAUserMsg_VoteUpdate(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private CDOTAUserMsg_VoteUpdate(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final CDOTAUserMsg_VoteUpdate defaultInstance;
    public static CDOTAUserMsg_VoteUpdate getDefaultInstance() {
      return defaultInstance;
    }

    public CDOTAUserMsg_VoteUpdate getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private CDOTAUserMsg_VoteUpdate(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 8: {
              if (!((mutable_bitField0_ & 0x00000001) == 0x00000001)) {
                choiceCounts_ = new java.util.ArrayList<java.lang.Integer>();
                mutable_bitField0_ |= 0x00000001;
              }
              choiceCounts_.add(input.readInt32());
              break;
            }
            case 10: {
              int length = input.readRawVarint32();
              int limit = input.pushLimit(length);
              if (!((mutable_bitField0_ & 0x00000001) == 0x00000001) && input.getBytesUntilLimit() > 0) {
                choiceCounts_ = new java.util.ArrayList<java.lang.Integer>();
                mutable_bitField0_ |= 0x00000001;
              }
              while (input.getBytesUntilLimit() > 0) {
                choiceCounts_.add(input.readInt32());
              }
              input.popLimit(limit);
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        if (((mutable_bitField0_ & 0x00000001) == 0x00000001)) {
          choiceCounts_ = java.util.Collections.unmodifiableList(choiceCounts_);
        }
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return skadistats.clarity.wire.common.proto.DotaUserMessages.internal_static_CDOTAUserMsg_VoteUpdate_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return skadistats.clarity.wire.common.proto.DotaUserMessages.internal_static_CDOTAUserMsg_VoteUpdate_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_VoteUpdate.class, skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_VoteUpdate.Builder.class);
    }

    public static com.google.protobuf.Parser<CDOTAUserMsg_VoteUpdate> PARSER =
        new com.google.protobuf.AbstractParser<CDOTAUserMsg_VoteUpdate>() {
      public CDOTAUserMsg_VoteUpdate parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new CDOTAUserMsg_VoteUpdate(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<CDOTAUserMsg_VoteUpdate> getParserForType() {
      return PARSER;
    }

    public static final int CHOICE_COUNTS_FIELD_NUMBER = 1;
    private java.util.List<java.lang.Integer> choiceCounts_;
    /**
     * <code>repeated int32 choice_counts = 1;</code>
     */
    public java.util.List<java.lang.Integer>
        getChoiceCountsList() {
      return choiceCounts_;
    }
    /**
     * <code>repeated int32 choice_counts = 1;</code>
     */
    public int getChoiceCountsCount() {
      return choiceCounts_.size();
    }
    /**
     * <code>repeated int32 choice_counts = 1;</code>
     */
    public int getChoiceCounts(int index) {
      return choiceCounts_.get(index);
    }

    private void initFields() {
      choiceCounts_ = java.util.Collections.emptyList();
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      for (int i = 0; i < choiceCounts_.size(); i++) {
        output.writeInt32(1, choiceCounts_.get(i));
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      {
        int dataSize = 0;
        for (int i = 0; i < choiceCounts_.size(); i++) {
          dataSize += com.google.protobuf.CodedOutputStream
            .computeInt32SizeNoTag(choiceCounts_.get(i));
        }
        size += dataSize;
        size += 1 * getChoiceCountsList().size();
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_VoteUpdate parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_VoteUpdate parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_VoteUpdate parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_VoteUpdate parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_VoteUpdate parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_VoteUpdate parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_VoteUpdate parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_VoteUpdate parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_VoteUpdate parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_VoteUpdate parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_VoteUpdate prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code CDOTAUserMsg_VoteUpdate}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:CDOTAUserMsg_VoteUpdate)
        skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_VoteUpdateOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return skadistats.clarity.wire.common.proto.DotaUserMessages.internal_static_CDOTAUserMsg_VoteUpdate_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return skadistats.clarity.wire.common.proto.DotaUserMessages.internal_static_CDOTAUserMsg_VoteUpdate_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_VoteUpdate.class, skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_VoteUpdate.Builder.class);
      }

      // Construct using skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_VoteUpdate.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        choiceCounts_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000001);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return skadistats.clarity.wire.common.proto.DotaUserMessages.internal_static_CDOTAUserMsg_VoteUpdate_descriptor;
      }

      public skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_VoteUpdate getDefaultInstanceForType() {
        return skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_VoteUpdate.getDefaultInstance();
      }

      public skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_VoteUpdate build() {
        skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_VoteUpdate result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_VoteUpdate buildPartial() {
        skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_VoteUpdate result = new skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_VoteUpdate(this);
        int from_bitField0_ = bitField0_;
        if (((bitField0_ & 0x00000001) == 0x00000001)) {
          choiceCounts_ = java.util.Collections.unmodifiableList(choiceCounts_);
          bitField0_ = (bitField0_ & ~0x00000001);
        }
        result.choiceCounts_ = choiceCounts_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_VoteUpdate) {
          return mergeFrom((skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_VoteUpdate)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_VoteUpdate other) {
        if (other == skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_VoteUpdate.getDefaultInstance()) return this;
        if (!other.choiceCounts_.isEmpty()) {
          if (choiceCounts_.isEmpty()) {
            choiceCounts_ = other.choiceCounts_;
            bitField0_ = (bitField0_ & ~0x00000001);
          } else {
            ensureChoiceCountsIsMutable();
            choiceCounts_.addAll(other.choiceCounts_);
          }
          onChanged();
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_VoteUpdate parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_VoteUpdate) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private java.util.List<java.lang.Integer> choiceCounts_ = java.util.Collections.emptyList();
      private void ensureChoiceCountsIsMutable() {
        if (!((bitField0_ & 0x00000001) == 0x00000001)) {
          choiceCounts_ = new java.util.ArrayList<java.lang.Integer>(choiceCounts_);
          bitField0_ |= 0x00000001;
         }
      }
      /**
       * <code>repeated int32 choice_counts = 1;</code>
       */
      public java.util.List<java.lang.Integer>
          getChoiceCountsList() {
        return java.util.Collections.unmodifiableList(choiceCounts_);
      }
      /**
       * <code>repeated int32 choice_counts = 1;</code>
       */
      public int getChoiceCountsCount() {
        return choiceCounts_.size();
      }
      /**
       * <code>repeated int32 choice_counts = 1;</code>
       */
      public int getChoiceCounts(int index) {
        return choiceCounts_.get(index);
      }
      /**
       * <code>repeated int32 choice_counts = 1;</code>
       */
      public Builder setChoiceCounts(
          int index, int value) {
        ensureChoiceCountsIsMutable();
        choiceCounts_.set(index, value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int32 choice_counts = 1;</code>
       */
      public Builder addChoiceCounts(int value) {
        ensureChoiceCountsIsMutable();
        choiceCounts_.add(value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int32 choice_counts = 1;</code>
       */
      public Builder addAllChoiceCounts(
          java.lang.Iterable<? extends java.lang.Integer> values) {
        ensureChoiceCountsIsMutable();
        com.google.protobuf.AbstractMessageLite.Builder.addAll(
            values, choiceCounts_);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int32 choice_counts = 1;</code>
       */
      public Builder clearChoiceCounts() {
        choiceCounts_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000001);
        onChanged();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:CDOTAUserMsg_VoteUpdate)
    }

    static {
      defaultInstance = new CDOTAUserMsg_VoteUpdate(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:CDOTAUserMsg_VoteUpdate)
  }

  public interface CDOTAUserMsg_VoteEndOrBuilder extends
      // @@protoc_insertion_point(interface_extends:CDOTAUserMsg_VoteEnd)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>optional int32 selected_choice = 1;</code>
     */
    boolean hasSelectedChoice();
    /**
     * <code>optional int32 selected_choice = 1;</code>
     */
    int getSelectedChoice();
  }
  /**
   * Protobuf type {@code CDOTAUserMsg_VoteEnd}
   */
  public static final class CDOTAUserMsg_VoteEnd extends
      com.google.protobuf.GeneratedMessage implements
      // @@protoc_insertion_point(message_implements:CDOTAUserMsg_VoteEnd)
      CDOTAUserMsg_VoteEndOrBuilder {
    // Use CDOTAUserMsg_VoteEnd.newBuilder() to construct.
    private CDOTAUserMsg_VoteEnd(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private CDOTAUserMsg_VoteEnd(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final CDOTAUserMsg_VoteEnd defaultInstance;
    public static CDOTAUserMsg_VoteEnd getDefaultInstance() {
      return defaultInstance;
    }

    public CDOTAUserMsg_VoteEnd getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private CDOTAUserMsg_VoteEnd(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 8: {
              bitField0_ |= 0x00000001;
              selectedChoice_ = input.readInt32();
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return skadistats.clarity.wire.common.proto.DotaUserMessages.internal_static_CDOTAUserMsg_VoteEnd_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return skadistats.clarity.wire.common.proto.DotaUserMessages.internal_static_CDOTAUserMsg_VoteEnd_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_VoteEnd.class, skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_VoteEnd.Builder.class);
    }

    public static com.google.protobuf.Parser<CDOTAUserMsg_VoteEnd> PARSER =
        new com.google.protobuf.AbstractParser<CDOTAUserMsg_VoteEnd>() {
      public CDOTAUserMsg_VoteEnd parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new CDOTAUserMsg_VoteEnd(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<CDOTAUserMsg_VoteEnd> getParserForType() {
      return PARSER;
    }

    private int bitField0_;
    public static final int SELECTED_CHOICE_FIELD_NUMBER = 1;
    private int selectedChoice_;
    /**
     * <code>optional int32 selected_choice = 1;</code>
     */
    public boolean hasSelectedChoice() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>optional int32 selected_choice = 1;</code>
     */
    public int getSelectedChoice() {
      return selectedChoice_;
    }

    private void initFields() {
      selectedChoice_ = 0;
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeInt32(1, selectedChoice_);
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(1, selectedChoice_);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_VoteEnd parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_VoteEnd parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_VoteEnd parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_VoteEnd parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_VoteEnd parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_VoteEnd parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_VoteEnd parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_VoteEnd parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_VoteEnd parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_VoteEnd parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_VoteEnd prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code CDOTAUserMsg_VoteEnd}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:CDOTAUserMsg_VoteEnd)
        skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_VoteEndOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return skadistats.clarity.wire.common.proto.DotaUserMessages.internal_static_CDOTAUserMsg_VoteEnd_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return skadistats.clarity.wire.common.proto.DotaUserMessages.internal_static_CDOTAUserMsg_VoteEnd_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_VoteEnd.class, skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_VoteEnd.Builder.class);
      }

      // Construct using skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_VoteEnd.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        selectedChoice_ = 0;
        bitField0_ = (bitField0_ & ~0x00000001);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return skadistats.clarity.wire.common.proto.DotaUserMessages.internal_static_CDOTAUserMsg_VoteEnd_descriptor;
      }

      public skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_VoteEnd getDefaultInstanceForType() {
        return skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_VoteEnd.getDefaultInstance();
      }

      public skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_VoteEnd build() {
        skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_VoteEnd result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_VoteEnd buildPartial() {
        skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_VoteEnd result = new skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_VoteEnd(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.selectedChoice_ = selectedChoice_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_VoteEnd) {
          return mergeFrom((skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_VoteEnd)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_VoteEnd other) {
        if (other == skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_VoteEnd.getDefaultInstance()) return this;
        if (other.hasSelectedChoice()) {
          setSelectedChoice(other.getSelectedChoice());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_VoteEnd parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_VoteEnd) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private int selectedChoice_ ;
      /**
       * <code>optional int32 selected_choice = 1;</code>
       */
      public boolean hasSelectedChoice() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>optional int32 selected_choice = 1;</code>
       */
      public int getSelectedChoice() {
        return selectedChoice_;
      }
      /**
       * <code>optional int32 selected_choice = 1;</code>
       */
      public Builder setSelectedChoice(int value) {
        bitField0_ |= 0x00000001;
        selectedChoice_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 selected_choice = 1;</code>
       */
      public Builder clearSelectedChoice() {
        bitField0_ = (bitField0_ & ~0x00000001);
        selectedChoice_ = 0;
        onChanged();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:CDOTAUserMsg_VoteEnd)
    }

    static {
      defaultInstance = new CDOTAUserMsg_VoteEnd(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:CDOTAUserMsg_VoteEnd)
  }

  public interface CDOTAUserMsg_BoosterStatePlayerOrBuilder extends
      // @@protoc_insertion_point(interface_extends:CDOTAUserMsg_BoosterStatePlayer)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>optional uint32 player_id = 1;</code>
     */
    boolean hasPlayerId();
    /**
     * <code>optional uint32 player_id = 1;</code>
     */
    int getPlayerId();

    /**
     * <code>optional float bonus = 2;</code>
     */
    boolean hasBonus();
    /**
     * <code>optional float bonus = 2;</code>
     */
    float getBonus();

    /**
     * <code>optional float event_bonus = 3;</code>
     */
    boolean hasEventBonus();
    /**
     * <code>optional float event_bonus = 3;</code>
     */
    float getEventBonus();

    /**
     * <code>optional uint32 bonus_item_id = 4;</code>
     */
    boolean hasBonusItemId();
    /**
     * <code>optional uint32 bonus_item_id = 4;</code>
     */
    int getBonusItemId();

    /**
     * <code>optional uint32 event_bonus_item_id = 5;</code>
     */
    boolean hasEventBonusItemId();
    /**
     * <code>optional uint32 event_bonus_item_id = 5;</code>
     */
    int getEventBonusItemId();
  }
  /**
   * Protobuf type {@code CDOTAUserMsg_BoosterStatePlayer}
   */
  public static final class CDOTAUserMsg_BoosterStatePlayer extends
      com.google.protobuf.GeneratedMessage implements
      // @@protoc_insertion_point(message_implements:CDOTAUserMsg_BoosterStatePlayer)
      CDOTAUserMsg_BoosterStatePlayerOrBuilder {
    // Use CDOTAUserMsg_BoosterStatePlayer.newBuilder() to construct.
    private CDOTAUserMsg_BoosterStatePlayer(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private CDOTAUserMsg_BoosterStatePlayer(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final CDOTAUserMsg_BoosterStatePlayer defaultInstance;
    public static CDOTAUserMsg_BoosterStatePlayer getDefaultInstance() {
      return defaultInstance;
    }

    public CDOTAUserMsg_BoosterStatePlayer getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private CDOTAUserMsg_BoosterStatePlayer(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 8: {
              bitField0_ |= 0x00000001;
              playerId_ = input.readUInt32();
              break;
            }
            case 21: {
              bitField0_ |= 0x00000002;
              bonus_ = input.readFloat();
              break;
            }
            case 29: {
              bitField0_ |= 0x00000004;
              eventBonus_ = input.readFloat();
              break;
            }
            case 32: {
              bitField0_ |= 0x00000008;
              bonusItemId_ = input.readUInt32();
              break;
            }
            case 40: {
              bitField0_ |= 0x00000010;
              eventBonusItemId_ = input.readUInt32();
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return skadistats.clarity.wire.common.proto.DotaUserMessages.internal_static_CDOTAUserMsg_BoosterStatePlayer_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return skadistats.clarity.wire.common.proto.DotaUserMessages.internal_static_CDOTAUserMsg_BoosterStatePlayer_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_BoosterStatePlayer.class, skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_BoosterStatePlayer.Builder.class);
    }

    public static com.google.protobuf.Parser<CDOTAUserMsg_BoosterStatePlayer> PARSER =
        new com.google.protobuf.AbstractParser<CDOTAUserMsg_BoosterStatePlayer>() {
      public CDOTAUserMsg_BoosterStatePlayer parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new CDOTAUserMsg_BoosterStatePlayer(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<CDOTAUserMsg_BoosterStatePlayer> getParserForType() {
      return PARSER;
    }

    private int bitField0_;
    public static final int PLAYER_ID_FIELD_NUMBER = 1;
    private int playerId_;
    /**
     * <code>optional uint32 player_id = 1;</code>
     */
    public boolean hasPlayerId() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>optional uint32 player_id = 1;</code>
     */
    public int getPlayerId() {
      return playerId_;
    }

    public static final int BONUS_FIELD_NUMBER = 2;
    private float bonus_;
    /**
     * <code>optional float bonus = 2;</code>
     */
    public boolean hasBonus() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>optional float bonus = 2;</code>
     */
    public float getBonus() {
      return bonus_;
    }

    public static final int EVENT_BONUS_FIELD_NUMBER = 3;
    private float eventBonus_;
    /**
     * <code>optional float event_bonus = 3;</code>
     */
    public boolean hasEventBonus() {
      return ((bitField0_ & 0x00000004) == 0x00000004);
    }
    /**
     * <code>optional float event_bonus = 3;</code>
     */
    public float getEventBonus() {
      return eventBonus_;
    }

    public static final int BONUS_ITEM_ID_FIELD_NUMBER = 4;
    private int bonusItemId_;
    /**
     * <code>optional uint32 bonus_item_id = 4;</code>
     */
    public boolean hasBonusItemId() {
      return ((bitField0_ & 0x00000008) == 0x00000008);
    }
    /**
     * <code>optional uint32 bonus_item_id = 4;</code>
     */
    public int getBonusItemId() {
      return bonusItemId_;
    }

    public static final int EVENT_BONUS_ITEM_ID_FIELD_NUMBER = 5;
    private int eventBonusItemId_;
    /**
     * <code>optional uint32 event_bonus_item_id = 5;</code>
     */
    public boolean hasEventBonusItemId() {
      return ((bitField0_ & 0x00000010) == 0x00000010);
    }
    /**
     * <code>optional uint32 event_bonus_item_id = 5;</code>
     */
    public int getEventBonusItemId() {
      return eventBonusItemId_;
    }

    private void initFields() {
      playerId_ = 0;
      bonus_ = 0F;
      eventBonus_ = 0F;
      bonusItemId_ = 0;
      eventBonusItemId_ = 0;
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeUInt32(1, playerId_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeFloat(2, bonus_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        output.writeFloat(3, eventBonus_);
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        output.writeUInt32(4, bonusItemId_);
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        output.writeUInt32(5, eventBonusItemId_);
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(1, playerId_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeFloatSize(2, bonus_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        size += com.google.protobuf.CodedOutputStream
          .computeFloatSize(3, eventBonus_);
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(4, bonusItemId_);
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(5, eventBonusItemId_);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_BoosterStatePlayer parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_BoosterStatePlayer parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_BoosterStatePlayer parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_BoosterStatePlayer parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_BoosterStatePlayer parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_BoosterStatePlayer parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_BoosterStatePlayer parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_BoosterStatePlayer parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_BoosterStatePlayer parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_BoosterStatePlayer parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_BoosterStatePlayer prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code CDOTAUserMsg_BoosterStatePlayer}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:CDOTAUserMsg_BoosterStatePlayer)
        skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_BoosterStatePlayerOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return skadistats.clarity.wire.common.proto.DotaUserMessages.internal_static_CDOTAUserMsg_BoosterStatePlayer_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return skadistats.clarity.wire.common.proto.DotaUserMessages.internal_static_CDOTAUserMsg_BoosterStatePlayer_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_BoosterStatePlayer.class, skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_BoosterStatePlayer.Builder.class);
      }

      // Construct using skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_BoosterStatePlayer.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        playerId_ = 0;
        bitField0_ = (bitField0_ & ~0x00000001);
        bonus_ = 0F;
        bitField0_ = (bitField0_ & ~0x00000002);
        eventBonus_ = 0F;
        bitField0_ = (bitField0_ & ~0x00000004);
        bonusItemId_ = 0;
        bitField0_ = (bitField0_ & ~0x00000008);
        eventBonusItemId_ = 0;
        bitField0_ = (bitField0_ & ~0x00000010);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return skadistats.clarity.wire.common.proto.DotaUserMessages.internal_static_CDOTAUserMsg_BoosterStatePlayer_descriptor;
      }

      public skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_BoosterStatePlayer getDefaultInstanceForType() {
        return skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_BoosterStatePlayer.getDefaultInstance();
      }

      public skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_BoosterStatePlayer build() {
        skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_BoosterStatePlayer result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_BoosterStatePlayer buildPartial() {
        skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_BoosterStatePlayer result = new skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_BoosterStatePlayer(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.playerId_ = playerId_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.bonus_ = bonus_;
        if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
          to_bitField0_ |= 0x00000004;
        }
        result.eventBonus_ = eventBonus_;
        if (((from_bitField0_ & 0x00000008) == 0x00000008)) {
          to_bitField0_ |= 0x00000008;
        }
        result.bonusItemId_ = bonusItemId_;
        if (((from_bitField0_ & 0x00000010) == 0x00000010)) {
          to_bitField0_ |= 0x00000010;
        }
        result.eventBonusItemId_ = eventBonusItemId_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_BoosterStatePlayer) {
          return mergeFrom((skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_BoosterStatePlayer)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_BoosterStatePlayer other) {
        if (other == skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_BoosterStatePlayer.getDefaultInstance()) return this;
        if (other.hasPlayerId()) {
          setPlayerId(other.getPlayerId());
        }
        if (other.hasBonus()) {
          setBonus(other.getBonus());
        }
        if (other.hasEventBonus()) {
          setEventBonus(other.getEventBonus());
        }
        if (other.hasBonusItemId()) {
          setBonusItemId(other.getBonusItemId());
        }
        if (other.hasEventBonusItemId()) {
          setEventBonusItemId(other.getEventBonusItemId());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_BoosterStatePlayer parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_BoosterStatePlayer) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private int playerId_ ;
      /**
       * <code>optional uint32 player_id = 1;</code>
       */
      public boolean hasPlayerId() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>optional uint32 player_id = 1;</code>
       */
      public int getPlayerId() {
        return playerId_;
      }
      /**
       * <code>optional uint32 player_id = 1;</code>
       */
      public Builder setPlayerId(int value) {
        bitField0_ |= 0x00000001;
        playerId_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional uint32 player_id = 1;</code>
       */
      public Builder clearPlayerId() {
        bitField0_ = (bitField0_ & ~0x00000001);
        playerId_ = 0;
        onChanged();
        return this;
      }

      private float bonus_ ;
      /**
       * <code>optional float bonus = 2;</code>
       */
      public boolean hasBonus() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>optional float bonus = 2;</code>
       */
      public float getBonus() {
        return bonus_;
      }
      /**
       * <code>optional float bonus = 2;</code>
       */
      public Builder setBonus(float value) {
        bitField0_ |= 0x00000002;
        bonus_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional float bonus = 2;</code>
       */
      public Builder clearBonus() {
        bitField0_ = (bitField0_ & ~0x00000002);
        bonus_ = 0F;
        onChanged();
        return this;
      }

      private float eventBonus_ ;
      /**
       * <code>optional float event_bonus = 3;</code>
       */
      public boolean hasEventBonus() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }
      /**
       * <code>optional float event_bonus = 3;</code>
       */
      public float getEventBonus() {
        return eventBonus_;
      }
      /**
       * <code>optional float event_bonus = 3;</code>
       */
      public Builder setEventBonus(float value) {
        bitField0_ |= 0x00000004;
        eventBonus_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional float event_bonus = 3;</code>
       */
      public Builder clearEventBonus() {
        bitField0_ = (bitField0_ & ~0x00000004);
        eventBonus_ = 0F;
        onChanged();
        return this;
      }

      private int bonusItemId_ ;
      /**
       * <code>optional uint32 bonus_item_id = 4;</code>
       */
      public boolean hasBonusItemId() {
        return ((bitField0_ & 0x00000008) == 0x00000008);
      }
      /**
       * <code>optional uint32 bonus_item_id = 4;</code>
       */
      public int getBonusItemId() {
        return bonusItemId_;
      }
      /**
       * <code>optional uint32 bonus_item_id = 4;</code>
       */
      public Builder setBonusItemId(int value) {
        bitField0_ |= 0x00000008;
        bonusItemId_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional uint32 bonus_item_id = 4;</code>
       */
      public Builder clearBonusItemId() {
        bitField0_ = (bitField0_ & ~0x00000008);
        bonusItemId_ = 0;
        onChanged();
        return this;
      }

      private int eventBonusItemId_ ;
      /**
       * <code>optional uint32 event_bonus_item_id = 5;</code>
       */
      public boolean hasEventBonusItemId() {
        return ((bitField0_ & 0x00000010) == 0x00000010);
      }
      /**
       * <code>optional uint32 event_bonus_item_id = 5;</code>
       */
      public int getEventBonusItemId() {
        return eventBonusItemId_;
      }
      /**
       * <code>optional uint32 event_bonus_item_id = 5;</code>
       */
      public Builder setEventBonusItemId(int value) {
        bitField0_ |= 0x00000010;
        eventBonusItemId_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional uint32 event_bonus_item_id = 5;</code>
       */
      public Builder clearEventBonusItemId() {
        bitField0_ = (bitField0_ & ~0x00000010);
        eventBonusItemId_ = 0;
        onChanged();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:CDOTAUserMsg_BoosterStatePlayer)
    }

    static {
      defaultInstance = new CDOTAUserMsg_BoosterStatePlayer(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:CDOTAUserMsg_BoosterStatePlayer)
  }

  public interface CDOTAUserMsg_BoosterStateOrBuilder extends
      // @@protoc_insertion_point(interface_extends:CDOTAUserMsg_BoosterState)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>repeated .CDOTAUserMsg_BoosterStatePlayer boosted_players = 1;</code>
     */
    java.util.List<skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_BoosterStatePlayer> 
        getBoostedPlayersList();
    /**
     * <code>repeated .CDOTAUserMsg_BoosterStatePlayer boosted_players = 1;</code>
     */
    skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_BoosterStatePlayer getBoostedPlayers(int index);
    /**
     * <code>repeated .CDOTAUserMsg_BoosterStatePlayer boosted_players = 1;</code>
     */
    int getBoostedPlayersCount();
    /**
     * <code>repeated .CDOTAUserMsg_BoosterStatePlayer boosted_players = 1;</code>
     */
    java.util.List<? extends skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_BoosterStatePlayerOrBuilder> 
        getBoostedPlayersOrBuilderList();
    /**
     * <code>repeated .CDOTAUserMsg_BoosterStatePlayer boosted_players = 1;</code>
     */
    skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_BoosterStatePlayerOrBuilder getBoostedPlayersOrBuilder(
        int index);
  }
  /**
   * Protobuf type {@code CDOTAUserMsg_BoosterState}
   */
  public static final class CDOTAUserMsg_BoosterState extends
      com.google.protobuf.GeneratedMessage implements
      // @@protoc_insertion_point(message_implements:CDOTAUserMsg_BoosterState)
      CDOTAUserMsg_BoosterStateOrBuilder {
    // Use CDOTAUserMsg_BoosterState.newBuilder() to construct.
    private CDOTAUserMsg_BoosterState(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private CDOTAUserMsg_BoosterState(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final CDOTAUserMsg_BoosterState defaultInstance;
    public static CDOTAUserMsg_BoosterState getDefaultInstance() {
      return defaultInstance;
    }

    public CDOTAUserMsg_BoosterState getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private CDOTAUserMsg_BoosterState(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 10: {
              if (!((mutable_bitField0_ & 0x00000001) == 0x00000001)) {
                boostedPlayers_ = new java.util.ArrayList<skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_BoosterStatePlayer>();
                mutable_bitField0_ |= 0x00000001;
              }
              boostedPlayers_.add(input.readMessage(skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_BoosterStatePlayer.PARSER, extensionRegistry));
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        if (((mutable_bitField0_ & 0x00000001) == 0x00000001)) {
          boostedPlayers_ = java.util.Collections.unmodifiableList(boostedPlayers_);
        }
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return skadistats.clarity.wire.common.proto.DotaUserMessages.internal_static_CDOTAUserMsg_BoosterState_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return skadistats.clarity.wire.common.proto.DotaUserMessages.internal_static_CDOTAUserMsg_BoosterState_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_BoosterState.class, skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_BoosterState.Builder.class);
    }

    public static com.google.protobuf.Parser<CDOTAUserMsg_BoosterState> PARSER =
        new com.google.protobuf.AbstractParser<CDOTAUserMsg_BoosterState>() {
      public CDOTAUserMsg_BoosterState parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new CDOTAUserMsg_BoosterState(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<CDOTAUserMsg_BoosterState> getParserForType() {
      return PARSER;
    }

    public static final int BOOSTED_PLAYERS_FIELD_NUMBER = 1;
    private java.util.List<skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_BoosterStatePlayer> boostedPlayers_;
    /**
     * <code>repeated .CDOTAUserMsg_BoosterStatePlayer boosted_players = 1;</code>
     */
    public java.util.List<skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_BoosterStatePlayer> getBoostedPlayersList() {
      return boostedPlayers_;
    }
    /**
     * <code>repeated .CDOTAUserMsg_BoosterStatePlayer boosted_players = 1;</code>
     */
    public java.util.List<? extends skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_BoosterStatePlayerOrBuilder> 
        getBoostedPlayersOrBuilderList() {
      return boostedPlayers_;
    }
    /**
     * <code>repeated .CDOTAUserMsg_BoosterStatePlayer boosted_players = 1;</code>
     */
    public int getBoostedPlayersCount() {
      return boostedPlayers_.size();
    }
    /**
     * <code>repeated .CDOTAUserMsg_BoosterStatePlayer boosted_players = 1;</code>
     */
    public skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_BoosterStatePlayer getBoostedPlayers(int index) {
      return boostedPlayers_.get(index);
    }
    /**
     * <code>repeated .CDOTAUserMsg_BoosterStatePlayer boosted_players = 1;</code>
     */
    public skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_BoosterStatePlayerOrBuilder getBoostedPlayersOrBuilder(
        int index) {
      return boostedPlayers_.get(index);
    }

    private void initFields() {
      boostedPlayers_ = java.util.Collections.emptyList();
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      for (int i = 0; i < boostedPlayers_.size(); i++) {
        output.writeMessage(1, boostedPlayers_.get(i));
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      for (int i = 0; i < boostedPlayers_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(1, boostedPlayers_.get(i));
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_BoosterState parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_BoosterState parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_BoosterState parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_BoosterState parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_BoosterState parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_BoosterState parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_BoosterState parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_BoosterState parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_BoosterState parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_BoosterState parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_BoosterState prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code CDOTAUserMsg_BoosterState}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:CDOTAUserMsg_BoosterState)
        skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_BoosterStateOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return skadistats.clarity.wire.common.proto.DotaUserMessages.internal_static_CDOTAUserMsg_BoosterState_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return skadistats.clarity.wire.common.proto.DotaUserMessages.internal_static_CDOTAUserMsg_BoosterState_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_BoosterState.class, skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_BoosterState.Builder.class);
      }

      // Construct using skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_BoosterState.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
          getBoostedPlayersFieldBuilder();
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        if (boostedPlayersBuilder_ == null) {
          boostedPlayers_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000001);
        } else {
          boostedPlayersBuilder_.clear();
        }
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return skadistats.clarity.wire.common.proto.DotaUserMessages.internal_static_CDOTAUserMsg_BoosterState_descriptor;
      }

      public skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_BoosterState getDefaultInstanceForType() {
        return skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_BoosterState.getDefaultInstance();
      }

      public skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_BoosterState build() {
        skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_BoosterState result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_BoosterState buildPartial() {
        skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_BoosterState result = new skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_BoosterState(this);
        int from_bitField0_ = bitField0_;
        if (boostedPlayersBuilder_ == null) {
          if (((bitField0_ & 0x00000001) == 0x00000001)) {
            boostedPlayers_ = java.util.Collections.unmodifiableList(boostedPlayers_);
            bitField0_ = (bitField0_ & ~0x00000001);
          }
          result.boostedPlayers_ = boostedPlayers_;
        } else {
          result.boostedPlayers_ = boostedPlayersBuilder_.build();
        }
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_BoosterState) {
          return mergeFrom((skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_BoosterState)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_BoosterState other) {
        if (other == skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_BoosterState.getDefaultInstance()) return this;
        if (boostedPlayersBuilder_ == null) {
          if (!other.boostedPlayers_.isEmpty()) {
            if (boostedPlayers_.isEmpty()) {
              boostedPlayers_ = other.boostedPlayers_;
              bitField0_ = (bitField0_ & ~0x00000001);
            } else {
              ensureBoostedPlayersIsMutable();
              boostedPlayers_.addAll(other.boostedPlayers_);
            }
            onChanged();
          }
        } else {
          if (!other.boostedPlayers_.isEmpty()) {
            if (boostedPlayersBuilder_.isEmpty()) {
              boostedPlayersBuilder_.dispose();
              boostedPlayersBuilder_ = null;
              boostedPlayers_ = other.boostedPlayers_;
              bitField0_ = (bitField0_ & ~0x00000001);
              boostedPlayersBuilder_ = 
                com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders ?
                   getBoostedPlayersFieldBuilder() : null;
            } else {
              boostedPlayersBuilder_.addAllMessages(other.boostedPlayers_);
            }
          }
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_BoosterState parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_BoosterState) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private java.util.List<skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_BoosterStatePlayer> boostedPlayers_ =
        java.util.Collections.emptyList();
      private void ensureBoostedPlayersIsMutable() {
        if (!((bitField0_ & 0x00000001) == 0x00000001)) {
          boostedPlayers_ = new java.util.ArrayList<skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_BoosterStatePlayer>(boostedPlayers_);
          bitField0_ |= 0x00000001;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilder<
          skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_BoosterStatePlayer, skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_BoosterStatePlayer.Builder, skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_BoosterStatePlayerOrBuilder> boostedPlayersBuilder_;

      /**
       * <code>repeated .CDOTAUserMsg_BoosterStatePlayer boosted_players = 1;</code>
       */
      public java.util.List<skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_BoosterStatePlayer> getBoostedPlayersList() {
        if (boostedPlayersBuilder_ == null) {
          return java.util.Collections.unmodifiableList(boostedPlayers_);
        } else {
          return boostedPlayersBuilder_.getMessageList();
        }
      }
      /**
       * <code>repeated .CDOTAUserMsg_BoosterStatePlayer boosted_players = 1;</code>
       */
      public int getBoostedPlayersCount() {
        if (boostedPlayersBuilder_ == null) {
          return boostedPlayers_.size();
        } else {
          return boostedPlayersBuilder_.getCount();
        }
      }
      /**
       * <code>repeated .CDOTAUserMsg_BoosterStatePlayer boosted_players = 1;</code>
       */
      public skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_BoosterStatePlayer getBoostedPlayers(int index) {
        if (boostedPlayersBuilder_ == null) {
          return boostedPlayers_.get(index);
        } else {
          return boostedPlayersBuilder_.getMessage(index);
        }
      }
      /**
       * <code>repeated .CDOTAUserMsg_BoosterStatePlayer boosted_players = 1;</code>
       */
      public Builder setBoostedPlayers(
          int index, skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_BoosterStatePlayer value) {
        if (boostedPlayersBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureBoostedPlayersIsMutable();
          boostedPlayers_.set(index, value);
          onChanged();
        } else {
          boostedPlayersBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .CDOTAUserMsg_BoosterStatePlayer boosted_players = 1;</code>
       */
      public Builder setBoostedPlayers(
          int index, skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_BoosterStatePlayer.Builder builderForValue) {
        if (boostedPlayersBuilder_ == null) {
          ensureBoostedPlayersIsMutable();
          boostedPlayers_.set(index, builderForValue.build());
          onChanged();
        } else {
          boostedPlayersBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .CDOTAUserMsg_BoosterStatePlayer boosted_players = 1;</code>
       */
      public Builder addBoostedPlayers(skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_BoosterStatePlayer value) {
        if (boostedPlayersBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureBoostedPlayersIsMutable();
          boostedPlayers_.add(value);
          onChanged();
        } else {
          boostedPlayersBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <code>repeated .CDOTAUserMsg_BoosterStatePlayer boosted_players = 1;</code>
       */
      public Builder addBoostedPlayers(
          int index, skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_BoosterStatePlayer value) {
        if (boostedPlayersBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureBoostedPlayersIsMutable();
          boostedPlayers_.add(index, value);
          onChanged();
        } else {
          boostedPlayersBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .CDOTAUserMsg_BoosterStatePlayer boosted_players = 1;</code>
       */
      public Builder addBoostedPlayers(
          skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_BoosterStatePlayer.Builder builderForValue) {
        if (boostedPlayersBuilder_ == null) {
          ensureBoostedPlayersIsMutable();
          boostedPlayers_.add(builderForValue.build());
          onChanged();
        } else {
          boostedPlayersBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .CDOTAUserMsg_BoosterStatePlayer boosted_players = 1;</code>
       */
      public Builder addBoostedPlayers(
          int index, skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_BoosterStatePlayer.Builder builderForValue) {
        if (boostedPlayersBuilder_ == null) {
          ensureBoostedPlayersIsMutable();
          boostedPlayers_.add(index, builderForValue.build());
          onChanged();
        } else {
          boostedPlayersBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .CDOTAUserMsg_BoosterStatePlayer boosted_players = 1;</code>
       */
      public Builder addAllBoostedPlayers(
          java.lang.Iterable<? extends skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_BoosterStatePlayer> values) {
        if (boostedPlayersBuilder_ == null) {
          ensureBoostedPlayersIsMutable();
          com.google.protobuf.AbstractMessageLite.Builder.addAll(
              values, boostedPlayers_);
          onChanged();
        } else {
          boostedPlayersBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <code>repeated .CDOTAUserMsg_BoosterStatePlayer boosted_players = 1;</code>
       */
      public Builder clearBoostedPlayers() {
        if (boostedPlayersBuilder_ == null) {
          boostedPlayers_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000001);
          onChanged();
        } else {
          boostedPlayersBuilder_.clear();
        }
        return this;
      }
      /**
       * <code>repeated .CDOTAUserMsg_BoosterStatePlayer boosted_players = 1;</code>
       */
      public Builder removeBoostedPlayers(int index) {
        if (boostedPlayersBuilder_ == null) {
          ensureBoostedPlayersIsMutable();
          boostedPlayers_.remove(index);
          onChanged();
        } else {
          boostedPlayersBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <code>repeated .CDOTAUserMsg_BoosterStatePlayer boosted_players = 1;</code>
       */
      public skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_BoosterStatePlayer.Builder getBoostedPlayersBuilder(
          int index) {
        return getBoostedPlayersFieldBuilder().getBuilder(index);
      }
      /**
       * <code>repeated .CDOTAUserMsg_BoosterStatePlayer boosted_players = 1;</code>
       */
      public skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_BoosterStatePlayerOrBuilder getBoostedPlayersOrBuilder(
          int index) {
        if (boostedPlayersBuilder_ == null) {
          return boostedPlayers_.get(index);  } else {
          return boostedPlayersBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <code>repeated .CDOTAUserMsg_BoosterStatePlayer boosted_players = 1;</code>
       */
      public java.util.List<? extends skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_BoosterStatePlayerOrBuilder> 
           getBoostedPlayersOrBuilderList() {
        if (boostedPlayersBuilder_ != null) {
          return boostedPlayersBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(boostedPlayers_);
        }
      }
      /**
       * <code>repeated .CDOTAUserMsg_BoosterStatePlayer boosted_players = 1;</code>
       */
      public skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_BoosterStatePlayer.Builder addBoostedPlayersBuilder() {
        return getBoostedPlayersFieldBuilder().addBuilder(
            skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_BoosterStatePlayer.getDefaultInstance());
      }
      /**
       * <code>repeated .CDOTAUserMsg_BoosterStatePlayer boosted_players = 1;</code>
       */
      public skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_BoosterStatePlayer.Builder addBoostedPlayersBuilder(
          int index) {
        return getBoostedPlayersFieldBuilder().addBuilder(
            index, skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_BoosterStatePlayer.getDefaultInstance());
      }
      /**
       * <code>repeated .CDOTAUserMsg_BoosterStatePlayer boosted_players = 1;</code>
       */
      public java.util.List<skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_BoosterStatePlayer.Builder> 
           getBoostedPlayersBuilderList() {
        return getBoostedPlayersFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilder<
          skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_BoosterStatePlayer, skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_BoosterStatePlayer.Builder, skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_BoosterStatePlayerOrBuilder> 
          getBoostedPlayersFieldBuilder() {
        if (boostedPlayersBuilder_ == null) {
          boostedPlayersBuilder_ = new com.google.protobuf.RepeatedFieldBuilder<
              skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_BoosterStatePlayer, skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_BoosterStatePlayer.Builder, skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_BoosterStatePlayerOrBuilder>(
                  boostedPlayers_,
                  ((bitField0_ & 0x00000001) == 0x00000001),
                  getParentForChildren(),
                  isClean());
          boostedPlayers_ = null;
        }
        return boostedPlayersBuilder_;
      }

      // @@protoc_insertion_point(builder_scope:CDOTAUserMsg_BoosterState)
    }

    static {
      defaultInstance = new CDOTAUserMsg_BoosterState(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:CDOTAUserMsg_BoosterState)
  }

  public interface CDOTAUserMsg_PlayerMMROrBuilder extends
      // @@protoc_insertion_point(interface_extends:CDOTAUserMsg_PlayerMMR)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>repeated sint32 mmr = 1 [packed = true];</code>
     */
    java.util.List<java.lang.Integer> getMmrList();
    /**
     * <code>repeated sint32 mmr = 1 [packed = true];</code>
     */
    int getMmrCount();
    /**
     * <code>repeated sint32 mmr = 1 [packed = true];</code>
     */
    int getMmr(int index);
  }
  /**
   * Protobuf type {@code CDOTAUserMsg_PlayerMMR}
   */
  public static final class CDOTAUserMsg_PlayerMMR extends
      com.google.protobuf.GeneratedMessage implements
      // @@protoc_insertion_point(message_implements:CDOTAUserMsg_PlayerMMR)
      CDOTAUserMsg_PlayerMMROrBuilder {
    // Use CDOTAUserMsg_PlayerMMR.newBuilder() to construct.
    private CDOTAUserMsg_PlayerMMR(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private CDOTAUserMsg_PlayerMMR(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final CDOTAUserMsg_PlayerMMR defaultInstance;
    public static CDOTAUserMsg_PlayerMMR getDefaultInstance() {
      return defaultInstance;
    }

    public CDOTAUserMsg_PlayerMMR getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private CDOTAUserMsg_PlayerMMR(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 8: {
              if (!((mutable_bitField0_ & 0x00000001) == 0x00000001)) {
                mmr_ = new java.util.ArrayList<java.lang.Integer>();
                mutable_bitField0_ |= 0x00000001;
              }
              mmr_.add(input.readSInt32());
              break;
            }
            case 10: {
              int length = input.readRawVarint32();
              int limit = input.pushLimit(length);
              if (!((mutable_bitField0_ & 0x00000001) == 0x00000001) && input.getBytesUntilLimit() > 0) {
                mmr_ = new java.util.ArrayList<java.lang.Integer>();
                mutable_bitField0_ |= 0x00000001;
              }
              while (input.getBytesUntilLimit() > 0) {
                mmr_.add(input.readSInt32());
              }
              input.popLimit(limit);
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        if (((mutable_bitField0_ & 0x00000001) == 0x00000001)) {
          mmr_ = java.util.Collections.unmodifiableList(mmr_);
        }
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return skadistats.clarity.wire.common.proto.DotaUserMessages.internal_static_CDOTAUserMsg_PlayerMMR_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return skadistats.clarity.wire.common.proto.DotaUserMessages.internal_static_CDOTAUserMsg_PlayerMMR_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_PlayerMMR.class, skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_PlayerMMR.Builder.class);
    }

    public static com.google.protobuf.Parser<CDOTAUserMsg_PlayerMMR> PARSER =
        new com.google.protobuf.AbstractParser<CDOTAUserMsg_PlayerMMR>() {
      public CDOTAUserMsg_PlayerMMR parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new CDOTAUserMsg_PlayerMMR(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<CDOTAUserMsg_PlayerMMR> getParserForType() {
      return PARSER;
    }

    public static final int MMR_FIELD_NUMBER = 1;
    private java.util.List<java.lang.Integer> mmr_;
    /**
     * <code>repeated sint32 mmr = 1 [packed = true];</code>
     */
    public java.util.List<java.lang.Integer>
        getMmrList() {
      return mmr_;
    }
    /**
     * <code>repeated sint32 mmr = 1 [packed = true];</code>
     */
    public int getMmrCount() {
      return mmr_.size();
    }
    /**
     * <code>repeated sint32 mmr = 1 [packed = true];</code>
     */
    public int getMmr(int index) {
      return mmr_.get(index);
    }
    private int mmrMemoizedSerializedSize = -1;

    private void initFields() {
      mmr_ = java.util.Collections.emptyList();
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (getMmrList().size() > 0) {
        output.writeRawVarint32(10);
        output.writeRawVarint32(mmrMemoizedSerializedSize);
      }
      for (int i = 0; i < mmr_.size(); i++) {
        output.writeSInt32NoTag(mmr_.get(i));
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      {
        int dataSize = 0;
        for (int i = 0; i < mmr_.size(); i++) {
          dataSize += com.google.protobuf.CodedOutputStream
            .computeSInt32SizeNoTag(mmr_.get(i));
        }
        size += dataSize;
        if (!getMmrList().isEmpty()) {
          size += 1;
          size += com.google.protobuf.CodedOutputStream
              .computeInt32SizeNoTag(dataSize);
        }
        mmrMemoizedSerializedSize = dataSize;
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_PlayerMMR parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_PlayerMMR parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_PlayerMMR parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_PlayerMMR parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_PlayerMMR parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_PlayerMMR parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_PlayerMMR parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_PlayerMMR parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_PlayerMMR parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_PlayerMMR parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_PlayerMMR prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code CDOTAUserMsg_PlayerMMR}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:CDOTAUserMsg_PlayerMMR)
        skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_PlayerMMROrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return skadistats.clarity.wire.common.proto.DotaUserMessages.internal_static_CDOTAUserMsg_PlayerMMR_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return skadistats.clarity.wire.common.proto.DotaUserMessages.internal_static_CDOTAUserMsg_PlayerMMR_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_PlayerMMR.class, skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_PlayerMMR.Builder.class);
      }

      // Construct using skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_PlayerMMR.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        mmr_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000001);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return skadistats.clarity.wire.common.proto.DotaUserMessages.internal_static_CDOTAUserMsg_PlayerMMR_descriptor;
      }

      public skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_PlayerMMR getDefaultInstanceForType() {
        return skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_PlayerMMR.getDefaultInstance();
      }

      public skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_PlayerMMR build() {
        skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_PlayerMMR result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_PlayerMMR buildPartial() {
        skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_PlayerMMR result = new skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_PlayerMMR(this);
        int from_bitField0_ = bitField0_;
        if (((bitField0_ & 0x00000001) == 0x00000001)) {
          mmr_ = java.util.Collections.unmodifiableList(mmr_);
          bitField0_ = (bitField0_ & ~0x00000001);
        }
        result.mmr_ = mmr_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_PlayerMMR) {
          return mergeFrom((skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_PlayerMMR)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_PlayerMMR other) {
        if (other == skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_PlayerMMR.getDefaultInstance()) return this;
        if (!other.mmr_.isEmpty()) {
          if (mmr_.isEmpty()) {
            mmr_ = other.mmr_;
            bitField0_ = (bitField0_ & ~0x00000001);
          } else {
            ensureMmrIsMutable();
            mmr_.addAll(other.mmr_);
          }
          onChanged();
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_PlayerMMR parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_PlayerMMR) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private java.util.List<java.lang.Integer> mmr_ = java.util.Collections.emptyList();
      private void ensureMmrIsMutable() {
        if (!((bitField0_ & 0x00000001) == 0x00000001)) {
          mmr_ = new java.util.ArrayList<java.lang.Integer>(mmr_);
          bitField0_ |= 0x00000001;
         }
      }
      /**
       * <code>repeated sint32 mmr = 1 [packed = true];</code>
       */
      public java.util.List<java.lang.Integer>
          getMmrList() {
        return java.util.Collections.unmodifiableList(mmr_);
      }
      /**
       * <code>repeated sint32 mmr = 1 [packed = true];</code>
       */
      public int getMmrCount() {
        return mmr_.size();
      }
      /**
       * <code>repeated sint32 mmr = 1 [packed = true];</code>
       */
      public int getMmr(int index) {
        return mmr_.get(index);
      }
      /**
       * <code>repeated sint32 mmr = 1 [packed = true];</code>
       */
      public Builder setMmr(
          int index, int value) {
        ensureMmrIsMutable();
        mmr_.set(index, value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated sint32 mmr = 1 [packed = true];</code>
       */
      public Builder addMmr(int value) {
        ensureMmrIsMutable();
        mmr_.add(value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated sint32 mmr = 1 [packed = true];</code>
       */
      public Builder addAllMmr(
          java.lang.Iterable<? extends java.lang.Integer> values) {
        ensureMmrIsMutable();
        com.google.protobuf.AbstractMessageLite.Builder.addAll(
            values, mmr_);
        onChanged();
        return this;
      }
      /**
       * <code>repeated sint32 mmr = 1 [packed = true];</code>
       */
      public Builder clearMmr() {
        mmr_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000001);
        onChanged();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:CDOTAUserMsg_PlayerMMR)
    }

    static {
      defaultInstance = new CDOTAUserMsg_PlayerMMR(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:CDOTAUserMsg_PlayerMMR)
  }

  public interface CDOTAUserMsg_AbilityStealOrBuilder extends
      // @@protoc_insertion_point(interface_extends:CDOTAUserMsg_AbilitySteal)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>optional uint32 player_id = 1;</code>
     */
    boolean hasPlayerId();
    /**
     * <code>optional uint32 player_id = 1;</code>
     */
    int getPlayerId();

    /**
     * <code>optional uint32 ability_id = 2;</code>
     */
    boolean hasAbilityId();
    /**
     * <code>optional uint32 ability_id = 2;</code>
     */
    int getAbilityId();

    /**
     * <code>optional uint32 ability_level = 3;</code>
     */
    boolean hasAbilityLevel();
    /**
     * <code>optional uint32 ability_level = 3;</code>
     */
    int getAbilityLevel();
  }
  /**
   * Protobuf type {@code CDOTAUserMsg_AbilitySteal}
   */
  public static final class CDOTAUserMsg_AbilitySteal extends
      com.google.protobuf.GeneratedMessage implements
      // @@protoc_insertion_point(message_implements:CDOTAUserMsg_AbilitySteal)
      CDOTAUserMsg_AbilityStealOrBuilder {
    // Use CDOTAUserMsg_AbilitySteal.newBuilder() to construct.
    private CDOTAUserMsg_AbilitySteal(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private CDOTAUserMsg_AbilitySteal(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final CDOTAUserMsg_AbilitySteal defaultInstance;
    public static CDOTAUserMsg_AbilitySteal getDefaultInstance() {
      return defaultInstance;
    }

    public CDOTAUserMsg_AbilitySteal getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private CDOTAUserMsg_AbilitySteal(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 8: {
              bitField0_ |= 0x00000001;
              playerId_ = input.readUInt32();
              break;
            }
            case 16: {
              bitField0_ |= 0x00000002;
              abilityId_ = input.readUInt32();
              break;
            }
            case 24: {
              bitField0_ |= 0x00000004;
              abilityLevel_ = input.readUInt32();
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return skadistats.clarity.wire.common.proto.DotaUserMessages.internal_static_CDOTAUserMsg_AbilitySteal_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return skadistats.clarity.wire.common.proto.DotaUserMessages.internal_static_CDOTAUserMsg_AbilitySteal_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_AbilitySteal.class, skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_AbilitySteal.Builder.class);
    }

    public static com.google.protobuf.Parser<CDOTAUserMsg_AbilitySteal> PARSER =
        new com.google.protobuf.AbstractParser<CDOTAUserMsg_AbilitySteal>() {
      public CDOTAUserMsg_AbilitySteal parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new CDOTAUserMsg_AbilitySteal(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<CDOTAUserMsg_AbilitySteal> getParserForType() {
      return PARSER;
    }

    private int bitField0_;
    public static final int PLAYER_ID_FIELD_NUMBER = 1;
    private int playerId_;
    /**
     * <code>optional uint32 player_id = 1;</code>
     */
    public boolean hasPlayerId() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>optional uint32 player_id = 1;</code>
     */
    public int getPlayerId() {
      return playerId_;
    }

    public static final int ABILITY_ID_FIELD_NUMBER = 2;
    private int abilityId_;
    /**
     * <code>optional uint32 ability_id = 2;</code>
     */
    public boolean hasAbilityId() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>optional uint32 ability_id = 2;</code>
     */
    public int getAbilityId() {
      return abilityId_;
    }

    public static final int ABILITY_LEVEL_FIELD_NUMBER = 3;
    private int abilityLevel_;
    /**
     * <code>optional uint32 ability_level = 3;</code>
     */
    public boolean hasAbilityLevel() {
      return ((bitField0_ & 0x00000004) == 0x00000004);
    }
    /**
     * <code>optional uint32 ability_level = 3;</code>
     */
    public int getAbilityLevel() {
      return abilityLevel_;
    }

    private void initFields() {
      playerId_ = 0;
      abilityId_ = 0;
      abilityLevel_ = 0;
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeUInt32(1, playerId_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeUInt32(2, abilityId_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        output.writeUInt32(3, abilityLevel_);
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(1, playerId_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(2, abilityId_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(3, abilityLevel_);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_AbilitySteal parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_AbilitySteal parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_AbilitySteal parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_AbilitySteal parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_AbilitySteal parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_AbilitySteal parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_AbilitySteal parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_AbilitySteal parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_AbilitySteal parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_AbilitySteal parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_AbilitySteal prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code CDOTAUserMsg_AbilitySteal}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:CDOTAUserMsg_AbilitySteal)
        skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_AbilityStealOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return skadistats.clarity.wire.common.proto.DotaUserMessages.internal_static_CDOTAUserMsg_AbilitySteal_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return skadistats.clarity.wire.common.proto.DotaUserMessages.internal_static_CDOTAUserMsg_AbilitySteal_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_AbilitySteal.class, skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_AbilitySteal.Builder.class);
      }

      // Construct using skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_AbilitySteal.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        playerId_ = 0;
        bitField0_ = (bitField0_ & ~0x00000001);
        abilityId_ = 0;
        bitField0_ = (bitField0_ & ~0x00000002);
        abilityLevel_ = 0;
        bitField0_ = (bitField0_ & ~0x00000004);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return skadistats.clarity.wire.common.proto.DotaUserMessages.internal_static_CDOTAUserMsg_AbilitySteal_descriptor;
      }

      public skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_AbilitySteal getDefaultInstanceForType() {
        return skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_AbilitySteal.getDefaultInstance();
      }

      public skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_AbilitySteal build() {
        skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_AbilitySteal result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_AbilitySteal buildPartial() {
        skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_AbilitySteal result = new skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_AbilitySteal(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.playerId_ = playerId_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.abilityId_ = abilityId_;
        if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
          to_bitField0_ |= 0x00000004;
        }
        result.abilityLevel_ = abilityLevel_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_AbilitySteal) {
          return mergeFrom((skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_AbilitySteal)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_AbilitySteal other) {
        if (other == skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_AbilitySteal.getDefaultInstance()) return this;
        if (other.hasPlayerId()) {
          setPlayerId(other.getPlayerId());
        }
        if (other.hasAbilityId()) {
          setAbilityId(other.getAbilityId());
        }
        if (other.hasAbilityLevel()) {
          setAbilityLevel(other.getAbilityLevel());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_AbilitySteal parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_AbilitySteal) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private int playerId_ ;
      /**
       * <code>optional uint32 player_id = 1;</code>
       */
      public boolean hasPlayerId() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>optional uint32 player_id = 1;</code>
       */
      public int getPlayerId() {
        return playerId_;
      }
      /**
       * <code>optional uint32 player_id = 1;</code>
       */
      public Builder setPlayerId(int value) {
        bitField0_ |= 0x00000001;
        playerId_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional uint32 player_id = 1;</code>
       */
      public Builder clearPlayerId() {
        bitField0_ = (bitField0_ & ~0x00000001);
        playerId_ = 0;
        onChanged();
        return this;
      }

      private int abilityId_ ;
      /**
       * <code>optional uint32 ability_id = 2;</code>
       */
      public boolean hasAbilityId() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>optional uint32 ability_id = 2;</code>
       */
      public int getAbilityId() {
        return abilityId_;
      }
      /**
       * <code>optional uint32 ability_id = 2;</code>
       */
      public Builder setAbilityId(int value) {
        bitField0_ |= 0x00000002;
        abilityId_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional uint32 ability_id = 2;</code>
       */
      public Builder clearAbilityId() {
        bitField0_ = (bitField0_ & ~0x00000002);
        abilityId_ = 0;
        onChanged();
        return this;
      }

      private int abilityLevel_ ;
      /**
       * <code>optional uint32 ability_level = 3;</code>
       */
      public boolean hasAbilityLevel() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }
      /**
       * <code>optional uint32 ability_level = 3;</code>
       */
      public int getAbilityLevel() {
        return abilityLevel_;
      }
      /**
       * <code>optional uint32 ability_level = 3;</code>
       */
      public Builder setAbilityLevel(int value) {
        bitField0_ |= 0x00000004;
        abilityLevel_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional uint32 ability_level = 3;</code>
       */
      public Builder clearAbilityLevel() {
        bitField0_ = (bitField0_ & ~0x00000004);
        abilityLevel_ = 0;
        onChanged();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:CDOTAUserMsg_AbilitySteal)
    }

    static {
      defaultInstance = new CDOTAUserMsg_AbilitySteal(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:CDOTAUserMsg_AbilitySteal)
  }

  public interface CDOTAUserMsg_StatsHeroLookupOrBuilder extends
      // @@protoc_insertion_point(interface_extends:CDOTAUserMsg_StatsHeroLookup)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>optional int32 player_id = 1;</code>
     */
    boolean hasPlayerId();
    /**
     * <code>optional int32 player_id = 1;</code>
     */
    int getPlayerId();

    /**
     * <code>optional int32 hero_id = 2;</code>
     */
    boolean hasHeroId();
    /**
     * <code>optional int32 hero_id = 2;</code>
     */
    int getHeroId();

    /**
     * <code>optional string hero_name = 3;</code>
     */
    boolean hasHeroName();
    /**
     * <code>optional string hero_name = 3;</code>
     */
    java.lang.String getHeroName();
    /**
     * <code>optional string hero_name = 3;</code>
     */
    com.google.protobuf.ByteString
        getHeroNameBytes();

    /**
     * <code>optional string persona = 4;</code>
     */
    boolean hasPersona();
    /**
     * <code>optional string persona = 4;</code>
     */
    java.lang.String getPersona();
    /**
     * <code>optional string persona = 4;</code>
     */
    com.google.protobuf.ByteString
        getPersonaBytes();
  }
  /**
   * Protobuf type {@code CDOTAUserMsg_StatsHeroLookup}
   */
  public static final class CDOTAUserMsg_StatsHeroLookup extends
      com.google.protobuf.GeneratedMessage implements
      // @@protoc_insertion_point(message_implements:CDOTAUserMsg_StatsHeroLookup)
      CDOTAUserMsg_StatsHeroLookupOrBuilder {
    // Use CDOTAUserMsg_StatsHeroLookup.newBuilder() to construct.
    private CDOTAUserMsg_StatsHeroLookup(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private CDOTAUserMsg_StatsHeroLookup(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final CDOTAUserMsg_StatsHeroLookup defaultInstance;
    public static CDOTAUserMsg_StatsHeroLookup getDefaultInstance() {
      return defaultInstance;
    }

    public CDOTAUserMsg_StatsHeroLookup getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private CDOTAUserMsg_StatsHeroLookup(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 8: {
              bitField0_ |= 0x00000001;
              playerId_ = input.readInt32();
              break;
            }
            case 16: {
              bitField0_ |= 0x00000002;
              heroId_ = input.readInt32();
              break;
            }
            case 26: {
              com.google.protobuf.ByteString bs = input.readBytes();
              bitField0_ |= 0x00000004;
              heroName_ = bs;
              break;
            }
            case 34: {
              com.google.protobuf.ByteString bs = input.readBytes();
              bitField0_ |= 0x00000008;
              persona_ = bs;
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return skadistats.clarity.wire.common.proto.DotaUserMessages.internal_static_CDOTAUserMsg_StatsHeroLookup_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return skadistats.clarity.wire.common.proto.DotaUserMessages.internal_static_CDOTAUserMsg_StatsHeroLookup_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_StatsHeroLookup.class, skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_StatsHeroLookup.Builder.class);
    }

    public static com.google.protobuf.Parser<CDOTAUserMsg_StatsHeroLookup> PARSER =
        new com.google.protobuf.AbstractParser<CDOTAUserMsg_StatsHeroLookup>() {
      public CDOTAUserMsg_StatsHeroLookup parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new CDOTAUserMsg_StatsHeroLookup(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<CDOTAUserMsg_StatsHeroLookup> getParserForType() {
      return PARSER;
    }

    private int bitField0_;
    public static final int PLAYER_ID_FIELD_NUMBER = 1;
    private int playerId_;
    /**
     * <code>optional int32 player_id = 1;</code>
     */
    public boolean hasPlayerId() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>optional int32 player_id = 1;</code>
     */
    public int getPlayerId() {
      return playerId_;
    }

    public static final int HERO_ID_FIELD_NUMBER = 2;
    private int heroId_;
    /**
     * <code>optional int32 hero_id = 2;</code>
     */
    public boolean hasHeroId() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>optional int32 hero_id = 2;</code>
     */
    public int getHeroId() {
      return heroId_;
    }

    public static final int HERO_NAME_FIELD_NUMBER = 3;
    private java.lang.Object heroName_;
    /**
     * <code>optional string hero_name = 3;</code>
     */
    public boolean hasHeroName() {
      return ((bitField0_ & 0x00000004) == 0x00000004);
    }
    /**
     * <code>optional string hero_name = 3;</code>
     */
    public java.lang.String getHeroName() {
      java.lang.Object ref = heroName_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          heroName_ = s;
        }
        return s;
      }
    }
    /**
     * <code>optional string hero_name = 3;</code>
     */
    public com.google.protobuf.ByteString
        getHeroNameBytes() {
      java.lang.Object ref = heroName_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        heroName_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int PERSONA_FIELD_NUMBER = 4;
    private java.lang.Object persona_;
    /**
     * <code>optional string persona = 4;</code>
     */
    public boolean hasPersona() {
      return ((bitField0_ & 0x00000008) == 0x00000008);
    }
    /**
     * <code>optional string persona = 4;</code>
     */
    public java.lang.String getPersona() {
      java.lang.Object ref = persona_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          persona_ = s;
        }
        return s;
      }
    }
    /**
     * <code>optional string persona = 4;</code>
     */
    public com.google.protobuf.ByteString
        getPersonaBytes() {
      java.lang.Object ref = persona_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        persona_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    private void initFields() {
      playerId_ = 0;
      heroId_ = 0;
      heroName_ = "";
      persona_ = "";
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeInt32(1, playerId_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeInt32(2, heroId_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        output.writeBytes(3, getHeroNameBytes());
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        output.writeBytes(4, getPersonaBytes());
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(1, playerId_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(2, heroId_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(3, getHeroNameBytes());
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(4, getPersonaBytes());
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_StatsHeroLookup parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_StatsHeroLookup parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_StatsHeroLookup parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_StatsHeroLookup parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_StatsHeroLookup parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_StatsHeroLookup parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_StatsHeroLookup parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_StatsHeroLookup parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_StatsHeroLookup parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_StatsHeroLookup parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_StatsHeroLookup prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code CDOTAUserMsg_StatsHeroLookup}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:CDOTAUserMsg_StatsHeroLookup)
        skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_StatsHeroLookupOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return skadistats.clarity.wire.common.proto.DotaUserMessages.internal_static_CDOTAUserMsg_StatsHeroLookup_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return skadistats.clarity.wire.common.proto.DotaUserMessages.internal_static_CDOTAUserMsg_StatsHeroLookup_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_StatsHeroLookup.class, skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_StatsHeroLookup.Builder.class);
      }

      // Construct using skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_StatsHeroLookup.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        playerId_ = 0;
        bitField0_ = (bitField0_ & ~0x00000001);
        heroId_ = 0;
        bitField0_ = (bitField0_ & ~0x00000002);
        heroName_ = "";
        bitField0_ = (bitField0_ & ~0x00000004);
        persona_ = "";
        bitField0_ = (bitField0_ & ~0x00000008);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return skadistats.clarity.wire.common.proto.DotaUserMessages.internal_static_CDOTAUserMsg_StatsHeroLookup_descriptor;
      }

      public skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_StatsHeroLookup getDefaultInstanceForType() {
        return skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_StatsHeroLookup.getDefaultInstance();
      }

      public skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_StatsHeroLookup build() {
        skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_StatsHeroLookup result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_StatsHeroLookup buildPartial() {
        skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_StatsHeroLookup result = new skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_StatsHeroLookup(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.playerId_ = playerId_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.heroId_ = heroId_;
        if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
          to_bitField0_ |= 0x00000004;
        }
        result.heroName_ = heroName_;
        if (((from_bitField0_ & 0x00000008) == 0x00000008)) {
          to_bitField0_ |= 0x00000008;
        }
        result.persona_ = persona_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_StatsHeroLookup) {
          return mergeFrom((skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_StatsHeroLookup)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_StatsHeroLookup other) {
        if (other == skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_StatsHeroLookup.getDefaultInstance()) return this;
        if (other.hasPlayerId()) {
          setPlayerId(other.getPlayerId());
        }
        if (other.hasHeroId()) {
          setHeroId(other.getHeroId());
        }
        if (other.hasHeroName()) {
          bitField0_ |= 0x00000004;
          heroName_ = other.heroName_;
          onChanged();
        }
        if (other.hasPersona()) {
          bitField0_ |= 0x00000008;
          persona_ = other.persona_;
          onChanged();
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_StatsHeroLookup parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_StatsHeroLookup) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private int playerId_ ;
      /**
       * <code>optional int32 player_id = 1;</code>
       */
      public boolean hasPlayerId() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>optional int32 player_id = 1;</code>
       */
      public int getPlayerId() {
        return playerId_;
      }
      /**
       * <code>optional int32 player_id = 1;</code>
       */
      public Builder setPlayerId(int value) {
        bitField0_ |= 0x00000001;
        playerId_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 player_id = 1;</code>
       */
      public Builder clearPlayerId() {
        bitField0_ = (bitField0_ & ~0x00000001);
        playerId_ = 0;
        onChanged();
        return this;
      }

      private int heroId_ ;
      /**
       * <code>optional int32 hero_id = 2;</code>
       */
      public boolean hasHeroId() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>optional int32 hero_id = 2;</code>
       */
      public int getHeroId() {
        return heroId_;
      }
      /**
       * <code>optional int32 hero_id = 2;</code>
       */
      public Builder setHeroId(int value) {
        bitField0_ |= 0x00000002;
        heroId_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 hero_id = 2;</code>
       */
      public Builder clearHeroId() {
        bitField0_ = (bitField0_ & ~0x00000002);
        heroId_ = 0;
        onChanged();
        return this;
      }

      private java.lang.Object heroName_ = "";
      /**
       * <code>optional string hero_name = 3;</code>
       */
      public boolean hasHeroName() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }
      /**
       * <code>optional string hero_name = 3;</code>
       */
      public java.lang.String getHeroName() {
        java.lang.Object ref = heroName_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          if (bs.isValidUtf8()) {
            heroName_ = s;
          }
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>optional string hero_name = 3;</code>
       */
      public com.google.protobuf.ByteString
          getHeroNameBytes() {
        java.lang.Object ref = heroName_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          heroName_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>optional string hero_name = 3;</code>
       */
      public Builder setHeroName(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000004;
        heroName_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional string hero_name = 3;</code>
       */
      public Builder clearHeroName() {
        bitField0_ = (bitField0_ & ~0x00000004);
        heroName_ = getDefaultInstance().getHeroName();
        onChanged();
        return this;
      }
      /**
       * <code>optional string hero_name = 3;</code>
       */
      public Builder setHeroNameBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000004;
        heroName_ = value;
        onChanged();
        return this;
      }

      private java.lang.Object persona_ = "";
      /**
       * <code>optional string persona = 4;</code>
       */
      public boolean hasPersona() {
        return ((bitField0_ & 0x00000008) == 0x00000008);
      }
      /**
       * <code>optional string persona = 4;</code>
       */
      public java.lang.String getPersona() {
        java.lang.Object ref = persona_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          if (bs.isValidUtf8()) {
            persona_ = s;
          }
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>optional string persona = 4;</code>
       */
      public com.google.protobuf.ByteString
          getPersonaBytes() {
        java.lang.Object ref = persona_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          persona_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>optional string persona = 4;</code>
       */
      public Builder setPersona(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000008;
        persona_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional string persona = 4;</code>
       */
      public Builder clearPersona() {
        bitField0_ = (bitField0_ & ~0x00000008);
        persona_ = getDefaultInstance().getPersona();
        onChanged();
        return this;
      }
      /**
       * <code>optional string persona = 4;</code>
       */
      public Builder setPersonaBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000008;
        persona_ = value;
        onChanged();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:CDOTAUserMsg_StatsHeroLookup)
    }

    static {
      defaultInstance = new CDOTAUserMsg_StatsHeroLookup(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:CDOTAUserMsg_StatsHeroLookup)
  }

  public interface CDOTAUserMsg_StatsHeroPositionInfoOrBuilder extends
      // @@protoc_insertion_point(interface_extends:CDOTAUserMsg_StatsHeroPositionInfo)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>optional float average_position = 1;</code>
     */
    boolean hasAveragePosition();
    /**
     * <code>optional float average_position = 1;</code>
     */
    float getAveragePosition();

    /**
     * <code>repeated .CDOTAUserMsg_StatsHeroPositionInfo.PositionPair position_details = 2;</code>
     */
    java.util.List<skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_StatsHeroPositionInfo.PositionPair> 
        getPositionDetailsList();
    /**
     * <code>repeated .CDOTAUserMsg_StatsHeroPositionInfo.PositionPair position_details = 2;</code>
     */
    skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_StatsHeroPositionInfo.PositionPair getPositionDetails(int index);
    /**
     * <code>repeated .CDOTAUserMsg_StatsHeroPositionInfo.PositionPair position_details = 2;</code>
     */
    int getPositionDetailsCount();
    /**
     * <code>repeated .CDOTAUserMsg_StatsHeroPositionInfo.PositionPair position_details = 2;</code>
     */
    java.util.List<? extends skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_StatsHeroPositionInfo.PositionPairOrBuilder> 
        getPositionDetailsOrBuilderList();
    /**
     * <code>repeated .CDOTAUserMsg_StatsHeroPositionInfo.PositionPair position_details = 2;</code>
     */
    skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_StatsHeroPositionInfo.PositionPairOrBuilder getPositionDetailsOrBuilder(
        int index);
  }
  /**
   * Protobuf type {@code CDOTAUserMsg_StatsHeroPositionInfo}
   */
  public static final class CDOTAUserMsg_StatsHeroPositionInfo extends
      com.google.protobuf.GeneratedMessage implements
      // @@protoc_insertion_point(message_implements:CDOTAUserMsg_StatsHeroPositionInfo)
      CDOTAUserMsg_StatsHeroPositionInfoOrBuilder {
    // Use CDOTAUserMsg_StatsHeroPositionInfo.newBuilder() to construct.
    private CDOTAUserMsg_StatsHeroPositionInfo(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private CDOTAUserMsg_StatsHeroPositionInfo(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final CDOTAUserMsg_StatsHeroPositionInfo defaultInstance;
    public static CDOTAUserMsg_StatsHeroPositionInfo getDefaultInstance() {
      return defaultInstance;
    }

    public CDOTAUserMsg_StatsHeroPositionInfo getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private CDOTAUserMsg_StatsHeroPositionInfo(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 13: {
              bitField0_ |= 0x00000001;
              averagePosition_ = input.readFloat();
              break;
            }
            case 18: {
              if (!((mutable_bitField0_ & 0x00000002) == 0x00000002)) {
                positionDetails_ = new java.util.ArrayList<skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_StatsHeroPositionInfo.PositionPair>();
                mutable_bitField0_ |= 0x00000002;
              }
              positionDetails_.add(input.readMessage(skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_StatsHeroPositionInfo.PositionPair.PARSER, extensionRegistry));
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        if (((mutable_bitField0_ & 0x00000002) == 0x00000002)) {
          positionDetails_ = java.util.Collections.unmodifiableList(positionDetails_);
        }
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return skadistats.clarity.wire.common.proto.DotaUserMessages.internal_static_CDOTAUserMsg_StatsHeroPositionInfo_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return skadistats.clarity.wire.common.proto.DotaUserMessages.internal_static_CDOTAUserMsg_StatsHeroPositionInfo_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_StatsHeroPositionInfo.class, skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_StatsHeroPositionInfo.Builder.class);
    }

    public static com.google.protobuf.Parser<CDOTAUserMsg_StatsHeroPositionInfo> PARSER =
        new com.google.protobuf.AbstractParser<CDOTAUserMsg_StatsHeroPositionInfo>() {
      public CDOTAUserMsg_StatsHeroPositionInfo parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new CDOTAUserMsg_StatsHeroPositionInfo(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<CDOTAUserMsg_StatsHeroPositionInfo> getParserForType() {
      return PARSER;
    }

    public interface PositionPairOrBuilder extends
        // @@protoc_insertion_point(interface_extends:CDOTAUserMsg_StatsHeroPositionInfo.PositionPair)
        com.google.protobuf.MessageOrBuilder {

      /**
       * <code>optional .DOTA_POSITION_CATEGORY position_category = 1 [default = DOTA_POSITION_NONE];</code>
       */
      boolean hasPositionCategory();
      /**
       * <code>optional .DOTA_POSITION_CATEGORY position_category = 1 [default = DOTA_POSITION_NONE];</code>
       */
      skadistats.clarity.wire.common.proto.DotaUserMessages.DOTA_POSITION_CATEGORY getPositionCategory();

      /**
       * <code>optional uint32 position_count = 2;</code>
       */
      boolean hasPositionCount();
      /**
       * <code>optional uint32 position_count = 2;</code>
       */
      int getPositionCount();
    }
    /**
     * Protobuf type {@code CDOTAUserMsg_StatsHeroPositionInfo.PositionPair}
     */
    public static final class PositionPair extends
        com.google.protobuf.GeneratedMessage implements
        // @@protoc_insertion_point(message_implements:CDOTAUserMsg_StatsHeroPositionInfo.PositionPair)
        PositionPairOrBuilder {
      // Use PositionPair.newBuilder() to construct.
      private PositionPair(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
        super(builder);
        this.unknownFields = builder.getUnknownFields();
      }
      private PositionPair(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

      private static final PositionPair defaultInstance;
      public static PositionPair getDefaultInstance() {
        return defaultInstance;
      }

      public PositionPair getDefaultInstanceForType() {
        return defaultInstance;
      }

      private final com.google.protobuf.UnknownFieldSet unknownFields;
      @java.lang.Override
      public final com.google.protobuf.UnknownFieldSet
          getUnknownFields() {
        return this.unknownFields;
      }
      private PositionPair(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        initFields();
        int mutable_bitField0_ = 0;
        com.google.protobuf.UnknownFieldSet.Builder unknownFields =
            com.google.protobuf.UnknownFieldSet.newBuilder();
        try {
          boolean done = false;
          while (!done) {
            int tag = input.readTag();
            switch (tag) {
              case 0:
                done = true;
                break;
              default: {
                if (!parseUnknownField(input, unknownFields,
                                       extensionRegistry, tag)) {
                  done = true;
                }
                break;
              }
              case 8: {
                int rawValue = input.readEnum();
                skadistats.clarity.wire.common.proto.DotaUserMessages.DOTA_POSITION_CATEGORY value = skadistats.clarity.wire.common.proto.DotaUserMessages.DOTA_POSITION_CATEGORY.valueOf(rawValue);
                if (value == null) {
                  unknownFields.mergeVarintField(1, rawValue);
                } else {
                  bitField0_ |= 0x00000001;
                  positionCategory_ = value;
                }
                break;
              }
              case 16: {
                bitField0_ |= 0x00000002;
                positionCount_ = input.readUInt32();
                break;
              }
            }
          }
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.setUnfinishedMessage(this);
        } catch (java.io.IOException e) {
          throw new com.google.protobuf.InvalidProtocolBufferException(
              e.getMessage()).setUnfinishedMessage(this);
        } finally {
          this.unknownFields = unknownFields.build();
          makeExtensionsImmutable();
        }
      }
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return skadistats.clarity.wire.common.proto.DotaUserMessages.internal_static_CDOTAUserMsg_StatsHeroPositionInfo_PositionPair_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return skadistats.clarity.wire.common.proto.DotaUserMessages.internal_static_CDOTAUserMsg_StatsHeroPositionInfo_PositionPair_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_StatsHeroPositionInfo.PositionPair.class, skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_StatsHeroPositionInfo.PositionPair.Builder.class);
      }

      public static com.google.protobuf.Parser<PositionPair> PARSER =
          new com.google.protobuf.AbstractParser<PositionPair>() {
        public PositionPair parsePartialFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws com.google.protobuf.InvalidProtocolBufferException {
          return new PositionPair(input, extensionRegistry);
        }
      };

      @java.lang.Override
      public com.google.protobuf.Parser<PositionPair> getParserForType() {
        return PARSER;
      }

      private int bitField0_;
      public static final int POSITION_CATEGORY_FIELD_NUMBER = 1;
      private skadistats.clarity.wire.common.proto.DotaUserMessages.DOTA_POSITION_CATEGORY positionCategory_;
      /**
       * <code>optional .DOTA_POSITION_CATEGORY position_category = 1 [default = DOTA_POSITION_NONE];</code>
       */
      public boolean hasPositionCategory() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>optional .DOTA_POSITION_CATEGORY position_category = 1 [default = DOTA_POSITION_NONE];</code>
       */
      public skadistats.clarity.wire.common.proto.DotaUserMessages.DOTA_POSITION_CATEGORY getPositionCategory() {
        return positionCategory_;
      }

      public static final int POSITION_COUNT_FIELD_NUMBER = 2;
      private int positionCount_;
      /**
       * <code>optional uint32 position_count = 2;</code>
       */
      public boolean hasPositionCount() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>optional uint32 position_count = 2;</code>
       */
      public int getPositionCount() {
        return positionCount_;
      }

      private void initFields() {
        positionCategory_ = skadistats.clarity.wire.common.proto.DotaUserMessages.DOTA_POSITION_CATEGORY.DOTA_POSITION_NONE;
        positionCount_ = 0;
      }
      private byte memoizedIsInitialized = -1;
      public final boolean isInitialized() {
        byte isInitialized = memoizedIsInitialized;
        if (isInitialized == 1) return true;
        if (isInitialized == 0) return false;

        memoizedIsInitialized = 1;
        return true;
      }

      public void writeTo(com.google.protobuf.CodedOutputStream output)
                          throws java.io.IOException {
        getSerializedSize();
        if (((bitField0_ & 0x00000001) == 0x00000001)) {
          output.writeEnum(1, positionCategory_.getNumber());
        }
        if (((bitField0_ & 0x00000002) == 0x00000002)) {
          output.writeUInt32(2, positionCount_);
        }
        getUnknownFields().writeTo(output);
      }

      private int memoizedSerializedSize = -1;
      public int getSerializedSize() {
        int size = memoizedSerializedSize;
        if (size != -1) return size;

        size = 0;
        if (((bitField0_ & 0x00000001) == 0x00000001)) {
          size += com.google.protobuf.CodedOutputStream
            .computeEnumSize(1, positionCategory_.getNumber());
        }
        if (((bitField0_ & 0x00000002) == 0x00000002)) {
          size += com.google.protobuf.CodedOutputStream
            .computeUInt32Size(2, positionCount_);
        }
        size += getUnknownFields().getSerializedSize();
        memoizedSerializedSize = size;
        return size;
      }

      private static final long serialVersionUID = 0L;
      @java.lang.Override
      protected java.lang.Object writeReplace()
          throws java.io.ObjectStreamException {
        return super.writeReplace();
      }

      public static skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_StatsHeroPositionInfo.PositionPair parseFrom(
          com.google.protobuf.ByteString data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_StatsHeroPositionInfo.PositionPair parseFrom(
          com.google.protobuf.ByteString data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_StatsHeroPositionInfo.PositionPair parseFrom(byte[] data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_StatsHeroPositionInfo.PositionPair parseFrom(
          byte[] data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_StatsHeroPositionInfo.PositionPair parseFrom(java.io.InputStream input)
          throws java.io.IOException {
        return PARSER.parseFrom(input);
      }
      public static skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_StatsHeroPositionInfo.PositionPair parseFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return PARSER.parseFrom(input, extensionRegistry);
      }
      public static skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_StatsHeroPositionInfo.PositionPair parseDelimitedFrom(java.io.InputStream input)
          throws java.io.IOException {
        return PARSER.parseDelimitedFrom(input);
      }
      public static skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_StatsHeroPositionInfo.PositionPair parseDelimitedFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return PARSER.parseDelimitedFrom(input, extensionRegistry);
      }
      public static skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_StatsHeroPositionInfo.PositionPair parseFrom(
          com.google.protobuf.CodedInputStream input)
          throws java.io.IOException {
        return PARSER.parseFrom(input);
      }
      public static skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_StatsHeroPositionInfo.PositionPair parseFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return PARSER.parseFrom(input, extensionRegistry);
      }

      public static Builder newBuilder() { return Builder.create(); }
      public Builder newBuilderForType() { return newBuilder(); }
      public static Builder newBuilder(skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_StatsHeroPositionInfo.PositionPair prototype) {
        return newBuilder().mergeFrom(prototype);
      }
      public Builder toBuilder() { return newBuilder(this); }

      @java.lang.Override
      protected Builder newBuilderForType(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        Builder builder = new Builder(parent);
        return builder;
      }
      /**
       * Protobuf type {@code CDOTAUserMsg_StatsHeroPositionInfo.PositionPair}
       */
      public static final class Builder extends
          com.google.protobuf.GeneratedMessage.Builder<Builder> implements
          // @@protoc_insertion_point(builder_implements:CDOTAUserMsg_StatsHeroPositionInfo.PositionPair)
          skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_StatsHeroPositionInfo.PositionPairOrBuilder {
        public static final com.google.protobuf.Descriptors.Descriptor
            getDescriptor() {
          return skadistats.clarity.wire.common.proto.DotaUserMessages.internal_static_CDOTAUserMsg_StatsHeroPositionInfo_PositionPair_descriptor;
        }

        protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
            internalGetFieldAccessorTable() {
          return skadistats.clarity.wire.common.proto.DotaUserMessages.internal_static_CDOTAUserMsg_StatsHeroPositionInfo_PositionPair_fieldAccessorTable
              .ensureFieldAccessorsInitialized(
                  skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_StatsHeroPositionInfo.PositionPair.class, skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_StatsHeroPositionInfo.PositionPair.Builder.class);
        }

        // Construct using skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_StatsHeroPositionInfo.PositionPair.newBuilder()
        private Builder() {
          maybeForceBuilderInitialization();
        }

        private Builder(
            com.google.protobuf.GeneratedMessage.BuilderParent parent) {
          super(parent);
          maybeForceBuilderInitialization();
        }
        private void maybeForceBuilderInitialization() {
          if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
          }
        }
        private static Builder create() {
          return new Builder();
        }

        public Builder clear() {
          super.clear();
          positionCategory_ = skadistats.clarity.wire.common.proto.DotaUserMessages.DOTA_POSITION_CATEGORY.DOTA_POSITION_NONE;
          bitField0_ = (bitField0_ & ~0x00000001);
          positionCount_ = 0;
          bitField0_ = (bitField0_ & ~0x00000002);
          return this;
        }

        public Builder clone() {
          return create().mergeFrom(buildPartial());
        }

        public com.google.protobuf.Descriptors.Descriptor
            getDescriptorForType() {
          return skadistats.clarity.wire.common.proto.DotaUserMessages.internal_static_CDOTAUserMsg_StatsHeroPositionInfo_PositionPair_descriptor;
        }

        public skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_StatsHeroPositionInfo.PositionPair getDefaultInstanceForType() {
          return skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_StatsHeroPositionInfo.PositionPair.getDefaultInstance();
        }

        public skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_StatsHeroPositionInfo.PositionPair build() {
          skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_StatsHeroPositionInfo.PositionPair result = buildPartial();
          if (!result.isInitialized()) {
            throw newUninitializedMessageException(result);
          }
          return result;
        }

        public skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_StatsHeroPositionInfo.PositionPair buildPartial() {
          skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_StatsHeroPositionInfo.PositionPair result = new skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_StatsHeroPositionInfo.PositionPair(this);
          int from_bitField0_ = bitField0_;
          int to_bitField0_ = 0;
          if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
            to_bitField0_ |= 0x00000001;
          }
          result.positionCategory_ = positionCategory_;
          if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
            to_bitField0_ |= 0x00000002;
          }
          result.positionCount_ = positionCount_;
          result.bitField0_ = to_bitField0_;
          onBuilt();
          return result;
        }

        public Builder mergeFrom(com.google.protobuf.Message other) {
          if (other instanceof skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_StatsHeroPositionInfo.PositionPair) {
            return mergeFrom((skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_StatsHeroPositionInfo.PositionPair)other);
          } else {
            super.mergeFrom(other);
            return this;
          }
        }

        public Builder mergeFrom(skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_StatsHeroPositionInfo.PositionPair other) {
          if (other == skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_StatsHeroPositionInfo.PositionPair.getDefaultInstance()) return this;
          if (other.hasPositionCategory()) {
            setPositionCategory(other.getPositionCategory());
          }
          if (other.hasPositionCount()) {
            setPositionCount(other.getPositionCount());
          }
          this.mergeUnknownFields(other.getUnknownFields());
          return this;
        }

        public final boolean isInitialized() {
          return true;
        }

        public Builder mergeFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws java.io.IOException {
          skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_StatsHeroPositionInfo.PositionPair parsedMessage = null;
          try {
            parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
          } catch (com.google.protobuf.InvalidProtocolBufferException e) {
            parsedMessage = (skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_StatsHeroPositionInfo.PositionPair) e.getUnfinishedMessage();
            throw e;
          } finally {
            if (parsedMessage != null) {
              mergeFrom(parsedMessage);
            }
          }
          return this;
        }
        private int bitField0_;

        private skadistats.clarity.wire.common.proto.DotaUserMessages.DOTA_POSITION_CATEGORY positionCategory_ = skadistats.clarity.wire.common.proto.DotaUserMessages.DOTA_POSITION_CATEGORY.DOTA_POSITION_NONE;
        /**
         * <code>optional .DOTA_POSITION_CATEGORY position_category = 1 [default = DOTA_POSITION_NONE];</code>
         */
        public boolean hasPositionCategory() {
          return ((bitField0_ & 0x00000001) == 0x00000001);
        }
        /**
         * <code>optional .DOTA_POSITION_CATEGORY position_category = 1 [default = DOTA_POSITION_NONE];</code>
         */
        public skadistats.clarity.wire.common.proto.DotaUserMessages.DOTA_POSITION_CATEGORY getPositionCategory() {
          return positionCategory_;
        }
        /**
         * <code>optional .DOTA_POSITION_CATEGORY position_category = 1 [default = DOTA_POSITION_NONE];</code>
         */
        public Builder setPositionCategory(skadistats.clarity.wire.common.proto.DotaUserMessages.DOTA_POSITION_CATEGORY value) {
          if (value == null) {
            throw new NullPointerException();
          }
          bitField0_ |= 0x00000001;
          positionCategory_ = value;
          onChanged();
          return this;
        }
        /**
         * <code>optional .DOTA_POSITION_CATEGORY position_category = 1 [default = DOTA_POSITION_NONE];</code>
         */
        public Builder clearPositionCategory() {
          bitField0_ = (bitField0_ & ~0x00000001);
          positionCategory_ = skadistats.clarity.wire.common.proto.DotaUserMessages.DOTA_POSITION_CATEGORY.DOTA_POSITION_NONE;
          onChanged();
          return this;
        }

        private int positionCount_ ;
        /**
         * <code>optional uint32 position_count = 2;</code>
         */
        public boolean hasPositionCount() {
          return ((bitField0_ & 0x00000002) == 0x00000002);
        }
        /**
         * <code>optional uint32 position_count = 2;</code>
         */
        public int getPositionCount() {
          return positionCount_;
        }
        /**
         * <code>optional uint32 position_count = 2;</code>
         */
        public Builder setPositionCount(int value) {
          bitField0_ |= 0x00000002;
          positionCount_ = value;
          onChanged();
          return this;
        }
        /**
         * <code>optional uint32 position_count = 2;</code>
         */
        public Builder clearPositionCount() {
          bitField0_ = (bitField0_ & ~0x00000002);
          positionCount_ = 0;
          onChanged();
          return this;
        }

        // @@protoc_insertion_point(builder_scope:CDOTAUserMsg_StatsHeroPositionInfo.PositionPair)
      }

      static {
        defaultInstance = new PositionPair(true);
        defaultInstance.initFields();
      }

      // @@protoc_insertion_point(class_scope:CDOTAUserMsg_StatsHeroPositionInfo.PositionPair)
    }

    private int bitField0_;
    public static final int AVERAGE_POSITION_FIELD_NUMBER = 1;
    private float averagePosition_;
    /**
     * <code>optional float average_position = 1;</code>
     */
    public boolean hasAveragePosition() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>optional float average_position = 1;</code>
     */
    public float getAveragePosition() {
      return averagePosition_;
    }

    public static final int POSITION_DETAILS_FIELD_NUMBER = 2;
    private java.util.List<skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_StatsHeroPositionInfo.PositionPair> positionDetails_;
    /**
     * <code>repeated .CDOTAUserMsg_StatsHeroPositionInfo.PositionPair position_details = 2;</code>
     */
    public java.util.List<skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_StatsHeroPositionInfo.PositionPair> getPositionDetailsList() {
      return positionDetails_;
    }
    /**
     * <code>repeated .CDOTAUserMsg_StatsHeroPositionInfo.PositionPair position_details = 2;</code>
     */
    public java.util.List<? extends skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_StatsHeroPositionInfo.PositionPairOrBuilder> 
        getPositionDetailsOrBuilderList() {
      return positionDetails_;
    }
    /**
     * <code>repeated .CDOTAUserMsg_StatsHeroPositionInfo.PositionPair position_details = 2;</code>
     */
    public int getPositionDetailsCount() {
      return positionDetails_.size();
    }
    /**
     * <code>repeated .CDOTAUserMsg_StatsHeroPositionInfo.PositionPair position_details = 2;</code>
     */
    public skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_StatsHeroPositionInfo.PositionPair getPositionDetails(int index) {
      return positionDetails_.get(index);
    }
    /**
     * <code>repeated .CDOTAUserMsg_StatsHeroPositionInfo.PositionPair position_details = 2;</code>
     */
    public skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_StatsHeroPositionInfo.PositionPairOrBuilder getPositionDetailsOrBuilder(
        int index) {
      return positionDetails_.get(index);
    }

    private void initFields() {
      averagePosition_ = 0F;
      positionDetails_ = java.util.Collections.emptyList();
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeFloat(1, averagePosition_);
      }
      for (int i = 0; i < positionDetails_.size(); i++) {
        output.writeMessage(2, positionDetails_.get(i));
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeFloatSize(1, averagePosition_);
      }
      for (int i = 0; i < positionDetails_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(2, positionDetails_.get(i));
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_StatsHeroPositionInfo parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_StatsHeroPositionInfo parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_StatsHeroPositionInfo parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_StatsHeroPositionInfo parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_StatsHeroPositionInfo parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_StatsHeroPositionInfo parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_StatsHeroPositionInfo parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_StatsHeroPositionInfo parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_StatsHeroPositionInfo parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_StatsHeroPositionInfo parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_StatsHeroPositionInfo prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code CDOTAUserMsg_StatsHeroPositionInfo}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:CDOTAUserMsg_StatsHeroPositionInfo)
        skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_StatsHeroPositionInfoOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return skadistats.clarity.wire.common.proto.DotaUserMessages.internal_static_CDOTAUserMsg_StatsHeroPositionInfo_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return skadistats.clarity.wire.common.proto.DotaUserMessages.internal_static_CDOTAUserMsg_StatsHeroPositionInfo_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_StatsHeroPositionInfo.class, skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_StatsHeroPositionInfo.Builder.class);
      }

      // Construct using skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_StatsHeroPositionInfo.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
          getPositionDetailsFieldBuilder();
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        averagePosition_ = 0F;
        bitField0_ = (bitField0_ & ~0x00000001);
        if (positionDetailsBuilder_ == null) {
          positionDetails_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000002);
        } else {
          positionDetailsBuilder_.clear();
        }
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return skadistats.clarity.wire.common.proto.DotaUserMessages.internal_static_CDOTAUserMsg_StatsHeroPositionInfo_descriptor;
      }

      public skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_StatsHeroPositionInfo getDefaultInstanceForType() {
        return skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_StatsHeroPositionInfo.getDefaultInstance();
      }

      public skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_StatsHeroPositionInfo build() {
        skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_StatsHeroPositionInfo result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_StatsHeroPositionInfo buildPartial() {
        skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_StatsHeroPositionInfo result = new skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_StatsHeroPositionInfo(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.averagePosition_ = averagePosition_;
        if (positionDetailsBuilder_ == null) {
          if (((bitField0_ & 0x00000002) == 0x00000002)) {
            positionDetails_ = java.util.Collections.unmodifiableList(positionDetails_);
            bitField0_ = (bitField0_ & ~0x00000002);
          }
          result.positionDetails_ = positionDetails_;
        } else {
          result.positionDetails_ = positionDetailsBuilder_.build();
        }
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_StatsHeroPositionInfo) {
          return mergeFrom((skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_StatsHeroPositionInfo)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_StatsHeroPositionInfo other) {
        if (other == skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_StatsHeroPositionInfo.getDefaultInstance()) return this;
        if (other.hasAveragePosition()) {
          setAveragePosition(other.getAveragePosition());
        }
        if (positionDetailsBuilder_ == null) {
          if (!other.positionDetails_.isEmpty()) {
            if (positionDetails_.isEmpty()) {
              positionDetails_ = other.positionDetails_;
              bitField0_ = (bitField0_ & ~0x00000002);
            } else {
              ensurePositionDetailsIsMutable();
              positionDetails_.addAll(other.positionDetails_);
            }
            onChanged();
          }
        } else {
          if (!other.positionDetails_.isEmpty()) {
            if (positionDetailsBuilder_.isEmpty()) {
              positionDetailsBuilder_.dispose();
              positionDetailsBuilder_ = null;
              positionDetails_ = other.positionDetails_;
              bitField0_ = (bitField0_ & ~0x00000002);
              positionDetailsBuilder_ = 
                com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders ?
                   getPositionDetailsFieldBuilder() : null;
            } else {
              positionDetailsBuilder_.addAllMessages(other.positionDetails_);
            }
          }
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_StatsHeroPositionInfo parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_StatsHeroPositionInfo) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private float averagePosition_ ;
      /**
       * <code>optional float average_position = 1;</code>
       */
      public boolean hasAveragePosition() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>optional float average_position = 1;</code>
       */
      public float getAveragePosition() {
        return averagePosition_;
      }
      /**
       * <code>optional float average_position = 1;</code>
       */
      public Builder setAveragePosition(float value) {
        bitField0_ |= 0x00000001;
        averagePosition_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional float average_position = 1;</code>
       */
      public Builder clearAveragePosition() {
        bitField0_ = (bitField0_ & ~0x00000001);
        averagePosition_ = 0F;
        onChanged();
        return this;
      }

      private java.util.List<skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_StatsHeroPositionInfo.PositionPair> positionDetails_ =
        java.util.Collections.emptyList();
      private void ensurePositionDetailsIsMutable() {
        if (!((bitField0_ & 0x00000002) == 0x00000002)) {
          positionDetails_ = new java.util.ArrayList<skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_StatsHeroPositionInfo.PositionPair>(positionDetails_);
          bitField0_ |= 0x00000002;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilder<
          skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_StatsHeroPositionInfo.PositionPair, skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_StatsHeroPositionInfo.PositionPair.Builder, skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_StatsHeroPositionInfo.PositionPairOrBuilder> positionDetailsBuilder_;

      /**
       * <code>repeated .CDOTAUserMsg_StatsHeroPositionInfo.PositionPair position_details = 2;</code>
       */
      public java.util.List<skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_StatsHeroPositionInfo.PositionPair> getPositionDetailsList() {
        if (positionDetailsBuilder_ == null) {
          return java.util.Collections.unmodifiableList(positionDetails_);
        } else {
          return positionDetailsBuilder_.getMessageList();
        }
      }
      /**
       * <code>repeated .CDOTAUserMsg_StatsHeroPositionInfo.PositionPair position_details = 2;</code>
       */
      public int getPositionDetailsCount() {
        if (positionDetailsBuilder_ == null) {
          return positionDetails_.size();
        } else {
          return positionDetailsBuilder_.getCount();
        }
      }
      /**
       * <code>repeated .CDOTAUserMsg_StatsHeroPositionInfo.PositionPair position_details = 2;</code>
       */
      public skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_StatsHeroPositionInfo.PositionPair getPositionDetails(int index) {
        if (positionDetailsBuilder_ == null) {
          return positionDetails_.get(index);
        } else {
          return positionDetailsBuilder_.getMessage(index);
        }
      }
      /**
       * <code>repeated .CDOTAUserMsg_StatsHeroPositionInfo.PositionPair position_details = 2;</code>
       */
      public Builder setPositionDetails(
          int index, skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_StatsHeroPositionInfo.PositionPair value) {
        if (positionDetailsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensurePositionDetailsIsMutable();
          positionDetails_.set(index, value);
          onChanged();
        } else {
          positionDetailsBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .CDOTAUserMsg_StatsHeroPositionInfo.PositionPair position_details = 2;</code>
       */
      public Builder setPositionDetails(
          int index, skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_StatsHeroPositionInfo.PositionPair.Builder builderForValue) {
        if (positionDetailsBuilder_ == null) {
          ensurePositionDetailsIsMutable();
          positionDetails_.set(index, builderForValue.build());
          onChanged();
        } else {
          positionDetailsBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .CDOTAUserMsg_StatsHeroPositionInfo.PositionPair position_details = 2;</code>
       */
      public Builder addPositionDetails(skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_StatsHeroPositionInfo.PositionPair value) {
        if (positionDetailsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensurePositionDetailsIsMutable();
          positionDetails_.add(value);
          onChanged();
        } else {
          positionDetailsBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <code>repeated .CDOTAUserMsg_StatsHeroPositionInfo.PositionPair position_details = 2;</code>
       */
      public Builder addPositionDetails(
          int index, skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_StatsHeroPositionInfo.PositionPair value) {
        if (positionDetailsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensurePositionDetailsIsMutable();
          positionDetails_.add(index, value);
          onChanged();
        } else {
          positionDetailsBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .CDOTAUserMsg_StatsHeroPositionInfo.PositionPair position_details = 2;</code>
       */
      public Builder addPositionDetails(
          skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_StatsHeroPositionInfo.PositionPair.Builder builderForValue) {
        if (positionDetailsBuilder_ == null) {
          ensurePositionDetailsIsMutable();
          positionDetails_.add(builderForValue.build());
          onChanged();
        } else {
          positionDetailsBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .CDOTAUserMsg_StatsHeroPositionInfo.PositionPair position_details = 2;</code>
       */
      public Builder addPositionDetails(
          int index, skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_StatsHeroPositionInfo.PositionPair.Builder builderForValue) {
        if (positionDetailsBuilder_ == null) {
          ensurePositionDetailsIsMutable();
          positionDetails_.add(index, builderForValue.build());
          onChanged();
        } else {
          positionDetailsBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .CDOTAUserMsg_StatsHeroPositionInfo.PositionPair position_details = 2;</code>
       */
      public Builder addAllPositionDetails(
          java.lang.Iterable<? extends skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_StatsHeroPositionInfo.PositionPair> values) {
        if (positionDetailsBuilder_ == null) {
          ensurePositionDetailsIsMutable();
          com.google.protobuf.AbstractMessageLite.Builder.addAll(
              values, positionDetails_);
          onChanged();
        } else {
          positionDetailsBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <code>repeated .CDOTAUserMsg_StatsHeroPositionInfo.PositionPair position_details = 2;</code>
       */
      public Builder clearPositionDetails() {
        if (positionDetailsBuilder_ == null) {
          positionDetails_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000002);
          onChanged();
        } else {
          positionDetailsBuilder_.clear();
        }
        return this;
      }
      /**
       * <code>repeated .CDOTAUserMsg_StatsHeroPositionInfo.PositionPair position_details = 2;</code>
       */
      public Builder removePositionDetails(int index) {
        if (positionDetailsBuilder_ == null) {
          ensurePositionDetailsIsMutable();
          positionDetails_.remove(index);
          onChanged();
        } else {
          positionDetailsBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <code>repeated .CDOTAUserMsg_StatsHeroPositionInfo.PositionPair position_details = 2;</code>
       */
      public skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_StatsHeroPositionInfo.PositionPair.Builder getPositionDetailsBuilder(
          int index) {
        return getPositionDetailsFieldBuilder().getBuilder(index);
      }
      /**
       * <code>repeated .CDOTAUserMsg_StatsHeroPositionInfo.PositionPair position_details = 2;</code>
       */
      public skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_StatsHeroPositionInfo.PositionPairOrBuilder getPositionDetailsOrBuilder(
          int index) {
        if (positionDetailsBuilder_ == null) {
          return positionDetails_.get(index);  } else {
          return positionDetailsBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <code>repeated .CDOTAUserMsg_StatsHeroPositionInfo.PositionPair position_details = 2;</code>
       */
      public java.util.List<? extends skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_StatsHeroPositionInfo.PositionPairOrBuilder> 
           getPositionDetailsOrBuilderList() {
        if (positionDetailsBuilder_ != null) {
          return positionDetailsBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(positionDetails_);
        }
      }
      /**
       * <code>repeated .CDOTAUserMsg_StatsHeroPositionInfo.PositionPair position_details = 2;</code>
       */
      public skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_StatsHeroPositionInfo.PositionPair.Builder addPositionDetailsBuilder() {
        return getPositionDetailsFieldBuilder().addBuilder(
            skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_StatsHeroPositionInfo.PositionPair.getDefaultInstance());
      }
      /**
       * <code>repeated .CDOTAUserMsg_StatsHeroPositionInfo.PositionPair position_details = 2;</code>
       */
      public skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_StatsHeroPositionInfo.PositionPair.Builder addPositionDetailsBuilder(
          int index) {
        return getPositionDetailsFieldBuilder().addBuilder(
            index, skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_StatsHeroPositionInfo.PositionPair.getDefaultInstance());
      }
      /**
       * <code>repeated .CDOTAUserMsg_StatsHeroPositionInfo.PositionPair position_details = 2;</code>
       */
      public java.util.List<skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_StatsHeroPositionInfo.PositionPair.Builder> 
           getPositionDetailsBuilderList() {
        return getPositionDetailsFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilder<
          skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_StatsHeroPositionInfo.PositionPair, skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_StatsHeroPositionInfo.PositionPair.Builder, skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_StatsHeroPositionInfo.PositionPairOrBuilder> 
          getPositionDetailsFieldBuilder() {
        if (positionDetailsBuilder_ == null) {
          positionDetailsBuilder_ = new com.google.protobuf.RepeatedFieldBuilder<
              skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_StatsHeroPositionInfo.PositionPair, skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_StatsHeroPositionInfo.PositionPair.Builder, skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_StatsHeroPositionInfo.PositionPairOrBuilder>(
                  positionDetails_,
                  ((bitField0_ & 0x00000002) == 0x00000002),
                  getParentForChildren(),
                  isClean());
          positionDetails_ = null;
        }
        return positionDetailsBuilder_;
      }

      // @@protoc_insertion_point(builder_scope:CDOTAUserMsg_StatsHeroPositionInfo)
    }

    static {
      defaultInstance = new CDOTAUserMsg_StatsHeroPositionInfo(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:CDOTAUserMsg_StatsHeroPositionInfo)
  }

  public interface CDOTAUserMsg_StatsHeroMinuteDetailsOrBuilder extends
      // @@protoc_insertion_point(interface_extends:CDOTAUserMsg_StatsHeroMinuteDetails)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>optional uint32 last_hits = 1;</code>
     */
    boolean hasLastHits();
    /**
     * <code>optional uint32 last_hits = 1;</code>
     */
    int getLastHits();

    /**
     * <code>optional uint32 hero_kills = 2;</code>
     */
    boolean hasHeroKills();
    /**
     * <code>optional uint32 hero_kills = 2;</code>
     */
    int getHeroKills();

    /**
     * <code>optional uint32 hero_damage = 3;</code>
     */
    boolean hasHeroDamage();
    /**
     * <code>optional uint32 hero_damage = 3;</code>
     */
    int getHeroDamage();

    /**
     * <code>optional uint32 tower_damage = 4;</code>
     */
    boolean hasTowerDamage();
    /**
     * <code>optional uint32 tower_damage = 4;</code>
     */
    int getTowerDamage();

    /**
     * <code>optional .CDOTAUserMsg_StatsHeroPositionInfo position_info = 5;</code>
     */
    boolean hasPositionInfo();
    /**
     * <code>optional .CDOTAUserMsg_StatsHeroPositionInfo position_info = 5;</code>
     */
    skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_StatsHeroPositionInfo getPositionInfo();
    /**
     * <code>optional .CDOTAUserMsg_StatsHeroPositionInfo position_info = 5;</code>
     */
    skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_StatsHeroPositionInfoOrBuilder getPositionInfoOrBuilder();

    /**
     * <code>optional uint32 total_xp = 6;</code>
     */
    boolean hasTotalXp();
    /**
     * <code>optional uint32 total_xp = 6;</code>
     */
    int getTotalXp();

    /**
     * <code>optional uint32 net_worth = 7;</code>
     */
    boolean hasNetWorth();
    /**
     * <code>optional uint32 net_worth = 7;</code>
     */
    int getNetWorth();

    /**
     * <code>optional uint32 harvested_creep_gold = 8;</code>
     */
    boolean hasHarvestedCreepGold();
    /**
     * <code>optional uint32 harvested_creep_gold = 8;</code>
     */
    int getHarvestedCreepGold();

    /**
     * <code>optional uint32 claimed_farm = 9;</code>
     */
    boolean hasClaimedFarm();
    /**
     * <code>optional uint32 claimed_farm = 9;</code>
     */
    int getClaimedFarm();

    /**
     * <code>optional uint32 wards_placed = 10;</code>
     */
    boolean hasWardsPlaced();
    /**
     * <code>optional uint32 wards_placed = 10;</code>
     */
    int getWardsPlaced();

    /**
     * <code>optional uint32 runes_collected = 11;</code>
     */
    boolean hasRunesCollected();
    /**
     * <code>optional uint32 runes_collected = 11;</code>
     */
    int getRunesCollected();

    /**
     * <code>optional uint32 tps_used = 12;</code>
     */
    boolean hasTpsUsed();
    /**
     * <code>optional uint32 tps_used = 12;</code>
     */
    int getTpsUsed();

    /**
     * <code>repeated uint32 mana_spent = 13;</code>
     */
    java.util.List<java.lang.Integer> getManaSpentList();
    /**
     * <code>repeated uint32 mana_spent = 13;</code>
     */
    int getManaSpentCount();
    /**
     * <code>repeated uint32 mana_spent = 13;</code>
     */
    int getManaSpent(int index);

    /**
     * <code>repeated uint32 damage_absorbed = 14;</code>
     */
    java.util.List<java.lang.Integer> getDamageAbsorbedList();
    /**
     * <code>repeated uint32 damage_absorbed = 14;</code>
     */
    int getDamageAbsorbedCount();
    /**
     * <code>repeated uint32 damage_absorbed = 14;</code>
     */
    int getDamageAbsorbed(int index);

    /**
     * <code>repeated uint32 damage_done = 15;</code>
     */
    java.util.List<java.lang.Integer> getDamageDoneList();
    /**
     * <code>repeated uint32 damage_done = 15;</code>
     */
    int getDamageDoneCount();
    /**
     * <code>repeated uint32 damage_done = 15;</code>
     */
    int getDamageDone(int index);
  }
  /**
   * Protobuf type {@code CDOTAUserMsg_StatsHeroMinuteDetails}
   */
  public static final class CDOTAUserMsg_StatsHeroMinuteDetails extends
      com.google.protobuf.GeneratedMessage implements
      // @@protoc_insertion_point(message_implements:CDOTAUserMsg_StatsHeroMinuteDetails)
      CDOTAUserMsg_StatsHeroMinuteDetailsOrBuilder {
    // Use CDOTAUserMsg_StatsHeroMinuteDetails.newBuilder() to construct.
    private CDOTAUserMsg_StatsHeroMinuteDetails(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private CDOTAUserMsg_StatsHeroMinuteDetails(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final CDOTAUserMsg_StatsHeroMinuteDetails defaultInstance;
    public static CDOTAUserMsg_StatsHeroMinuteDetails getDefaultInstance() {
      return defaultInstance;
    }

    public CDOTAUserMsg_StatsHeroMinuteDetails getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private CDOTAUserMsg_StatsHeroMinuteDetails(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 8: {
              bitField0_ |= 0x00000001;
              lastHits_ = input.readUInt32();
              break;
            }
            case 16: {
              bitField0_ |= 0x00000002;
              heroKills_ = input.readUInt32();
              break;
            }
            case 24: {
              bitField0_ |= 0x00000004;
              heroDamage_ = input.readUInt32();
              break;
            }
            case 32: {
              bitField0_ |= 0x00000008;
              towerDamage_ = input.readUInt32();
              break;
            }
            case 42: {
              skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_StatsHeroPositionInfo.Builder subBuilder = null;
              if (((bitField0_ & 0x00000010) == 0x00000010)) {
                subBuilder = positionInfo_.toBuilder();
              }
              positionInfo_ = input.readMessage(skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_StatsHeroPositionInfo.PARSER, extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(positionInfo_);
                positionInfo_ = subBuilder.buildPartial();
              }
              bitField0_ |= 0x00000010;
              break;
            }
            case 48: {
              bitField0_ |= 0x00000020;
              totalXp_ = input.readUInt32();
              break;
            }
            case 56: {
              bitField0_ |= 0x00000040;
              netWorth_ = input.readUInt32();
              break;
            }
            case 64: {
              bitField0_ |= 0x00000080;
              harvestedCreepGold_ = input.readUInt32();
              break;
            }
            case 72: {
              bitField0_ |= 0x00000100;
              claimedFarm_ = input.readUInt32();
              break;
            }
            case 80: {
              bitField0_ |= 0x00000200;
              wardsPlaced_ = input.readUInt32();
              break;
            }
            case 88: {
              bitField0_ |= 0x00000400;
              runesCollected_ = input.readUInt32();
              break;
            }
            case 96: {
              bitField0_ |= 0x00000800;
              tpsUsed_ = input.readUInt32();
              break;
            }
            case 104: {
              if (!((mutable_bitField0_ & 0x00001000) == 0x00001000)) {
                manaSpent_ = new java.util.ArrayList<java.lang.Integer>();
                mutable_bitField0_ |= 0x00001000;
              }
              manaSpent_.add(input.readUInt32());
              break;
            }
            case 106: {
              int length = input.readRawVarint32();
              int limit = input.pushLimit(length);
              if (!((mutable_bitField0_ & 0x00001000) == 0x00001000) && input.getBytesUntilLimit() > 0) {
                manaSpent_ = new java.util.ArrayList<java.lang.Integer>();
                mutable_bitField0_ |= 0x00001000;
              }
              while (input.getBytesUntilLimit() > 0) {
                manaSpent_.add(input.readUInt32());
              }
              input.popLimit(limit);
              break;
            }
            case 112: {
              if (!((mutable_bitField0_ & 0x00002000) == 0x00002000)) {
                damageAbsorbed_ = new java.util.ArrayList<java.lang.Integer>();
                mutable_bitField0_ |= 0x00002000;
              }
              damageAbsorbed_.add(input.readUInt32());
              break;
            }
            case 114: {
              int length = input.readRawVarint32();
              int limit = input.pushLimit(length);
              if (!((mutable_bitField0_ & 0x00002000) == 0x00002000) && input.getBytesUntilLimit() > 0) {
                damageAbsorbed_ = new java.util.ArrayList<java.lang.Integer>();
                mutable_bitField0_ |= 0x00002000;
              }
              while (input.getBytesUntilLimit() > 0) {
                damageAbsorbed_.add(input.readUInt32());
              }
              input.popLimit(limit);
              break;
            }
            case 120: {
              if (!((mutable_bitField0_ & 0x00004000) == 0x00004000)) {
                damageDone_ = new java.util.ArrayList<java.lang.Integer>();
                mutable_bitField0_ |= 0x00004000;
              }
              damageDone_.add(input.readUInt32());
              break;
            }
            case 122: {
              int length = input.readRawVarint32();
              int limit = input.pushLimit(length);
              if (!((mutable_bitField0_ & 0x00004000) == 0x00004000) && input.getBytesUntilLimit() > 0) {
                damageDone_ = new java.util.ArrayList<java.lang.Integer>();
                mutable_bitField0_ |= 0x00004000;
              }
              while (input.getBytesUntilLimit() > 0) {
                damageDone_.add(input.readUInt32());
              }
              input.popLimit(limit);
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        if (((mutable_bitField0_ & 0x00001000) == 0x00001000)) {
          manaSpent_ = java.util.Collections.unmodifiableList(manaSpent_);
        }
        if (((mutable_bitField0_ & 0x00002000) == 0x00002000)) {
          damageAbsorbed_ = java.util.Collections.unmodifiableList(damageAbsorbed_);
        }
        if (((mutable_bitField0_ & 0x00004000) == 0x00004000)) {
          damageDone_ = java.util.Collections.unmodifiableList(damageDone_);
        }
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return skadistats.clarity.wire.common.proto.DotaUserMessages.internal_static_CDOTAUserMsg_StatsHeroMinuteDetails_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return skadistats.clarity.wire.common.proto.DotaUserMessages.internal_static_CDOTAUserMsg_StatsHeroMinuteDetails_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_StatsHeroMinuteDetails.class, skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_StatsHeroMinuteDetails.Builder.class);
    }

    public static com.google.protobuf.Parser<CDOTAUserMsg_StatsHeroMinuteDetails> PARSER =
        new com.google.protobuf.AbstractParser<CDOTAUserMsg_StatsHeroMinuteDetails>() {
      public CDOTAUserMsg_StatsHeroMinuteDetails parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new CDOTAUserMsg_StatsHeroMinuteDetails(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<CDOTAUserMsg_StatsHeroMinuteDetails> getParserForType() {
      return PARSER;
    }

    private int bitField0_;
    public static final int LAST_HITS_FIELD_NUMBER = 1;
    private int lastHits_;
    /**
     * <code>optional uint32 last_hits = 1;</code>
     */
    public boolean hasLastHits() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>optional uint32 last_hits = 1;</code>
     */
    public int getLastHits() {
      return lastHits_;
    }

    public static final int HERO_KILLS_FIELD_NUMBER = 2;
    private int heroKills_;
    /**
     * <code>optional uint32 hero_kills = 2;</code>
     */
    public boolean hasHeroKills() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>optional uint32 hero_kills = 2;</code>
     */
    public int getHeroKills() {
      return heroKills_;
    }

    public static final int HERO_DAMAGE_FIELD_NUMBER = 3;
    private int heroDamage_;
    /**
     * <code>optional uint32 hero_damage = 3;</code>
     */
    public boolean hasHeroDamage() {
      return ((bitField0_ & 0x00000004) == 0x00000004);
    }
    /**
     * <code>optional uint32 hero_damage = 3;</code>
     */
    public int getHeroDamage() {
      return heroDamage_;
    }

    public static final int TOWER_DAMAGE_FIELD_NUMBER = 4;
    private int towerDamage_;
    /**
     * <code>optional uint32 tower_damage = 4;</code>
     */
    public boolean hasTowerDamage() {
      return ((bitField0_ & 0x00000008) == 0x00000008);
    }
    /**
     * <code>optional uint32 tower_damage = 4;</code>
     */
    public int getTowerDamage() {
      return towerDamage_;
    }

    public static final int POSITION_INFO_FIELD_NUMBER = 5;
    private skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_StatsHeroPositionInfo positionInfo_;
    /**
     * <code>optional .CDOTAUserMsg_StatsHeroPositionInfo position_info = 5;</code>
     */
    public boolean hasPositionInfo() {
      return ((bitField0_ & 0x00000010) == 0x00000010);
    }
    /**
     * <code>optional .CDOTAUserMsg_StatsHeroPositionInfo position_info = 5;</code>
     */
    public skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_StatsHeroPositionInfo getPositionInfo() {
      return positionInfo_;
    }
    /**
     * <code>optional .CDOTAUserMsg_StatsHeroPositionInfo position_info = 5;</code>
     */
    public skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_StatsHeroPositionInfoOrBuilder getPositionInfoOrBuilder() {
      return positionInfo_;
    }

    public static final int TOTAL_XP_FIELD_NUMBER = 6;
    private int totalXp_;
    /**
     * <code>optional uint32 total_xp = 6;</code>
     */
    public boolean hasTotalXp() {
      return ((bitField0_ & 0x00000020) == 0x00000020);
    }
    /**
     * <code>optional uint32 total_xp = 6;</code>
     */
    public int getTotalXp() {
      return totalXp_;
    }

    public static final int NET_WORTH_FIELD_NUMBER = 7;
    private int netWorth_;
    /**
     * <code>optional uint32 net_worth = 7;</code>
     */
    public boolean hasNetWorth() {
      return ((bitField0_ & 0x00000040) == 0x00000040);
    }
    /**
     * <code>optional uint32 net_worth = 7;</code>
     */
    public int getNetWorth() {
      return netWorth_;
    }

    public static final int HARVESTED_CREEP_GOLD_FIELD_NUMBER = 8;
    private int harvestedCreepGold_;
    /**
     * <code>optional uint32 harvested_creep_gold = 8;</code>
     */
    public boolean hasHarvestedCreepGold() {
      return ((bitField0_ & 0x00000080) == 0x00000080);
    }
    /**
     * <code>optional uint32 harvested_creep_gold = 8;</code>
     */
    public int getHarvestedCreepGold() {
      return harvestedCreepGold_;
    }

    public static final int CLAIMED_FARM_FIELD_NUMBER = 9;
    private int claimedFarm_;
    /**
     * <code>optional uint32 claimed_farm = 9;</code>
     */
    public boolean hasClaimedFarm() {
      return ((bitField0_ & 0x00000100) == 0x00000100);
    }
    /**
     * <code>optional uint32 claimed_farm = 9;</code>
     */
    public int getClaimedFarm() {
      return claimedFarm_;
    }

    public static final int WARDS_PLACED_FIELD_NUMBER = 10;
    private int wardsPlaced_;
    /**
     * <code>optional uint32 wards_placed = 10;</code>
     */
    public boolean hasWardsPlaced() {
      return ((bitField0_ & 0x00000200) == 0x00000200);
    }
    /**
     * <code>optional uint32 wards_placed = 10;</code>
     */
    public int getWardsPlaced() {
      return wardsPlaced_;
    }

    public static final int RUNES_COLLECTED_FIELD_NUMBER = 11;
    private int runesCollected_;
    /**
     * <code>optional uint32 runes_collected = 11;</code>
     */
    public boolean hasRunesCollected() {
      return ((bitField0_ & 0x00000400) == 0x00000400);
    }
    /**
     * <code>optional uint32 runes_collected = 11;</code>
     */
    public int getRunesCollected() {
      return runesCollected_;
    }

    public static final int TPS_USED_FIELD_NUMBER = 12;
    private int tpsUsed_;
    /**
     * <code>optional uint32 tps_used = 12;</code>
     */
    public boolean hasTpsUsed() {
      return ((bitField0_ & 0x00000800) == 0x00000800);
    }
    /**
     * <code>optional uint32 tps_used = 12;</code>
     */
    public int getTpsUsed() {
      return tpsUsed_;
    }

    public static final int MANA_SPENT_FIELD_NUMBER = 13;
    private java.util.List<java.lang.Integer> manaSpent_;
    /**
     * <code>repeated uint32 mana_spent = 13;</code>
     */
    public java.util.List<java.lang.Integer>
        getManaSpentList() {
      return manaSpent_;
    }
    /**
     * <code>repeated uint32 mana_spent = 13;</code>
     */
    public int getManaSpentCount() {
      return manaSpent_.size();
    }
    /**
     * <code>repeated uint32 mana_spent = 13;</code>
     */
    public int getManaSpent(int index) {
      return manaSpent_.get(index);
    }

    public static final int DAMAGE_ABSORBED_FIELD_NUMBER = 14;
    private java.util.List<java.lang.Integer> damageAbsorbed_;
    /**
     * <code>repeated uint32 damage_absorbed = 14;</code>
     */
    public java.util.List<java.lang.Integer>
        getDamageAbsorbedList() {
      return damageAbsorbed_;
    }
    /**
     * <code>repeated uint32 damage_absorbed = 14;</code>
     */
    public int getDamageAbsorbedCount() {
      return damageAbsorbed_.size();
    }
    /**
     * <code>repeated uint32 damage_absorbed = 14;</code>
     */
    public int getDamageAbsorbed(int index) {
      return damageAbsorbed_.get(index);
    }

    public static final int DAMAGE_DONE_FIELD_NUMBER = 15;
    private java.util.List<java.lang.Integer> damageDone_;
    /**
     * <code>repeated uint32 damage_done = 15;</code>
     */
    public java.util.List<java.lang.Integer>
        getDamageDoneList() {
      return damageDone_;
    }
    /**
     * <code>repeated uint32 damage_done = 15;</code>
     */
    public int getDamageDoneCount() {
      return damageDone_.size();
    }
    /**
     * <code>repeated uint32 damage_done = 15;</code>
     */
    public int getDamageDone(int index) {
      return damageDone_.get(index);
    }

    private void initFields() {
      lastHits_ = 0;
      heroKills_ = 0;
      heroDamage_ = 0;
      towerDamage_ = 0;
      positionInfo_ = skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_StatsHeroPositionInfo.getDefaultInstance();
      totalXp_ = 0;
      netWorth_ = 0;
      harvestedCreepGold_ = 0;
      claimedFarm_ = 0;
      wardsPlaced_ = 0;
      runesCollected_ = 0;
      tpsUsed_ = 0;
      manaSpent_ = java.util.Collections.emptyList();
      damageAbsorbed_ = java.util.Collections.emptyList();
      damageDone_ = java.util.Collections.emptyList();
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeUInt32(1, lastHits_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeUInt32(2, heroKills_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        output.writeUInt32(3, heroDamage_);
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        output.writeUInt32(4, towerDamage_);
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        output.writeMessage(5, positionInfo_);
      }
      if (((bitField0_ & 0x00000020) == 0x00000020)) {
        output.writeUInt32(6, totalXp_);
      }
      if (((bitField0_ & 0x00000040) == 0x00000040)) {
        output.writeUInt32(7, netWorth_);
      }
      if (((bitField0_ & 0x00000080) == 0x00000080)) {
        output.writeUInt32(8, harvestedCreepGold_);
      }
      if (((bitField0_ & 0x00000100) == 0x00000100)) {
        output.writeUInt32(9, claimedFarm_);
      }
      if (((bitField0_ & 0x00000200) == 0x00000200)) {
        output.writeUInt32(10, wardsPlaced_);
      }
      if (((bitField0_ & 0x00000400) == 0x00000400)) {
        output.writeUInt32(11, runesCollected_);
      }
      if (((bitField0_ & 0x00000800) == 0x00000800)) {
        output.writeUInt32(12, tpsUsed_);
      }
      for (int i = 0; i < manaSpent_.size(); i++) {
        output.writeUInt32(13, manaSpent_.get(i));
      }
      for (int i = 0; i < damageAbsorbed_.size(); i++) {
        output.writeUInt32(14, damageAbsorbed_.get(i));
      }
      for (int i = 0; i < damageDone_.size(); i++) {
        output.writeUInt32(15, damageDone_.get(i));
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(1, lastHits_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(2, heroKills_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(3, heroDamage_);
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(4, towerDamage_);
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(5, positionInfo_);
      }
      if (((bitField0_ & 0x00000020) == 0x00000020)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(6, totalXp_);
      }
      if (((bitField0_ & 0x00000040) == 0x00000040)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(7, netWorth_);
      }
      if (((bitField0_ & 0x00000080) == 0x00000080)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(8, harvestedCreepGold_);
      }
      if (((bitField0_ & 0x00000100) == 0x00000100)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(9, claimedFarm_);
      }
      if (((bitField0_ & 0x00000200) == 0x00000200)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(10, wardsPlaced_);
      }
      if (((bitField0_ & 0x00000400) == 0x00000400)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(11, runesCollected_);
      }
      if (((bitField0_ & 0x00000800) == 0x00000800)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(12, tpsUsed_);
      }
      {
        int dataSize = 0;
        for (int i = 0; i < manaSpent_.size(); i++) {
          dataSize += com.google.protobuf.CodedOutputStream
            .computeUInt32SizeNoTag(manaSpent_.get(i));
        }
        size += dataSize;
        size += 1 * getManaSpentList().size();
      }
      {
        int dataSize = 0;
        for (int i = 0; i < damageAbsorbed_.size(); i++) {
          dataSize += com.google.protobuf.CodedOutputStream
            .computeUInt32SizeNoTag(damageAbsorbed_.get(i));
        }
        size += dataSize;
        size += 1 * getDamageAbsorbedList().size();
      }
      {
        int dataSize = 0;
        for (int i = 0; i < damageDone_.size(); i++) {
          dataSize += com.google.protobuf.CodedOutputStream
            .computeUInt32SizeNoTag(damageDone_.get(i));
        }
        size += dataSize;
        size += 1 * getDamageDoneList().size();
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_StatsHeroMinuteDetails parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_StatsHeroMinuteDetails parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_StatsHeroMinuteDetails parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_StatsHeroMinuteDetails parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_StatsHeroMinuteDetails parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_StatsHeroMinuteDetails parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_StatsHeroMinuteDetails parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_StatsHeroMinuteDetails parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_StatsHeroMinuteDetails parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_StatsHeroMinuteDetails parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_StatsHeroMinuteDetails prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code CDOTAUserMsg_StatsHeroMinuteDetails}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:CDOTAUserMsg_StatsHeroMinuteDetails)
        skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_StatsHeroMinuteDetailsOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return skadistats.clarity.wire.common.proto.DotaUserMessages.internal_static_CDOTAUserMsg_StatsHeroMinuteDetails_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return skadistats.clarity.wire.common.proto.DotaUserMessages.internal_static_CDOTAUserMsg_StatsHeroMinuteDetails_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_StatsHeroMinuteDetails.class, skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_StatsHeroMinuteDetails.Builder.class);
      }

      // Construct using skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_StatsHeroMinuteDetails.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
          getPositionInfoFieldBuilder();
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        lastHits_ = 0;
        bitField0_ = (bitField0_ & ~0x00000001);
        heroKills_ = 0;
        bitField0_ = (bitField0_ & ~0x00000002);
        heroDamage_ = 0;
        bitField0_ = (bitField0_ & ~0x00000004);
        towerDamage_ = 0;
        bitField0_ = (bitField0_ & ~0x00000008);
        if (positionInfoBuilder_ == null) {
          positionInfo_ = skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_StatsHeroPositionInfo.getDefaultInstance();
        } else {
          positionInfoBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000010);
        totalXp_ = 0;
        bitField0_ = (bitField0_ & ~0x00000020);
        netWorth_ = 0;
        bitField0_ = (bitField0_ & ~0x00000040);
        harvestedCreepGold_ = 0;
        bitField0_ = (bitField0_ & ~0x00000080);
        claimedFarm_ = 0;
        bitField0_ = (bitField0_ & ~0x00000100);
        wardsPlaced_ = 0;
        bitField0_ = (bitField0_ & ~0x00000200);
        runesCollected_ = 0;
        bitField0_ = (bitField0_ & ~0x00000400);
        tpsUsed_ = 0;
        bitField0_ = (bitField0_ & ~0x00000800);
        manaSpent_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00001000);
        damageAbsorbed_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00002000);
        damageDone_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00004000);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return skadistats.clarity.wire.common.proto.DotaUserMessages.internal_static_CDOTAUserMsg_StatsHeroMinuteDetails_descriptor;
      }

      public skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_StatsHeroMinuteDetails getDefaultInstanceForType() {
        return skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_StatsHeroMinuteDetails.getDefaultInstance();
      }

      public skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_StatsHeroMinuteDetails build() {
        skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_StatsHeroMinuteDetails result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_StatsHeroMinuteDetails buildPartial() {
        skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_StatsHeroMinuteDetails result = new skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_StatsHeroMinuteDetails(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.lastHits_ = lastHits_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.heroKills_ = heroKills_;
        if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
          to_bitField0_ |= 0x00000004;
        }
        result.heroDamage_ = heroDamage_;
        if (((from_bitField0_ & 0x00000008) == 0x00000008)) {
          to_bitField0_ |= 0x00000008;
        }
        result.towerDamage_ = towerDamage_;
        if (((from_bitField0_ & 0x00000010) == 0x00000010)) {
          to_bitField0_ |= 0x00000010;
        }
        if (positionInfoBuilder_ == null) {
          result.positionInfo_ = positionInfo_;
        } else {
          result.positionInfo_ = positionInfoBuilder_.build();
        }
        if (((from_bitField0_ & 0x00000020) == 0x00000020)) {
          to_bitField0_ |= 0x00000020;
        }
        result.totalXp_ = totalXp_;
        if (((from_bitField0_ & 0x00000040) == 0x00000040)) {
          to_bitField0_ |= 0x00000040;
        }
        result.netWorth_ = netWorth_;
        if (((from_bitField0_ & 0x00000080) == 0x00000080)) {
          to_bitField0_ |= 0x00000080;
        }
        result.harvestedCreepGold_ = harvestedCreepGold_;
        if (((from_bitField0_ & 0x00000100) == 0x00000100)) {
          to_bitField0_ |= 0x00000100;
        }
        result.claimedFarm_ = claimedFarm_;
        if (((from_bitField0_ & 0x00000200) == 0x00000200)) {
          to_bitField0_ |= 0x00000200;
        }
        result.wardsPlaced_ = wardsPlaced_;
        if (((from_bitField0_ & 0x00000400) == 0x00000400)) {
          to_bitField0_ |= 0x00000400;
        }
        result.runesCollected_ = runesCollected_;
        if (((from_bitField0_ & 0x00000800) == 0x00000800)) {
          to_bitField0_ |= 0x00000800;
        }
        result.tpsUsed_ = tpsUsed_;
        if (((bitField0_ & 0x00001000) == 0x00001000)) {
          manaSpent_ = java.util.Collections.unmodifiableList(manaSpent_);
          bitField0_ = (bitField0_ & ~0x00001000);
        }
        result.manaSpent_ = manaSpent_;
        if (((bitField0_ & 0x00002000) == 0x00002000)) {
          damageAbsorbed_ = java.util.Collections.unmodifiableList(damageAbsorbed_);
          bitField0_ = (bitField0_ & ~0x00002000);
        }
        result.damageAbsorbed_ = damageAbsorbed_;
        if (((bitField0_ & 0x00004000) == 0x00004000)) {
          damageDone_ = java.util.Collections.unmodifiableList(damageDone_);
          bitField0_ = (bitField0_ & ~0x00004000);
        }
        result.damageDone_ = damageDone_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_StatsHeroMinuteDetails) {
          return mergeFrom((skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_StatsHeroMinuteDetails)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_StatsHeroMinuteDetails other) {
        if (other == skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_StatsHeroMinuteDetails.getDefaultInstance()) return this;
        if (other.hasLastHits()) {
          setLastHits(other.getLastHits());
        }
        if (other.hasHeroKills()) {
          setHeroKills(other.getHeroKills());
        }
        if (other.hasHeroDamage()) {
          setHeroDamage(other.getHeroDamage());
        }
        if (other.hasTowerDamage()) {
          setTowerDamage(other.getTowerDamage());
        }
        if (other.hasPositionInfo()) {
          mergePositionInfo(other.getPositionInfo());
        }
        if (other.hasTotalXp()) {
          setTotalXp(other.getTotalXp());
        }
        if (other.hasNetWorth()) {
          setNetWorth(other.getNetWorth());
        }
        if (other.hasHarvestedCreepGold()) {
          setHarvestedCreepGold(other.getHarvestedCreepGold());
        }
        if (other.hasClaimedFarm()) {
          setClaimedFarm(other.getClaimedFarm());
        }
        if (other.hasWardsPlaced()) {
          setWardsPlaced(other.getWardsPlaced());
        }
        if (other.hasRunesCollected()) {
          setRunesCollected(other.getRunesCollected());
        }
        if (other.hasTpsUsed()) {
          setTpsUsed(other.getTpsUsed());
        }
        if (!other.manaSpent_.isEmpty()) {
          if (manaSpent_.isEmpty()) {
            manaSpent_ = other.manaSpent_;
            bitField0_ = (bitField0_ & ~0x00001000);
          } else {
            ensureManaSpentIsMutable();
            manaSpent_.addAll(other.manaSpent_);
          }
          onChanged();
        }
        if (!other.damageAbsorbed_.isEmpty()) {
          if (damageAbsorbed_.isEmpty()) {
            damageAbsorbed_ = other.damageAbsorbed_;
            bitField0_ = (bitField0_ & ~0x00002000);
          } else {
            ensureDamageAbsorbedIsMutable();
            damageAbsorbed_.addAll(other.damageAbsorbed_);
          }
          onChanged();
        }
        if (!other.damageDone_.isEmpty()) {
          if (damageDone_.isEmpty()) {
            damageDone_ = other.damageDone_;
            bitField0_ = (bitField0_ & ~0x00004000);
          } else {
            ensureDamageDoneIsMutable();
            damageDone_.addAll(other.damageDone_);
          }
          onChanged();
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_StatsHeroMinuteDetails parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_StatsHeroMinuteDetails) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private int lastHits_ ;
      /**
       * <code>optional uint32 last_hits = 1;</code>
       */
      public boolean hasLastHits() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>optional uint32 last_hits = 1;</code>
       */
      public int getLastHits() {
        return lastHits_;
      }
      /**
       * <code>optional uint32 last_hits = 1;</code>
       */
      public Builder setLastHits(int value) {
        bitField0_ |= 0x00000001;
        lastHits_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional uint32 last_hits = 1;</code>
       */
      public Builder clearLastHits() {
        bitField0_ = (bitField0_ & ~0x00000001);
        lastHits_ = 0;
        onChanged();
        return this;
      }

      private int heroKills_ ;
      /**
       * <code>optional uint32 hero_kills = 2;</code>
       */
      public boolean hasHeroKills() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>optional uint32 hero_kills = 2;</code>
       */
      public int getHeroKills() {
        return heroKills_;
      }
      /**
       * <code>optional uint32 hero_kills = 2;</code>
       */
      public Builder setHeroKills(int value) {
        bitField0_ |= 0x00000002;
        heroKills_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional uint32 hero_kills = 2;</code>
       */
      public Builder clearHeroKills() {
        bitField0_ = (bitField0_ & ~0x00000002);
        heroKills_ = 0;
        onChanged();
        return this;
      }

      private int heroDamage_ ;
      /**
       * <code>optional uint32 hero_damage = 3;</code>
       */
      public boolean hasHeroDamage() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }
      /**
       * <code>optional uint32 hero_damage = 3;</code>
       */
      public int getHeroDamage() {
        return heroDamage_;
      }
      /**
       * <code>optional uint32 hero_damage = 3;</code>
       */
      public Builder setHeroDamage(int value) {
        bitField0_ |= 0x00000004;
        heroDamage_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional uint32 hero_damage = 3;</code>
       */
      public Builder clearHeroDamage() {
        bitField0_ = (bitField0_ & ~0x00000004);
        heroDamage_ = 0;
        onChanged();
        return this;
      }

      private int towerDamage_ ;
      /**
       * <code>optional uint32 tower_damage = 4;</code>
       */
      public boolean hasTowerDamage() {
        return ((bitField0_ & 0x00000008) == 0x00000008);
      }
      /**
       * <code>optional uint32 tower_damage = 4;</code>
       */
      public int getTowerDamage() {
        return towerDamage_;
      }
      /**
       * <code>optional uint32 tower_damage = 4;</code>
       */
      public Builder setTowerDamage(int value) {
        bitField0_ |= 0x00000008;
        towerDamage_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional uint32 tower_damage = 4;</code>
       */
      public Builder clearTowerDamage() {
        bitField0_ = (bitField0_ & ~0x00000008);
        towerDamage_ = 0;
        onChanged();
        return this;
      }

      private skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_StatsHeroPositionInfo positionInfo_ = skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_StatsHeroPositionInfo.getDefaultInstance();
      private com.google.protobuf.SingleFieldBuilder<
          skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_StatsHeroPositionInfo, skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_StatsHeroPositionInfo.Builder, skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_StatsHeroPositionInfoOrBuilder> positionInfoBuilder_;
      /**
       * <code>optional .CDOTAUserMsg_StatsHeroPositionInfo position_info = 5;</code>
       */
      public boolean hasPositionInfo() {
        return ((bitField0_ & 0x00000010) == 0x00000010);
      }
      /**
       * <code>optional .CDOTAUserMsg_StatsHeroPositionInfo position_info = 5;</code>
       */
      public skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_StatsHeroPositionInfo getPositionInfo() {
        if (positionInfoBuilder_ == null) {
          return positionInfo_;
        } else {
          return positionInfoBuilder_.getMessage();
        }
      }
      /**
       * <code>optional .CDOTAUserMsg_StatsHeroPositionInfo position_info = 5;</code>
       */
      public Builder setPositionInfo(skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_StatsHeroPositionInfo value) {
        if (positionInfoBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          positionInfo_ = value;
          onChanged();
        } else {
          positionInfoBuilder_.setMessage(value);
        }
        bitField0_ |= 0x00000010;
        return this;
      }
      /**
       * <code>optional .CDOTAUserMsg_StatsHeroPositionInfo position_info = 5;</code>
       */
      public Builder setPositionInfo(
          skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_StatsHeroPositionInfo.Builder builderForValue) {
        if (positionInfoBuilder_ == null) {
          positionInfo_ = builderForValue.build();
          onChanged();
        } else {
          positionInfoBuilder_.setMessage(builderForValue.build());
        }
        bitField0_ |= 0x00000010;
        return this;
      }
      /**
       * <code>optional .CDOTAUserMsg_StatsHeroPositionInfo position_info = 5;</code>
       */
      public Builder mergePositionInfo(skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_StatsHeroPositionInfo value) {
        if (positionInfoBuilder_ == null) {
          if (((bitField0_ & 0x00000010) == 0x00000010) &&
              positionInfo_ != skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_StatsHeroPositionInfo.getDefaultInstance()) {
            positionInfo_ =
              skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_StatsHeroPositionInfo.newBuilder(positionInfo_).mergeFrom(value).buildPartial();
          } else {
            positionInfo_ = value;
          }
          onChanged();
        } else {
          positionInfoBuilder_.mergeFrom(value);
        }
        bitField0_ |= 0x00000010;
        return this;
      }
      /**
       * <code>optional .CDOTAUserMsg_StatsHeroPositionInfo position_info = 5;</code>
       */
      public Builder clearPositionInfo() {
        if (positionInfoBuilder_ == null) {
          positionInfo_ = skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_StatsHeroPositionInfo.getDefaultInstance();
          onChanged();
        } else {
          positionInfoBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000010);
        return this;
      }
      /**
       * <code>optional .CDOTAUserMsg_StatsHeroPositionInfo position_info = 5;</code>
       */
      public skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_StatsHeroPositionInfo.Builder getPositionInfoBuilder() {
        bitField0_ |= 0x00000010;
        onChanged();
        return getPositionInfoFieldBuilder().getBuilder();
      }
      /**
       * <code>optional .CDOTAUserMsg_StatsHeroPositionInfo position_info = 5;</code>
       */
      public skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_StatsHeroPositionInfoOrBuilder getPositionInfoOrBuilder() {
        if (positionInfoBuilder_ != null) {
          return positionInfoBuilder_.getMessageOrBuilder();
        } else {
          return positionInfo_;
        }
      }
      /**
       * <code>optional .CDOTAUserMsg_StatsHeroPositionInfo position_info = 5;</code>
       */
      private com.google.protobuf.SingleFieldBuilder<
          skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_StatsHeroPositionInfo, skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_StatsHeroPositionInfo.Builder, skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_StatsHeroPositionInfoOrBuilder> 
          getPositionInfoFieldBuilder() {
        if (positionInfoBuilder_ == null) {
          positionInfoBuilder_ = new com.google.protobuf.SingleFieldBuilder<
              skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_StatsHeroPositionInfo, skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_StatsHeroPositionInfo.Builder, skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_StatsHeroPositionInfoOrBuilder>(
                  getPositionInfo(),
                  getParentForChildren(),
                  isClean());
          positionInfo_ = null;
        }
        return positionInfoBuilder_;
      }

      private int totalXp_ ;
      /**
       * <code>optional uint32 total_xp = 6;</code>
       */
      public boolean hasTotalXp() {
        return ((bitField0_ & 0x00000020) == 0x00000020);
      }
      /**
       * <code>optional uint32 total_xp = 6;</code>
       */
      public int getTotalXp() {
        return totalXp_;
      }
      /**
       * <code>optional uint32 total_xp = 6;</code>
       */
      public Builder setTotalXp(int value) {
        bitField0_ |= 0x00000020;
        totalXp_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional uint32 total_xp = 6;</code>
       */
      public Builder clearTotalXp() {
        bitField0_ = (bitField0_ & ~0x00000020);
        totalXp_ = 0;
        onChanged();
        return this;
      }

      private int netWorth_ ;
      /**
       * <code>optional uint32 net_worth = 7;</code>
       */
      public boolean hasNetWorth() {
        return ((bitField0_ & 0x00000040) == 0x00000040);
      }
      /**
       * <code>optional uint32 net_worth = 7;</code>
       */
      public int getNetWorth() {
        return netWorth_;
      }
      /**
       * <code>optional uint32 net_worth = 7;</code>
       */
      public Builder setNetWorth(int value) {
        bitField0_ |= 0x00000040;
        netWorth_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional uint32 net_worth = 7;</code>
       */
      public Builder clearNetWorth() {
        bitField0_ = (bitField0_ & ~0x00000040);
        netWorth_ = 0;
        onChanged();
        return this;
      }

      private int harvestedCreepGold_ ;
      /**
       * <code>optional uint32 harvested_creep_gold = 8;</code>
       */
      public boolean hasHarvestedCreepGold() {
        return ((bitField0_ & 0x00000080) == 0x00000080);
      }
      /**
       * <code>optional uint32 harvested_creep_gold = 8;</code>
       */
      public int getHarvestedCreepGold() {
        return harvestedCreepGold_;
      }
      /**
       * <code>optional uint32 harvested_creep_gold = 8;</code>
       */
      public Builder setHarvestedCreepGold(int value) {
        bitField0_ |= 0x00000080;
        harvestedCreepGold_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional uint32 harvested_creep_gold = 8;</code>
       */
      public Builder clearHarvestedCreepGold() {
        bitField0_ = (bitField0_ & ~0x00000080);
        harvestedCreepGold_ = 0;
        onChanged();
        return this;
      }

      private int claimedFarm_ ;
      /**
       * <code>optional uint32 claimed_farm = 9;</code>
       */
      public boolean hasClaimedFarm() {
        return ((bitField0_ & 0x00000100) == 0x00000100);
      }
      /**
       * <code>optional uint32 claimed_farm = 9;</code>
       */
      public int getClaimedFarm() {
        return claimedFarm_;
      }
      /**
       * <code>optional uint32 claimed_farm = 9;</code>
       */
      public Builder setClaimedFarm(int value) {
        bitField0_ |= 0x00000100;
        claimedFarm_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional uint32 claimed_farm = 9;</code>
       */
      public Builder clearClaimedFarm() {
        bitField0_ = (bitField0_ & ~0x00000100);
        claimedFarm_ = 0;
        onChanged();
        return this;
      }

      private int wardsPlaced_ ;
      /**
       * <code>optional uint32 wards_placed = 10;</code>
       */
      public boolean hasWardsPlaced() {
        return ((bitField0_ & 0x00000200) == 0x00000200);
      }
      /**
       * <code>optional uint32 wards_placed = 10;</code>
       */
      public int getWardsPlaced() {
        return wardsPlaced_;
      }
      /**
       * <code>optional uint32 wards_placed = 10;</code>
       */
      public Builder setWardsPlaced(int value) {
        bitField0_ |= 0x00000200;
        wardsPlaced_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional uint32 wards_placed = 10;</code>
       */
      public Builder clearWardsPlaced() {
        bitField0_ = (bitField0_ & ~0x00000200);
        wardsPlaced_ = 0;
        onChanged();
        return this;
      }

      private int runesCollected_ ;
      /**
       * <code>optional uint32 runes_collected = 11;</code>
       */
      public boolean hasRunesCollected() {
        return ((bitField0_ & 0x00000400) == 0x00000400);
      }
      /**
       * <code>optional uint32 runes_collected = 11;</code>
       */
      public int getRunesCollected() {
        return runesCollected_;
      }
      /**
       * <code>optional uint32 runes_collected = 11;</code>
       */
      public Builder setRunesCollected(int value) {
        bitField0_ |= 0x00000400;
        runesCollected_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional uint32 runes_collected = 11;</code>
       */
      public Builder clearRunesCollected() {
        bitField0_ = (bitField0_ & ~0x00000400);
        runesCollected_ = 0;
        onChanged();
        return this;
      }

      private int tpsUsed_ ;
      /**
       * <code>optional uint32 tps_used = 12;</code>
       */
      public boolean hasTpsUsed() {
        return ((bitField0_ & 0x00000800) == 0x00000800);
      }
      /**
       * <code>optional uint32 tps_used = 12;</code>
       */
      public int getTpsUsed() {
        return tpsUsed_;
      }
      /**
       * <code>optional uint32 tps_used = 12;</code>
       */
      public Builder setTpsUsed(int value) {
        bitField0_ |= 0x00000800;
        tpsUsed_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional uint32 tps_used = 12;</code>
       */
      public Builder clearTpsUsed() {
        bitField0_ = (bitField0_ & ~0x00000800);
        tpsUsed_ = 0;
        onChanged();
        return this;
      }

      private java.util.List<java.lang.Integer> manaSpent_ = java.util.Collections.emptyList();
      private void ensureManaSpentIsMutable() {
        if (!((bitField0_ & 0x00001000) == 0x00001000)) {
          manaSpent_ = new java.util.ArrayList<java.lang.Integer>(manaSpent_);
          bitField0_ |= 0x00001000;
         }
      }
      /**
       * <code>repeated uint32 mana_spent = 13;</code>
       */
      public java.util.List<java.lang.Integer>
          getManaSpentList() {
        return java.util.Collections.unmodifiableList(manaSpent_);
      }
      /**
       * <code>repeated uint32 mana_spent = 13;</code>
       */
      public int getManaSpentCount() {
        return manaSpent_.size();
      }
      /**
       * <code>repeated uint32 mana_spent = 13;</code>
       */
      public int getManaSpent(int index) {
        return manaSpent_.get(index);
      }
      /**
       * <code>repeated uint32 mana_spent = 13;</code>
       */
      public Builder setManaSpent(
          int index, int value) {
        ensureManaSpentIsMutable();
        manaSpent_.set(index, value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated uint32 mana_spent = 13;</code>
       */
      public Builder addManaSpent(int value) {
        ensureManaSpentIsMutable();
        manaSpent_.add(value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated uint32 mana_spent = 13;</code>
       */
      public Builder addAllManaSpent(
          java.lang.Iterable<? extends java.lang.Integer> values) {
        ensureManaSpentIsMutable();
        com.google.protobuf.AbstractMessageLite.Builder.addAll(
            values, manaSpent_);
        onChanged();
        return this;
      }
      /**
       * <code>repeated uint32 mana_spent = 13;</code>
       */
      public Builder clearManaSpent() {
        manaSpent_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00001000);
        onChanged();
        return this;
      }

      private java.util.List<java.lang.Integer> damageAbsorbed_ = java.util.Collections.emptyList();
      private void ensureDamageAbsorbedIsMutable() {
        if (!((bitField0_ & 0x00002000) == 0x00002000)) {
          damageAbsorbed_ = new java.util.ArrayList<java.lang.Integer>(damageAbsorbed_);
          bitField0_ |= 0x00002000;
         }
      }
      /**
       * <code>repeated uint32 damage_absorbed = 14;</code>
       */
      public java.util.List<java.lang.Integer>
          getDamageAbsorbedList() {
        return java.util.Collections.unmodifiableList(damageAbsorbed_);
      }
      /**
       * <code>repeated uint32 damage_absorbed = 14;</code>
       */
      public int getDamageAbsorbedCount() {
        return damageAbsorbed_.size();
      }
      /**
       * <code>repeated uint32 damage_absorbed = 14;</code>
       */
      public int getDamageAbsorbed(int index) {
        return damageAbsorbed_.get(index);
      }
      /**
       * <code>repeated uint32 damage_absorbed = 14;</code>
       */
      public Builder setDamageAbsorbed(
          int index, int value) {
        ensureDamageAbsorbedIsMutable();
        damageAbsorbed_.set(index, value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated uint32 damage_absorbed = 14;</code>
       */
      public Builder addDamageAbsorbed(int value) {
        ensureDamageAbsorbedIsMutable();
        damageAbsorbed_.add(value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated uint32 damage_absorbed = 14;</code>
       */
      public Builder addAllDamageAbsorbed(
          java.lang.Iterable<? extends java.lang.Integer> values) {
        ensureDamageAbsorbedIsMutable();
        com.google.protobuf.AbstractMessageLite.Builder.addAll(
            values, damageAbsorbed_);
        onChanged();
        return this;
      }
      /**
       * <code>repeated uint32 damage_absorbed = 14;</code>
       */
      public Builder clearDamageAbsorbed() {
        damageAbsorbed_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00002000);
        onChanged();
        return this;
      }

      private java.util.List<java.lang.Integer> damageDone_ = java.util.Collections.emptyList();
      private void ensureDamageDoneIsMutable() {
        if (!((bitField0_ & 0x00004000) == 0x00004000)) {
          damageDone_ = new java.util.ArrayList<java.lang.Integer>(damageDone_);
          bitField0_ |= 0x00004000;
         }
      }
      /**
       * <code>repeated uint32 damage_done = 15;</code>
       */
      public java.util.List<java.lang.Integer>
          getDamageDoneList() {
        return java.util.Collections.unmodifiableList(damageDone_);
      }
      /**
       * <code>repeated uint32 damage_done = 15;</code>
       */
      public int getDamageDoneCount() {
        return damageDone_.size();
      }
      /**
       * <code>repeated uint32 damage_done = 15;</code>
       */
      public int getDamageDone(int index) {
        return damageDone_.get(index);
      }
      /**
       * <code>repeated uint32 damage_done = 15;</code>
       */
      public Builder setDamageDone(
          int index, int value) {
        ensureDamageDoneIsMutable();
        damageDone_.set(index, value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated uint32 damage_done = 15;</code>
       */
      public Builder addDamageDone(int value) {
        ensureDamageDoneIsMutable();
        damageDone_.add(value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated uint32 damage_done = 15;</code>
       */
      public Builder addAllDamageDone(
          java.lang.Iterable<? extends java.lang.Integer> values) {
        ensureDamageDoneIsMutable();
        com.google.protobuf.AbstractMessageLite.Builder.addAll(
            values, damageDone_);
        onChanged();
        return this;
      }
      /**
       * <code>repeated uint32 damage_done = 15;</code>
       */
      public Builder clearDamageDone() {
        damageDone_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00004000);
        onChanged();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:CDOTAUserMsg_StatsHeroMinuteDetails)
    }

    static {
      defaultInstance = new CDOTAUserMsg_StatsHeroMinuteDetails(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:CDOTAUserMsg_StatsHeroMinuteDetails)
  }

  public interface CDOTAUserMsg_StatsTeamMinuteDetailsOrBuilder extends
      // @@protoc_insertion_point(interface_extends:CDOTAUserMsg_StatsTeamMinuteDetails)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>repeated .CDOTAUserMsg_StatsHeroMinuteDetails player_stats = 1;</code>
     */
    java.util.List<skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_StatsHeroMinuteDetails> 
        getPlayerStatsList();
    /**
     * <code>repeated .CDOTAUserMsg_StatsHeroMinuteDetails player_stats = 1;</code>
     */
    skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_StatsHeroMinuteDetails getPlayerStats(int index);
    /**
     * <code>repeated .CDOTAUserMsg_StatsHeroMinuteDetails player_stats = 1;</code>
     */
    int getPlayerStatsCount();
    /**
     * <code>repeated .CDOTAUserMsg_StatsHeroMinuteDetails player_stats = 1;</code>
     */
    java.util.List<? extends skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_StatsHeroMinuteDetailsOrBuilder> 
        getPlayerStatsOrBuilderList();
    /**
     * <code>repeated .CDOTAUserMsg_StatsHeroMinuteDetails player_stats = 1;</code>
     */
    skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_StatsHeroMinuteDetailsOrBuilder getPlayerStatsOrBuilder(
        int index);

    /**
     * <code>optional uint32 tower_kills = 2;</code>
     */
    boolean hasTowerKills();
    /**
     * <code>optional uint32 tower_kills = 2;</code>
     */
    int getTowerKills();

    /**
     * <code>optional uint32 barrack_kills = 3;</code>
     */
    boolean hasBarrackKills();
    /**
     * <code>optional uint32 barrack_kills = 3;</code>
     */
    int getBarrackKills();

    /**
     * <code>optional uint32 available_lane_creep_gold = 4;</code>
     */
    boolean hasAvailableLaneCreepGold();
    /**
     * <code>optional uint32 available_lane_creep_gold = 4;</code>
     */
    int getAvailableLaneCreepGold();

    /**
     * <code>optional uint32 balance_kill_value = 5;</code>
     */
    boolean hasBalanceKillValue();
    /**
     * <code>optional uint32 balance_kill_value = 5;</code>
     */
    int getBalanceKillValue();

    /**
     * <code>optional uint32 balance_tower_value = 6;</code>
     */
    boolean hasBalanceTowerValue();
    /**
     * <code>optional uint32 balance_tower_value = 6;</code>
     */
    int getBalanceTowerValue();

    /**
     * <code>optional uint32 balance_barracks_value = 7;</code>
     */
    boolean hasBalanceBarracksValue();
    /**
     * <code>optional uint32 balance_barracks_value = 7;</code>
     */
    int getBalanceBarracksValue();

    /**
     * <code>optional uint32 balance_gold_value = 8;</code>
     */
    boolean hasBalanceGoldValue();
    /**
     * <code>optional uint32 balance_gold_value = 8;</code>
     */
    int getBalanceGoldValue();

    /**
     * <code>optional uint32 balance_xp_value = 9;</code>
     */
    boolean hasBalanceXpValue();
    /**
     * <code>optional uint32 balance_xp_value = 9;</code>
     */
    int getBalanceXpValue();

    /**
     * <code>repeated .CDOTAUserMsg_StatsTeamMinuteDetails.LocationPerformance lane_performance = 10;</code>
     */
    java.util.List<skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_StatsTeamMinuteDetails.LocationPerformance> 
        getLanePerformanceList();
    /**
     * <code>repeated .CDOTAUserMsg_StatsTeamMinuteDetails.LocationPerformance lane_performance = 10;</code>
     */
    skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_StatsTeamMinuteDetails.LocationPerformance getLanePerformance(int index);
    /**
     * <code>repeated .CDOTAUserMsg_StatsTeamMinuteDetails.LocationPerformance lane_performance = 10;</code>
     */
    int getLanePerformanceCount();
    /**
     * <code>repeated .CDOTAUserMsg_StatsTeamMinuteDetails.LocationPerformance lane_performance = 10;</code>
     */
    java.util.List<? extends skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_StatsTeamMinuteDetails.LocationPerformanceOrBuilder> 
        getLanePerformanceOrBuilderList();
    /**
     * <code>repeated .CDOTAUserMsg_StatsTeamMinuteDetails.LocationPerformance lane_performance = 10;</code>
     */
    skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_StatsTeamMinuteDetails.LocationPerformanceOrBuilder getLanePerformanceOrBuilder(
        int index);
  }
  /**
   * Protobuf type {@code CDOTAUserMsg_StatsTeamMinuteDetails}
   */
  public static final class CDOTAUserMsg_StatsTeamMinuteDetails extends
      com.google.protobuf.GeneratedMessage implements
      // @@protoc_insertion_point(message_implements:CDOTAUserMsg_StatsTeamMinuteDetails)
      CDOTAUserMsg_StatsTeamMinuteDetailsOrBuilder {
    // Use CDOTAUserMsg_StatsTeamMinuteDetails.newBuilder() to construct.
    private CDOTAUserMsg_StatsTeamMinuteDetails(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private CDOTAUserMsg_StatsTeamMinuteDetails(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final CDOTAUserMsg_StatsTeamMinuteDetails defaultInstance;
    public static CDOTAUserMsg_StatsTeamMinuteDetails getDefaultInstance() {
      return defaultInstance;
    }

    public CDOTAUserMsg_StatsTeamMinuteDetails getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private CDOTAUserMsg_StatsTeamMinuteDetails(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 10: {
              if (!((mutable_bitField0_ & 0x00000001) == 0x00000001)) {
                playerStats_ = new java.util.ArrayList<skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_StatsHeroMinuteDetails>();
                mutable_bitField0_ |= 0x00000001;
              }
              playerStats_.add(input.readMessage(skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_StatsHeroMinuteDetails.PARSER, extensionRegistry));
              break;
            }
            case 16: {
              bitField0_ |= 0x00000001;
              towerKills_ = input.readUInt32();
              break;
            }
            case 24: {
              bitField0_ |= 0x00000002;
              barrackKills_ = input.readUInt32();
              break;
            }
            case 32: {
              bitField0_ |= 0x00000004;
              availableLaneCreepGold_ = input.readUInt32();
              break;
            }
            case 40: {
              bitField0_ |= 0x00000008;
              balanceKillValue_ = input.readUInt32();
              break;
            }
            case 48: {
              bitField0_ |= 0x00000010;
              balanceTowerValue_ = input.readUInt32();
              break;
            }
            case 56: {
              bitField0_ |= 0x00000020;
              balanceBarracksValue_ = input.readUInt32();
              break;
            }
            case 64: {
              bitField0_ |= 0x00000040;
              balanceGoldValue_ = input.readUInt32();
              break;
            }
            case 72: {
              bitField0_ |= 0x00000080;
              balanceXpValue_ = input.readUInt32();
              break;
            }
            case 82: {
              if (!((mutable_bitField0_ & 0x00000200) == 0x00000200)) {
                lanePerformance_ = new java.util.ArrayList<skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_StatsTeamMinuteDetails.LocationPerformance>();
                mutable_bitField0_ |= 0x00000200;
              }
              lanePerformance_.add(input.readMessage(skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_StatsTeamMinuteDetails.LocationPerformance.PARSER, extensionRegistry));
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        if (((mutable_bitField0_ & 0x00000001) == 0x00000001)) {
          playerStats_ = java.util.Collections.unmodifiableList(playerStats_);
        }
        if (((mutable_bitField0_ & 0x00000200) == 0x00000200)) {
          lanePerformance_ = java.util.Collections.unmodifiableList(lanePerformance_);
        }
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return skadistats.clarity.wire.common.proto.DotaUserMessages.internal_static_CDOTAUserMsg_StatsTeamMinuteDetails_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return skadistats.clarity.wire.common.proto.DotaUserMessages.internal_static_CDOTAUserMsg_StatsTeamMinuteDetails_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_StatsTeamMinuteDetails.class, skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_StatsTeamMinuteDetails.Builder.class);
    }

    public static com.google.protobuf.Parser<CDOTAUserMsg_StatsTeamMinuteDetails> PARSER =
        new com.google.protobuf.AbstractParser<CDOTAUserMsg_StatsTeamMinuteDetails>() {
      public CDOTAUserMsg_StatsTeamMinuteDetails parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new CDOTAUserMsg_StatsTeamMinuteDetails(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<CDOTAUserMsg_StatsTeamMinuteDetails> getParserForType() {
      return PARSER;
    }

    public interface LocationPerformanceOrBuilder extends
        // @@protoc_insertion_point(interface_extends:CDOTAUserMsg_StatsTeamMinuteDetails.LocationPerformance)
        com.google.protobuf.MessageOrBuilder {

      /**
       * <code>optional uint32 location_category = 1;</code>
       */
      boolean hasLocationCategory();
      /**
       * <code>optional uint32 location_category = 1;</code>
       */
      int getLocationCategory();

      /**
       * <code>optional uint32 stat_type = 2;</code>
       */
      boolean hasStatType();
      /**
       * <code>optional uint32 stat_type = 2;</code>
       */
      int getStatType();

      /**
       * <code>optional uint32 value = 3;</code>
       */
      boolean hasValue();
      /**
       * <code>optional uint32 value = 3;</code>
       */
      int getValue();
    }
    /**
     * Protobuf type {@code CDOTAUserMsg_StatsTeamMinuteDetails.LocationPerformance}
     */
    public static final class LocationPerformance extends
        com.google.protobuf.GeneratedMessage implements
        // @@protoc_insertion_point(message_implements:CDOTAUserMsg_StatsTeamMinuteDetails.LocationPerformance)
        LocationPerformanceOrBuilder {
      // Use LocationPerformance.newBuilder() to construct.
      private LocationPerformance(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
        super(builder);
        this.unknownFields = builder.getUnknownFields();
      }
      private LocationPerformance(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

      private static final LocationPerformance defaultInstance;
      public static LocationPerformance getDefaultInstance() {
        return defaultInstance;
      }

      public LocationPerformance getDefaultInstanceForType() {
        return defaultInstance;
      }

      private final com.google.protobuf.UnknownFieldSet unknownFields;
      @java.lang.Override
      public final com.google.protobuf.UnknownFieldSet
          getUnknownFields() {
        return this.unknownFields;
      }
      private LocationPerformance(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        initFields();
        int mutable_bitField0_ = 0;
        com.google.protobuf.UnknownFieldSet.Builder unknownFields =
            com.google.protobuf.UnknownFieldSet.newBuilder();
        try {
          boolean done = false;
          while (!done) {
            int tag = input.readTag();
            switch (tag) {
              case 0:
                done = true;
                break;
              default: {
                if (!parseUnknownField(input, unknownFields,
                                       extensionRegistry, tag)) {
                  done = true;
                }
                break;
              }
              case 8: {
                bitField0_ |= 0x00000001;
                locationCategory_ = input.readUInt32();
                break;
              }
              case 16: {
                bitField0_ |= 0x00000002;
                statType_ = input.readUInt32();
                break;
              }
              case 24: {
                bitField0_ |= 0x00000004;
                value_ = input.readUInt32();
                break;
              }
            }
          }
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.setUnfinishedMessage(this);
        } catch (java.io.IOException e) {
          throw new com.google.protobuf.InvalidProtocolBufferException(
              e.getMessage()).setUnfinishedMessage(this);
        } finally {
          this.unknownFields = unknownFields.build();
          makeExtensionsImmutable();
        }
      }
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return skadistats.clarity.wire.common.proto.DotaUserMessages.internal_static_CDOTAUserMsg_StatsTeamMinuteDetails_LocationPerformance_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return skadistats.clarity.wire.common.proto.DotaUserMessages.internal_static_CDOTAUserMsg_StatsTeamMinuteDetails_LocationPerformance_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_StatsTeamMinuteDetails.LocationPerformance.class, skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_StatsTeamMinuteDetails.LocationPerformance.Builder.class);
      }

      public static com.google.protobuf.Parser<LocationPerformance> PARSER =
          new com.google.protobuf.AbstractParser<LocationPerformance>() {
        public LocationPerformance parsePartialFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws com.google.protobuf.InvalidProtocolBufferException {
          return new LocationPerformance(input, extensionRegistry);
        }
      };

      @java.lang.Override
      public com.google.protobuf.Parser<LocationPerformance> getParserForType() {
        return PARSER;
      }

      private int bitField0_;
      public static final int LOCATION_CATEGORY_FIELD_NUMBER = 1;
      private int locationCategory_;
      /**
       * <code>optional uint32 location_category = 1;</code>
       */
      public boolean hasLocationCategory() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>optional uint32 location_category = 1;</code>
       */
      public int getLocationCategory() {
        return locationCategory_;
      }

      public static final int STAT_TYPE_FIELD_NUMBER = 2;
      private int statType_;
      /**
       * <code>optional uint32 stat_type = 2;</code>
       */
      public boolean hasStatType() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>optional uint32 stat_type = 2;</code>
       */
      public int getStatType() {
        return statType_;
      }

      public static final int VALUE_FIELD_NUMBER = 3;
      private int value_;
      /**
       * <code>optional uint32 value = 3;</code>
       */
      public boolean hasValue() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }
      /**
       * <code>optional uint32 value = 3;</code>
       */
      public int getValue() {
        return value_;
      }

      private void initFields() {
        locationCategory_ = 0;
        statType_ = 0;
        value_ = 0;
      }
      private byte memoizedIsInitialized = -1;
      public final boolean isInitialized() {
        byte isInitialized = memoizedIsInitialized;
        if (isInitialized == 1) return true;
        if (isInitialized == 0) return false;

        memoizedIsInitialized = 1;
        return true;
      }

      public void writeTo(com.google.protobuf.CodedOutputStream output)
                          throws java.io.IOException {
        getSerializedSize();
        if (((bitField0_ & 0x00000001) == 0x00000001)) {
          output.writeUInt32(1, locationCategory_);
        }
        if (((bitField0_ & 0x00000002) == 0x00000002)) {
          output.writeUInt32(2, statType_);
        }
        if (((bitField0_ & 0x00000004) == 0x00000004)) {
          output.writeUInt32(3, value_);
        }
        getUnknownFields().writeTo(output);
      }

      private int memoizedSerializedSize = -1;
      public int getSerializedSize() {
        int size = memoizedSerializedSize;
        if (size != -1) return size;

        size = 0;
        if (((bitField0_ & 0x00000001) == 0x00000001)) {
          size += com.google.protobuf.CodedOutputStream
            .computeUInt32Size(1, locationCategory_);
        }
        if (((bitField0_ & 0x00000002) == 0x00000002)) {
          size += com.google.protobuf.CodedOutputStream
            .computeUInt32Size(2, statType_);
        }
        if (((bitField0_ & 0x00000004) == 0x00000004)) {
          size += com.google.protobuf.CodedOutputStream
            .computeUInt32Size(3, value_);
        }
        size += getUnknownFields().getSerializedSize();
        memoizedSerializedSize = size;
        return size;
      }

      private static final long serialVersionUID = 0L;
      @java.lang.Override
      protected java.lang.Object writeReplace()
          throws java.io.ObjectStreamException {
        return super.writeReplace();
      }

      public static skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_StatsTeamMinuteDetails.LocationPerformance parseFrom(
          com.google.protobuf.ByteString data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_StatsTeamMinuteDetails.LocationPerformance parseFrom(
          com.google.protobuf.ByteString data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_StatsTeamMinuteDetails.LocationPerformance parseFrom(byte[] data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_StatsTeamMinuteDetails.LocationPerformance parseFrom(
          byte[] data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_StatsTeamMinuteDetails.LocationPerformance parseFrom(java.io.InputStream input)
          throws java.io.IOException {
        return PARSER.parseFrom(input);
      }
      public static skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_StatsTeamMinuteDetails.LocationPerformance parseFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return PARSER.parseFrom(input, extensionRegistry);
      }
      public static skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_StatsTeamMinuteDetails.LocationPerformance parseDelimitedFrom(java.io.InputStream input)
          throws java.io.IOException {
        return PARSER.parseDelimitedFrom(input);
      }
      public static skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_StatsTeamMinuteDetails.LocationPerformance parseDelimitedFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return PARSER.parseDelimitedFrom(input, extensionRegistry);
      }
      public static skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_StatsTeamMinuteDetails.LocationPerformance parseFrom(
          com.google.protobuf.CodedInputStream input)
          throws java.io.IOException {
        return PARSER.parseFrom(input);
      }
      public static skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_StatsTeamMinuteDetails.LocationPerformance parseFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return PARSER.parseFrom(input, extensionRegistry);
      }

      public static Builder newBuilder() { return Builder.create(); }
      public Builder newBuilderForType() { return newBuilder(); }
      public static Builder newBuilder(skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_StatsTeamMinuteDetails.LocationPerformance prototype) {
        return newBuilder().mergeFrom(prototype);
      }
      public Builder toBuilder() { return newBuilder(this); }

      @java.lang.Override
      protected Builder newBuilderForType(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        Builder builder = new Builder(parent);
        return builder;
      }
      /**
       * Protobuf type {@code CDOTAUserMsg_StatsTeamMinuteDetails.LocationPerformance}
       */
      public static final class Builder extends
          com.google.protobuf.GeneratedMessage.Builder<Builder> implements
          // @@protoc_insertion_point(builder_implements:CDOTAUserMsg_StatsTeamMinuteDetails.LocationPerformance)
          skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_StatsTeamMinuteDetails.LocationPerformanceOrBuilder {
        public static final com.google.protobuf.Descriptors.Descriptor
            getDescriptor() {
          return skadistats.clarity.wire.common.proto.DotaUserMessages.internal_static_CDOTAUserMsg_StatsTeamMinuteDetails_LocationPerformance_descriptor;
        }

        protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
            internalGetFieldAccessorTable() {
          return skadistats.clarity.wire.common.proto.DotaUserMessages.internal_static_CDOTAUserMsg_StatsTeamMinuteDetails_LocationPerformance_fieldAccessorTable
              .ensureFieldAccessorsInitialized(
                  skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_StatsTeamMinuteDetails.LocationPerformance.class, skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_StatsTeamMinuteDetails.LocationPerformance.Builder.class);
        }

        // Construct using skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_StatsTeamMinuteDetails.LocationPerformance.newBuilder()
        private Builder() {
          maybeForceBuilderInitialization();
        }

        private Builder(
            com.google.protobuf.GeneratedMessage.BuilderParent parent) {
          super(parent);
          maybeForceBuilderInitialization();
        }
        private void maybeForceBuilderInitialization() {
          if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
          }
        }
        private static Builder create() {
          return new Builder();
        }

        public Builder clear() {
          super.clear();
          locationCategory_ = 0;
          bitField0_ = (bitField0_ & ~0x00000001);
          statType_ = 0;
          bitField0_ = (bitField0_ & ~0x00000002);
          value_ = 0;
          bitField0_ = (bitField0_ & ~0x00000004);
          return this;
        }

        public Builder clone() {
          return create().mergeFrom(buildPartial());
        }

        public com.google.protobuf.Descriptors.Descriptor
            getDescriptorForType() {
          return skadistats.clarity.wire.common.proto.DotaUserMessages.internal_static_CDOTAUserMsg_StatsTeamMinuteDetails_LocationPerformance_descriptor;
        }

        public skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_StatsTeamMinuteDetails.LocationPerformance getDefaultInstanceForType() {
          return skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_StatsTeamMinuteDetails.LocationPerformance.getDefaultInstance();
        }

        public skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_StatsTeamMinuteDetails.LocationPerformance build() {
          skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_StatsTeamMinuteDetails.LocationPerformance result = buildPartial();
          if (!result.isInitialized()) {
            throw newUninitializedMessageException(result);
          }
          return result;
        }

        public skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_StatsTeamMinuteDetails.LocationPerformance buildPartial() {
          skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_StatsTeamMinuteDetails.LocationPerformance result = new skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_StatsTeamMinuteDetails.LocationPerformance(this);
          int from_bitField0_ = bitField0_;
          int to_bitField0_ = 0;
          if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
            to_bitField0_ |= 0x00000001;
          }
          result.locationCategory_ = locationCategory_;
          if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
            to_bitField0_ |= 0x00000002;
          }
          result.statType_ = statType_;
          if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
            to_bitField0_ |= 0x00000004;
          }
          result.value_ = value_;
          result.bitField0_ = to_bitField0_;
          onBuilt();
          return result;
        }

        public Builder mergeFrom(com.google.protobuf.Message other) {
          if (other instanceof skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_StatsTeamMinuteDetails.LocationPerformance) {
            return mergeFrom((skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_StatsTeamMinuteDetails.LocationPerformance)other);
          } else {
            super.mergeFrom(other);
            return this;
          }
        }

        public Builder mergeFrom(skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_StatsTeamMinuteDetails.LocationPerformance other) {
          if (other == skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_StatsTeamMinuteDetails.LocationPerformance.getDefaultInstance()) return this;
          if (other.hasLocationCategory()) {
            setLocationCategory(other.getLocationCategory());
          }
          if (other.hasStatType()) {
            setStatType(other.getStatType());
          }
          if (other.hasValue()) {
            setValue(other.getValue());
          }
          this.mergeUnknownFields(other.getUnknownFields());
          return this;
        }

        public final boolean isInitialized() {
          return true;
        }

        public Builder mergeFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws java.io.IOException {
          skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_StatsTeamMinuteDetails.LocationPerformance parsedMessage = null;
          try {
            parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
          } catch (com.google.protobuf.InvalidProtocolBufferException e) {
            parsedMessage = (skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_StatsTeamMinuteDetails.LocationPerformance) e.getUnfinishedMessage();
            throw e;
          } finally {
            if (parsedMessage != null) {
              mergeFrom(parsedMessage);
            }
          }
          return this;
        }
        private int bitField0_;

        private int locationCategory_ ;
        /**
         * <code>optional uint32 location_category = 1;</code>
         */
        public boolean hasLocationCategory() {
          return ((bitField0_ & 0x00000001) == 0x00000001);
        }
        /**
         * <code>optional uint32 location_category = 1;</code>
         */
        public int getLocationCategory() {
          return locationCategory_;
        }
        /**
         * <code>optional uint32 location_category = 1;</code>
         */
        public Builder setLocationCategory(int value) {
          bitField0_ |= 0x00000001;
          locationCategory_ = value;
          onChanged();
          return this;
        }
        /**
         * <code>optional uint32 location_category = 1;</code>
         */
        public Builder clearLocationCategory() {
          bitField0_ = (bitField0_ & ~0x00000001);
          locationCategory_ = 0;
          onChanged();
          return this;
        }

        private int statType_ ;
        /**
         * <code>optional uint32 stat_type = 2;</code>
         */
        public boolean hasStatType() {
          return ((bitField0_ & 0x00000002) == 0x00000002);
        }
        /**
         * <code>optional uint32 stat_type = 2;</code>
         */
        public int getStatType() {
          return statType_;
        }
        /**
         * <code>optional uint32 stat_type = 2;</code>
         */
        public Builder setStatType(int value) {
          bitField0_ |= 0x00000002;
          statType_ = value;
          onChanged();
          return this;
        }
        /**
         * <code>optional uint32 stat_type = 2;</code>
         */
        public Builder clearStatType() {
          bitField0_ = (bitField0_ & ~0x00000002);
          statType_ = 0;
          onChanged();
          return this;
        }

        private int value_ ;
        /**
         * <code>optional uint32 value = 3;</code>
         */
        public boolean hasValue() {
          return ((bitField0_ & 0x00000004) == 0x00000004);
        }
        /**
         * <code>optional uint32 value = 3;</code>
         */
        public int getValue() {
          return value_;
        }
        /**
         * <code>optional uint32 value = 3;</code>
         */
        public Builder setValue(int value) {
          bitField0_ |= 0x00000004;
          value_ = value;
          onChanged();
          return this;
        }
        /**
         * <code>optional uint32 value = 3;</code>
         */
        public Builder clearValue() {
          bitField0_ = (bitField0_ & ~0x00000004);
          value_ = 0;
          onChanged();
          return this;
        }

        // @@protoc_insertion_point(builder_scope:CDOTAUserMsg_StatsTeamMinuteDetails.LocationPerformance)
      }

      static {
        defaultInstance = new LocationPerformance(true);
        defaultInstance.initFields();
      }

      // @@protoc_insertion_point(class_scope:CDOTAUserMsg_StatsTeamMinuteDetails.LocationPerformance)
    }

    private int bitField0_;
    public static final int PLAYER_STATS_FIELD_NUMBER = 1;
    private java.util.List<skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_StatsHeroMinuteDetails> playerStats_;
    /**
     * <code>repeated .CDOTAUserMsg_StatsHeroMinuteDetails player_stats = 1;</code>
     */
    public java.util.List<skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_StatsHeroMinuteDetails> getPlayerStatsList() {
      return playerStats_;
    }
    /**
     * <code>repeated .CDOTAUserMsg_StatsHeroMinuteDetails player_stats = 1;</code>
     */
    public java.util.List<? extends skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_StatsHeroMinuteDetailsOrBuilder> 
        getPlayerStatsOrBuilderList() {
      return playerStats_;
    }
    /**
     * <code>repeated .CDOTAUserMsg_StatsHeroMinuteDetails player_stats = 1;</code>
     */
    public int getPlayerStatsCount() {
      return playerStats_.size();
    }
    /**
     * <code>repeated .CDOTAUserMsg_StatsHeroMinuteDetails player_stats = 1;</code>
     */
    public skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_StatsHeroMinuteDetails getPlayerStats(int index) {
      return playerStats_.get(index);
    }
    /**
     * <code>repeated .CDOTAUserMsg_StatsHeroMinuteDetails player_stats = 1;</code>
     */
    public skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_StatsHeroMinuteDetailsOrBuilder getPlayerStatsOrBuilder(
        int index) {
      return playerStats_.get(index);
    }

    public static final int TOWER_KILLS_FIELD_NUMBER = 2;
    private int towerKills_;
    /**
     * <code>optional uint32 tower_kills = 2;</code>
     */
    public boolean hasTowerKills() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>optional uint32 tower_kills = 2;</code>
     */
    public int getTowerKills() {
      return towerKills_;
    }

    public static final int BARRACK_KILLS_FIELD_NUMBER = 3;
    private int barrackKills_;
    /**
     * <code>optional uint32 barrack_kills = 3;</code>
     */
    public boolean hasBarrackKills() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>optional uint32 barrack_kills = 3;</code>
     */
    public int getBarrackKills() {
      return barrackKills_;
    }

    public static final int AVAILABLE_LANE_CREEP_GOLD_FIELD_NUMBER = 4;
    private int availableLaneCreepGold_;
    /**
     * <code>optional uint32 available_lane_creep_gold = 4;</code>
     */
    public boolean hasAvailableLaneCreepGold() {
      return ((bitField0_ & 0x00000004) == 0x00000004);
    }
    /**
     * <code>optional uint32 available_lane_creep_gold = 4;</code>
     */
    public int getAvailableLaneCreepGold() {
      return availableLaneCreepGold_;
    }

    public static final int BALANCE_KILL_VALUE_FIELD_NUMBER = 5;
    private int balanceKillValue_;
    /**
     * <code>optional uint32 balance_kill_value = 5;</code>
     */
    public boolean hasBalanceKillValue() {
      return ((bitField0_ & 0x00000008) == 0x00000008);
    }
    /**
     * <code>optional uint32 balance_kill_value = 5;</code>
     */
    public int getBalanceKillValue() {
      return balanceKillValue_;
    }

    public static final int BALANCE_TOWER_VALUE_FIELD_NUMBER = 6;
    private int balanceTowerValue_;
    /**
     * <code>optional uint32 balance_tower_value = 6;</code>
     */
    public boolean hasBalanceTowerValue() {
      return ((bitField0_ & 0x00000010) == 0x00000010);
    }
    /**
     * <code>optional uint32 balance_tower_value = 6;</code>
     */
    public int getBalanceTowerValue() {
      return balanceTowerValue_;
    }

    public static final int BALANCE_BARRACKS_VALUE_FIELD_NUMBER = 7;
    private int balanceBarracksValue_;
    /**
     * <code>optional uint32 balance_barracks_value = 7;</code>
     */
    public boolean hasBalanceBarracksValue() {
      return ((bitField0_ & 0x00000020) == 0x00000020);
    }
    /**
     * <code>optional uint32 balance_barracks_value = 7;</code>
     */
    public int getBalanceBarracksValue() {
      return balanceBarracksValue_;
    }

    public static final int BALANCE_GOLD_VALUE_FIELD_NUMBER = 8;
    private int balanceGoldValue_;
    /**
     * <code>optional uint32 balance_gold_value = 8;</code>
     */
    public boolean hasBalanceGoldValue() {
      return ((bitField0_ & 0x00000040) == 0x00000040);
    }
    /**
     * <code>optional uint32 balance_gold_value = 8;</code>
     */
    public int getBalanceGoldValue() {
      return balanceGoldValue_;
    }

    public static final int BALANCE_XP_VALUE_FIELD_NUMBER = 9;
    private int balanceXpValue_;
    /**
     * <code>optional uint32 balance_xp_value = 9;</code>
     */
    public boolean hasBalanceXpValue() {
      return ((bitField0_ & 0x00000080) == 0x00000080);
    }
    /**
     * <code>optional uint32 balance_xp_value = 9;</code>
     */
    public int getBalanceXpValue() {
      return balanceXpValue_;
    }

    public static final int LANE_PERFORMANCE_FIELD_NUMBER = 10;
    private java.util.List<skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_StatsTeamMinuteDetails.LocationPerformance> lanePerformance_;
    /**
     * <code>repeated .CDOTAUserMsg_StatsTeamMinuteDetails.LocationPerformance lane_performance = 10;</code>
     */
    public java.util.List<skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_StatsTeamMinuteDetails.LocationPerformance> getLanePerformanceList() {
      return lanePerformance_;
    }
    /**
     * <code>repeated .CDOTAUserMsg_StatsTeamMinuteDetails.LocationPerformance lane_performance = 10;</code>
     */
    public java.util.List<? extends skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_StatsTeamMinuteDetails.LocationPerformanceOrBuilder> 
        getLanePerformanceOrBuilderList() {
      return lanePerformance_;
    }
    /**
     * <code>repeated .CDOTAUserMsg_StatsTeamMinuteDetails.LocationPerformance lane_performance = 10;</code>
     */
    public int getLanePerformanceCount() {
      return lanePerformance_.size();
    }
    /**
     * <code>repeated .CDOTAUserMsg_StatsTeamMinuteDetails.LocationPerformance lane_performance = 10;</code>
     */
    public skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_StatsTeamMinuteDetails.LocationPerformance getLanePerformance(int index) {
      return lanePerformance_.get(index);
    }
    /**
     * <code>repeated .CDOTAUserMsg_StatsTeamMinuteDetails.LocationPerformance lane_performance = 10;</code>
     */
    public skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_StatsTeamMinuteDetails.LocationPerformanceOrBuilder getLanePerformanceOrBuilder(
        int index) {
      return lanePerformance_.get(index);
    }

    private void initFields() {
      playerStats_ = java.util.Collections.emptyList();
      towerKills_ = 0;
      barrackKills_ = 0;
      availableLaneCreepGold_ = 0;
      balanceKillValue_ = 0;
      balanceTowerValue_ = 0;
      balanceBarracksValue_ = 0;
      balanceGoldValue_ = 0;
      balanceXpValue_ = 0;
      lanePerformance_ = java.util.Collections.emptyList();
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      for (int i = 0; i < playerStats_.size(); i++) {
        output.writeMessage(1, playerStats_.get(i));
      }
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeUInt32(2, towerKills_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeUInt32(3, barrackKills_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        output.writeUInt32(4, availableLaneCreepGold_);
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        output.writeUInt32(5, balanceKillValue_);
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        output.writeUInt32(6, balanceTowerValue_);
      }
      if (((bitField0_ & 0x00000020) == 0x00000020)) {
        output.writeUInt32(7, balanceBarracksValue_);
      }
      if (((bitField0_ & 0x00000040) == 0x00000040)) {
        output.writeUInt32(8, balanceGoldValue_);
      }
      if (((bitField0_ & 0x00000080) == 0x00000080)) {
        output.writeUInt32(9, balanceXpValue_);
      }
      for (int i = 0; i < lanePerformance_.size(); i++) {
        output.writeMessage(10, lanePerformance_.get(i));
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      for (int i = 0; i < playerStats_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(1, playerStats_.get(i));
      }
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(2, towerKills_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(3, barrackKills_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(4, availableLaneCreepGold_);
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(5, balanceKillValue_);
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(6, balanceTowerValue_);
      }
      if (((bitField0_ & 0x00000020) == 0x00000020)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(7, balanceBarracksValue_);
      }
      if (((bitField0_ & 0x00000040) == 0x00000040)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(8, balanceGoldValue_);
      }
      if (((bitField0_ & 0x00000080) == 0x00000080)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(9, balanceXpValue_);
      }
      for (int i = 0; i < lanePerformance_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(10, lanePerformance_.get(i));
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_StatsTeamMinuteDetails parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_StatsTeamMinuteDetails parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_StatsTeamMinuteDetails parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_StatsTeamMinuteDetails parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_StatsTeamMinuteDetails parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_StatsTeamMinuteDetails parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_StatsTeamMinuteDetails parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_StatsTeamMinuteDetails parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_StatsTeamMinuteDetails parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_StatsTeamMinuteDetails parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_StatsTeamMinuteDetails prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code CDOTAUserMsg_StatsTeamMinuteDetails}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:CDOTAUserMsg_StatsTeamMinuteDetails)
        skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_StatsTeamMinuteDetailsOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return skadistats.clarity.wire.common.proto.DotaUserMessages.internal_static_CDOTAUserMsg_StatsTeamMinuteDetails_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return skadistats.clarity.wire.common.proto.DotaUserMessages.internal_static_CDOTAUserMsg_StatsTeamMinuteDetails_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_StatsTeamMinuteDetails.class, skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_StatsTeamMinuteDetails.Builder.class);
      }

      // Construct using skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_StatsTeamMinuteDetails.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
          getPlayerStatsFieldBuilder();
          getLanePerformanceFieldBuilder();
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        if (playerStatsBuilder_ == null) {
          playerStats_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000001);
        } else {
          playerStatsBuilder_.clear();
        }
        towerKills_ = 0;
        bitField0_ = (bitField0_ & ~0x00000002);
        barrackKills_ = 0;
        bitField0_ = (bitField0_ & ~0x00000004);
        availableLaneCreepGold_ = 0;
        bitField0_ = (bitField0_ & ~0x00000008);
        balanceKillValue_ = 0;
        bitField0_ = (bitField0_ & ~0x00000010);
        balanceTowerValue_ = 0;
        bitField0_ = (bitField0_ & ~0x00000020);
        balanceBarracksValue_ = 0;
        bitField0_ = (bitField0_ & ~0x00000040);
        balanceGoldValue_ = 0;
        bitField0_ = (bitField0_ & ~0x00000080);
        balanceXpValue_ = 0;
        bitField0_ = (bitField0_ & ~0x00000100);
        if (lanePerformanceBuilder_ == null) {
          lanePerformance_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000200);
        } else {
          lanePerformanceBuilder_.clear();
        }
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return skadistats.clarity.wire.common.proto.DotaUserMessages.internal_static_CDOTAUserMsg_StatsTeamMinuteDetails_descriptor;
      }

      public skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_StatsTeamMinuteDetails getDefaultInstanceForType() {
        return skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_StatsTeamMinuteDetails.getDefaultInstance();
      }

      public skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_StatsTeamMinuteDetails build() {
        skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_StatsTeamMinuteDetails result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_StatsTeamMinuteDetails buildPartial() {
        skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_StatsTeamMinuteDetails result = new skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_StatsTeamMinuteDetails(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (playerStatsBuilder_ == null) {
          if (((bitField0_ & 0x00000001) == 0x00000001)) {
            playerStats_ = java.util.Collections.unmodifiableList(playerStats_);
            bitField0_ = (bitField0_ & ~0x00000001);
          }
          result.playerStats_ = playerStats_;
        } else {
          result.playerStats_ = playerStatsBuilder_.build();
        }
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000001;
        }
        result.towerKills_ = towerKills_;
        if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
          to_bitField0_ |= 0x00000002;
        }
        result.barrackKills_ = barrackKills_;
        if (((from_bitField0_ & 0x00000008) == 0x00000008)) {
          to_bitField0_ |= 0x00000004;
        }
        result.availableLaneCreepGold_ = availableLaneCreepGold_;
        if (((from_bitField0_ & 0x00000010) == 0x00000010)) {
          to_bitField0_ |= 0x00000008;
        }
        result.balanceKillValue_ = balanceKillValue_;
        if (((from_bitField0_ & 0x00000020) == 0x00000020)) {
          to_bitField0_ |= 0x00000010;
        }
        result.balanceTowerValue_ = balanceTowerValue_;
        if (((from_bitField0_ & 0x00000040) == 0x00000040)) {
          to_bitField0_ |= 0x00000020;
        }
        result.balanceBarracksValue_ = balanceBarracksValue_;
        if (((from_bitField0_ & 0x00000080) == 0x00000080)) {
          to_bitField0_ |= 0x00000040;
        }
        result.balanceGoldValue_ = balanceGoldValue_;
        if (((from_bitField0_ & 0x00000100) == 0x00000100)) {
          to_bitField0_ |= 0x00000080;
        }
        result.balanceXpValue_ = balanceXpValue_;
        if (lanePerformanceBuilder_ == null) {
          if (((bitField0_ & 0x00000200) == 0x00000200)) {
            lanePerformance_ = java.util.Collections.unmodifiableList(lanePerformance_);
            bitField0_ = (bitField0_ & ~0x00000200);
          }
          result.lanePerformance_ = lanePerformance_;
        } else {
          result.lanePerformance_ = lanePerformanceBuilder_.build();
        }
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_StatsTeamMinuteDetails) {
          return mergeFrom((skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_StatsTeamMinuteDetails)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_StatsTeamMinuteDetails other) {
        if (other == skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_StatsTeamMinuteDetails.getDefaultInstance()) return this;
        if (playerStatsBuilder_ == null) {
          if (!other.playerStats_.isEmpty()) {
            if (playerStats_.isEmpty()) {
              playerStats_ = other.playerStats_;
              bitField0_ = (bitField0_ & ~0x00000001);
            } else {
              ensurePlayerStatsIsMutable();
              playerStats_.addAll(other.playerStats_);
            }
            onChanged();
          }
        } else {
          if (!other.playerStats_.isEmpty()) {
            if (playerStatsBuilder_.isEmpty()) {
              playerStatsBuilder_.dispose();
              playerStatsBuilder_ = null;
              playerStats_ = other.playerStats_;
              bitField0_ = (bitField0_ & ~0x00000001);
              playerStatsBuilder_ = 
                com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders ?
                   getPlayerStatsFieldBuilder() : null;
            } else {
              playerStatsBuilder_.addAllMessages(other.playerStats_);
            }
          }
        }
        if (other.hasTowerKills()) {
          setTowerKills(other.getTowerKills());
        }
        if (other.hasBarrackKills()) {
          setBarrackKills(other.getBarrackKills());
        }
        if (other.hasAvailableLaneCreepGold()) {
          setAvailableLaneCreepGold(other.getAvailableLaneCreepGold());
        }
        if (other.hasBalanceKillValue()) {
          setBalanceKillValue(other.getBalanceKillValue());
        }
        if (other.hasBalanceTowerValue()) {
          setBalanceTowerValue(other.getBalanceTowerValue());
        }
        if (other.hasBalanceBarracksValue()) {
          setBalanceBarracksValue(other.getBalanceBarracksValue());
        }
        if (other.hasBalanceGoldValue()) {
          setBalanceGoldValue(other.getBalanceGoldValue());
        }
        if (other.hasBalanceXpValue()) {
          setBalanceXpValue(other.getBalanceXpValue());
        }
        if (lanePerformanceBuilder_ == null) {
          if (!other.lanePerformance_.isEmpty()) {
            if (lanePerformance_.isEmpty()) {
              lanePerformance_ = other.lanePerformance_;
              bitField0_ = (bitField0_ & ~0x00000200);
            } else {
              ensureLanePerformanceIsMutable();
              lanePerformance_.addAll(other.lanePerformance_);
            }
            onChanged();
          }
        } else {
          if (!other.lanePerformance_.isEmpty()) {
            if (lanePerformanceBuilder_.isEmpty()) {
              lanePerformanceBuilder_.dispose();
              lanePerformanceBuilder_ = null;
              lanePerformance_ = other.lanePerformance_;
              bitField0_ = (bitField0_ & ~0x00000200);
              lanePerformanceBuilder_ = 
                com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders ?
                   getLanePerformanceFieldBuilder() : null;
            } else {
              lanePerformanceBuilder_.addAllMessages(other.lanePerformance_);
            }
          }
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_StatsTeamMinuteDetails parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_StatsTeamMinuteDetails) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private java.util.List<skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_StatsHeroMinuteDetails> playerStats_ =
        java.util.Collections.emptyList();
      private void ensurePlayerStatsIsMutable() {
        if (!((bitField0_ & 0x00000001) == 0x00000001)) {
          playerStats_ = new java.util.ArrayList<skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_StatsHeroMinuteDetails>(playerStats_);
          bitField0_ |= 0x00000001;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilder<
          skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_StatsHeroMinuteDetails, skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_StatsHeroMinuteDetails.Builder, skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_StatsHeroMinuteDetailsOrBuilder> playerStatsBuilder_;

      /**
       * <code>repeated .CDOTAUserMsg_StatsHeroMinuteDetails player_stats = 1;</code>
       */
      public java.util.List<skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_StatsHeroMinuteDetails> getPlayerStatsList() {
        if (playerStatsBuilder_ == null) {
          return java.util.Collections.unmodifiableList(playerStats_);
        } else {
          return playerStatsBuilder_.getMessageList();
        }
      }
      /**
       * <code>repeated .CDOTAUserMsg_StatsHeroMinuteDetails player_stats = 1;</code>
       */
      public int getPlayerStatsCount() {
        if (playerStatsBuilder_ == null) {
          return playerStats_.size();
        } else {
          return playerStatsBuilder_.getCount();
        }
      }
      /**
       * <code>repeated .CDOTAUserMsg_StatsHeroMinuteDetails player_stats = 1;</code>
       */
      public skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_StatsHeroMinuteDetails getPlayerStats(int index) {
        if (playerStatsBuilder_ == null) {
          return playerStats_.get(index);
        } else {
          return playerStatsBuilder_.getMessage(index);
        }
      }
      /**
       * <code>repeated .CDOTAUserMsg_StatsHeroMinuteDetails player_stats = 1;</code>
       */
      public Builder setPlayerStats(
          int index, skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_StatsHeroMinuteDetails value) {
        if (playerStatsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensurePlayerStatsIsMutable();
          playerStats_.set(index, value);
          onChanged();
        } else {
          playerStatsBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .CDOTAUserMsg_StatsHeroMinuteDetails player_stats = 1;</code>
       */
      public Builder setPlayerStats(
          int index, skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_StatsHeroMinuteDetails.Builder builderForValue) {
        if (playerStatsBuilder_ == null) {
          ensurePlayerStatsIsMutable();
          playerStats_.set(index, builderForValue.build());
          onChanged();
        } else {
          playerStatsBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .CDOTAUserMsg_StatsHeroMinuteDetails player_stats = 1;</code>
       */
      public Builder addPlayerStats(skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_StatsHeroMinuteDetails value) {
        if (playerStatsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensurePlayerStatsIsMutable();
          playerStats_.add(value);
          onChanged();
        } else {
          playerStatsBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <code>repeated .CDOTAUserMsg_StatsHeroMinuteDetails player_stats = 1;</code>
       */
      public Builder addPlayerStats(
          int index, skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_StatsHeroMinuteDetails value) {
        if (playerStatsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensurePlayerStatsIsMutable();
          playerStats_.add(index, value);
          onChanged();
        } else {
          playerStatsBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .CDOTAUserMsg_StatsHeroMinuteDetails player_stats = 1;</code>
       */
      public Builder addPlayerStats(
          skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_StatsHeroMinuteDetails.Builder builderForValue) {
        if (playerStatsBuilder_ == null) {
          ensurePlayerStatsIsMutable();
          playerStats_.add(builderForValue.build());
          onChanged();
        } else {
          playerStatsBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .CDOTAUserMsg_StatsHeroMinuteDetails player_stats = 1;</code>
       */
      public Builder addPlayerStats(
          int index, skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_StatsHeroMinuteDetails.Builder builderForValue) {
        if (playerStatsBuilder_ == null) {
          ensurePlayerStatsIsMutable();
          playerStats_.add(index, builderForValue.build());
          onChanged();
        } else {
          playerStatsBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .CDOTAUserMsg_StatsHeroMinuteDetails player_stats = 1;</code>
       */
      public Builder addAllPlayerStats(
          java.lang.Iterable<? extends skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_StatsHeroMinuteDetails> values) {
        if (playerStatsBuilder_ == null) {
          ensurePlayerStatsIsMutable();
          com.google.protobuf.AbstractMessageLite.Builder.addAll(
              values, playerStats_);
          onChanged();
        } else {
          playerStatsBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <code>repeated .CDOTAUserMsg_StatsHeroMinuteDetails player_stats = 1;</code>
       */
      public Builder clearPlayerStats() {
        if (playerStatsBuilder_ == null) {
          playerStats_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000001);
          onChanged();
        } else {
          playerStatsBuilder_.clear();
        }
        return this;
      }
      /**
       * <code>repeated .CDOTAUserMsg_StatsHeroMinuteDetails player_stats = 1;</code>
       */
      public Builder removePlayerStats(int index) {
        if (playerStatsBuilder_ == null) {
          ensurePlayerStatsIsMutable();
          playerStats_.remove(index);
          onChanged();
        } else {
          playerStatsBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <code>repeated .CDOTAUserMsg_StatsHeroMinuteDetails player_stats = 1;</code>
       */
      public skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_StatsHeroMinuteDetails.Builder getPlayerStatsBuilder(
          int index) {
        return getPlayerStatsFieldBuilder().getBuilder(index);
      }
      /**
       * <code>repeated .CDOTAUserMsg_StatsHeroMinuteDetails player_stats = 1;</code>
       */
      public skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_StatsHeroMinuteDetailsOrBuilder getPlayerStatsOrBuilder(
          int index) {
        if (playerStatsBuilder_ == null) {
          return playerStats_.get(index);  } else {
          return playerStatsBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <code>repeated .CDOTAUserMsg_StatsHeroMinuteDetails player_stats = 1;</code>
       */
      public java.util.List<? extends skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_StatsHeroMinuteDetailsOrBuilder> 
           getPlayerStatsOrBuilderList() {
        if (playerStatsBuilder_ != null) {
          return playerStatsBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(playerStats_);
        }
      }
      /**
       * <code>repeated .CDOTAUserMsg_StatsHeroMinuteDetails player_stats = 1;</code>
       */
      public skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_StatsHeroMinuteDetails.Builder addPlayerStatsBuilder() {
        return getPlayerStatsFieldBuilder().addBuilder(
            skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_StatsHeroMinuteDetails.getDefaultInstance());
      }
      /**
       * <code>repeated .CDOTAUserMsg_StatsHeroMinuteDetails player_stats = 1;</code>
       */
      public skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_StatsHeroMinuteDetails.Builder addPlayerStatsBuilder(
          int index) {
        return getPlayerStatsFieldBuilder().addBuilder(
            index, skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_StatsHeroMinuteDetails.getDefaultInstance());
      }
      /**
       * <code>repeated .CDOTAUserMsg_StatsHeroMinuteDetails player_stats = 1;</code>
       */
      public java.util.List<skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_StatsHeroMinuteDetails.Builder> 
           getPlayerStatsBuilderList() {
        return getPlayerStatsFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilder<
          skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_StatsHeroMinuteDetails, skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_StatsHeroMinuteDetails.Builder, skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_StatsHeroMinuteDetailsOrBuilder> 
          getPlayerStatsFieldBuilder() {
        if (playerStatsBuilder_ == null) {
          playerStatsBuilder_ = new com.google.protobuf.RepeatedFieldBuilder<
              skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_StatsHeroMinuteDetails, skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_StatsHeroMinuteDetails.Builder, skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_StatsHeroMinuteDetailsOrBuilder>(
                  playerStats_,
                  ((bitField0_ & 0x00000001) == 0x00000001),
                  getParentForChildren(),
                  isClean());
          playerStats_ = null;
        }
        return playerStatsBuilder_;
      }

      private int towerKills_ ;
      /**
       * <code>optional uint32 tower_kills = 2;</code>
       */
      public boolean hasTowerKills() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>optional uint32 tower_kills = 2;</code>
       */
      public int getTowerKills() {
        return towerKills_;
      }
      /**
       * <code>optional uint32 tower_kills = 2;</code>
       */
      public Builder setTowerKills(int value) {
        bitField0_ |= 0x00000002;
        towerKills_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional uint32 tower_kills = 2;</code>
       */
      public Builder clearTowerKills() {
        bitField0_ = (bitField0_ & ~0x00000002);
        towerKills_ = 0;
        onChanged();
        return this;
      }

      private int barrackKills_ ;
      /**
       * <code>optional uint32 barrack_kills = 3;</code>
       */
      public boolean hasBarrackKills() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }
      /**
       * <code>optional uint32 barrack_kills = 3;</code>
       */
      public int getBarrackKills() {
        return barrackKills_;
      }
      /**
       * <code>optional uint32 barrack_kills = 3;</code>
       */
      public Builder setBarrackKills(int value) {
        bitField0_ |= 0x00000004;
        barrackKills_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional uint32 barrack_kills = 3;</code>
       */
      public Builder clearBarrackKills() {
        bitField0_ = (bitField0_ & ~0x00000004);
        barrackKills_ = 0;
        onChanged();
        return this;
      }

      private int availableLaneCreepGold_ ;
      /**
       * <code>optional uint32 available_lane_creep_gold = 4;</code>
       */
      public boolean hasAvailableLaneCreepGold() {
        return ((bitField0_ & 0x00000008) == 0x00000008);
      }
      /**
       * <code>optional uint32 available_lane_creep_gold = 4;</code>
       */
      public int getAvailableLaneCreepGold() {
        return availableLaneCreepGold_;
      }
      /**
       * <code>optional uint32 available_lane_creep_gold = 4;</code>
       */
      public Builder setAvailableLaneCreepGold(int value) {
        bitField0_ |= 0x00000008;
        availableLaneCreepGold_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional uint32 available_lane_creep_gold = 4;</code>
       */
      public Builder clearAvailableLaneCreepGold() {
        bitField0_ = (bitField0_ & ~0x00000008);
        availableLaneCreepGold_ = 0;
        onChanged();
        return this;
      }

      private int balanceKillValue_ ;
      /**
       * <code>optional uint32 balance_kill_value = 5;</code>
       */
      public boolean hasBalanceKillValue() {
        return ((bitField0_ & 0x00000010) == 0x00000010);
      }
      /**
       * <code>optional uint32 balance_kill_value = 5;</code>
       */
      public int getBalanceKillValue() {
        return balanceKillValue_;
      }
      /**
       * <code>optional uint32 balance_kill_value = 5;</code>
       */
      public Builder setBalanceKillValue(int value) {
        bitField0_ |= 0x00000010;
        balanceKillValue_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional uint32 balance_kill_value = 5;</code>
       */
      public Builder clearBalanceKillValue() {
        bitField0_ = (bitField0_ & ~0x00000010);
        balanceKillValue_ = 0;
        onChanged();
        return this;
      }

      private int balanceTowerValue_ ;
      /**
       * <code>optional uint32 balance_tower_value = 6;</code>
       */
      public boolean hasBalanceTowerValue() {
        return ((bitField0_ & 0x00000020) == 0x00000020);
      }
      /**
       * <code>optional uint32 balance_tower_value = 6;</code>
       */
      public int getBalanceTowerValue() {
        return balanceTowerValue_;
      }
      /**
       * <code>optional uint32 balance_tower_value = 6;</code>
       */
      public Builder setBalanceTowerValue(int value) {
        bitField0_ |= 0x00000020;
        balanceTowerValue_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional uint32 balance_tower_value = 6;</code>
       */
      public Builder clearBalanceTowerValue() {
        bitField0_ = (bitField0_ & ~0x00000020);
        balanceTowerValue_ = 0;
        onChanged();
        return this;
      }

      private int balanceBarracksValue_ ;
      /**
       * <code>optional uint32 balance_barracks_value = 7;</code>
       */
      public boolean hasBalanceBarracksValue() {
        return ((bitField0_ & 0x00000040) == 0x00000040);
      }
      /**
       * <code>optional uint32 balance_barracks_value = 7;</code>
       */
      public int getBalanceBarracksValue() {
        return balanceBarracksValue_;
      }
      /**
       * <code>optional uint32 balance_barracks_value = 7;</code>
       */
      public Builder setBalanceBarracksValue(int value) {
        bitField0_ |= 0x00000040;
        balanceBarracksValue_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional uint32 balance_barracks_value = 7;</code>
       */
      public Builder clearBalanceBarracksValue() {
        bitField0_ = (bitField0_ & ~0x00000040);
        balanceBarracksValue_ = 0;
        onChanged();
        return this;
      }

      private int balanceGoldValue_ ;
      /**
       * <code>optional uint32 balance_gold_value = 8;</code>
       */
      public boolean hasBalanceGoldValue() {
        return ((bitField0_ & 0x00000080) == 0x00000080);
      }
      /**
       * <code>optional uint32 balance_gold_value = 8;</code>
       */
      public int getBalanceGoldValue() {
        return balanceGoldValue_;
      }
      /**
       * <code>optional uint32 balance_gold_value = 8;</code>
       */
      public Builder setBalanceGoldValue(int value) {
        bitField0_ |= 0x00000080;
        balanceGoldValue_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional uint32 balance_gold_value = 8;</code>
       */
      public Builder clearBalanceGoldValue() {
        bitField0_ = (bitField0_ & ~0x00000080);
        balanceGoldValue_ = 0;
        onChanged();
        return this;
      }

      private int balanceXpValue_ ;
      /**
       * <code>optional uint32 balance_xp_value = 9;</code>
       */
      public boolean hasBalanceXpValue() {
        return ((bitField0_ & 0x00000100) == 0x00000100);
      }
      /**
       * <code>optional uint32 balance_xp_value = 9;</code>
       */
      public int getBalanceXpValue() {
        return balanceXpValue_;
      }
      /**
       * <code>optional uint32 balance_xp_value = 9;</code>
       */
      public Builder setBalanceXpValue(int value) {
        bitField0_ |= 0x00000100;
        balanceXpValue_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional uint32 balance_xp_value = 9;</code>
       */
      public Builder clearBalanceXpValue() {
        bitField0_ = (bitField0_ & ~0x00000100);
        balanceXpValue_ = 0;
        onChanged();
        return this;
      }

      private java.util.List<skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_StatsTeamMinuteDetails.LocationPerformance> lanePerformance_ =
        java.util.Collections.emptyList();
      private void ensureLanePerformanceIsMutable() {
        if (!((bitField0_ & 0x00000200) == 0x00000200)) {
          lanePerformance_ = new java.util.ArrayList<skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_StatsTeamMinuteDetails.LocationPerformance>(lanePerformance_);
          bitField0_ |= 0x00000200;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilder<
          skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_StatsTeamMinuteDetails.LocationPerformance, skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_StatsTeamMinuteDetails.LocationPerformance.Builder, skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_StatsTeamMinuteDetails.LocationPerformanceOrBuilder> lanePerformanceBuilder_;

      /**
       * <code>repeated .CDOTAUserMsg_StatsTeamMinuteDetails.LocationPerformance lane_performance = 10;</code>
       */
      public java.util.List<skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_StatsTeamMinuteDetails.LocationPerformance> getLanePerformanceList() {
        if (lanePerformanceBuilder_ == null) {
          return java.util.Collections.unmodifiableList(lanePerformance_);
        } else {
          return lanePerformanceBuilder_.getMessageList();
        }
      }
      /**
       * <code>repeated .CDOTAUserMsg_StatsTeamMinuteDetails.LocationPerformance lane_performance = 10;</code>
       */
      public int getLanePerformanceCount() {
        if (lanePerformanceBuilder_ == null) {
          return lanePerformance_.size();
        } else {
          return lanePerformanceBuilder_.getCount();
        }
      }
      /**
       * <code>repeated .CDOTAUserMsg_StatsTeamMinuteDetails.LocationPerformance lane_performance = 10;</code>
       */
      public skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_StatsTeamMinuteDetails.LocationPerformance getLanePerformance(int index) {
        if (lanePerformanceBuilder_ == null) {
          return lanePerformance_.get(index);
        } else {
          return lanePerformanceBuilder_.getMessage(index);
        }
      }
      /**
       * <code>repeated .CDOTAUserMsg_StatsTeamMinuteDetails.LocationPerformance lane_performance = 10;</code>
       */
      public Builder setLanePerformance(
          int index, skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_StatsTeamMinuteDetails.LocationPerformance value) {
        if (lanePerformanceBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureLanePerformanceIsMutable();
          lanePerformance_.set(index, value);
          onChanged();
        } else {
          lanePerformanceBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .CDOTAUserMsg_StatsTeamMinuteDetails.LocationPerformance lane_performance = 10;</code>
       */
      public Builder setLanePerformance(
          int index, skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_StatsTeamMinuteDetails.LocationPerformance.Builder builderForValue) {
        if (lanePerformanceBuilder_ == null) {
          ensureLanePerformanceIsMutable();
          lanePerformance_.set(index, builderForValue.build());
          onChanged();
        } else {
          lanePerformanceBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .CDOTAUserMsg_StatsTeamMinuteDetails.LocationPerformance lane_performance = 10;</code>
       */
      public Builder addLanePerformance(skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_StatsTeamMinuteDetails.LocationPerformance value) {
        if (lanePerformanceBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureLanePerformanceIsMutable();
          lanePerformance_.add(value);
          onChanged();
        } else {
          lanePerformanceBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <code>repeated .CDOTAUserMsg_StatsTeamMinuteDetails.LocationPerformance lane_performance = 10;</code>
       */
      public Builder addLanePerformance(
          int index, skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_StatsTeamMinuteDetails.LocationPerformance value) {
        if (lanePerformanceBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureLanePerformanceIsMutable();
          lanePerformance_.add(index, value);
          onChanged();
        } else {
          lanePerformanceBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .CDOTAUserMsg_StatsTeamMinuteDetails.LocationPerformance lane_performance = 10;</code>
       */
      public Builder addLanePerformance(
          skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_StatsTeamMinuteDetails.LocationPerformance.Builder builderForValue) {
        if (lanePerformanceBuilder_ == null) {
          ensureLanePerformanceIsMutable();
          lanePerformance_.add(builderForValue.build());
          onChanged();
        } else {
          lanePerformanceBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .CDOTAUserMsg_StatsTeamMinuteDetails.LocationPerformance lane_performance = 10;</code>
       */
      public Builder addLanePerformance(
          int index, skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_StatsTeamMinuteDetails.LocationPerformance.Builder builderForValue) {
        if (lanePerformanceBuilder_ == null) {
          ensureLanePerformanceIsMutable();
          lanePerformance_.add(index, builderForValue.build());
          onChanged();
        } else {
          lanePerformanceBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .CDOTAUserMsg_StatsTeamMinuteDetails.LocationPerformance lane_performance = 10;</code>
       */
      public Builder addAllLanePerformance(
          java.lang.Iterable<? extends skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_StatsTeamMinuteDetails.LocationPerformance> values) {
        if (lanePerformanceBuilder_ == null) {
          ensureLanePerformanceIsMutable();
          com.google.protobuf.AbstractMessageLite.Builder.addAll(
              values, lanePerformance_);
          onChanged();
        } else {
          lanePerformanceBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <code>repeated .CDOTAUserMsg_StatsTeamMinuteDetails.LocationPerformance lane_performance = 10;</code>
       */
      public Builder clearLanePerformance() {
        if (lanePerformanceBuilder_ == null) {
          lanePerformance_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000200);
          onChanged();
        } else {
          lanePerformanceBuilder_.clear();
        }
        return this;
      }
      /**
       * <code>repeated .CDOTAUserMsg_StatsTeamMinuteDetails.LocationPerformance lane_performance = 10;</code>
       */
      public Builder removeLanePerformance(int index) {
        if (lanePerformanceBuilder_ == null) {
          ensureLanePerformanceIsMutable();
          lanePerformance_.remove(index);
          onChanged();
        } else {
          lanePerformanceBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <code>repeated .CDOTAUserMsg_StatsTeamMinuteDetails.LocationPerformance lane_performance = 10;</code>
       */
      public skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_StatsTeamMinuteDetails.LocationPerformance.Builder getLanePerformanceBuilder(
          int index) {
        return getLanePerformanceFieldBuilder().getBuilder(index);
      }
      /**
       * <code>repeated .CDOTAUserMsg_StatsTeamMinuteDetails.LocationPerformance lane_performance = 10;</code>
       */
      public skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_StatsTeamMinuteDetails.LocationPerformanceOrBuilder getLanePerformanceOrBuilder(
          int index) {
        if (lanePerformanceBuilder_ == null) {
          return lanePerformance_.get(index);  } else {
          return lanePerformanceBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <code>repeated .CDOTAUserMsg_StatsTeamMinuteDetails.LocationPerformance lane_performance = 10;</code>
       */
      public java.util.List<? extends skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_StatsTeamMinuteDetails.LocationPerformanceOrBuilder> 
           getLanePerformanceOrBuilderList() {
        if (lanePerformanceBuilder_ != null) {
          return lanePerformanceBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(lanePerformance_);
        }
      }
      /**
       * <code>repeated .CDOTAUserMsg_StatsTeamMinuteDetails.LocationPerformance lane_performance = 10;</code>
       */
      public skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_StatsTeamMinuteDetails.LocationPerformance.Builder addLanePerformanceBuilder() {
        return getLanePerformanceFieldBuilder().addBuilder(
            skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_StatsTeamMinuteDetails.LocationPerformance.getDefaultInstance());
      }
      /**
       * <code>repeated .CDOTAUserMsg_StatsTeamMinuteDetails.LocationPerformance lane_performance = 10;</code>
       */
      public skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_StatsTeamMinuteDetails.LocationPerformance.Builder addLanePerformanceBuilder(
          int index) {
        return getLanePerformanceFieldBuilder().addBuilder(
            index, skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_StatsTeamMinuteDetails.LocationPerformance.getDefaultInstance());
      }
      /**
       * <code>repeated .CDOTAUserMsg_StatsTeamMinuteDetails.LocationPerformance lane_performance = 10;</code>
       */
      public java.util.List<skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_StatsTeamMinuteDetails.LocationPerformance.Builder> 
           getLanePerformanceBuilderList() {
        return getLanePerformanceFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilder<
          skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_StatsTeamMinuteDetails.LocationPerformance, skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_StatsTeamMinuteDetails.LocationPerformance.Builder, skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_StatsTeamMinuteDetails.LocationPerformanceOrBuilder> 
          getLanePerformanceFieldBuilder() {
        if (lanePerformanceBuilder_ == null) {
          lanePerformanceBuilder_ = new com.google.protobuf.RepeatedFieldBuilder<
              skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_StatsTeamMinuteDetails.LocationPerformance, skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_StatsTeamMinuteDetails.LocationPerformance.Builder, skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_StatsTeamMinuteDetails.LocationPerformanceOrBuilder>(
                  lanePerformance_,
                  ((bitField0_ & 0x00000200) == 0x00000200),
                  getParentForChildren(),
                  isClean());
          lanePerformance_ = null;
        }
        return lanePerformanceBuilder_;
      }

      // @@protoc_insertion_point(builder_scope:CDOTAUserMsg_StatsTeamMinuteDetails)
    }

    static {
      defaultInstance = new CDOTAUserMsg_StatsTeamMinuteDetails(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:CDOTAUserMsg_StatsTeamMinuteDetails)
  }

  public interface CDOTAUserMsg_StatsPlayerKillShareOrBuilder extends
      // @@protoc_insertion_point(interface_extends:CDOTAUserMsg_StatsPlayerKillShare)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>optional int32 player_id = 1;</code>
     */
    boolean hasPlayerId();
    /**
     * <code>optional int32 player_id = 1;</code>
     */
    int getPlayerId();

    /**
     * <code>optional float kill_share_percent = 2;</code>
     */
    boolean hasKillSharePercent();
    /**
     * <code>optional float kill_share_percent = 2;</code>
     */
    float getKillSharePercent();

    /**
     * <code>optional float player_loc_x = 3;</code>
     */
    boolean hasPlayerLocX();
    /**
     * <code>optional float player_loc_x = 3;</code>
     */
    float getPlayerLocX();

    /**
     * <code>optional float player_loc_y = 4;</code>
     */
    boolean hasPlayerLocY();
    /**
     * <code>optional float player_loc_y = 4;</code>
     */
    float getPlayerLocY();

    /**
     * <code>optional float health_percent = 5;</code>
     */
    boolean hasHealthPercent();
    /**
     * <code>optional float health_percent = 5;</code>
     */
    float getHealthPercent();

    /**
     * <code>optional float mana_percent = 6;</code>
     */
    boolean hasManaPercent();
    /**
     * <code>optional float mana_percent = 6;</code>
     */
    float getManaPercent();
  }
  /**
   * Protobuf type {@code CDOTAUserMsg_StatsPlayerKillShare}
   */
  public static final class CDOTAUserMsg_StatsPlayerKillShare extends
      com.google.protobuf.GeneratedMessage implements
      // @@protoc_insertion_point(message_implements:CDOTAUserMsg_StatsPlayerKillShare)
      CDOTAUserMsg_StatsPlayerKillShareOrBuilder {
    // Use CDOTAUserMsg_StatsPlayerKillShare.newBuilder() to construct.
    private CDOTAUserMsg_StatsPlayerKillShare(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private CDOTAUserMsg_StatsPlayerKillShare(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final CDOTAUserMsg_StatsPlayerKillShare defaultInstance;
    public static CDOTAUserMsg_StatsPlayerKillShare getDefaultInstance() {
      return defaultInstance;
    }

    public CDOTAUserMsg_StatsPlayerKillShare getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private CDOTAUserMsg_StatsPlayerKillShare(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 8: {
              bitField0_ |= 0x00000001;
              playerId_ = input.readInt32();
              break;
            }
            case 21: {
              bitField0_ |= 0x00000002;
              killSharePercent_ = input.readFloat();
              break;
            }
            case 29: {
              bitField0_ |= 0x00000004;
              playerLocX_ = input.readFloat();
              break;
            }
            case 37: {
              bitField0_ |= 0x00000008;
              playerLocY_ = input.readFloat();
              break;
            }
            case 45: {
              bitField0_ |= 0x00000010;
              healthPercent_ = input.readFloat();
              break;
            }
            case 53: {
              bitField0_ |= 0x00000020;
              manaPercent_ = input.readFloat();
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return skadistats.clarity.wire.common.proto.DotaUserMessages.internal_static_CDOTAUserMsg_StatsPlayerKillShare_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return skadistats.clarity.wire.common.proto.DotaUserMessages.internal_static_CDOTAUserMsg_StatsPlayerKillShare_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_StatsPlayerKillShare.class, skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_StatsPlayerKillShare.Builder.class);
    }

    public static com.google.protobuf.Parser<CDOTAUserMsg_StatsPlayerKillShare> PARSER =
        new com.google.protobuf.AbstractParser<CDOTAUserMsg_StatsPlayerKillShare>() {
      public CDOTAUserMsg_StatsPlayerKillShare parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new CDOTAUserMsg_StatsPlayerKillShare(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<CDOTAUserMsg_StatsPlayerKillShare> getParserForType() {
      return PARSER;
    }

    private int bitField0_;
    public static final int PLAYER_ID_FIELD_NUMBER = 1;
    private int playerId_;
    /**
     * <code>optional int32 player_id = 1;</code>
     */
    public boolean hasPlayerId() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>optional int32 player_id = 1;</code>
     */
    public int getPlayerId() {
      return playerId_;
    }

    public static final int KILL_SHARE_PERCENT_FIELD_NUMBER = 2;
    private float killSharePercent_;
    /**
     * <code>optional float kill_share_percent = 2;</code>
     */
    public boolean hasKillSharePercent() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>optional float kill_share_percent = 2;</code>
     */
    public float getKillSharePercent() {
      return killSharePercent_;
    }

    public static final int PLAYER_LOC_X_FIELD_NUMBER = 3;
    private float playerLocX_;
    /**
     * <code>optional float player_loc_x = 3;</code>
     */
    public boolean hasPlayerLocX() {
      return ((bitField0_ & 0x00000004) == 0x00000004);
    }
    /**
     * <code>optional float player_loc_x = 3;</code>
     */
    public float getPlayerLocX() {
      return playerLocX_;
    }

    public static final int PLAYER_LOC_Y_FIELD_NUMBER = 4;
    private float playerLocY_;
    /**
     * <code>optional float player_loc_y = 4;</code>
     */
    public boolean hasPlayerLocY() {
      return ((bitField0_ & 0x00000008) == 0x00000008);
    }
    /**
     * <code>optional float player_loc_y = 4;</code>
     */
    public float getPlayerLocY() {
      return playerLocY_;
    }

    public static final int HEALTH_PERCENT_FIELD_NUMBER = 5;
    private float healthPercent_;
    /**
     * <code>optional float health_percent = 5;</code>
     */
    public boolean hasHealthPercent() {
      return ((bitField0_ & 0x00000010) == 0x00000010);
    }
    /**
     * <code>optional float health_percent = 5;</code>
     */
    public float getHealthPercent() {
      return healthPercent_;
    }

    public static final int MANA_PERCENT_FIELD_NUMBER = 6;
    private float manaPercent_;
    /**
     * <code>optional float mana_percent = 6;</code>
     */
    public boolean hasManaPercent() {
      return ((bitField0_ & 0x00000020) == 0x00000020);
    }
    /**
     * <code>optional float mana_percent = 6;</code>
     */
    public float getManaPercent() {
      return manaPercent_;
    }

    private void initFields() {
      playerId_ = 0;
      killSharePercent_ = 0F;
      playerLocX_ = 0F;
      playerLocY_ = 0F;
      healthPercent_ = 0F;
      manaPercent_ = 0F;
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeInt32(1, playerId_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeFloat(2, killSharePercent_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        output.writeFloat(3, playerLocX_);
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        output.writeFloat(4, playerLocY_);
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        output.writeFloat(5, healthPercent_);
      }
      if (((bitField0_ & 0x00000020) == 0x00000020)) {
        output.writeFloat(6, manaPercent_);
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(1, playerId_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeFloatSize(2, killSharePercent_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        size += com.google.protobuf.CodedOutputStream
          .computeFloatSize(3, playerLocX_);
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        size += com.google.protobuf.CodedOutputStream
          .computeFloatSize(4, playerLocY_);
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        size += com.google.protobuf.CodedOutputStream
          .computeFloatSize(5, healthPercent_);
      }
      if (((bitField0_ & 0x00000020) == 0x00000020)) {
        size += com.google.protobuf.CodedOutputStream
          .computeFloatSize(6, manaPercent_);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_StatsPlayerKillShare parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_StatsPlayerKillShare parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_StatsPlayerKillShare parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_StatsPlayerKillShare parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_StatsPlayerKillShare parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_StatsPlayerKillShare parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_StatsPlayerKillShare parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_StatsPlayerKillShare parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_StatsPlayerKillShare parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_StatsPlayerKillShare parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_StatsPlayerKillShare prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code CDOTAUserMsg_StatsPlayerKillShare}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:CDOTAUserMsg_StatsPlayerKillShare)
        skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_StatsPlayerKillShareOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return skadistats.clarity.wire.common.proto.DotaUserMessages.internal_static_CDOTAUserMsg_StatsPlayerKillShare_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return skadistats.clarity.wire.common.proto.DotaUserMessages.internal_static_CDOTAUserMsg_StatsPlayerKillShare_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_StatsPlayerKillShare.class, skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_StatsPlayerKillShare.Builder.class);
      }

      // Construct using skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_StatsPlayerKillShare.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        playerId_ = 0;
        bitField0_ = (bitField0_ & ~0x00000001);
        killSharePercent_ = 0F;
        bitField0_ = (bitField0_ & ~0x00000002);
        playerLocX_ = 0F;
        bitField0_ = (bitField0_ & ~0x00000004);
        playerLocY_ = 0F;
        bitField0_ = (bitField0_ & ~0x00000008);
        healthPercent_ = 0F;
        bitField0_ = (bitField0_ & ~0x00000010);
        manaPercent_ = 0F;
        bitField0_ = (bitField0_ & ~0x00000020);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return skadistats.clarity.wire.common.proto.DotaUserMessages.internal_static_CDOTAUserMsg_StatsPlayerKillShare_descriptor;
      }

      public skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_StatsPlayerKillShare getDefaultInstanceForType() {
        return skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_StatsPlayerKillShare.getDefaultInstance();
      }

      public skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_StatsPlayerKillShare build() {
        skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_StatsPlayerKillShare result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_StatsPlayerKillShare buildPartial() {
        skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_StatsPlayerKillShare result = new skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_StatsPlayerKillShare(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.playerId_ = playerId_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.killSharePercent_ = killSharePercent_;
        if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
          to_bitField0_ |= 0x00000004;
        }
        result.playerLocX_ = playerLocX_;
        if (((from_bitField0_ & 0x00000008) == 0x00000008)) {
          to_bitField0_ |= 0x00000008;
        }
        result.playerLocY_ = playerLocY_;
        if (((from_bitField0_ & 0x00000010) == 0x00000010)) {
          to_bitField0_ |= 0x00000010;
        }
        result.healthPercent_ = healthPercent_;
        if (((from_bitField0_ & 0x00000020) == 0x00000020)) {
          to_bitField0_ |= 0x00000020;
        }
        result.manaPercent_ = manaPercent_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_StatsPlayerKillShare) {
          return mergeFrom((skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_StatsPlayerKillShare)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_StatsPlayerKillShare other) {
        if (other == skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_StatsPlayerKillShare.getDefaultInstance()) return this;
        if (other.hasPlayerId()) {
          setPlayerId(other.getPlayerId());
        }
        if (other.hasKillSharePercent()) {
          setKillSharePercent(other.getKillSharePercent());
        }
        if (other.hasPlayerLocX()) {
          setPlayerLocX(other.getPlayerLocX());
        }
        if (other.hasPlayerLocY()) {
          setPlayerLocY(other.getPlayerLocY());
        }
        if (other.hasHealthPercent()) {
          setHealthPercent(other.getHealthPercent());
        }
        if (other.hasManaPercent()) {
          setManaPercent(other.getManaPercent());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_StatsPlayerKillShare parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_StatsPlayerKillShare) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private int playerId_ ;
      /**
       * <code>optional int32 player_id = 1;</code>
       */
      public boolean hasPlayerId() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>optional int32 player_id = 1;</code>
       */
      public int getPlayerId() {
        return playerId_;
      }
      /**
       * <code>optional int32 player_id = 1;</code>
       */
      public Builder setPlayerId(int value) {
        bitField0_ |= 0x00000001;
        playerId_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 player_id = 1;</code>
       */
      public Builder clearPlayerId() {
        bitField0_ = (bitField0_ & ~0x00000001);
        playerId_ = 0;
        onChanged();
        return this;
      }

      private float killSharePercent_ ;
      /**
       * <code>optional float kill_share_percent = 2;</code>
       */
      public boolean hasKillSharePercent() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>optional float kill_share_percent = 2;</code>
       */
      public float getKillSharePercent() {
        return killSharePercent_;
      }
      /**
       * <code>optional float kill_share_percent = 2;</code>
       */
      public Builder setKillSharePercent(float value) {
        bitField0_ |= 0x00000002;
        killSharePercent_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional float kill_share_percent = 2;</code>
       */
      public Builder clearKillSharePercent() {
        bitField0_ = (bitField0_ & ~0x00000002);
        killSharePercent_ = 0F;
        onChanged();
        return this;
      }

      private float playerLocX_ ;
      /**
       * <code>optional float player_loc_x = 3;</code>
       */
      public boolean hasPlayerLocX() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }
      /**
       * <code>optional float player_loc_x = 3;</code>
       */
      public float getPlayerLocX() {
        return playerLocX_;
      }
      /**
       * <code>optional float player_loc_x = 3;</code>
       */
      public Builder setPlayerLocX(float value) {
        bitField0_ |= 0x00000004;
        playerLocX_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional float player_loc_x = 3;</code>
       */
      public Builder clearPlayerLocX() {
        bitField0_ = (bitField0_ & ~0x00000004);
        playerLocX_ = 0F;
        onChanged();
        return this;
      }

      private float playerLocY_ ;
      /**
       * <code>optional float player_loc_y = 4;</code>
       */
      public boolean hasPlayerLocY() {
        return ((bitField0_ & 0x00000008) == 0x00000008);
      }
      /**
       * <code>optional float player_loc_y = 4;</code>
       */
      public float getPlayerLocY() {
        return playerLocY_;
      }
      /**
       * <code>optional float player_loc_y = 4;</code>
       */
      public Builder setPlayerLocY(float value) {
        bitField0_ |= 0x00000008;
        playerLocY_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional float player_loc_y = 4;</code>
       */
      public Builder clearPlayerLocY() {
        bitField0_ = (bitField0_ & ~0x00000008);
        playerLocY_ = 0F;
        onChanged();
        return this;
      }

      private float healthPercent_ ;
      /**
       * <code>optional float health_percent = 5;</code>
       */
      public boolean hasHealthPercent() {
        return ((bitField0_ & 0x00000010) == 0x00000010);
      }
      /**
       * <code>optional float health_percent = 5;</code>
       */
      public float getHealthPercent() {
        return healthPercent_;
      }
      /**
       * <code>optional float health_percent = 5;</code>
       */
      public Builder setHealthPercent(float value) {
        bitField0_ |= 0x00000010;
        healthPercent_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional float health_percent = 5;</code>
       */
      public Builder clearHealthPercent() {
        bitField0_ = (bitField0_ & ~0x00000010);
        healthPercent_ = 0F;
        onChanged();
        return this;
      }

      private float manaPercent_ ;
      /**
       * <code>optional float mana_percent = 6;</code>
       */
      public boolean hasManaPercent() {
        return ((bitField0_ & 0x00000020) == 0x00000020);
      }
      /**
       * <code>optional float mana_percent = 6;</code>
       */
      public float getManaPercent() {
        return manaPercent_;
      }
      /**
       * <code>optional float mana_percent = 6;</code>
       */
      public Builder setManaPercent(float value) {
        bitField0_ |= 0x00000020;
        manaPercent_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional float mana_percent = 6;</code>
       */
      public Builder clearManaPercent() {
        bitField0_ = (bitField0_ & ~0x00000020);
        manaPercent_ = 0F;
        onChanged();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:CDOTAUserMsg_StatsPlayerKillShare)
    }

    static {
      defaultInstance = new CDOTAUserMsg_StatsPlayerKillShare(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:CDOTAUserMsg_StatsPlayerKillShare)
  }

  public interface CDOTAUserMsg_StatsKillDetailsOrBuilder extends
      // @@protoc_insertion_point(interface_extends:CDOTAUserMsg_StatsKillDetails)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>optional uint32 victim_id = 1;</code>
     */
    boolean hasVictimId();
    /**
     * <code>optional uint32 victim_id = 1;</code>
     */
    int getVictimId();

    /**
     * <code>repeated .CDOTAUserMsg_StatsPlayerKillShare kill_shares = 2;</code>
     */
    java.util.List<skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_StatsPlayerKillShare> 
        getKillSharesList();
    /**
     * <code>repeated .CDOTAUserMsg_StatsPlayerKillShare kill_shares = 2;</code>
     */
    skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_StatsPlayerKillShare getKillShares(int index);
    /**
     * <code>repeated .CDOTAUserMsg_StatsPlayerKillShare kill_shares = 2;</code>
     */
    int getKillSharesCount();
    /**
     * <code>repeated .CDOTAUserMsg_StatsPlayerKillShare kill_shares = 2;</code>
     */
    java.util.List<? extends skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_StatsPlayerKillShareOrBuilder> 
        getKillSharesOrBuilderList();
    /**
     * <code>repeated .CDOTAUserMsg_StatsPlayerKillShare kill_shares = 2;</code>
     */
    skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_StatsPlayerKillShareOrBuilder getKillSharesOrBuilder(
        int index);

    /**
     * <code>optional uint32 damage_to_kill = 3;</code>
     */
    boolean hasDamageToKill();
    /**
     * <code>optional uint32 damage_to_kill = 3;</code>
     */
    int getDamageToKill();

    /**
     * <code>optional uint32 effective_health = 4;</code>
     */
    boolean hasEffectiveHealth();
    /**
     * <code>optional uint32 effective_health = 4;</code>
     */
    int getEffectiveHealth();

    /**
     * <code>optional float death_time = 5;</code>
     */
    boolean hasDeathTime();
    /**
     * <code>optional float death_time = 5;</code>
     */
    float getDeathTime();

    /**
     * <code>optional uint32 killer_id = 6;</code>
     */
    boolean hasKillerId();
    /**
     * <code>optional uint32 killer_id = 6;</code>
     */
    int getKillerId();
  }
  /**
   * Protobuf type {@code CDOTAUserMsg_StatsKillDetails}
   */
  public static final class CDOTAUserMsg_StatsKillDetails extends
      com.google.protobuf.GeneratedMessage implements
      // @@protoc_insertion_point(message_implements:CDOTAUserMsg_StatsKillDetails)
      CDOTAUserMsg_StatsKillDetailsOrBuilder {
    // Use CDOTAUserMsg_StatsKillDetails.newBuilder() to construct.
    private CDOTAUserMsg_StatsKillDetails(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private CDOTAUserMsg_StatsKillDetails(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final CDOTAUserMsg_StatsKillDetails defaultInstance;
    public static CDOTAUserMsg_StatsKillDetails getDefaultInstance() {
      return defaultInstance;
    }

    public CDOTAUserMsg_StatsKillDetails getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private CDOTAUserMsg_StatsKillDetails(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 8: {
              bitField0_ |= 0x00000001;
              victimId_ = input.readUInt32();
              break;
            }
            case 18: {
              if (!((mutable_bitField0_ & 0x00000002) == 0x00000002)) {
                killShares_ = new java.util.ArrayList<skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_StatsPlayerKillShare>();
                mutable_bitField0_ |= 0x00000002;
              }
              killShares_.add(input.readMessage(skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_StatsPlayerKillShare.PARSER, extensionRegistry));
              break;
            }
            case 24: {
              bitField0_ |= 0x00000002;
              damageToKill_ = input.readUInt32();
              break;
            }
            case 32: {
              bitField0_ |= 0x00000004;
              effectiveHealth_ = input.readUInt32();
              break;
            }
            case 45: {
              bitField0_ |= 0x00000008;
              deathTime_ = input.readFloat();
              break;
            }
            case 48: {
              bitField0_ |= 0x00000010;
              killerId_ = input.readUInt32();
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        if (((mutable_bitField0_ & 0x00000002) == 0x00000002)) {
          killShares_ = java.util.Collections.unmodifiableList(killShares_);
        }
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return skadistats.clarity.wire.common.proto.DotaUserMessages.internal_static_CDOTAUserMsg_StatsKillDetails_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return skadistats.clarity.wire.common.proto.DotaUserMessages.internal_static_CDOTAUserMsg_StatsKillDetails_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_StatsKillDetails.class, skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_StatsKillDetails.Builder.class);
    }

    public static com.google.protobuf.Parser<CDOTAUserMsg_StatsKillDetails> PARSER =
        new com.google.protobuf.AbstractParser<CDOTAUserMsg_StatsKillDetails>() {
      public CDOTAUserMsg_StatsKillDetails parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new CDOTAUserMsg_StatsKillDetails(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<CDOTAUserMsg_StatsKillDetails> getParserForType() {
      return PARSER;
    }

    private int bitField0_;
    public static final int VICTIM_ID_FIELD_NUMBER = 1;
    private int victimId_;
    /**
     * <code>optional uint32 victim_id = 1;</code>
     */
    public boolean hasVictimId() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>optional uint32 victim_id = 1;</code>
     */
    public int getVictimId() {
      return victimId_;
    }

    public static final int KILL_SHARES_FIELD_NUMBER = 2;
    private java.util.List<skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_StatsPlayerKillShare> killShares_;
    /**
     * <code>repeated .CDOTAUserMsg_StatsPlayerKillShare kill_shares = 2;</code>
     */
    public java.util.List<skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_StatsPlayerKillShare> getKillSharesList() {
      return killShares_;
    }
    /**
     * <code>repeated .CDOTAUserMsg_StatsPlayerKillShare kill_shares = 2;</code>
     */
    public java.util.List<? extends skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_StatsPlayerKillShareOrBuilder> 
        getKillSharesOrBuilderList() {
      return killShares_;
    }
    /**
     * <code>repeated .CDOTAUserMsg_StatsPlayerKillShare kill_shares = 2;</code>
     */
    public int getKillSharesCount() {
      return killShares_.size();
    }
    /**
     * <code>repeated .CDOTAUserMsg_StatsPlayerKillShare kill_shares = 2;</code>
     */
    public skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_StatsPlayerKillShare getKillShares(int index) {
      return killShares_.get(index);
    }
    /**
     * <code>repeated .CDOTAUserMsg_StatsPlayerKillShare kill_shares = 2;</code>
     */
    public skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_StatsPlayerKillShareOrBuilder getKillSharesOrBuilder(
        int index) {
      return killShares_.get(index);
    }

    public static final int DAMAGE_TO_KILL_FIELD_NUMBER = 3;
    private int damageToKill_;
    /**
     * <code>optional uint32 damage_to_kill = 3;</code>
     */
    public boolean hasDamageToKill() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>optional uint32 damage_to_kill = 3;</code>
     */
    public int getDamageToKill() {
      return damageToKill_;
    }

    public static final int EFFECTIVE_HEALTH_FIELD_NUMBER = 4;
    private int effectiveHealth_;
    /**
     * <code>optional uint32 effective_health = 4;</code>
     */
    public boolean hasEffectiveHealth() {
      return ((bitField0_ & 0x00000004) == 0x00000004);
    }
    /**
     * <code>optional uint32 effective_health = 4;</code>
     */
    public int getEffectiveHealth() {
      return effectiveHealth_;
    }

    public static final int DEATH_TIME_FIELD_NUMBER = 5;
    private float deathTime_;
    /**
     * <code>optional float death_time = 5;</code>
     */
    public boolean hasDeathTime() {
      return ((bitField0_ & 0x00000008) == 0x00000008);
    }
    /**
     * <code>optional float death_time = 5;</code>
     */
    public float getDeathTime() {
      return deathTime_;
    }

    public static final int KILLER_ID_FIELD_NUMBER = 6;
    private int killerId_;
    /**
     * <code>optional uint32 killer_id = 6;</code>
     */
    public boolean hasKillerId() {
      return ((bitField0_ & 0x00000010) == 0x00000010);
    }
    /**
     * <code>optional uint32 killer_id = 6;</code>
     */
    public int getKillerId() {
      return killerId_;
    }

    private void initFields() {
      victimId_ = 0;
      killShares_ = java.util.Collections.emptyList();
      damageToKill_ = 0;
      effectiveHealth_ = 0;
      deathTime_ = 0F;
      killerId_ = 0;
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeUInt32(1, victimId_);
      }
      for (int i = 0; i < killShares_.size(); i++) {
        output.writeMessage(2, killShares_.get(i));
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeUInt32(3, damageToKill_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        output.writeUInt32(4, effectiveHealth_);
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        output.writeFloat(5, deathTime_);
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        output.writeUInt32(6, killerId_);
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(1, victimId_);
      }
      for (int i = 0; i < killShares_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(2, killShares_.get(i));
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(3, damageToKill_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(4, effectiveHealth_);
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        size += com.google.protobuf.CodedOutputStream
          .computeFloatSize(5, deathTime_);
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(6, killerId_);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_StatsKillDetails parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_StatsKillDetails parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_StatsKillDetails parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_StatsKillDetails parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_StatsKillDetails parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_StatsKillDetails parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_StatsKillDetails parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_StatsKillDetails parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_StatsKillDetails parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_StatsKillDetails parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_StatsKillDetails prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code CDOTAUserMsg_StatsKillDetails}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:CDOTAUserMsg_StatsKillDetails)
        skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_StatsKillDetailsOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return skadistats.clarity.wire.common.proto.DotaUserMessages.internal_static_CDOTAUserMsg_StatsKillDetails_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return skadistats.clarity.wire.common.proto.DotaUserMessages.internal_static_CDOTAUserMsg_StatsKillDetails_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_StatsKillDetails.class, skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_StatsKillDetails.Builder.class);
      }

      // Construct using skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_StatsKillDetails.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
          getKillSharesFieldBuilder();
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        victimId_ = 0;
        bitField0_ = (bitField0_ & ~0x00000001);
        if (killSharesBuilder_ == null) {
          killShares_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000002);
        } else {
          killSharesBuilder_.clear();
        }
        damageToKill_ = 0;
        bitField0_ = (bitField0_ & ~0x00000004);
        effectiveHealth_ = 0;
        bitField0_ = (bitField0_ & ~0x00000008);
        deathTime_ = 0F;
        bitField0_ = (bitField0_ & ~0x00000010);
        killerId_ = 0;
        bitField0_ = (bitField0_ & ~0x00000020);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return skadistats.clarity.wire.common.proto.DotaUserMessages.internal_static_CDOTAUserMsg_StatsKillDetails_descriptor;
      }

      public skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_StatsKillDetails getDefaultInstanceForType() {
        return skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_StatsKillDetails.getDefaultInstance();
      }

      public skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_StatsKillDetails build() {
        skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_StatsKillDetails result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_StatsKillDetails buildPartial() {
        skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_StatsKillDetails result = new skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_StatsKillDetails(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.victimId_ = victimId_;
        if (killSharesBuilder_ == null) {
          if (((bitField0_ & 0x00000002) == 0x00000002)) {
            killShares_ = java.util.Collections.unmodifiableList(killShares_);
            bitField0_ = (bitField0_ & ~0x00000002);
          }
          result.killShares_ = killShares_;
        } else {
          result.killShares_ = killSharesBuilder_.build();
        }
        if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
          to_bitField0_ |= 0x00000002;
        }
        result.damageToKill_ = damageToKill_;
        if (((from_bitField0_ & 0x00000008) == 0x00000008)) {
          to_bitField0_ |= 0x00000004;
        }
        result.effectiveHealth_ = effectiveHealth_;
        if (((from_bitField0_ & 0x00000010) == 0x00000010)) {
          to_bitField0_ |= 0x00000008;
        }
        result.deathTime_ = deathTime_;
        if (((from_bitField0_ & 0x00000020) == 0x00000020)) {
          to_bitField0_ |= 0x00000010;
        }
        result.killerId_ = killerId_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_StatsKillDetails) {
          return mergeFrom((skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_StatsKillDetails)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_StatsKillDetails other) {
        if (other == skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_StatsKillDetails.getDefaultInstance()) return this;
        if (other.hasVictimId()) {
          setVictimId(other.getVictimId());
        }
        if (killSharesBuilder_ == null) {
          if (!other.killShares_.isEmpty()) {
            if (killShares_.isEmpty()) {
              killShares_ = other.killShares_;
              bitField0_ = (bitField0_ & ~0x00000002);
            } else {
              ensureKillSharesIsMutable();
              killShares_.addAll(other.killShares_);
            }
            onChanged();
          }
        } else {
          if (!other.killShares_.isEmpty()) {
            if (killSharesBuilder_.isEmpty()) {
              killSharesBuilder_.dispose();
              killSharesBuilder_ = null;
              killShares_ = other.killShares_;
              bitField0_ = (bitField0_ & ~0x00000002);
              killSharesBuilder_ = 
                com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders ?
                   getKillSharesFieldBuilder() : null;
            } else {
              killSharesBuilder_.addAllMessages(other.killShares_);
            }
          }
        }
        if (other.hasDamageToKill()) {
          setDamageToKill(other.getDamageToKill());
        }
        if (other.hasEffectiveHealth()) {
          setEffectiveHealth(other.getEffectiveHealth());
        }
        if (other.hasDeathTime()) {
          setDeathTime(other.getDeathTime());
        }
        if (other.hasKillerId()) {
          setKillerId(other.getKillerId());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_StatsKillDetails parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_StatsKillDetails) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private int victimId_ ;
      /**
       * <code>optional uint32 victim_id = 1;</code>
       */
      public boolean hasVictimId() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>optional uint32 victim_id = 1;</code>
       */
      public int getVictimId() {
        return victimId_;
      }
      /**
       * <code>optional uint32 victim_id = 1;</code>
       */
      public Builder setVictimId(int value) {
        bitField0_ |= 0x00000001;
        victimId_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional uint32 victim_id = 1;</code>
       */
      public Builder clearVictimId() {
        bitField0_ = (bitField0_ & ~0x00000001);
        victimId_ = 0;
        onChanged();
        return this;
      }

      private java.util.List<skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_StatsPlayerKillShare> killShares_ =
        java.util.Collections.emptyList();
      private void ensureKillSharesIsMutable() {
        if (!((bitField0_ & 0x00000002) == 0x00000002)) {
          killShares_ = new java.util.ArrayList<skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_StatsPlayerKillShare>(killShares_);
          bitField0_ |= 0x00000002;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilder<
          skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_StatsPlayerKillShare, skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_StatsPlayerKillShare.Builder, skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_StatsPlayerKillShareOrBuilder> killSharesBuilder_;

      /**
       * <code>repeated .CDOTAUserMsg_StatsPlayerKillShare kill_shares = 2;</code>
       */
      public java.util.List<skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_StatsPlayerKillShare> getKillSharesList() {
        if (killSharesBuilder_ == null) {
          return java.util.Collections.unmodifiableList(killShares_);
        } else {
          return killSharesBuilder_.getMessageList();
        }
      }
      /**
       * <code>repeated .CDOTAUserMsg_StatsPlayerKillShare kill_shares = 2;</code>
       */
      public int getKillSharesCount() {
        if (killSharesBuilder_ == null) {
          return killShares_.size();
        } else {
          return killSharesBuilder_.getCount();
        }
      }
      /**
       * <code>repeated .CDOTAUserMsg_StatsPlayerKillShare kill_shares = 2;</code>
       */
      public skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_StatsPlayerKillShare getKillShares(int index) {
        if (killSharesBuilder_ == null) {
          return killShares_.get(index);
        } else {
          return killSharesBuilder_.getMessage(index);
        }
      }
      /**
       * <code>repeated .CDOTAUserMsg_StatsPlayerKillShare kill_shares = 2;</code>
       */
      public Builder setKillShares(
          int index, skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_StatsPlayerKillShare value) {
        if (killSharesBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureKillSharesIsMutable();
          killShares_.set(index, value);
          onChanged();
        } else {
          killSharesBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .CDOTAUserMsg_StatsPlayerKillShare kill_shares = 2;</code>
       */
      public Builder setKillShares(
          int index, skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_StatsPlayerKillShare.Builder builderForValue) {
        if (killSharesBuilder_ == null) {
          ensureKillSharesIsMutable();
          killShares_.set(index, builderForValue.build());
          onChanged();
        } else {
          killSharesBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .CDOTAUserMsg_StatsPlayerKillShare kill_shares = 2;</code>
       */
      public Builder addKillShares(skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_StatsPlayerKillShare value) {
        if (killSharesBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureKillSharesIsMutable();
          killShares_.add(value);
          onChanged();
        } else {
          killSharesBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <code>repeated .CDOTAUserMsg_StatsPlayerKillShare kill_shares = 2;</code>
       */
      public Builder addKillShares(
          int index, skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_StatsPlayerKillShare value) {
        if (killSharesBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureKillSharesIsMutable();
          killShares_.add(index, value);
          onChanged();
        } else {
          killSharesBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .CDOTAUserMsg_StatsPlayerKillShare kill_shares = 2;</code>
       */
      public Builder addKillShares(
          skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_StatsPlayerKillShare.Builder builderForValue) {
        if (killSharesBuilder_ == null) {
          ensureKillSharesIsMutable();
          killShares_.add(builderForValue.build());
          onChanged();
        } else {
          killSharesBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .CDOTAUserMsg_StatsPlayerKillShare kill_shares = 2;</code>
       */
      public Builder addKillShares(
          int index, skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_StatsPlayerKillShare.Builder builderForValue) {
        if (killSharesBuilder_ == null) {
          ensureKillSharesIsMutable();
          killShares_.add(index, builderForValue.build());
          onChanged();
        } else {
          killSharesBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .CDOTAUserMsg_StatsPlayerKillShare kill_shares = 2;</code>
       */
      public Builder addAllKillShares(
          java.lang.Iterable<? extends skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_StatsPlayerKillShare> values) {
        if (killSharesBuilder_ == null) {
          ensureKillSharesIsMutable();
          com.google.protobuf.AbstractMessageLite.Builder.addAll(
              values, killShares_);
          onChanged();
        } else {
          killSharesBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <code>repeated .CDOTAUserMsg_StatsPlayerKillShare kill_shares = 2;</code>
       */
      public Builder clearKillShares() {
        if (killSharesBuilder_ == null) {
          killShares_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000002);
          onChanged();
        } else {
          killSharesBuilder_.clear();
        }
        return this;
      }
      /**
       * <code>repeated .CDOTAUserMsg_StatsPlayerKillShare kill_shares = 2;</code>
       */
      public Builder removeKillShares(int index) {
        if (killSharesBuilder_ == null) {
          ensureKillSharesIsMutable();
          killShares_.remove(index);
          onChanged();
        } else {
          killSharesBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <code>repeated .CDOTAUserMsg_StatsPlayerKillShare kill_shares = 2;</code>
       */
      public skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_StatsPlayerKillShare.Builder getKillSharesBuilder(
          int index) {
        return getKillSharesFieldBuilder().getBuilder(index);
      }
      /**
       * <code>repeated .CDOTAUserMsg_StatsPlayerKillShare kill_shares = 2;</code>
       */
      public skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_StatsPlayerKillShareOrBuilder getKillSharesOrBuilder(
          int index) {
        if (killSharesBuilder_ == null) {
          return killShares_.get(index);  } else {
          return killSharesBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <code>repeated .CDOTAUserMsg_StatsPlayerKillShare kill_shares = 2;</code>
       */
      public java.util.List<? extends skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_StatsPlayerKillShareOrBuilder> 
           getKillSharesOrBuilderList() {
        if (killSharesBuilder_ != null) {
          return killSharesBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(killShares_);
        }
      }
      /**
       * <code>repeated .CDOTAUserMsg_StatsPlayerKillShare kill_shares = 2;</code>
       */
      public skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_StatsPlayerKillShare.Builder addKillSharesBuilder() {
        return getKillSharesFieldBuilder().addBuilder(
            skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_StatsPlayerKillShare.getDefaultInstance());
      }
      /**
       * <code>repeated .CDOTAUserMsg_StatsPlayerKillShare kill_shares = 2;</code>
       */
      public skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_StatsPlayerKillShare.Builder addKillSharesBuilder(
          int index) {
        return getKillSharesFieldBuilder().addBuilder(
            index, skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_StatsPlayerKillShare.getDefaultInstance());
      }
      /**
       * <code>repeated .CDOTAUserMsg_StatsPlayerKillShare kill_shares = 2;</code>
       */
      public java.util.List<skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_StatsPlayerKillShare.Builder> 
           getKillSharesBuilderList() {
        return getKillSharesFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilder<
          skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_StatsPlayerKillShare, skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_StatsPlayerKillShare.Builder, skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_StatsPlayerKillShareOrBuilder> 
          getKillSharesFieldBuilder() {
        if (killSharesBuilder_ == null) {
          killSharesBuilder_ = new com.google.protobuf.RepeatedFieldBuilder<
              skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_StatsPlayerKillShare, skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_StatsPlayerKillShare.Builder, skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_StatsPlayerKillShareOrBuilder>(
                  killShares_,
                  ((bitField0_ & 0x00000002) == 0x00000002),
                  getParentForChildren(),
                  isClean());
          killShares_ = null;
        }
        return killSharesBuilder_;
      }

      private int damageToKill_ ;
      /**
       * <code>optional uint32 damage_to_kill = 3;</code>
       */
      public boolean hasDamageToKill() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }
      /**
       * <code>optional uint32 damage_to_kill = 3;</code>
       */
      public int getDamageToKill() {
        return damageToKill_;
      }
      /**
       * <code>optional uint32 damage_to_kill = 3;</code>
       */
      public Builder setDamageToKill(int value) {
        bitField0_ |= 0x00000004;
        damageToKill_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional uint32 damage_to_kill = 3;</code>
       */
      public Builder clearDamageToKill() {
        bitField0_ = (bitField0_ & ~0x00000004);
        damageToKill_ = 0;
        onChanged();
        return this;
      }

      private int effectiveHealth_ ;
      /**
       * <code>optional uint32 effective_health = 4;</code>
       */
      public boolean hasEffectiveHealth() {
        return ((bitField0_ & 0x00000008) == 0x00000008);
      }
      /**
       * <code>optional uint32 effective_health = 4;</code>
       */
      public int getEffectiveHealth() {
        return effectiveHealth_;
      }
      /**
       * <code>optional uint32 effective_health = 4;</code>
       */
      public Builder setEffectiveHealth(int value) {
        bitField0_ |= 0x00000008;
        effectiveHealth_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional uint32 effective_health = 4;</code>
       */
      public Builder clearEffectiveHealth() {
        bitField0_ = (bitField0_ & ~0x00000008);
        effectiveHealth_ = 0;
        onChanged();
        return this;
      }

      private float deathTime_ ;
      /**
       * <code>optional float death_time = 5;</code>
       */
      public boolean hasDeathTime() {
        return ((bitField0_ & 0x00000010) == 0x00000010);
      }
      /**
       * <code>optional float death_time = 5;</code>
       */
      public float getDeathTime() {
        return deathTime_;
      }
      /**
       * <code>optional float death_time = 5;</code>
       */
      public Builder setDeathTime(float value) {
        bitField0_ |= 0x00000010;
        deathTime_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional float death_time = 5;</code>
       */
      public Builder clearDeathTime() {
        bitField0_ = (bitField0_ & ~0x00000010);
        deathTime_ = 0F;
        onChanged();
        return this;
      }

      private int killerId_ ;
      /**
       * <code>optional uint32 killer_id = 6;</code>
       */
      public boolean hasKillerId() {
        return ((bitField0_ & 0x00000020) == 0x00000020);
      }
      /**
       * <code>optional uint32 killer_id = 6;</code>
       */
      public int getKillerId() {
        return killerId_;
      }
      /**
       * <code>optional uint32 killer_id = 6;</code>
       */
      public Builder setKillerId(int value) {
        bitField0_ |= 0x00000020;
        killerId_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional uint32 killer_id = 6;</code>
       */
      public Builder clearKillerId() {
        bitField0_ = (bitField0_ & ~0x00000020);
        killerId_ = 0;
        onChanged();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:CDOTAUserMsg_StatsKillDetails)
    }

    static {
      defaultInstance = new CDOTAUserMsg_StatsKillDetails(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:CDOTAUserMsg_StatsKillDetails)
  }

  public interface CDOTAUserMsg_StatsMatchDetailsOrBuilder extends
      // @@protoc_insertion_point(interface_extends:CDOTAUserMsg_StatsMatchDetails)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>repeated .CDOTAUserMsg_StatsHeroLookup hero_lookup = 1;</code>
     */
    java.util.List<skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_StatsHeroLookup> 
        getHeroLookupList();
    /**
     * <code>repeated .CDOTAUserMsg_StatsHeroLookup hero_lookup = 1;</code>
     */
    skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_StatsHeroLookup getHeroLookup(int index);
    /**
     * <code>repeated .CDOTAUserMsg_StatsHeroLookup hero_lookup = 1;</code>
     */
    int getHeroLookupCount();
    /**
     * <code>repeated .CDOTAUserMsg_StatsHeroLookup hero_lookup = 1;</code>
     */
    java.util.List<? extends skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_StatsHeroLookupOrBuilder> 
        getHeroLookupOrBuilderList();
    /**
     * <code>repeated .CDOTAUserMsg_StatsHeroLookup hero_lookup = 1;</code>
     */
    skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_StatsHeroLookupOrBuilder getHeroLookupOrBuilder(
        int index);

    /**
     * <code>repeated .CDOTAUserMsg_StatsTeamMinuteDetails radiant_stats = 2;</code>
     */
    java.util.List<skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_StatsTeamMinuteDetails> 
        getRadiantStatsList();
    /**
     * <code>repeated .CDOTAUserMsg_StatsTeamMinuteDetails radiant_stats = 2;</code>
     */
    skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_StatsTeamMinuteDetails getRadiantStats(int index);
    /**
     * <code>repeated .CDOTAUserMsg_StatsTeamMinuteDetails radiant_stats = 2;</code>
     */
    int getRadiantStatsCount();
    /**
     * <code>repeated .CDOTAUserMsg_StatsTeamMinuteDetails radiant_stats = 2;</code>
     */
    java.util.List<? extends skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_StatsTeamMinuteDetailsOrBuilder> 
        getRadiantStatsOrBuilderList();
    /**
     * <code>repeated .CDOTAUserMsg_StatsTeamMinuteDetails radiant_stats = 2;</code>
     */
    skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_StatsTeamMinuteDetailsOrBuilder getRadiantStatsOrBuilder(
        int index);

    /**
     * <code>repeated .CDOTAUserMsg_StatsTeamMinuteDetails dire_stats = 3;</code>
     */
    java.util.List<skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_StatsTeamMinuteDetails> 
        getDireStatsList();
    /**
     * <code>repeated .CDOTAUserMsg_StatsTeamMinuteDetails dire_stats = 3;</code>
     */
    skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_StatsTeamMinuteDetails getDireStats(int index);
    /**
     * <code>repeated .CDOTAUserMsg_StatsTeamMinuteDetails dire_stats = 3;</code>
     */
    int getDireStatsCount();
    /**
     * <code>repeated .CDOTAUserMsg_StatsTeamMinuteDetails dire_stats = 3;</code>
     */
    java.util.List<? extends skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_StatsTeamMinuteDetailsOrBuilder> 
        getDireStatsOrBuilderList();
    /**
     * <code>repeated .CDOTAUserMsg_StatsTeamMinuteDetails dire_stats = 3;</code>
     */
    skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_StatsTeamMinuteDetailsOrBuilder getDireStatsOrBuilder(
        int index);

    /**
     * <code>repeated .CDOTAUserMsg_StatsKillDetails radiant_kills = 4;</code>
     */
    java.util.List<skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_StatsKillDetails> 
        getRadiantKillsList();
    /**
     * <code>repeated .CDOTAUserMsg_StatsKillDetails radiant_kills = 4;</code>
     */
    skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_StatsKillDetails getRadiantKills(int index);
    /**
     * <code>repeated .CDOTAUserMsg_StatsKillDetails radiant_kills = 4;</code>
     */
    int getRadiantKillsCount();
    /**
     * <code>repeated .CDOTAUserMsg_StatsKillDetails radiant_kills = 4;</code>
     */
    java.util.List<? extends skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_StatsKillDetailsOrBuilder> 
        getRadiantKillsOrBuilderList();
    /**
     * <code>repeated .CDOTAUserMsg_StatsKillDetails radiant_kills = 4;</code>
     */
    skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_StatsKillDetailsOrBuilder getRadiantKillsOrBuilder(
        int index);

    /**
     * <code>repeated .CDOTAUserMsg_StatsKillDetails dire_kills = 5;</code>
     */
    java.util.List<skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_StatsKillDetails> 
        getDireKillsList();
    /**
     * <code>repeated .CDOTAUserMsg_StatsKillDetails dire_kills = 5;</code>
     */
    skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_StatsKillDetails getDireKills(int index);
    /**
     * <code>repeated .CDOTAUserMsg_StatsKillDetails dire_kills = 5;</code>
     */
    int getDireKillsCount();
    /**
     * <code>repeated .CDOTAUserMsg_StatsKillDetails dire_kills = 5;</code>
     */
    java.util.List<? extends skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_StatsKillDetailsOrBuilder> 
        getDireKillsOrBuilderList();
    /**
     * <code>repeated .CDOTAUserMsg_StatsKillDetails dire_kills = 5;</code>
     */
    skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_StatsKillDetailsOrBuilder getDireKillsOrBuilder(
        int index);

    /**
     * <code>repeated .CDOTAUserMsg_StatsMatchDetails.CDOTAUserMsg_StatsFightDetails fight_details = 6;</code>
     */
    java.util.List<skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_StatsMatchDetails.CDOTAUserMsg_StatsFightDetails> 
        getFightDetailsList();
    /**
     * <code>repeated .CDOTAUserMsg_StatsMatchDetails.CDOTAUserMsg_StatsFightDetails fight_details = 6;</code>
     */
    skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_StatsMatchDetails.CDOTAUserMsg_StatsFightDetails getFightDetails(int index);
    /**
     * <code>repeated .CDOTAUserMsg_StatsMatchDetails.CDOTAUserMsg_StatsFightDetails fight_details = 6;</code>
     */
    int getFightDetailsCount();
    /**
     * <code>repeated .CDOTAUserMsg_StatsMatchDetails.CDOTAUserMsg_StatsFightDetails fight_details = 6;</code>
     */
    java.util.List<? extends skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_StatsMatchDetails.CDOTAUserMsg_StatsFightDetailsOrBuilder> 
        getFightDetailsOrBuilderList();
    /**
     * <code>repeated .CDOTAUserMsg_StatsMatchDetails.CDOTAUserMsg_StatsFightDetails fight_details = 6;</code>
     */
    skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_StatsMatchDetails.CDOTAUserMsg_StatsFightDetailsOrBuilder getFightDetailsOrBuilder(
        int index);
  }
  /**
   * Protobuf type {@code CDOTAUserMsg_StatsMatchDetails}
   */
  public static final class CDOTAUserMsg_StatsMatchDetails extends
      com.google.protobuf.GeneratedMessage implements
      // @@protoc_insertion_point(message_implements:CDOTAUserMsg_StatsMatchDetails)
      CDOTAUserMsg_StatsMatchDetailsOrBuilder {
    // Use CDOTAUserMsg_StatsMatchDetails.newBuilder() to construct.
    private CDOTAUserMsg_StatsMatchDetails(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private CDOTAUserMsg_StatsMatchDetails(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final CDOTAUserMsg_StatsMatchDetails defaultInstance;
    public static CDOTAUserMsg_StatsMatchDetails getDefaultInstance() {
      return defaultInstance;
    }

    public CDOTAUserMsg_StatsMatchDetails getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private CDOTAUserMsg_StatsMatchDetails(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 10: {
              if (!((mutable_bitField0_ & 0x00000001) == 0x00000001)) {
                heroLookup_ = new java.util.ArrayList<skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_StatsHeroLookup>();
                mutable_bitField0_ |= 0x00000001;
              }
              heroLookup_.add(input.readMessage(skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_StatsHeroLookup.PARSER, extensionRegistry));
              break;
            }
            case 18: {
              if (!((mutable_bitField0_ & 0x00000002) == 0x00000002)) {
                radiantStats_ = new java.util.ArrayList<skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_StatsTeamMinuteDetails>();
                mutable_bitField0_ |= 0x00000002;
              }
              radiantStats_.add(input.readMessage(skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_StatsTeamMinuteDetails.PARSER, extensionRegistry));
              break;
            }
            case 26: {
              if (!((mutable_bitField0_ & 0x00000004) == 0x00000004)) {
                direStats_ = new java.util.ArrayList<skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_StatsTeamMinuteDetails>();
                mutable_bitField0_ |= 0x00000004;
              }
              direStats_.add(input.readMessage(skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_StatsTeamMinuteDetails.PARSER, extensionRegistry));
              break;
            }
            case 34: {
              if (!((mutable_bitField0_ & 0x00000008) == 0x00000008)) {
                radiantKills_ = new java.util.ArrayList<skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_StatsKillDetails>();
                mutable_bitField0_ |= 0x00000008;
              }
              radiantKills_.add(input.readMessage(skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_StatsKillDetails.PARSER, extensionRegistry));
              break;
            }
            case 42: {
              if (!((mutable_bitField0_ & 0x00000010) == 0x00000010)) {
                direKills_ = new java.util.ArrayList<skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_StatsKillDetails>();
                mutable_bitField0_ |= 0x00000010;
              }
              direKills_.add(input.readMessage(skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_StatsKillDetails.PARSER, extensionRegistry));
              break;
            }
            case 50: {
              if (!((mutable_bitField0_ & 0x00000020) == 0x00000020)) {
                fightDetails_ = new java.util.ArrayList<skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_StatsMatchDetails.CDOTAUserMsg_StatsFightDetails>();
                mutable_bitField0_ |= 0x00000020;
              }
              fightDetails_.add(input.readMessage(skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_StatsMatchDetails.CDOTAUserMsg_StatsFightDetails.PARSER, extensionRegistry));
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        if (((mutable_bitField0_ & 0x00000001) == 0x00000001)) {
          heroLookup_ = java.util.Collections.unmodifiableList(heroLookup_);
        }
        if (((mutable_bitField0_ & 0x00000002) == 0x00000002)) {
          radiantStats_ = java.util.Collections.unmodifiableList(radiantStats_);
        }
        if (((mutable_bitField0_ & 0x00000004) == 0x00000004)) {
          direStats_ = java.util.Collections.unmodifiableList(direStats_);
        }
        if (((mutable_bitField0_ & 0x00000008) == 0x00000008)) {
          radiantKills_ = java.util.Collections.unmodifiableList(radiantKills_);
        }
        if (((mutable_bitField0_ & 0x00000010) == 0x00000010)) {
          direKills_ = java.util.Collections.unmodifiableList(direKills_);
        }
        if (((mutable_bitField0_ & 0x00000020) == 0x00000020)) {
          fightDetails_ = java.util.Collections.unmodifiableList(fightDetails_);
        }
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return skadistats.clarity.wire.common.proto.DotaUserMessages.internal_static_CDOTAUserMsg_StatsMatchDetails_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return skadistats.clarity.wire.common.proto.DotaUserMessages.internal_static_CDOTAUserMsg_StatsMatchDetails_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_StatsMatchDetails.class, skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_StatsMatchDetails.Builder.class);
    }

    public static com.google.protobuf.Parser<CDOTAUserMsg_StatsMatchDetails> PARSER =
        new com.google.protobuf.AbstractParser<CDOTAUserMsg_StatsMatchDetails>() {
      public CDOTAUserMsg_StatsMatchDetails parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new CDOTAUserMsg_StatsMatchDetails(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<CDOTAUserMsg_StatsMatchDetails> getParserForType() {
      return PARSER;
    }

    public interface CDOTAUserMsg_StatsFightTeamDetailsOrBuilder extends
        // @@protoc_insertion_point(interface_extends:CDOTAUserMsg_StatsMatchDetails.CDOTAUserMsg_StatsFightTeamDetails)
        com.google.protobuf.MessageOrBuilder {

      /**
       * <code>repeated uint32 participants = 1;</code>
       */
      java.util.List<java.lang.Integer> getParticipantsList();
      /**
       * <code>repeated uint32 participants = 1;</code>
       */
      int getParticipantsCount();
      /**
       * <code>repeated uint32 participants = 1;</code>
       */
      int getParticipants(int index);

      /**
       * <code>repeated uint32 deaths = 2;</code>
       */
      java.util.List<java.lang.Integer> getDeathsList();
      /**
       * <code>repeated uint32 deaths = 2;</code>
       */
      int getDeathsCount();
      /**
       * <code>repeated uint32 deaths = 2;</code>
       */
      int getDeaths(int index);

      /**
       * <code>optional uint32 gold_delta = 3;</code>
       */
      boolean hasGoldDelta();
      /**
       * <code>optional uint32 gold_delta = 3;</code>
       */
      int getGoldDelta();

      /**
       * <code>optional uint32 xp_delta = 4;</code>
       */
      boolean hasXpDelta();
      /**
       * <code>optional uint32 xp_delta = 4;</code>
       */
      int getXpDelta();
    }
    /**
     * Protobuf type {@code CDOTAUserMsg_StatsMatchDetails.CDOTAUserMsg_StatsFightTeamDetails}
     */
    public static final class CDOTAUserMsg_StatsFightTeamDetails extends
        com.google.protobuf.GeneratedMessage implements
        // @@protoc_insertion_point(message_implements:CDOTAUserMsg_StatsMatchDetails.CDOTAUserMsg_StatsFightTeamDetails)
        CDOTAUserMsg_StatsFightTeamDetailsOrBuilder {
      // Use CDOTAUserMsg_StatsFightTeamDetails.newBuilder() to construct.
      private CDOTAUserMsg_StatsFightTeamDetails(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
        super(builder);
        this.unknownFields = builder.getUnknownFields();
      }
      private CDOTAUserMsg_StatsFightTeamDetails(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

      private static final CDOTAUserMsg_StatsFightTeamDetails defaultInstance;
      public static CDOTAUserMsg_StatsFightTeamDetails getDefaultInstance() {
        return defaultInstance;
      }

      public CDOTAUserMsg_StatsFightTeamDetails getDefaultInstanceForType() {
        return defaultInstance;
      }

      private final com.google.protobuf.UnknownFieldSet unknownFields;
      @java.lang.Override
      public final com.google.protobuf.UnknownFieldSet
          getUnknownFields() {
        return this.unknownFields;
      }
      private CDOTAUserMsg_StatsFightTeamDetails(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        initFields();
        int mutable_bitField0_ = 0;
        com.google.protobuf.UnknownFieldSet.Builder unknownFields =
            com.google.protobuf.UnknownFieldSet.newBuilder();
        try {
          boolean done = false;
          while (!done) {
            int tag = input.readTag();
            switch (tag) {
              case 0:
                done = true;
                break;
              default: {
                if (!parseUnknownField(input, unknownFields,
                                       extensionRegistry, tag)) {
                  done = true;
                }
                break;
              }
              case 8: {
                if (!((mutable_bitField0_ & 0x00000001) == 0x00000001)) {
                  participants_ = new java.util.ArrayList<java.lang.Integer>();
                  mutable_bitField0_ |= 0x00000001;
                }
                participants_.add(input.readUInt32());
                break;
              }
              case 10: {
                int length = input.readRawVarint32();
                int limit = input.pushLimit(length);
                if (!((mutable_bitField0_ & 0x00000001) == 0x00000001) && input.getBytesUntilLimit() > 0) {
                  participants_ = new java.util.ArrayList<java.lang.Integer>();
                  mutable_bitField0_ |= 0x00000001;
                }
                while (input.getBytesUntilLimit() > 0) {
                  participants_.add(input.readUInt32());
                }
                input.popLimit(limit);
                break;
              }
              case 16: {
                if (!((mutable_bitField0_ & 0x00000002) == 0x00000002)) {
                  deaths_ = new java.util.ArrayList<java.lang.Integer>();
                  mutable_bitField0_ |= 0x00000002;
                }
                deaths_.add(input.readUInt32());
                break;
              }
              case 18: {
                int length = input.readRawVarint32();
                int limit = input.pushLimit(length);
                if (!((mutable_bitField0_ & 0x00000002) == 0x00000002) && input.getBytesUntilLimit() > 0) {
                  deaths_ = new java.util.ArrayList<java.lang.Integer>();
                  mutable_bitField0_ |= 0x00000002;
                }
                while (input.getBytesUntilLimit() > 0) {
                  deaths_.add(input.readUInt32());
                }
                input.popLimit(limit);
                break;
              }
              case 24: {
                bitField0_ |= 0x00000001;
                goldDelta_ = input.readUInt32();
                break;
              }
              case 32: {
                bitField0_ |= 0x00000002;
                xpDelta_ = input.readUInt32();
                break;
              }
            }
          }
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.setUnfinishedMessage(this);
        } catch (java.io.IOException e) {
          throw new com.google.protobuf.InvalidProtocolBufferException(
              e.getMessage()).setUnfinishedMessage(this);
        } finally {
          if (((mutable_bitField0_ & 0x00000001) == 0x00000001)) {
            participants_ = java.util.Collections.unmodifiableList(participants_);
          }
          if (((mutable_bitField0_ & 0x00000002) == 0x00000002)) {
            deaths_ = java.util.Collections.unmodifiableList(deaths_);
          }
          this.unknownFields = unknownFields.build();
          makeExtensionsImmutable();
        }
      }
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return skadistats.clarity.wire.common.proto.DotaUserMessages.internal_static_CDOTAUserMsg_StatsMatchDetails_CDOTAUserMsg_StatsFightTeamDetails_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return skadistats.clarity.wire.common.proto.DotaUserMessages.internal_static_CDOTAUserMsg_StatsMatchDetails_CDOTAUserMsg_StatsFightTeamDetails_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_StatsMatchDetails.CDOTAUserMsg_StatsFightTeamDetails.class, skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_StatsMatchDetails.CDOTAUserMsg_StatsFightTeamDetails.Builder.class);
      }

      public static com.google.protobuf.Parser<CDOTAUserMsg_StatsFightTeamDetails> PARSER =
          new com.google.protobuf.AbstractParser<CDOTAUserMsg_StatsFightTeamDetails>() {
        public CDOTAUserMsg_StatsFightTeamDetails parsePartialFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws com.google.protobuf.InvalidProtocolBufferException {
          return new CDOTAUserMsg_StatsFightTeamDetails(input, extensionRegistry);
        }
      };

      @java.lang.Override
      public com.google.protobuf.Parser<CDOTAUserMsg_StatsFightTeamDetails> getParserForType() {
        return PARSER;
      }

      private int bitField0_;
      public static final int PARTICIPANTS_FIELD_NUMBER = 1;
      private java.util.List<java.lang.Integer> participants_;
      /**
       * <code>repeated uint32 participants = 1;</code>
       */
      public java.util.List<java.lang.Integer>
          getParticipantsList() {
        return participants_;
      }
      /**
       * <code>repeated uint32 participants = 1;</code>
       */
      public int getParticipantsCount() {
        return participants_.size();
      }
      /**
       * <code>repeated uint32 participants = 1;</code>
       */
      public int getParticipants(int index) {
        return participants_.get(index);
      }

      public static final int DEATHS_FIELD_NUMBER = 2;
      private java.util.List<java.lang.Integer> deaths_;
      /**
       * <code>repeated uint32 deaths = 2;</code>
       */
      public java.util.List<java.lang.Integer>
          getDeathsList() {
        return deaths_;
      }
      /**
       * <code>repeated uint32 deaths = 2;</code>
       */
      public int getDeathsCount() {
        return deaths_.size();
      }
      /**
       * <code>repeated uint32 deaths = 2;</code>
       */
      public int getDeaths(int index) {
        return deaths_.get(index);
      }

      public static final int GOLD_DELTA_FIELD_NUMBER = 3;
      private int goldDelta_;
      /**
       * <code>optional uint32 gold_delta = 3;</code>
       */
      public boolean hasGoldDelta() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>optional uint32 gold_delta = 3;</code>
       */
      public int getGoldDelta() {
        return goldDelta_;
      }

      public static final int XP_DELTA_FIELD_NUMBER = 4;
      private int xpDelta_;
      /**
       * <code>optional uint32 xp_delta = 4;</code>
       */
      public boolean hasXpDelta() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>optional uint32 xp_delta = 4;</code>
       */
      public int getXpDelta() {
        return xpDelta_;
      }

      private void initFields() {
        participants_ = java.util.Collections.emptyList();
        deaths_ = java.util.Collections.emptyList();
        goldDelta_ = 0;
        xpDelta_ = 0;
      }
      private byte memoizedIsInitialized = -1;
      public final boolean isInitialized() {
        byte isInitialized = memoizedIsInitialized;
        if (isInitialized == 1) return true;
        if (isInitialized == 0) return false;

        memoizedIsInitialized = 1;
        return true;
      }

      public void writeTo(com.google.protobuf.CodedOutputStream output)
                          throws java.io.IOException {
        getSerializedSize();
        for (int i = 0; i < participants_.size(); i++) {
          output.writeUInt32(1, participants_.get(i));
        }
        for (int i = 0; i < deaths_.size(); i++) {
          output.writeUInt32(2, deaths_.get(i));
        }
        if (((bitField0_ & 0x00000001) == 0x00000001)) {
          output.writeUInt32(3, goldDelta_);
        }
        if (((bitField0_ & 0x00000002) == 0x00000002)) {
          output.writeUInt32(4, xpDelta_);
        }
        getUnknownFields().writeTo(output);
      }

      private int memoizedSerializedSize = -1;
      public int getSerializedSize() {
        int size = memoizedSerializedSize;
        if (size != -1) return size;

        size = 0;
        {
          int dataSize = 0;
          for (int i = 0; i < participants_.size(); i++) {
            dataSize += com.google.protobuf.CodedOutputStream
              .computeUInt32SizeNoTag(participants_.get(i));
          }
          size += dataSize;
          size += 1 * getParticipantsList().size();
        }
        {
          int dataSize = 0;
          for (int i = 0; i < deaths_.size(); i++) {
            dataSize += com.google.protobuf.CodedOutputStream
              .computeUInt32SizeNoTag(deaths_.get(i));
          }
          size += dataSize;
          size += 1 * getDeathsList().size();
        }
        if (((bitField0_ & 0x00000001) == 0x00000001)) {
          size += com.google.protobuf.CodedOutputStream
            .computeUInt32Size(3, goldDelta_);
        }
        if (((bitField0_ & 0x00000002) == 0x00000002)) {
          size += com.google.protobuf.CodedOutputStream
            .computeUInt32Size(4, xpDelta_);
        }
        size += getUnknownFields().getSerializedSize();
        memoizedSerializedSize = size;
        return size;
      }

      private static final long serialVersionUID = 0L;
      @java.lang.Override
      protected java.lang.Object writeReplace()
          throws java.io.ObjectStreamException {
        return super.writeReplace();
      }

      public static skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_StatsMatchDetails.CDOTAUserMsg_StatsFightTeamDetails parseFrom(
          com.google.protobuf.ByteString data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_StatsMatchDetails.CDOTAUserMsg_StatsFightTeamDetails parseFrom(
          com.google.protobuf.ByteString data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_StatsMatchDetails.CDOTAUserMsg_StatsFightTeamDetails parseFrom(byte[] data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_StatsMatchDetails.CDOTAUserMsg_StatsFightTeamDetails parseFrom(
          byte[] data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_StatsMatchDetails.CDOTAUserMsg_StatsFightTeamDetails parseFrom(java.io.InputStream input)
          throws java.io.IOException {
        return PARSER.parseFrom(input);
      }
      public static skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_StatsMatchDetails.CDOTAUserMsg_StatsFightTeamDetails parseFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return PARSER.parseFrom(input, extensionRegistry);
      }
      public static skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_StatsMatchDetails.CDOTAUserMsg_StatsFightTeamDetails parseDelimitedFrom(java.io.InputStream input)
          throws java.io.IOException {
        return PARSER.parseDelimitedFrom(input);
      }
      public static skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_StatsMatchDetails.CDOTAUserMsg_StatsFightTeamDetails parseDelimitedFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return PARSER.parseDelimitedFrom(input, extensionRegistry);
      }
      public static skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_StatsMatchDetails.CDOTAUserMsg_StatsFightTeamDetails parseFrom(
          com.google.protobuf.CodedInputStream input)
          throws java.io.IOException {
        return PARSER.parseFrom(input);
      }
      public static skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_StatsMatchDetails.CDOTAUserMsg_StatsFightTeamDetails parseFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return PARSER.parseFrom(input, extensionRegistry);
      }

      public static Builder newBuilder() { return Builder.create(); }
      public Builder newBuilderForType() { return newBuilder(); }
      public static Builder newBuilder(skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_StatsMatchDetails.CDOTAUserMsg_StatsFightTeamDetails prototype) {
        return newBuilder().mergeFrom(prototype);
      }
      public Builder toBuilder() { return newBuilder(this); }

      @java.lang.Override
      protected Builder newBuilderForType(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        Builder builder = new Builder(parent);
        return builder;
      }
      /**
       * Protobuf type {@code CDOTAUserMsg_StatsMatchDetails.CDOTAUserMsg_StatsFightTeamDetails}
       */
      public static final class Builder extends
          com.google.protobuf.GeneratedMessage.Builder<Builder> implements
          // @@protoc_insertion_point(builder_implements:CDOTAUserMsg_StatsMatchDetails.CDOTAUserMsg_StatsFightTeamDetails)
          skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_StatsMatchDetails.CDOTAUserMsg_StatsFightTeamDetailsOrBuilder {
        public static final com.google.protobuf.Descriptors.Descriptor
            getDescriptor() {
          return skadistats.clarity.wire.common.proto.DotaUserMessages.internal_static_CDOTAUserMsg_StatsMatchDetails_CDOTAUserMsg_StatsFightTeamDetails_descriptor;
        }

        protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
            internalGetFieldAccessorTable() {
          return skadistats.clarity.wire.common.proto.DotaUserMessages.internal_static_CDOTAUserMsg_StatsMatchDetails_CDOTAUserMsg_StatsFightTeamDetails_fieldAccessorTable
              .ensureFieldAccessorsInitialized(
                  skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_StatsMatchDetails.CDOTAUserMsg_StatsFightTeamDetails.class, skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_StatsMatchDetails.CDOTAUserMsg_StatsFightTeamDetails.Builder.class);
        }

        // Construct using skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_StatsMatchDetails.CDOTAUserMsg_StatsFightTeamDetails.newBuilder()
        private Builder() {
          maybeForceBuilderInitialization();
        }

        private Builder(
            com.google.protobuf.GeneratedMessage.BuilderParent parent) {
          super(parent);
          maybeForceBuilderInitialization();
        }
        private void maybeForceBuilderInitialization() {
          if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
          }
        }
        private static Builder create() {
          return new Builder();
        }

        public Builder clear() {
          super.clear();
          participants_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000001);
          deaths_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000002);
          goldDelta_ = 0;
          bitField0_ = (bitField0_ & ~0x00000004);
          xpDelta_ = 0;
          bitField0_ = (bitField0_ & ~0x00000008);
          return this;
        }

        public Builder clone() {
          return create().mergeFrom(buildPartial());
        }

        public com.google.protobuf.Descriptors.Descriptor
            getDescriptorForType() {
          return skadistats.clarity.wire.common.proto.DotaUserMessages.internal_static_CDOTAUserMsg_StatsMatchDetails_CDOTAUserMsg_StatsFightTeamDetails_descriptor;
        }

        public skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_StatsMatchDetails.CDOTAUserMsg_StatsFightTeamDetails getDefaultInstanceForType() {
          return skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_StatsMatchDetails.CDOTAUserMsg_StatsFightTeamDetails.getDefaultInstance();
        }

        public skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_StatsMatchDetails.CDOTAUserMsg_StatsFightTeamDetails build() {
          skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_StatsMatchDetails.CDOTAUserMsg_StatsFightTeamDetails result = buildPartial();
          if (!result.isInitialized()) {
            throw newUninitializedMessageException(result);
          }
          return result;
        }

        public skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_StatsMatchDetails.CDOTAUserMsg_StatsFightTeamDetails buildPartial() {
          skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_StatsMatchDetails.CDOTAUserMsg_StatsFightTeamDetails result = new skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_StatsMatchDetails.CDOTAUserMsg_StatsFightTeamDetails(this);
          int from_bitField0_ = bitField0_;
          int to_bitField0_ = 0;
          if (((bitField0_ & 0x00000001) == 0x00000001)) {
            participants_ = java.util.Collections.unmodifiableList(participants_);
            bitField0_ = (bitField0_ & ~0x00000001);
          }
          result.participants_ = participants_;
          if (((bitField0_ & 0x00000002) == 0x00000002)) {
            deaths_ = java.util.Collections.unmodifiableList(deaths_);
            bitField0_ = (bitField0_ & ~0x00000002);
          }
          result.deaths_ = deaths_;
          if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
            to_bitField0_ |= 0x00000001;
          }
          result.goldDelta_ = goldDelta_;
          if (((from_bitField0_ & 0x00000008) == 0x00000008)) {
            to_bitField0_ |= 0x00000002;
          }
          result.xpDelta_ = xpDelta_;
          result.bitField0_ = to_bitField0_;
          onBuilt();
          return result;
        }

        public Builder mergeFrom(com.google.protobuf.Message other) {
          if (other instanceof skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_StatsMatchDetails.CDOTAUserMsg_StatsFightTeamDetails) {
            return mergeFrom((skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_StatsMatchDetails.CDOTAUserMsg_StatsFightTeamDetails)other);
          } else {
            super.mergeFrom(other);
            return this;
          }
        }

        public Builder mergeFrom(skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_StatsMatchDetails.CDOTAUserMsg_StatsFightTeamDetails other) {
          if (other == skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_StatsMatchDetails.CDOTAUserMsg_StatsFightTeamDetails.getDefaultInstance()) return this;
          if (!other.participants_.isEmpty()) {
            if (participants_.isEmpty()) {
              participants_ = other.participants_;
              bitField0_ = (bitField0_ & ~0x00000001);
            } else {
              ensureParticipantsIsMutable();
              participants_.addAll(other.participants_);
            }
            onChanged();
          }
          if (!other.deaths_.isEmpty()) {
            if (deaths_.isEmpty()) {
              deaths_ = other.deaths_;
              bitField0_ = (bitField0_ & ~0x00000002);
            } else {
              ensureDeathsIsMutable();
              deaths_.addAll(other.deaths_);
            }
            onChanged();
          }
          if (other.hasGoldDelta()) {
            setGoldDelta(other.getGoldDelta());
          }
          if (other.hasXpDelta()) {
            setXpDelta(other.getXpDelta());
          }
          this.mergeUnknownFields(other.getUnknownFields());
          return this;
        }

        public final boolean isInitialized() {
          return true;
        }

        public Builder mergeFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws java.io.IOException {
          skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_StatsMatchDetails.CDOTAUserMsg_StatsFightTeamDetails parsedMessage = null;
          try {
            parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
          } catch (com.google.protobuf.InvalidProtocolBufferException e) {
            parsedMessage = (skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_StatsMatchDetails.CDOTAUserMsg_StatsFightTeamDetails) e.getUnfinishedMessage();
            throw e;
          } finally {
            if (parsedMessage != null) {
              mergeFrom(parsedMessage);
            }
          }
          return this;
        }
        private int bitField0_;

        private java.util.List<java.lang.Integer> participants_ = java.util.Collections.emptyList();
        private void ensureParticipantsIsMutable() {
          if (!((bitField0_ & 0x00000001) == 0x00000001)) {
            participants_ = new java.util.ArrayList<java.lang.Integer>(participants_);
            bitField0_ |= 0x00000001;
           }
        }
        /**
         * <code>repeated uint32 participants = 1;</code>
         */
        public java.util.List<java.lang.Integer>
            getParticipantsList() {
          return java.util.Collections.unmodifiableList(participants_);
        }
        /**
         * <code>repeated uint32 participants = 1;</code>
         */
        public int getParticipantsCount() {
          return participants_.size();
        }
        /**
         * <code>repeated uint32 participants = 1;</code>
         */
        public int getParticipants(int index) {
          return participants_.get(index);
        }
        /**
         * <code>repeated uint32 participants = 1;</code>
         */
        public Builder setParticipants(
            int index, int value) {
          ensureParticipantsIsMutable();
          participants_.set(index, value);
          onChanged();
          return this;
        }
        /**
         * <code>repeated uint32 participants = 1;</code>
         */
        public Builder addParticipants(int value) {
          ensureParticipantsIsMutable();
          participants_.add(value);
          onChanged();
          return this;
        }
        /**
         * <code>repeated uint32 participants = 1;</code>
         */
        public Builder addAllParticipants(
            java.lang.Iterable<? extends java.lang.Integer> values) {
          ensureParticipantsIsMutable();
          com.google.protobuf.AbstractMessageLite.Builder.addAll(
              values, participants_);
          onChanged();
          return this;
        }
        /**
         * <code>repeated uint32 participants = 1;</code>
         */
        public Builder clearParticipants() {
          participants_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000001);
          onChanged();
          return this;
        }

        private java.util.List<java.lang.Integer> deaths_ = java.util.Collections.emptyList();
        private void ensureDeathsIsMutable() {
          if (!((bitField0_ & 0x00000002) == 0x00000002)) {
            deaths_ = new java.util.ArrayList<java.lang.Integer>(deaths_);
            bitField0_ |= 0x00000002;
           }
        }
        /**
         * <code>repeated uint32 deaths = 2;</code>
         */
        public java.util.List<java.lang.Integer>
            getDeathsList() {
          return java.util.Collections.unmodifiableList(deaths_);
        }
        /**
         * <code>repeated uint32 deaths = 2;</code>
         */
        public int getDeathsCount() {
          return deaths_.size();
        }
        /**
         * <code>repeated uint32 deaths = 2;</code>
         */
        public int getDeaths(int index) {
          return deaths_.get(index);
        }
        /**
         * <code>repeated uint32 deaths = 2;</code>
         */
        public Builder setDeaths(
            int index, int value) {
          ensureDeathsIsMutable();
          deaths_.set(index, value);
          onChanged();
          return this;
        }
        /**
         * <code>repeated uint32 deaths = 2;</code>
         */
        public Builder addDeaths(int value) {
          ensureDeathsIsMutable();
          deaths_.add(value);
          onChanged();
          return this;
        }
        /**
         * <code>repeated uint32 deaths = 2;</code>
         */
        public Builder addAllDeaths(
            java.lang.Iterable<? extends java.lang.Integer> values) {
          ensureDeathsIsMutable();
          com.google.protobuf.AbstractMessageLite.Builder.addAll(
              values, deaths_);
          onChanged();
          return this;
        }
        /**
         * <code>repeated uint32 deaths = 2;</code>
         */
        public Builder clearDeaths() {
          deaths_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000002);
          onChanged();
          return this;
        }

        private int goldDelta_ ;
        /**
         * <code>optional uint32 gold_delta = 3;</code>
         */
        public boolean hasGoldDelta() {
          return ((bitField0_ & 0x00000004) == 0x00000004);
        }
        /**
         * <code>optional uint32 gold_delta = 3;</code>
         */
        public int getGoldDelta() {
          return goldDelta_;
        }
        /**
         * <code>optional uint32 gold_delta = 3;</code>
         */
        public Builder setGoldDelta(int value) {
          bitField0_ |= 0x00000004;
          goldDelta_ = value;
          onChanged();
          return this;
        }
        /**
         * <code>optional uint32 gold_delta = 3;</code>
         */
        public Builder clearGoldDelta() {
          bitField0_ = (bitField0_ & ~0x00000004);
          goldDelta_ = 0;
          onChanged();
          return this;
        }

        private int xpDelta_ ;
        /**
         * <code>optional uint32 xp_delta = 4;</code>
         */
        public boolean hasXpDelta() {
          return ((bitField0_ & 0x00000008) == 0x00000008);
        }
        /**
         * <code>optional uint32 xp_delta = 4;</code>
         */
        public int getXpDelta() {
          return xpDelta_;
        }
        /**
         * <code>optional uint32 xp_delta = 4;</code>
         */
        public Builder setXpDelta(int value) {
          bitField0_ |= 0x00000008;
          xpDelta_ = value;
          onChanged();
          return this;
        }
        /**
         * <code>optional uint32 xp_delta = 4;</code>
         */
        public Builder clearXpDelta() {
          bitField0_ = (bitField0_ & ~0x00000008);
          xpDelta_ = 0;
          onChanged();
          return this;
        }

        // @@protoc_insertion_point(builder_scope:CDOTAUserMsg_StatsMatchDetails.CDOTAUserMsg_StatsFightTeamDetails)
      }

      static {
        defaultInstance = new CDOTAUserMsg_StatsFightTeamDetails(true);
        defaultInstance.initFields();
      }

      // @@protoc_insertion_point(class_scope:CDOTAUserMsg_StatsMatchDetails.CDOTAUserMsg_StatsFightTeamDetails)
    }

    public interface CDOTAUserMsg_StatsFightDetailsOrBuilder extends
        // @@protoc_insertion_point(interface_extends:CDOTAUserMsg_StatsMatchDetails.CDOTAUserMsg_StatsFightDetails)
        com.google.protobuf.MessageOrBuilder {

      /**
       * <code>optional float start_time = 1;</code>
       */
      boolean hasStartTime();
      /**
       * <code>optional float start_time = 1;</code>
       */
      float getStartTime();

      /**
       * <code>optional float end_time = 2;</code>
       */
      boolean hasEndTime();
      /**
       * <code>optional float end_time = 2;</code>
       */
      float getEndTime();

      /**
       * <code>optional .CDOTAUserMsg_StatsMatchDetails.CDOTAUserMsg_StatsFightTeamDetails radiant_fight_details = 3;</code>
       */
      boolean hasRadiantFightDetails();
      /**
       * <code>optional .CDOTAUserMsg_StatsMatchDetails.CDOTAUserMsg_StatsFightTeamDetails radiant_fight_details = 3;</code>
       */
      skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_StatsMatchDetails.CDOTAUserMsg_StatsFightTeamDetails getRadiantFightDetails();
      /**
       * <code>optional .CDOTAUserMsg_StatsMatchDetails.CDOTAUserMsg_StatsFightTeamDetails radiant_fight_details = 3;</code>
       */
      skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_StatsMatchDetails.CDOTAUserMsg_StatsFightTeamDetailsOrBuilder getRadiantFightDetailsOrBuilder();

      /**
       * <code>optional .CDOTAUserMsg_StatsMatchDetails.CDOTAUserMsg_StatsFightTeamDetails dire_fight_details = 4;</code>
       */
      boolean hasDireFightDetails();
      /**
       * <code>optional .CDOTAUserMsg_StatsMatchDetails.CDOTAUserMsg_StatsFightTeamDetails dire_fight_details = 4;</code>
       */
      skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_StatsMatchDetails.CDOTAUserMsg_StatsFightTeamDetails getDireFightDetails();
      /**
       * <code>optional .CDOTAUserMsg_StatsMatchDetails.CDOTAUserMsg_StatsFightTeamDetails dire_fight_details = 4;</code>
       */
      skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_StatsMatchDetails.CDOTAUserMsg_StatsFightTeamDetailsOrBuilder getDireFightDetailsOrBuilder();
    }
    /**
     * Protobuf type {@code CDOTAUserMsg_StatsMatchDetails.CDOTAUserMsg_StatsFightDetails}
     */
    public static final class CDOTAUserMsg_StatsFightDetails extends
        com.google.protobuf.GeneratedMessage implements
        // @@protoc_insertion_point(message_implements:CDOTAUserMsg_StatsMatchDetails.CDOTAUserMsg_StatsFightDetails)
        CDOTAUserMsg_StatsFightDetailsOrBuilder {
      // Use CDOTAUserMsg_StatsFightDetails.newBuilder() to construct.
      private CDOTAUserMsg_StatsFightDetails(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
        super(builder);
        this.unknownFields = builder.getUnknownFields();
      }
      private CDOTAUserMsg_StatsFightDetails(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

      private static final CDOTAUserMsg_StatsFightDetails defaultInstance;
      public static CDOTAUserMsg_StatsFightDetails getDefaultInstance() {
        return defaultInstance;
      }

      public CDOTAUserMsg_StatsFightDetails getDefaultInstanceForType() {
        return defaultInstance;
      }

      private final com.google.protobuf.UnknownFieldSet unknownFields;
      @java.lang.Override
      public final com.google.protobuf.UnknownFieldSet
          getUnknownFields() {
        return this.unknownFields;
      }
      private CDOTAUserMsg_StatsFightDetails(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        initFields();
        int mutable_bitField0_ = 0;
        com.google.protobuf.UnknownFieldSet.Builder unknownFields =
            com.google.protobuf.UnknownFieldSet.newBuilder();
        try {
          boolean done = false;
          while (!done) {
            int tag = input.readTag();
            switch (tag) {
              case 0:
                done = true;
                break;
              default: {
                if (!parseUnknownField(input, unknownFields,
                                       extensionRegistry, tag)) {
                  done = true;
                }
                break;
              }
              case 13: {
                bitField0_ |= 0x00000001;
                startTime_ = input.readFloat();
                break;
              }
              case 21: {
                bitField0_ |= 0x00000002;
                endTime_ = input.readFloat();
                break;
              }
              case 26: {
                skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_StatsMatchDetails.CDOTAUserMsg_StatsFightTeamDetails.Builder subBuilder = null;
                if (((bitField0_ & 0x00000004) == 0x00000004)) {
                  subBuilder = radiantFightDetails_.toBuilder();
                }
                radiantFightDetails_ = input.readMessage(skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_StatsMatchDetails.CDOTAUserMsg_StatsFightTeamDetails.PARSER, extensionRegistry);
                if (subBuilder != null) {
                  subBuilder.mergeFrom(radiantFightDetails_);
                  radiantFightDetails_ = subBuilder.buildPartial();
                }
                bitField0_ |= 0x00000004;
                break;
              }
              case 34: {
                skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_StatsMatchDetails.CDOTAUserMsg_StatsFightTeamDetails.Builder subBuilder = null;
                if (((bitField0_ & 0x00000008) == 0x00000008)) {
                  subBuilder = direFightDetails_.toBuilder();
                }
                direFightDetails_ = input.readMessage(skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_StatsMatchDetails.CDOTAUserMsg_StatsFightTeamDetails.PARSER, extensionRegistry);
                if (subBuilder != null) {
                  subBuilder.mergeFrom(direFightDetails_);
                  direFightDetails_ = subBuilder.buildPartial();
                }
                bitField0_ |= 0x00000008;
                break;
              }
            }
          }
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.setUnfinishedMessage(this);
        } catch (java.io.IOException e) {
          throw new com.google.protobuf.InvalidProtocolBufferException(
              e.getMessage()).setUnfinishedMessage(this);
        } finally {
          this.unknownFields = unknownFields.build();
          makeExtensionsImmutable();
        }
      }
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return skadistats.clarity.wire.common.proto.DotaUserMessages.internal_static_CDOTAUserMsg_StatsMatchDetails_CDOTAUserMsg_StatsFightDetails_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return skadistats.clarity.wire.common.proto.DotaUserMessages.internal_static_CDOTAUserMsg_StatsMatchDetails_CDOTAUserMsg_StatsFightDetails_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_StatsMatchDetails.CDOTAUserMsg_StatsFightDetails.class, skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_StatsMatchDetails.CDOTAUserMsg_StatsFightDetails.Builder.class);
      }

      public static com.google.protobuf.Parser<CDOTAUserMsg_StatsFightDetails> PARSER =
          new com.google.protobuf.AbstractParser<CDOTAUserMsg_StatsFightDetails>() {
        public CDOTAUserMsg_StatsFightDetails parsePartialFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws com.google.protobuf.InvalidProtocolBufferException {
          return new CDOTAUserMsg_StatsFightDetails(input, extensionRegistry);
        }
      };

      @java.lang.Override
      public com.google.protobuf.Parser<CDOTAUserMsg_StatsFightDetails> getParserForType() {
        return PARSER;
      }

      private int bitField0_;
      public static final int START_TIME_FIELD_NUMBER = 1;
      private float startTime_;
      /**
       * <code>optional float start_time = 1;</code>
       */
      public boolean hasStartTime() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>optional float start_time = 1;</code>
       */
      public float getStartTime() {
        return startTime_;
      }

      public static final int END_TIME_FIELD_NUMBER = 2;
      private float endTime_;
      /**
       * <code>optional float end_time = 2;</code>
       */
      public boolean hasEndTime() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>optional float end_time = 2;</code>
       */
      public float getEndTime() {
        return endTime_;
      }

      public static final int RADIANT_FIGHT_DETAILS_FIELD_NUMBER = 3;
      private skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_StatsMatchDetails.CDOTAUserMsg_StatsFightTeamDetails radiantFightDetails_;
      /**
       * <code>optional .CDOTAUserMsg_StatsMatchDetails.CDOTAUserMsg_StatsFightTeamDetails radiant_fight_details = 3;</code>
       */
      public boolean hasRadiantFightDetails() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }
      /**
       * <code>optional .CDOTAUserMsg_StatsMatchDetails.CDOTAUserMsg_StatsFightTeamDetails radiant_fight_details = 3;</code>
       */
      public skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_StatsMatchDetails.CDOTAUserMsg_StatsFightTeamDetails getRadiantFightDetails() {
        return radiantFightDetails_;
      }
      /**
       * <code>optional .CDOTAUserMsg_StatsMatchDetails.CDOTAUserMsg_StatsFightTeamDetails radiant_fight_details = 3;</code>
       */
      public skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_StatsMatchDetails.CDOTAUserMsg_StatsFightTeamDetailsOrBuilder getRadiantFightDetailsOrBuilder() {
        return radiantFightDetails_;
      }

      public static final int DIRE_FIGHT_DETAILS_FIELD_NUMBER = 4;
      private skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_StatsMatchDetails.CDOTAUserMsg_StatsFightTeamDetails direFightDetails_;
      /**
       * <code>optional .CDOTAUserMsg_StatsMatchDetails.CDOTAUserMsg_StatsFightTeamDetails dire_fight_details = 4;</code>
       */
      public boolean hasDireFightDetails() {
        return ((bitField0_ & 0x00000008) == 0x00000008);
      }
      /**
       * <code>optional .CDOTAUserMsg_StatsMatchDetails.CDOTAUserMsg_StatsFightTeamDetails dire_fight_details = 4;</code>
       */
      public skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_StatsMatchDetails.CDOTAUserMsg_StatsFightTeamDetails getDireFightDetails() {
        return direFightDetails_;
      }
      /**
       * <code>optional .CDOTAUserMsg_StatsMatchDetails.CDOTAUserMsg_StatsFightTeamDetails dire_fight_details = 4;</code>
       */
      public skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_StatsMatchDetails.CDOTAUserMsg_StatsFightTeamDetailsOrBuilder getDireFightDetailsOrBuilder() {
        return direFightDetails_;
      }

      private void initFields() {
        startTime_ = 0F;
        endTime_ = 0F;
        radiantFightDetails_ = skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_StatsMatchDetails.CDOTAUserMsg_StatsFightTeamDetails.getDefaultInstance();
        direFightDetails_ = skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_StatsMatchDetails.CDOTAUserMsg_StatsFightTeamDetails.getDefaultInstance();
      }
      private byte memoizedIsInitialized = -1;
      public final boolean isInitialized() {
        byte isInitialized = memoizedIsInitialized;
        if (isInitialized == 1) return true;
        if (isInitialized == 0) return false;

        memoizedIsInitialized = 1;
        return true;
      }

      public void writeTo(com.google.protobuf.CodedOutputStream output)
                          throws java.io.IOException {
        getSerializedSize();
        if (((bitField0_ & 0x00000001) == 0x00000001)) {
          output.writeFloat(1, startTime_);
        }
        if (((bitField0_ & 0x00000002) == 0x00000002)) {
          output.writeFloat(2, endTime_);
        }
        if (((bitField0_ & 0x00000004) == 0x00000004)) {
          output.writeMessage(3, radiantFightDetails_);
        }
        if (((bitField0_ & 0x00000008) == 0x00000008)) {
          output.writeMessage(4, direFightDetails_);
        }
        getUnknownFields().writeTo(output);
      }

      private int memoizedSerializedSize = -1;
      public int getSerializedSize() {
        int size = memoizedSerializedSize;
        if (size != -1) return size;

        size = 0;
        if (((bitField0_ & 0x00000001) == 0x00000001)) {
          size += com.google.protobuf.CodedOutputStream
            .computeFloatSize(1, startTime_);
        }
        if (((bitField0_ & 0x00000002) == 0x00000002)) {
          size += com.google.protobuf.CodedOutputStream
            .computeFloatSize(2, endTime_);
        }
        if (((bitField0_ & 0x00000004) == 0x00000004)) {
          size += com.google.protobuf.CodedOutputStream
            .computeMessageSize(3, radiantFightDetails_);
        }
        if (((bitField0_ & 0x00000008) == 0x00000008)) {
          size += com.google.protobuf.CodedOutputStream
            .computeMessageSize(4, direFightDetails_);
        }
        size += getUnknownFields().getSerializedSize();
        memoizedSerializedSize = size;
        return size;
      }

      private static final long serialVersionUID = 0L;
      @java.lang.Override
      protected java.lang.Object writeReplace()
          throws java.io.ObjectStreamException {
        return super.writeReplace();
      }

      public static skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_StatsMatchDetails.CDOTAUserMsg_StatsFightDetails parseFrom(
          com.google.protobuf.ByteString data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_StatsMatchDetails.CDOTAUserMsg_StatsFightDetails parseFrom(
          com.google.protobuf.ByteString data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_StatsMatchDetails.CDOTAUserMsg_StatsFightDetails parseFrom(byte[] data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_StatsMatchDetails.CDOTAUserMsg_StatsFightDetails parseFrom(
          byte[] data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_StatsMatchDetails.CDOTAUserMsg_StatsFightDetails parseFrom(java.io.InputStream input)
          throws java.io.IOException {
        return PARSER.parseFrom(input);
      }
      public static skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_StatsMatchDetails.CDOTAUserMsg_StatsFightDetails parseFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return PARSER.parseFrom(input, extensionRegistry);
      }
      public static skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_StatsMatchDetails.CDOTAUserMsg_StatsFightDetails parseDelimitedFrom(java.io.InputStream input)
          throws java.io.IOException {
        return PARSER.parseDelimitedFrom(input);
      }
      public static skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_StatsMatchDetails.CDOTAUserMsg_StatsFightDetails parseDelimitedFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return PARSER.parseDelimitedFrom(input, extensionRegistry);
      }
      public static skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_StatsMatchDetails.CDOTAUserMsg_StatsFightDetails parseFrom(
          com.google.protobuf.CodedInputStream input)
          throws java.io.IOException {
        return PARSER.parseFrom(input);
      }
      public static skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_StatsMatchDetails.CDOTAUserMsg_StatsFightDetails parseFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return PARSER.parseFrom(input, extensionRegistry);
      }

      public static Builder newBuilder() { return Builder.create(); }
      public Builder newBuilderForType() { return newBuilder(); }
      public static Builder newBuilder(skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_StatsMatchDetails.CDOTAUserMsg_StatsFightDetails prototype) {
        return newBuilder().mergeFrom(prototype);
      }
      public Builder toBuilder() { return newBuilder(this); }

      @java.lang.Override
      protected Builder newBuilderForType(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        Builder builder = new Builder(parent);
        return builder;
      }
      /**
       * Protobuf type {@code CDOTAUserMsg_StatsMatchDetails.CDOTAUserMsg_StatsFightDetails}
       */
      public static final class Builder extends
          com.google.protobuf.GeneratedMessage.Builder<Builder> implements
          // @@protoc_insertion_point(builder_implements:CDOTAUserMsg_StatsMatchDetails.CDOTAUserMsg_StatsFightDetails)
          skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_StatsMatchDetails.CDOTAUserMsg_StatsFightDetailsOrBuilder {
        public static final com.google.protobuf.Descriptors.Descriptor
            getDescriptor() {
          return skadistats.clarity.wire.common.proto.DotaUserMessages.internal_static_CDOTAUserMsg_StatsMatchDetails_CDOTAUserMsg_StatsFightDetails_descriptor;
        }

        protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
            internalGetFieldAccessorTable() {
          return skadistats.clarity.wire.common.proto.DotaUserMessages.internal_static_CDOTAUserMsg_StatsMatchDetails_CDOTAUserMsg_StatsFightDetails_fieldAccessorTable
              .ensureFieldAccessorsInitialized(
                  skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_StatsMatchDetails.CDOTAUserMsg_StatsFightDetails.class, skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_StatsMatchDetails.CDOTAUserMsg_StatsFightDetails.Builder.class);
        }

        // Construct using skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_StatsMatchDetails.CDOTAUserMsg_StatsFightDetails.newBuilder()
        private Builder() {
          maybeForceBuilderInitialization();
        }

        private Builder(
            com.google.protobuf.GeneratedMessage.BuilderParent parent) {
          super(parent);
          maybeForceBuilderInitialization();
        }
        private void maybeForceBuilderInitialization() {
          if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
            getRadiantFightDetailsFieldBuilder();
            getDireFightDetailsFieldBuilder();
          }
        }
        private static Builder create() {
          return new Builder();
        }

        public Builder clear() {
          super.clear();
          startTime_ = 0F;
          bitField0_ = (bitField0_ & ~0x00000001);
          endTime_ = 0F;
          bitField0_ = (bitField0_ & ~0x00000002);
          if (radiantFightDetailsBuilder_ == null) {
            radiantFightDetails_ = skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_StatsMatchDetails.CDOTAUserMsg_StatsFightTeamDetails.getDefaultInstance();
          } else {
            radiantFightDetailsBuilder_.clear();
          }
          bitField0_ = (bitField0_ & ~0x00000004);
          if (direFightDetailsBuilder_ == null) {
            direFightDetails_ = skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_StatsMatchDetails.CDOTAUserMsg_StatsFightTeamDetails.getDefaultInstance();
          } else {
            direFightDetailsBuilder_.clear();
          }
          bitField0_ = (bitField0_ & ~0x00000008);
          return this;
        }

        public Builder clone() {
          return create().mergeFrom(buildPartial());
        }

        public com.google.protobuf.Descriptors.Descriptor
            getDescriptorForType() {
          return skadistats.clarity.wire.common.proto.DotaUserMessages.internal_static_CDOTAUserMsg_StatsMatchDetails_CDOTAUserMsg_StatsFightDetails_descriptor;
        }

        public skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_StatsMatchDetails.CDOTAUserMsg_StatsFightDetails getDefaultInstanceForType() {
          return skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_StatsMatchDetails.CDOTAUserMsg_StatsFightDetails.getDefaultInstance();
        }

        public skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_StatsMatchDetails.CDOTAUserMsg_StatsFightDetails build() {
          skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_StatsMatchDetails.CDOTAUserMsg_StatsFightDetails result = buildPartial();
          if (!result.isInitialized()) {
            throw newUninitializedMessageException(result);
          }
          return result;
        }

        public skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_StatsMatchDetails.CDOTAUserMsg_StatsFightDetails buildPartial() {
          skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_StatsMatchDetails.CDOTAUserMsg_StatsFightDetails result = new skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_StatsMatchDetails.CDOTAUserMsg_StatsFightDetails(this);
          int from_bitField0_ = bitField0_;
          int to_bitField0_ = 0;
          if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
            to_bitField0_ |= 0x00000001;
          }
          result.startTime_ = startTime_;
          if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
            to_bitField0_ |= 0x00000002;
          }
          result.endTime_ = endTime_;
          if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
            to_bitField0_ |= 0x00000004;
          }
          if (radiantFightDetailsBuilder_ == null) {
            result.radiantFightDetails_ = radiantFightDetails_;
          } else {
            result.radiantFightDetails_ = radiantFightDetailsBuilder_.build();
          }
          if (((from_bitField0_ & 0x00000008) == 0x00000008)) {
            to_bitField0_ |= 0x00000008;
          }
          if (direFightDetailsBuilder_ == null) {
            result.direFightDetails_ = direFightDetails_;
          } else {
            result.direFightDetails_ = direFightDetailsBuilder_.build();
          }
          result.bitField0_ = to_bitField0_;
          onBuilt();
          return result;
        }

        public Builder mergeFrom(com.google.protobuf.Message other) {
          if (other instanceof skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_StatsMatchDetails.CDOTAUserMsg_StatsFightDetails) {
            return mergeFrom((skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_StatsMatchDetails.CDOTAUserMsg_StatsFightDetails)other);
          } else {
            super.mergeFrom(other);
            return this;
          }
        }

        public Builder mergeFrom(skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_StatsMatchDetails.CDOTAUserMsg_StatsFightDetails other) {
          if (other == skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_StatsMatchDetails.CDOTAUserMsg_StatsFightDetails.getDefaultInstance()) return this;
          if (other.hasStartTime()) {
            setStartTime(other.getStartTime());
          }
          if (other.hasEndTime()) {
            setEndTime(other.getEndTime());
          }
          if (other.hasRadiantFightDetails()) {
            mergeRadiantFightDetails(other.getRadiantFightDetails());
          }
          if (other.hasDireFightDetails()) {
            mergeDireFightDetails(other.getDireFightDetails());
          }
          this.mergeUnknownFields(other.getUnknownFields());
          return this;
        }

        public final boolean isInitialized() {
          return true;
        }

        public Builder mergeFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws java.io.IOException {
          skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_StatsMatchDetails.CDOTAUserMsg_StatsFightDetails parsedMessage = null;
          try {
            parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
          } catch (com.google.protobuf.InvalidProtocolBufferException e) {
            parsedMessage = (skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_StatsMatchDetails.CDOTAUserMsg_StatsFightDetails) e.getUnfinishedMessage();
            throw e;
          } finally {
            if (parsedMessage != null) {
              mergeFrom(parsedMessage);
            }
          }
          return this;
        }
        private int bitField0_;

        private float startTime_ ;
        /**
         * <code>optional float start_time = 1;</code>
         */
        public boolean hasStartTime() {
          return ((bitField0_ & 0x00000001) == 0x00000001);
        }
        /**
         * <code>optional float start_time = 1;</code>
         */
        public float getStartTime() {
          return startTime_;
        }
        /**
         * <code>optional float start_time = 1;</code>
         */
        public Builder setStartTime(float value) {
          bitField0_ |= 0x00000001;
          startTime_ = value;
          onChanged();
          return this;
        }
        /**
         * <code>optional float start_time = 1;</code>
         */
        public Builder clearStartTime() {
          bitField0_ = (bitField0_ & ~0x00000001);
          startTime_ = 0F;
          onChanged();
          return this;
        }

        private float endTime_ ;
        /**
         * <code>optional float end_time = 2;</code>
         */
        public boolean hasEndTime() {
          return ((bitField0_ & 0x00000002) == 0x00000002);
        }
        /**
         * <code>optional float end_time = 2;</code>
         */
        public float getEndTime() {
          return endTime_;
        }
        /**
         * <code>optional float end_time = 2;</code>
         */
        public Builder setEndTime(float value) {
          bitField0_ |= 0x00000002;
          endTime_ = value;
          onChanged();
          return this;
        }
        /**
         * <code>optional float end_time = 2;</code>
         */
        public Builder clearEndTime() {
          bitField0_ = (bitField0_ & ~0x00000002);
          endTime_ = 0F;
          onChanged();
          return this;
        }

        private skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_StatsMatchDetails.CDOTAUserMsg_StatsFightTeamDetails radiantFightDetails_ = skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_StatsMatchDetails.CDOTAUserMsg_StatsFightTeamDetails.getDefaultInstance();
        private com.google.protobuf.SingleFieldBuilder<
            skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_StatsMatchDetails.CDOTAUserMsg_StatsFightTeamDetails, skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_StatsMatchDetails.CDOTAUserMsg_StatsFightTeamDetails.Builder, skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_StatsMatchDetails.CDOTAUserMsg_StatsFightTeamDetailsOrBuilder> radiantFightDetailsBuilder_;
        /**
         * <code>optional .CDOTAUserMsg_StatsMatchDetails.CDOTAUserMsg_StatsFightTeamDetails radiant_fight_details = 3;</code>
         */
        public boolean hasRadiantFightDetails() {
          return ((bitField0_ & 0x00000004) == 0x00000004);
        }
        /**
         * <code>optional .CDOTAUserMsg_StatsMatchDetails.CDOTAUserMsg_StatsFightTeamDetails radiant_fight_details = 3;</code>
         */
        public skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_StatsMatchDetails.CDOTAUserMsg_StatsFightTeamDetails getRadiantFightDetails() {
          if (radiantFightDetailsBuilder_ == null) {
            return radiantFightDetails_;
          } else {
            return radiantFightDetailsBuilder_.getMessage();
          }
        }
        /**
         * <code>optional .CDOTAUserMsg_StatsMatchDetails.CDOTAUserMsg_StatsFightTeamDetails radiant_fight_details = 3;</code>
         */
        public Builder setRadiantFightDetails(skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_StatsMatchDetails.CDOTAUserMsg_StatsFightTeamDetails value) {
          if (radiantFightDetailsBuilder_ == null) {
            if (value == null) {
              throw new NullPointerException();
            }
            radiantFightDetails_ = value;
            onChanged();
          } else {
            radiantFightDetailsBuilder_.setMessage(value);
          }
          bitField0_ |= 0x00000004;
          return this;
        }
        /**
         * <code>optional .CDOTAUserMsg_StatsMatchDetails.CDOTAUserMsg_StatsFightTeamDetails radiant_fight_details = 3;</code>
         */
        public Builder setRadiantFightDetails(
            skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_StatsMatchDetails.CDOTAUserMsg_StatsFightTeamDetails.Builder builderForValue) {
          if (radiantFightDetailsBuilder_ == null) {
            radiantFightDetails_ = builderForValue.build();
            onChanged();
          } else {
            radiantFightDetailsBuilder_.setMessage(builderForValue.build());
          }
          bitField0_ |= 0x00000004;
          return this;
        }
        /**
         * <code>optional .CDOTAUserMsg_StatsMatchDetails.CDOTAUserMsg_StatsFightTeamDetails radiant_fight_details = 3;</code>
         */
        public Builder mergeRadiantFightDetails(skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_StatsMatchDetails.CDOTAUserMsg_StatsFightTeamDetails value) {
          if (radiantFightDetailsBuilder_ == null) {
            if (((bitField0_ & 0x00000004) == 0x00000004) &&
                radiantFightDetails_ != skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_StatsMatchDetails.CDOTAUserMsg_StatsFightTeamDetails.getDefaultInstance()) {
              radiantFightDetails_ =
                skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_StatsMatchDetails.CDOTAUserMsg_StatsFightTeamDetails.newBuilder(radiantFightDetails_).mergeFrom(value).buildPartial();
            } else {
              radiantFightDetails_ = value;
            }
            onChanged();
          } else {
            radiantFightDetailsBuilder_.mergeFrom(value);
          }
          bitField0_ |= 0x00000004;
          return this;
        }
        /**
         * <code>optional .CDOTAUserMsg_StatsMatchDetails.CDOTAUserMsg_StatsFightTeamDetails radiant_fight_details = 3;</code>
         */
        public Builder clearRadiantFightDetails() {
          if (radiantFightDetailsBuilder_ == null) {
            radiantFightDetails_ = skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_StatsMatchDetails.CDOTAUserMsg_StatsFightTeamDetails.getDefaultInstance();
            onChanged();
          } else {
            radiantFightDetailsBuilder_.clear();
          }
          bitField0_ = (bitField0_ & ~0x00000004);
          return this;
        }
        /**
         * <code>optional .CDOTAUserMsg_StatsMatchDetails.CDOTAUserMsg_StatsFightTeamDetails radiant_fight_details = 3;</code>
         */
        public skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_StatsMatchDetails.CDOTAUserMsg_StatsFightTeamDetails.Builder getRadiantFightDetailsBuilder() {
          bitField0_ |= 0x00000004;
          onChanged();
          return getRadiantFightDetailsFieldBuilder().getBuilder();
        }
        /**
         * <code>optional .CDOTAUserMsg_StatsMatchDetails.CDOTAUserMsg_StatsFightTeamDetails radiant_fight_details = 3;</code>
         */
        public skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_StatsMatchDetails.CDOTAUserMsg_StatsFightTeamDetailsOrBuilder getRadiantFightDetailsOrBuilder() {
          if (radiantFightDetailsBuilder_ != null) {
            return radiantFightDetailsBuilder_.getMessageOrBuilder();
          } else {
            return radiantFightDetails_;
          }
        }
        /**
         * <code>optional .CDOTAUserMsg_StatsMatchDetails.CDOTAUserMsg_StatsFightTeamDetails radiant_fight_details = 3;</code>
         */
        private com.google.protobuf.SingleFieldBuilder<
            skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_StatsMatchDetails.CDOTAUserMsg_StatsFightTeamDetails, skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_StatsMatchDetails.CDOTAUserMsg_StatsFightTeamDetails.Builder, skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_StatsMatchDetails.CDOTAUserMsg_StatsFightTeamDetailsOrBuilder> 
            getRadiantFightDetailsFieldBuilder() {
          if (radiantFightDetailsBuilder_ == null) {
            radiantFightDetailsBuilder_ = new com.google.protobuf.SingleFieldBuilder<
                skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_StatsMatchDetails.CDOTAUserMsg_StatsFightTeamDetails, skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_StatsMatchDetails.CDOTAUserMsg_StatsFightTeamDetails.Builder, skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_StatsMatchDetails.CDOTAUserMsg_StatsFightTeamDetailsOrBuilder>(
                    getRadiantFightDetails(),
                    getParentForChildren(),
                    isClean());
            radiantFightDetails_ = null;
          }
          return radiantFightDetailsBuilder_;
        }

        private skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_StatsMatchDetails.CDOTAUserMsg_StatsFightTeamDetails direFightDetails_ = skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_StatsMatchDetails.CDOTAUserMsg_StatsFightTeamDetails.getDefaultInstance();
        private com.google.protobuf.SingleFieldBuilder<
            skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_StatsMatchDetails.CDOTAUserMsg_StatsFightTeamDetails, skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_StatsMatchDetails.CDOTAUserMsg_StatsFightTeamDetails.Builder, skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_StatsMatchDetails.CDOTAUserMsg_StatsFightTeamDetailsOrBuilder> direFightDetailsBuilder_;
        /**
         * <code>optional .CDOTAUserMsg_StatsMatchDetails.CDOTAUserMsg_StatsFightTeamDetails dire_fight_details = 4;</code>
         */
        public boolean hasDireFightDetails() {
          return ((bitField0_ & 0x00000008) == 0x00000008);
        }
        /**
         * <code>optional .CDOTAUserMsg_StatsMatchDetails.CDOTAUserMsg_StatsFightTeamDetails dire_fight_details = 4;</code>
         */
        public skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_StatsMatchDetails.CDOTAUserMsg_StatsFightTeamDetails getDireFightDetails() {
          if (direFightDetailsBuilder_ == null) {
            return direFightDetails_;
          } else {
            return direFightDetailsBuilder_.getMessage();
          }
        }
        /**
         * <code>optional .CDOTAUserMsg_StatsMatchDetails.CDOTAUserMsg_StatsFightTeamDetails dire_fight_details = 4;</code>
         */
        public Builder setDireFightDetails(skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_StatsMatchDetails.CDOTAUserMsg_StatsFightTeamDetails value) {
          if (direFightDetailsBuilder_ == null) {
            if (value == null) {
              throw new NullPointerException();
            }
            direFightDetails_ = value;
            onChanged();
          } else {
            direFightDetailsBuilder_.setMessage(value);
          }
          bitField0_ |= 0x00000008;
          return this;
        }
        /**
         * <code>optional .CDOTAUserMsg_StatsMatchDetails.CDOTAUserMsg_StatsFightTeamDetails dire_fight_details = 4;</code>
         */
        public Builder setDireFightDetails(
            skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_StatsMatchDetails.CDOTAUserMsg_StatsFightTeamDetails.Builder builderForValue) {
          if (direFightDetailsBuilder_ == null) {
            direFightDetails_ = builderForValue.build();
            onChanged();
          } else {
            direFightDetailsBuilder_.setMessage(builderForValue.build());
          }
          bitField0_ |= 0x00000008;
          return this;
        }
        /**
         * <code>optional .CDOTAUserMsg_StatsMatchDetails.CDOTAUserMsg_StatsFightTeamDetails dire_fight_details = 4;</code>
         */
        public Builder mergeDireFightDetails(skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_StatsMatchDetails.CDOTAUserMsg_StatsFightTeamDetails value) {
          if (direFightDetailsBuilder_ == null) {
            if (((bitField0_ & 0x00000008) == 0x00000008) &&
                direFightDetails_ != skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_StatsMatchDetails.CDOTAUserMsg_StatsFightTeamDetails.getDefaultInstance()) {
              direFightDetails_ =
                skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_StatsMatchDetails.CDOTAUserMsg_StatsFightTeamDetails.newBuilder(direFightDetails_).mergeFrom(value).buildPartial();
            } else {
              direFightDetails_ = value;
            }
            onChanged();
          } else {
            direFightDetailsBuilder_.mergeFrom(value);
          }
          bitField0_ |= 0x00000008;
          return this;
        }
        /**
         * <code>optional .CDOTAUserMsg_StatsMatchDetails.CDOTAUserMsg_StatsFightTeamDetails dire_fight_details = 4;</code>
         */
        public Builder clearDireFightDetails() {
          if (direFightDetailsBuilder_ == null) {
            direFightDetails_ = skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_StatsMatchDetails.CDOTAUserMsg_StatsFightTeamDetails.getDefaultInstance();
            onChanged();
          } else {
            direFightDetailsBuilder_.clear();
          }
          bitField0_ = (bitField0_ & ~0x00000008);
          return this;
        }
        /**
         * <code>optional .CDOTAUserMsg_StatsMatchDetails.CDOTAUserMsg_StatsFightTeamDetails dire_fight_details = 4;</code>
         */
        public skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_StatsMatchDetails.CDOTAUserMsg_StatsFightTeamDetails.Builder getDireFightDetailsBuilder() {
          bitField0_ |= 0x00000008;
          onChanged();
          return getDireFightDetailsFieldBuilder().getBuilder();
        }
        /**
         * <code>optional .CDOTAUserMsg_StatsMatchDetails.CDOTAUserMsg_StatsFightTeamDetails dire_fight_details = 4;</code>
         */
        public skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_StatsMatchDetails.CDOTAUserMsg_StatsFightTeamDetailsOrBuilder getDireFightDetailsOrBuilder() {
          if (direFightDetailsBuilder_ != null) {
            return direFightDetailsBuilder_.getMessageOrBuilder();
          } else {
            return direFightDetails_;
          }
        }
        /**
         * <code>optional .CDOTAUserMsg_StatsMatchDetails.CDOTAUserMsg_StatsFightTeamDetails dire_fight_details = 4;</code>
         */
        private com.google.protobuf.SingleFieldBuilder<
            skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_StatsMatchDetails.CDOTAUserMsg_StatsFightTeamDetails, skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_StatsMatchDetails.CDOTAUserMsg_StatsFightTeamDetails.Builder, skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_StatsMatchDetails.CDOTAUserMsg_StatsFightTeamDetailsOrBuilder> 
            getDireFightDetailsFieldBuilder() {
          if (direFightDetailsBuilder_ == null) {
            direFightDetailsBuilder_ = new com.google.protobuf.SingleFieldBuilder<
                skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_StatsMatchDetails.CDOTAUserMsg_StatsFightTeamDetails, skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_StatsMatchDetails.CDOTAUserMsg_StatsFightTeamDetails.Builder, skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_StatsMatchDetails.CDOTAUserMsg_StatsFightTeamDetailsOrBuilder>(
                    getDireFightDetails(),
                    getParentForChildren(),
                    isClean());
            direFightDetails_ = null;
          }
          return direFightDetailsBuilder_;
        }

        // @@protoc_insertion_point(builder_scope:CDOTAUserMsg_StatsMatchDetails.CDOTAUserMsg_StatsFightDetails)
      }

      static {
        defaultInstance = new CDOTAUserMsg_StatsFightDetails(true);
        defaultInstance.initFields();
      }

      // @@protoc_insertion_point(class_scope:CDOTAUserMsg_StatsMatchDetails.CDOTAUserMsg_StatsFightDetails)
    }

    public static final int HERO_LOOKUP_FIELD_NUMBER = 1;
    private java.util.List<skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_StatsHeroLookup> heroLookup_;
    /**
     * <code>repeated .CDOTAUserMsg_StatsHeroLookup hero_lookup = 1;</code>
     */
    public java.util.List<skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_StatsHeroLookup> getHeroLookupList() {
      return heroLookup_;
    }
    /**
     * <code>repeated .CDOTAUserMsg_StatsHeroLookup hero_lookup = 1;</code>
     */
    public java.util.List<? extends skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_StatsHeroLookupOrBuilder> 
        getHeroLookupOrBuilderList() {
      return heroLookup_;
    }
    /**
     * <code>repeated .CDOTAUserMsg_StatsHeroLookup hero_lookup = 1;</code>
     */
    public int getHeroLookupCount() {
      return heroLookup_.size();
    }
    /**
     * <code>repeated .CDOTAUserMsg_StatsHeroLookup hero_lookup = 1;</code>
     */
    public skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_StatsHeroLookup getHeroLookup(int index) {
      return heroLookup_.get(index);
    }
    /**
     * <code>repeated .CDOTAUserMsg_StatsHeroLookup hero_lookup = 1;</code>
     */
    public skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_StatsHeroLookupOrBuilder getHeroLookupOrBuilder(
        int index) {
      return heroLookup_.get(index);
    }

    public static final int RADIANT_STATS_FIELD_NUMBER = 2;
    private java.util.List<skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_StatsTeamMinuteDetails> radiantStats_;
    /**
     * <code>repeated .CDOTAUserMsg_StatsTeamMinuteDetails radiant_stats = 2;</code>
     */
    public java.util.List<skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_StatsTeamMinuteDetails> getRadiantStatsList() {
      return radiantStats_;
    }
    /**
     * <code>repeated .CDOTAUserMsg_StatsTeamMinuteDetails radiant_stats = 2;</code>
     */
    public java.util.List<? extends skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_StatsTeamMinuteDetailsOrBuilder> 
        getRadiantStatsOrBuilderList() {
      return radiantStats_;
    }
    /**
     * <code>repeated .CDOTAUserMsg_StatsTeamMinuteDetails radiant_stats = 2;</code>
     */
    public int getRadiantStatsCount() {
      return radiantStats_.size();
    }
    /**
     * <code>repeated .CDOTAUserMsg_StatsTeamMinuteDetails radiant_stats = 2;</code>
     */
    public skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_StatsTeamMinuteDetails getRadiantStats(int index) {
      return radiantStats_.get(index);
    }
    /**
     * <code>repeated .CDOTAUserMsg_StatsTeamMinuteDetails radiant_stats = 2;</code>
     */
    public skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_StatsTeamMinuteDetailsOrBuilder getRadiantStatsOrBuilder(
        int index) {
      return radiantStats_.get(index);
    }

    public static final int DIRE_STATS_FIELD_NUMBER = 3;
    private java.util.List<skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_StatsTeamMinuteDetails> direStats_;
    /**
     * <code>repeated .CDOTAUserMsg_StatsTeamMinuteDetails dire_stats = 3;</code>
     */
    public java.util.List<skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_StatsTeamMinuteDetails> getDireStatsList() {
      return direStats_;
    }
    /**
     * <code>repeated .CDOTAUserMsg_StatsTeamMinuteDetails dire_stats = 3;</code>
     */
    public java.util.List<? extends skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_StatsTeamMinuteDetailsOrBuilder> 
        getDireStatsOrBuilderList() {
      return direStats_;
    }
    /**
     * <code>repeated .CDOTAUserMsg_StatsTeamMinuteDetails dire_stats = 3;</code>
     */
    public int getDireStatsCount() {
      return direStats_.size();
    }
    /**
     * <code>repeated .CDOTAUserMsg_StatsTeamMinuteDetails dire_stats = 3;</code>
     */
    public skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_StatsTeamMinuteDetails getDireStats(int index) {
      return direStats_.get(index);
    }
    /**
     * <code>repeated .CDOTAUserMsg_StatsTeamMinuteDetails dire_stats = 3;</code>
     */
    public skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_StatsTeamMinuteDetailsOrBuilder getDireStatsOrBuilder(
        int index) {
      return direStats_.get(index);
    }

    public static final int RADIANT_KILLS_FIELD_NUMBER = 4;
    private java.util.List<skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_StatsKillDetails> radiantKills_;
    /**
     * <code>repeated .CDOTAUserMsg_StatsKillDetails radiant_kills = 4;</code>
     */
    public java.util.List<skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_StatsKillDetails> getRadiantKillsList() {
      return radiantKills_;
    }
    /**
     * <code>repeated .CDOTAUserMsg_StatsKillDetails radiant_kills = 4;</code>
     */
    public java.util.List<? extends skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_StatsKillDetailsOrBuilder> 
        getRadiantKillsOrBuilderList() {
      return radiantKills_;
    }
    /**
     * <code>repeated .CDOTAUserMsg_StatsKillDetails radiant_kills = 4;</code>
     */
    public int getRadiantKillsCount() {
      return radiantKills_.size();
    }
    /**
     * <code>repeated .CDOTAUserMsg_StatsKillDetails radiant_kills = 4;</code>
     */
    public skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_StatsKillDetails getRadiantKills(int index) {
      return radiantKills_.get(index);
    }
    /**
     * <code>repeated .CDOTAUserMsg_StatsKillDetails radiant_kills = 4;</code>
     */
    public skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_StatsKillDetailsOrBuilder getRadiantKillsOrBuilder(
        int index) {
      return radiantKills_.get(index);
    }

    public static final int DIRE_KILLS_FIELD_NUMBER = 5;
    private java.util.List<skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_StatsKillDetails> direKills_;
    /**
     * <code>repeated .CDOTAUserMsg_StatsKillDetails dire_kills = 5;</code>
     */
    public java.util.List<skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_StatsKillDetails> getDireKillsList() {
      return direKills_;
    }
    /**
     * <code>repeated .CDOTAUserMsg_StatsKillDetails dire_kills = 5;</code>
     */
    public java.util.List<? extends skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_StatsKillDetailsOrBuilder> 
        getDireKillsOrBuilderList() {
      return direKills_;
    }
    /**
     * <code>repeated .CDOTAUserMsg_StatsKillDetails dire_kills = 5;</code>
     */
    public int getDireKillsCount() {
      return direKills_.size();
    }
    /**
     * <code>repeated .CDOTAUserMsg_StatsKillDetails dire_kills = 5;</code>
     */
    public skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_StatsKillDetails getDireKills(int index) {
      return direKills_.get(index);
    }
    /**
     * <code>repeated .CDOTAUserMsg_StatsKillDetails dire_kills = 5;</code>
     */
    public skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_StatsKillDetailsOrBuilder getDireKillsOrBuilder(
        int index) {
      return direKills_.get(index);
    }

    public static final int FIGHT_DETAILS_FIELD_NUMBER = 6;
    private java.util.List<skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_StatsMatchDetails.CDOTAUserMsg_StatsFightDetails> fightDetails_;
    /**
     * <code>repeated .CDOTAUserMsg_StatsMatchDetails.CDOTAUserMsg_StatsFightDetails fight_details = 6;</code>
     */
    public java.util.List<skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_StatsMatchDetails.CDOTAUserMsg_StatsFightDetails> getFightDetailsList() {
      return fightDetails_;
    }
    /**
     * <code>repeated .CDOTAUserMsg_StatsMatchDetails.CDOTAUserMsg_StatsFightDetails fight_details = 6;</code>
     */
    public java.util.List<? extends skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_StatsMatchDetails.CDOTAUserMsg_StatsFightDetailsOrBuilder> 
        getFightDetailsOrBuilderList() {
      return fightDetails_;
    }
    /**
     * <code>repeated .CDOTAUserMsg_StatsMatchDetails.CDOTAUserMsg_StatsFightDetails fight_details = 6;</code>
     */
    public int getFightDetailsCount() {
      return fightDetails_.size();
    }
    /**
     * <code>repeated .CDOTAUserMsg_StatsMatchDetails.CDOTAUserMsg_StatsFightDetails fight_details = 6;</code>
     */
    public skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_StatsMatchDetails.CDOTAUserMsg_StatsFightDetails getFightDetails(int index) {
      return fightDetails_.get(index);
    }
    /**
     * <code>repeated .CDOTAUserMsg_StatsMatchDetails.CDOTAUserMsg_StatsFightDetails fight_details = 6;</code>
     */
    public skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_StatsMatchDetails.CDOTAUserMsg_StatsFightDetailsOrBuilder getFightDetailsOrBuilder(
        int index) {
      return fightDetails_.get(index);
    }

    private void initFields() {
      heroLookup_ = java.util.Collections.emptyList();
      radiantStats_ = java.util.Collections.emptyList();
      direStats_ = java.util.Collections.emptyList();
      radiantKills_ = java.util.Collections.emptyList();
      direKills_ = java.util.Collections.emptyList();
      fightDetails_ = java.util.Collections.emptyList();
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      for (int i = 0; i < heroLookup_.size(); i++) {
        output.writeMessage(1, heroLookup_.get(i));
      }
      for (int i = 0; i < radiantStats_.size(); i++) {
        output.writeMessage(2, radiantStats_.get(i));
      }
      for (int i = 0; i < direStats_.size(); i++) {
        output.writeMessage(3, direStats_.get(i));
      }
      for (int i = 0; i < radiantKills_.size(); i++) {
        output.writeMessage(4, radiantKills_.get(i));
      }
      for (int i = 0; i < direKills_.size(); i++) {
        output.writeMessage(5, direKills_.get(i));
      }
      for (int i = 0; i < fightDetails_.size(); i++) {
        output.writeMessage(6, fightDetails_.get(i));
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      for (int i = 0; i < heroLookup_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(1, heroLookup_.get(i));
      }
      for (int i = 0; i < radiantStats_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(2, radiantStats_.get(i));
      }
      for (int i = 0; i < direStats_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(3, direStats_.get(i));
      }
      for (int i = 0; i < radiantKills_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(4, radiantKills_.get(i));
      }
      for (int i = 0; i < direKills_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(5, direKills_.get(i));
      }
      for (int i = 0; i < fightDetails_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(6, fightDetails_.get(i));
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_StatsMatchDetails parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_StatsMatchDetails parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_StatsMatchDetails parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_StatsMatchDetails parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_StatsMatchDetails parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_StatsMatchDetails parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_StatsMatchDetails parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_StatsMatchDetails parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_StatsMatchDetails parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_StatsMatchDetails parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_StatsMatchDetails prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code CDOTAUserMsg_StatsMatchDetails}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:CDOTAUserMsg_StatsMatchDetails)
        skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_StatsMatchDetailsOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return skadistats.clarity.wire.common.proto.DotaUserMessages.internal_static_CDOTAUserMsg_StatsMatchDetails_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return skadistats.clarity.wire.common.proto.DotaUserMessages.internal_static_CDOTAUserMsg_StatsMatchDetails_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_StatsMatchDetails.class, skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_StatsMatchDetails.Builder.class);
      }

      // Construct using skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_StatsMatchDetails.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
          getHeroLookupFieldBuilder();
          getRadiantStatsFieldBuilder();
          getDireStatsFieldBuilder();
          getRadiantKillsFieldBuilder();
          getDireKillsFieldBuilder();
          getFightDetailsFieldBuilder();
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        if (heroLookupBuilder_ == null) {
          heroLookup_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000001);
        } else {
          heroLookupBuilder_.clear();
        }
        if (radiantStatsBuilder_ == null) {
          radiantStats_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000002);
        } else {
          radiantStatsBuilder_.clear();
        }
        if (direStatsBuilder_ == null) {
          direStats_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000004);
        } else {
          direStatsBuilder_.clear();
        }
        if (radiantKillsBuilder_ == null) {
          radiantKills_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000008);
        } else {
          radiantKillsBuilder_.clear();
        }
        if (direKillsBuilder_ == null) {
          direKills_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000010);
        } else {
          direKillsBuilder_.clear();
        }
        if (fightDetailsBuilder_ == null) {
          fightDetails_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000020);
        } else {
          fightDetailsBuilder_.clear();
        }
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return skadistats.clarity.wire.common.proto.DotaUserMessages.internal_static_CDOTAUserMsg_StatsMatchDetails_descriptor;
      }

      public skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_StatsMatchDetails getDefaultInstanceForType() {
        return skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_StatsMatchDetails.getDefaultInstance();
      }

      public skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_StatsMatchDetails build() {
        skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_StatsMatchDetails result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_StatsMatchDetails buildPartial() {
        skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_StatsMatchDetails result = new skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_StatsMatchDetails(this);
        int from_bitField0_ = bitField0_;
        if (heroLookupBuilder_ == null) {
          if (((bitField0_ & 0x00000001) == 0x00000001)) {
            heroLookup_ = java.util.Collections.unmodifiableList(heroLookup_);
            bitField0_ = (bitField0_ & ~0x00000001);
          }
          result.heroLookup_ = heroLookup_;
        } else {
          result.heroLookup_ = heroLookupBuilder_.build();
        }
        if (radiantStatsBuilder_ == null) {
          if (((bitField0_ & 0x00000002) == 0x00000002)) {
            radiantStats_ = java.util.Collections.unmodifiableList(radiantStats_);
            bitField0_ = (bitField0_ & ~0x00000002);
          }
          result.radiantStats_ = radiantStats_;
        } else {
          result.radiantStats_ = radiantStatsBuilder_.build();
        }
        if (direStatsBuilder_ == null) {
          if (((bitField0_ & 0x00000004) == 0x00000004)) {
            direStats_ = java.util.Collections.unmodifiableList(direStats_);
            bitField0_ = (bitField0_ & ~0x00000004);
          }
          result.direStats_ = direStats_;
        } else {
          result.direStats_ = direStatsBuilder_.build();
        }
        if (radiantKillsBuilder_ == null) {
          if (((bitField0_ & 0x00000008) == 0x00000008)) {
            radiantKills_ = java.util.Collections.unmodifiableList(radiantKills_);
            bitField0_ = (bitField0_ & ~0x00000008);
          }
          result.radiantKills_ = radiantKills_;
        } else {
          result.radiantKills_ = radiantKillsBuilder_.build();
        }
        if (direKillsBuilder_ == null) {
          if (((bitField0_ & 0x00000010) == 0x00000010)) {
            direKills_ = java.util.Collections.unmodifiableList(direKills_);
            bitField0_ = (bitField0_ & ~0x00000010);
          }
          result.direKills_ = direKills_;
        } else {
          result.direKills_ = direKillsBuilder_.build();
        }
        if (fightDetailsBuilder_ == null) {
          if (((bitField0_ & 0x00000020) == 0x00000020)) {
            fightDetails_ = java.util.Collections.unmodifiableList(fightDetails_);
            bitField0_ = (bitField0_ & ~0x00000020);
          }
          result.fightDetails_ = fightDetails_;
        } else {
          result.fightDetails_ = fightDetailsBuilder_.build();
        }
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_StatsMatchDetails) {
          return mergeFrom((skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_StatsMatchDetails)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_StatsMatchDetails other) {
        if (other == skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_StatsMatchDetails.getDefaultInstance()) return this;
        if (heroLookupBuilder_ == null) {
          if (!other.heroLookup_.isEmpty()) {
            if (heroLookup_.isEmpty()) {
              heroLookup_ = other.heroLookup_;
              bitField0_ = (bitField0_ & ~0x00000001);
            } else {
              ensureHeroLookupIsMutable();
              heroLookup_.addAll(other.heroLookup_);
            }
            onChanged();
          }
        } else {
          if (!other.heroLookup_.isEmpty()) {
            if (heroLookupBuilder_.isEmpty()) {
              heroLookupBuilder_.dispose();
              heroLookupBuilder_ = null;
              heroLookup_ = other.heroLookup_;
              bitField0_ = (bitField0_ & ~0x00000001);
              heroLookupBuilder_ = 
                com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders ?
                   getHeroLookupFieldBuilder() : null;
            } else {
              heroLookupBuilder_.addAllMessages(other.heroLookup_);
            }
          }
        }
        if (radiantStatsBuilder_ == null) {
          if (!other.radiantStats_.isEmpty()) {
            if (radiantStats_.isEmpty()) {
              radiantStats_ = other.radiantStats_;
              bitField0_ = (bitField0_ & ~0x00000002);
            } else {
              ensureRadiantStatsIsMutable();
              radiantStats_.addAll(other.radiantStats_);
            }
            onChanged();
          }
        } else {
          if (!other.radiantStats_.isEmpty()) {
            if (radiantStatsBuilder_.isEmpty()) {
              radiantStatsBuilder_.dispose();
              radiantStatsBuilder_ = null;
              radiantStats_ = other.radiantStats_;
              bitField0_ = (bitField0_ & ~0x00000002);
              radiantStatsBuilder_ = 
                com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders ?
                   getRadiantStatsFieldBuilder() : null;
            } else {
              radiantStatsBuilder_.addAllMessages(other.radiantStats_);
            }
          }
        }
        if (direStatsBuilder_ == null) {
          if (!other.direStats_.isEmpty()) {
            if (direStats_.isEmpty()) {
              direStats_ = other.direStats_;
              bitField0_ = (bitField0_ & ~0x00000004);
            } else {
              ensureDireStatsIsMutable();
              direStats_.addAll(other.direStats_);
            }
            onChanged();
          }
        } else {
          if (!other.direStats_.isEmpty()) {
            if (direStatsBuilder_.isEmpty()) {
              direStatsBuilder_.dispose();
              direStatsBuilder_ = null;
              direStats_ = other.direStats_;
              bitField0_ = (bitField0_ & ~0x00000004);
              direStatsBuilder_ = 
                com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders ?
                   getDireStatsFieldBuilder() : null;
            } else {
              direStatsBuilder_.addAllMessages(other.direStats_);
            }
          }
        }
        if (radiantKillsBuilder_ == null) {
          if (!other.radiantKills_.isEmpty()) {
            if (radiantKills_.isEmpty()) {
              radiantKills_ = other.radiantKills_;
              bitField0_ = (bitField0_ & ~0x00000008);
            } else {
              ensureRadiantKillsIsMutable();
              radiantKills_.addAll(other.radiantKills_);
            }
            onChanged();
          }
        } else {
          if (!other.radiantKills_.isEmpty()) {
            if (radiantKillsBuilder_.isEmpty()) {
              radiantKillsBuilder_.dispose();
              radiantKillsBuilder_ = null;
              radiantKills_ = other.radiantKills_;
              bitField0_ = (bitField0_ & ~0x00000008);
              radiantKillsBuilder_ = 
                com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders ?
                   getRadiantKillsFieldBuilder() : null;
            } else {
              radiantKillsBuilder_.addAllMessages(other.radiantKills_);
            }
          }
        }
        if (direKillsBuilder_ == null) {
          if (!other.direKills_.isEmpty()) {
            if (direKills_.isEmpty()) {
              direKills_ = other.direKills_;
              bitField0_ = (bitField0_ & ~0x00000010);
            } else {
              ensureDireKillsIsMutable();
              direKills_.addAll(other.direKills_);
            }
            onChanged();
          }
        } else {
          if (!other.direKills_.isEmpty()) {
            if (direKillsBuilder_.isEmpty()) {
              direKillsBuilder_.dispose();
              direKillsBuilder_ = null;
              direKills_ = other.direKills_;
              bitField0_ = (bitField0_ & ~0x00000010);
              direKillsBuilder_ = 
                com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders ?
                   getDireKillsFieldBuilder() : null;
            } else {
              direKillsBuilder_.addAllMessages(other.direKills_);
            }
          }
        }
        if (fightDetailsBuilder_ == null) {
          if (!other.fightDetails_.isEmpty()) {
            if (fightDetails_.isEmpty()) {
              fightDetails_ = other.fightDetails_;
              bitField0_ = (bitField0_ & ~0x00000020);
            } else {
              ensureFightDetailsIsMutable();
              fightDetails_.addAll(other.fightDetails_);
            }
            onChanged();
          }
        } else {
          if (!other.fightDetails_.isEmpty()) {
            if (fightDetailsBuilder_.isEmpty()) {
              fightDetailsBuilder_.dispose();
              fightDetailsBuilder_ = null;
              fightDetails_ = other.fightDetails_;
              bitField0_ = (bitField0_ & ~0x00000020);
              fightDetailsBuilder_ = 
                com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders ?
                   getFightDetailsFieldBuilder() : null;
            } else {
              fightDetailsBuilder_.addAllMessages(other.fightDetails_);
            }
          }
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_StatsMatchDetails parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_StatsMatchDetails) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private java.util.List<skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_StatsHeroLookup> heroLookup_ =
        java.util.Collections.emptyList();
      private void ensureHeroLookupIsMutable() {
        if (!((bitField0_ & 0x00000001) == 0x00000001)) {
          heroLookup_ = new java.util.ArrayList<skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_StatsHeroLookup>(heroLookup_);
          bitField0_ |= 0x00000001;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilder<
          skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_StatsHeroLookup, skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_StatsHeroLookup.Builder, skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_StatsHeroLookupOrBuilder> heroLookupBuilder_;

      /**
       * <code>repeated .CDOTAUserMsg_StatsHeroLookup hero_lookup = 1;</code>
       */
      public java.util.List<skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_StatsHeroLookup> getHeroLookupList() {
        if (heroLookupBuilder_ == null) {
          return java.util.Collections.unmodifiableList(heroLookup_);
        } else {
          return heroLookupBuilder_.getMessageList();
        }
      }
      /**
       * <code>repeated .CDOTAUserMsg_StatsHeroLookup hero_lookup = 1;</code>
       */
      public int getHeroLookupCount() {
        if (heroLookupBuilder_ == null) {
          return heroLookup_.size();
        } else {
          return heroLookupBuilder_.getCount();
        }
      }
      /**
       * <code>repeated .CDOTAUserMsg_StatsHeroLookup hero_lookup = 1;</code>
       */
      public skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_StatsHeroLookup getHeroLookup(int index) {
        if (heroLookupBuilder_ == null) {
          return heroLookup_.get(index);
        } else {
          return heroLookupBuilder_.getMessage(index);
        }
      }
      /**
       * <code>repeated .CDOTAUserMsg_StatsHeroLookup hero_lookup = 1;</code>
       */
      public Builder setHeroLookup(
          int index, skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_StatsHeroLookup value) {
        if (heroLookupBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureHeroLookupIsMutable();
          heroLookup_.set(index, value);
          onChanged();
        } else {
          heroLookupBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .CDOTAUserMsg_StatsHeroLookup hero_lookup = 1;</code>
       */
      public Builder setHeroLookup(
          int index, skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_StatsHeroLookup.Builder builderForValue) {
        if (heroLookupBuilder_ == null) {
          ensureHeroLookupIsMutable();
          heroLookup_.set(index, builderForValue.build());
          onChanged();
        } else {
          heroLookupBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .CDOTAUserMsg_StatsHeroLookup hero_lookup = 1;</code>
       */
      public Builder addHeroLookup(skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_StatsHeroLookup value) {
        if (heroLookupBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureHeroLookupIsMutable();
          heroLookup_.add(value);
          onChanged();
        } else {
          heroLookupBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <code>repeated .CDOTAUserMsg_StatsHeroLookup hero_lookup = 1;</code>
       */
      public Builder addHeroLookup(
          int index, skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_StatsHeroLookup value) {
        if (heroLookupBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureHeroLookupIsMutable();
          heroLookup_.add(index, value);
          onChanged();
        } else {
          heroLookupBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .CDOTAUserMsg_StatsHeroLookup hero_lookup = 1;</code>
       */
      public Builder addHeroLookup(
          skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_StatsHeroLookup.Builder builderForValue) {
        if (heroLookupBuilder_ == null) {
          ensureHeroLookupIsMutable();
          heroLookup_.add(builderForValue.build());
          onChanged();
        } else {
          heroLookupBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .CDOTAUserMsg_StatsHeroLookup hero_lookup = 1;</code>
       */
      public Builder addHeroLookup(
          int index, skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_StatsHeroLookup.Builder builderForValue) {
        if (heroLookupBuilder_ == null) {
          ensureHeroLookupIsMutable();
          heroLookup_.add(index, builderForValue.build());
          onChanged();
        } else {
          heroLookupBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .CDOTAUserMsg_StatsHeroLookup hero_lookup = 1;</code>
       */
      public Builder addAllHeroLookup(
          java.lang.Iterable<? extends skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_StatsHeroLookup> values) {
        if (heroLookupBuilder_ == null) {
          ensureHeroLookupIsMutable();
          com.google.protobuf.AbstractMessageLite.Builder.addAll(
              values, heroLookup_);
          onChanged();
        } else {
          heroLookupBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <code>repeated .CDOTAUserMsg_StatsHeroLookup hero_lookup = 1;</code>
       */
      public Builder clearHeroLookup() {
        if (heroLookupBuilder_ == null) {
          heroLookup_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000001);
          onChanged();
        } else {
          heroLookupBuilder_.clear();
        }
        return this;
      }
      /**
       * <code>repeated .CDOTAUserMsg_StatsHeroLookup hero_lookup = 1;</code>
       */
      public Builder removeHeroLookup(int index) {
        if (heroLookupBuilder_ == null) {
          ensureHeroLookupIsMutable();
          heroLookup_.remove(index);
          onChanged();
        } else {
          heroLookupBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <code>repeated .CDOTAUserMsg_StatsHeroLookup hero_lookup = 1;</code>
       */
      public skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_StatsHeroLookup.Builder getHeroLookupBuilder(
          int index) {
        return getHeroLookupFieldBuilder().getBuilder(index);
      }
      /**
       * <code>repeated .CDOTAUserMsg_StatsHeroLookup hero_lookup = 1;</code>
       */
      public skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_StatsHeroLookupOrBuilder getHeroLookupOrBuilder(
          int index) {
        if (heroLookupBuilder_ == null) {
          return heroLookup_.get(index);  } else {
          return heroLookupBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <code>repeated .CDOTAUserMsg_StatsHeroLookup hero_lookup = 1;</code>
       */
      public java.util.List<? extends skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_StatsHeroLookupOrBuilder> 
           getHeroLookupOrBuilderList() {
        if (heroLookupBuilder_ != null) {
          return heroLookupBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(heroLookup_);
        }
      }
      /**
       * <code>repeated .CDOTAUserMsg_StatsHeroLookup hero_lookup = 1;</code>
       */
      public skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_StatsHeroLookup.Builder addHeroLookupBuilder() {
        return getHeroLookupFieldBuilder().addBuilder(
            skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_StatsHeroLookup.getDefaultInstance());
      }
      /**
       * <code>repeated .CDOTAUserMsg_StatsHeroLookup hero_lookup = 1;</code>
       */
      public skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_StatsHeroLookup.Builder addHeroLookupBuilder(
          int index) {
        return getHeroLookupFieldBuilder().addBuilder(
            index, skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_StatsHeroLookup.getDefaultInstance());
      }
      /**
       * <code>repeated .CDOTAUserMsg_StatsHeroLookup hero_lookup = 1;</code>
       */
      public java.util.List<skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_StatsHeroLookup.Builder> 
           getHeroLookupBuilderList() {
        return getHeroLookupFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilder<
          skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_StatsHeroLookup, skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_StatsHeroLookup.Builder, skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_StatsHeroLookupOrBuilder> 
          getHeroLookupFieldBuilder() {
        if (heroLookupBuilder_ == null) {
          heroLookupBuilder_ = new com.google.protobuf.RepeatedFieldBuilder<
              skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_StatsHeroLookup, skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_StatsHeroLookup.Builder, skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_StatsHeroLookupOrBuilder>(
                  heroLookup_,
                  ((bitField0_ & 0x00000001) == 0x00000001),
                  getParentForChildren(),
                  isClean());
          heroLookup_ = null;
        }
        return heroLookupBuilder_;
      }

      private java.util.List<skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_StatsTeamMinuteDetails> radiantStats_ =
        java.util.Collections.emptyList();
      private void ensureRadiantStatsIsMutable() {
        if (!((bitField0_ & 0x00000002) == 0x00000002)) {
          radiantStats_ = new java.util.ArrayList<skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_StatsTeamMinuteDetails>(radiantStats_);
          bitField0_ |= 0x00000002;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilder<
          skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_StatsTeamMinuteDetails, skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_StatsTeamMinuteDetails.Builder, skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_StatsTeamMinuteDetailsOrBuilder> radiantStatsBuilder_;

      /**
       * <code>repeated .CDOTAUserMsg_StatsTeamMinuteDetails radiant_stats = 2;</code>
       */
      public java.util.List<skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_StatsTeamMinuteDetails> getRadiantStatsList() {
        if (radiantStatsBuilder_ == null) {
          return java.util.Collections.unmodifiableList(radiantStats_);
        } else {
          return radiantStatsBuilder_.getMessageList();
        }
      }
      /**
       * <code>repeated .CDOTAUserMsg_StatsTeamMinuteDetails radiant_stats = 2;</code>
       */
      public int getRadiantStatsCount() {
        if (radiantStatsBuilder_ == null) {
          return radiantStats_.size();
        } else {
          return radiantStatsBuilder_.getCount();
        }
      }
      /**
       * <code>repeated .CDOTAUserMsg_StatsTeamMinuteDetails radiant_stats = 2;</code>
       */
      public skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_StatsTeamMinuteDetails getRadiantStats(int index) {
        if (radiantStatsBuilder_ == null) {
          return radiantStats_.get(index);
        } else {
          return radiantStatsBuilder_.getMessage(index);
        }
      }
      /**
       * <code>repeated .CDOTAUserMsg_StatsTeamMinuteDetails radiant_stats = 2;</code>
       */
      public Builder setRadiantStats(
          int index, skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_StatsTeamMinuteDetails value) {
        if (radiantStatsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureRadiantStatsIsMutable();
          radiantStats_.set(index, value);
          onChanged();
        } else {
          radiantStatsBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .CDOTAUserMsg_StatsTeamMinuteDetails radiant_stats = 2;</code>
       */
      public Builder setRadiantStats(
          int index, skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_StatsTeamMinuteDetails.Builder builderForValue) {
        if (radiantStatsBuilder_ == null) {
          ensureRadiantStatsIsMutable();
          radiantStats_.set(index, builderForValue.build());
          onChanged();
        } else {
          radiantStatsBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .CDOTAUserMsg_StatsTeamMinuteDetails radiant_stats = 2;</code>
       */
      public Builder addRadiantStats(skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_StatsTeamMinuteDetails value) {
        if (radiantStatsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureRadiantStatsIsMutable();
          radiantStats_.add(value);
          onChanged();
        } else {
          radiantStatsBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <code>repeated .CDOTAUserMsg_StatsTeamMinuteDetails radiant_stats = 2;</code>
       */
      public Builder addRadiantStats(
          int index, skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_StatsTeamMinuteDetails value) {
        if (radiantStatsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureRadiantStatsIsMutable();
          radiantStats_.add(index, value);
          onChanged();
        } else {
          radiantStatsBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .CDOTAUserMsg_StatsTeamMinuteDetails radiant_stats = 2;</code>
       */
      public Builder addRadiantStats(
          skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_StatsTeamMinuteDetails.Builder builderForValue) {
        if (radiantStatsBuilder_ == null) {
          ensureRadiantStatsIsMutable();
          radiantStats_.add(builderForValue.build());
          onChanged();
        } else {
          radiantStatsBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .CDOTAUserMsg_StatsTeamMinuteDetails radiant_stats = 2;</code>
       */
      public Builder addRadiantStats(
          int index, skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_StatsTeamMinuteDetails.Builder builderForValue) {
        if (radiantStatsBuilder_ == null) {
          ensureRadiantStatsIsMutable();
          radiantStats_.add(index, builderForValue.build());
          onChanged();
        } else {
          radiantStatsBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .CDOTAUserMsg_StatsTeamMinuteDetails radiant_stats = 2;</code>
       */
      public Builder addAllRadiantStats(
          java.lang.Iterable<? extends skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_StatsTeamMinuteDetails> values) {
        if (radiantStatsBuilder_ == null) {
          ensureRadiantStatsIsMutable();
          com.google.protobuf.AbstractMessageLite.Builder.addAll(
              values, radiantStats_);
          onChanged();
        } else {
          radiantStatsBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <code>repeated .CDOTAUserMsg_StatsTeamMinuteDetails radiant_stats = 2;</code>
       */
      public Builder clearRadiantStats() {
        if (radiantStatsBuilder_ == null) {
          radiantStats_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000002);
          onChanged();
        } else {
          radiantStatsBuilder_.clear();
        }
        return this;
      }
      /**
       * <code>repeated .CDOTAUserMsg_StatsTeamMinuteDetails radiant_stats = 2;</code>
       */
      public Builder removeRadiantStats(int index) {
        if (radiantStatsBuilder_ == null) {
          ensureRadiantStatsIsMutable();
          radiantStats_.remove(index);
          onChanged();
        } else {
          radiantStatsBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <code>repeated .CDOTAUserMsg_StatsTeamMinuteDetails radiant_stats = 2;</code>
       */
      public skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_StatsTeamMinuteDetails.Builder getRadiantStatsBuilder(
          int index) {
        return getRadiantStatsFieldBuilder().getBuilder(index);
      }
      /**
       * <code>repeated .CDOTAUserMsg_StatsTeamMinuteDetails radiant_stats = 2;</code>
       */
      public skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_StatsTeamMinuteDetailsOrBuilder getRadiantStatsOrBuilder(
          int index) {
        if (radiantStatsBuilder_ == null) {
          return radiantStats_.get(index);  } else {
          return radiantStatsBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <code>repeated .CDOTAUserMsg_StatsTeamMinuteDetails radiant_stats = 2;</code>
       */
      public java.util.List<? extends skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_StatsTeamMinuteDetailsOrBuilder> 
           getRadiantStatsOrBuilderList() {
        if (radiantStatsBuilder_ != null) {
          return radiantStatsBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(radiantStats_);
        }
      }
      /**
       * <code>repeated .CDOTAUserMsg_StatsTeamMinuteDetails radiant_stats = 2;</code>
       */
      public skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_StatsTeamMinuteDetails.Builder addRadiantStatsBuilder() {
        return getRadiantStatsFieldBuilder().addBuilder(
            skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_StatsTeamMinuteDetails.getDefaultInstance());
      }
      /**
       * <code>repeated .CDOTAUserMsg_StatsTeamMinuteDetails radiant_stats = 2;</code>
       */
      public skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_StatsTeamMinuteDetails.Builder addRadiantStatsBuilder(
          int index) {
        return getRadiantStatsFieldBuilder().addBuilder(
            index, skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_StatsTeamMinuteDetails.getDefaultInstance());
      }
      /**
       * <code>repeated .CDOTAUserMsg_StatsTeamMinuteDetails radiant_stats = 2;</code>
       */
      public java.util.List<skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_StatsTeamMinuteDetails.Builder> 
           getRadiantStatsBuilderList() {
        return getRadiantStatsFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilder<
          skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_StatsTeamMinuteDetails, skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_StatsTeamMinuteDetails.Builder, skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_StatsTeamMinuteDetailsOrBuilder> 
          getRadiantStatsFieldBuilder() {
        if (radiantStatsBuilder_ == null) {
          radiantStatsBuilder_ = new com.google.protobuf.RepeatedFieldBuilder<
              skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_StatsTeamMinuteDetails, skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_StatsTeamMinuteDetails.Builder, skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_StatsTeamMinuteDetailsOrBuilder>(
                  radiantStats_,
                  ((bitField0_ & 0x00000002) == 0x00000002),
                  getParentForChildren(),
                  isClean());
          radiantStats_ = null;
        }
        return radiantStatsBuilder_;
      }

      private java.util.List<skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_StatsTeamMinuteDetails> direStats_ =
        java.util.Collections.emptyList();
      private void ensureDireStatsIsMutable() {
        if (!((bitField0_ & 0x00000004) == 0x00000004)) {
          direStats_ = new java.util.ArrayList<skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_StatsTeamMinuteDetails>(direStats_);
          bitField0_ |= 0x00000004;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilder<
          skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_StatsTeamMinuteDetails, skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_StatsTeamMinuteDetails.Builder, skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_StatsTeamMinuteDetailsOrBuilder> direStatsBuilder_;

      /**
       * <code>repeated .CDOTAUserMsg_StatsTeamMinuteDetails dire_stats = 3;</code>
       */
      public java.util.List<skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_StatsTeamMinuteDetails> getDireStatsList() {
        if (direStatsBuilder_ == null) {
          return java.util.Collections.unmodifiableList(direStats_);
        } else {
          return direStatsBuilder_.getMessageList();
        }
      }
      /**
       * <code>repeated .CDOTAUserMsg_StatsTeamMinuteDetails dire_stats = 3;</code>
       */
      public int getDireStatsCount() {
        if (direStatsBuilder_ == null) {
          return direStats_.size();
        } else {
          return direStatsBuilder_.getCount();
        }
      }
      /**
       * <code>repeated .CDOTAUserMsg_StatsTeamMinuteDetails dire_stats = 3;</code>
       */
      public skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_StatsTeamMinuteDetails getDireStats(int index) {
        if (direStatsBuilder_ == null) {
          return direStats_.get(index);
        } else {
          return direStatsBuilder_.getMessage(index);
        }
      }
      /**
       * <code>repeated .CDOTAUserMsg_StatsTeamMinuteDetails dire_stats = 3;</code>
       */
      public Builder setDireStats(
          int index, skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_StatsTeamMinuteDetails value) {
        if (direStatsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureDireStatsIsMutable();
          direStats_.set(index, value);
          onChanged();
        } else {
          direStatsBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .CDOTAUserMsg_StatsTeamMinuteDetails dire_stats = 3;</code>
       */
      public Builder setDireStats(
          int index, skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_StatsTeamMinuteDetails.Builder builderForValue) {
        if (direStatsBuilder_ == null) {
          ensureDireStatsIsMutable();
          direStats_.set(index, builderForValue.build());
          onChanged();
        } else {
          direStatsBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .CDOTAUserMsg_StatsTeamMinuteDetails dire_stats = 3;</code>
       */
      public Builder addDireStats(skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_StatsTeamMinuteDetails value) {
        if (direStatsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureDireStatsIsMutable();
          direStats_.add(value);
          onChanged();
        } else {
          direStatsBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <code>repeated .CDOTAUserMsg_StatsTeamMinuteDetails dire_stats = 3;</code>
       */
      public Builder addDireStats(
          int index, skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_StatsTeamMinuteDetails value) {
        if (direStatsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureDireStatsIsMutable();
          direStats_.add(index, value);
          onChanged();
        } else {
          direStatsBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .CDOTAUserMsg_StatsTeamMinuteDetails dire_stats = 3;</code>
       */
      public Builder addDireStats(
          skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_StatsTeamMinuteDetails.Builder builderForValue) {
        if (direStatsBuilder_ == null) {
          ensureDireStatsIsMutable();
          direStats_.add(builderForValue.build());
          onChanged();
        } else {
          direStatsBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .CDOTAUserMsg_StatsTeamMinuteDetails dire_stats = 3;</code>
       */
      public Builder addDireStats(
          int index, skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_StatsTeamMinuteDetails.Builder builderForValue) {
        if (direStatsBuilder_ == null) {
          ensureDireStatsIsMutable();
          direStats_.add(index, builderForValue.build());
          onChanged();
        } else {
          direStatsBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .CDOTAUserMsg_StatsTeamMinuteDetails dire_stats = 3;</code>
       */
      public Builder addAllDireStats(
          java.lang.Iterable<? extends skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_StatsTeamMinuteDetails> values) {
        if (direStatsBuilder_ == null) {
          ensureDireStatsIsMutable();
          com.google.protobuf.AbstractMessageLite.Builder.addAll(
              values, direStats_);
          onChanged();
        } else {
          direStatsBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <code>repeated .CDOTAUserMsg_StatsTeamMinuteDetails dire_stats = 3;</code>
       */
      public Builder clearDireStats() {
        if (direStatsBuilder_ == null) {
          direStats_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000004);
          onChanged();
        } else {
          direStatsBuilder_.clear();
        }
        return this;
      }
      /**
       * <code>repeated .CDOTAUserMsg_StatsTeamMinuteDetails dire_stats = 3;</code>
       */
      public Builder removeDireStats(int index) {
        if (direStatsBuilder_ == null) {
          ensureDireStatsIsMutable();
          direStats_.remove(index);
          onChanged();
        } else {
          direStatsBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <code>repeated .CDOTAUserMsg_StatsTeamMinuteDetails dire_stats = 3;</code>
       */
      public skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_StatsTeamMinuteDetails.Builder getDireStatsBuilder(
          int index) {
        return getDireStatsFieldBuilder().getBuilder(index);
      }
      /**
       * <code>repeated .CDOTAUserMsg_StatsTeamMinuteDetails dire_stats = 3;</code>
       */
      public skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_StatsTeamMinuteDetailsOrBuilder getDireStatsOrBuilder(
          int index) {
        if (direStatsBuilder_ == null) {
          return direStats_.get(index);  } else {
          return direStatsBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <code>repeated .CDOTAUserMsg_StatsTeamMinuteDetails dire_stats = 3;</code>
       */
      public java.util.List<? extends skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_StatsTeamMinuteDetailsOrBuilder> 
           getDireStatsOrBuilderList() {
        if (direStatsBuilder_ != null) {
          return direStatsBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(direStats_);
        }
      }
      /**
       * <code>repeated .CDOTAUserMsg_StatsTeamMinuteDetails dire_stats = 3;</code>
       */
      public skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_StatsTeamMinuteDetails.Builder addDireStatsBuilder() {
        return getDireStatsFieldBuilder().addBuilder(
            skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_StatsTeamMinuteDetails.getDefaultInstance());
      }
      /**
       * <code>repeated .CDOTAUserMsg_StatsTeamMinuteDetails dire_stats = 3;</code>
       */
      public skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_StatsTeamMinuteDetails.Builder addDireStatsBuilder(
          int index) {
        return getDireStatsFieldBuilder().addBuilder(
            index, skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_StatsTeamMinuteDetails.getDefaultInstance());
      }
      /**
       * <code>repeated .CDOTAUserMsg_StatsTeamMinuteDetails dire_stats = 3;</code>
       */
      public java.util.List<skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_StatsTeamMinuteDetails.Builder> 
           getDireStatsBuilderList() {
        return getDireStatsFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilder<
          skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_StatsTeamMinuteDetails, skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_StatsTeamMinuteDetails.Builder, skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_StatsTeamMinuteDetailsOrBuilder> 
          getDireStatsFieldBuilder() {
        if (direStatsBuilder_ == null) {
          direStatsBuilder_ = new com.google.protobuf.RepeatedFieldBuilder<
              skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_StatsTeamMinuteDetails, skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_StatsTeamMinuteDetails.Builder, skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_StatsTeamMinuteDetailsOrBuilder>(
                  direStats_,
                  ((bitField0_ & 0x00000004) == 0x00000004),
                  getParentForChildren(),
                  isClean());
          direStats_ = null;
        }
        return direStatsBuilder_;
      }

      private java.util.List<skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_StatsKillDetails> radiantKills_ =
        java.util.Collections.emptyList();
      private void ensureRadiantKillsIsMutable() {
        if (!((bitField0_ & 0x00000008) == 0x00000008)) {
          radiantKills_ = new java.util.ArrayList<skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_StatsKillDetails>(radiantKills_);
          bitField0_ |= 0x00000008;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilder<
          skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_StatsKillDetails, skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_StatsKillDetails.Builder, skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_StatsKillDetailsOrBuilder> radiantKillsBuilder_;

      /**
       * <code>repeated .CDOTAUserMsg_StatsKillDetails radiant_kills = 4;</code>
       */
      public java.util.List<skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_StatsKillDetails> getRadiantKillsList() {
        if (radiantKillsBuilder_ == null) {
          return java.util.Collections.unmodifiableList(radiantKills_);
        } else {
          return radiantKillsBuilder_.getMessageList();
        }
      }
      /**
       * <code>repeated .CDOTAUserMsg_StatsKillDetails radiant_kills = 4;</code>
       */
      public int getRadiantKillsCount() {
        if (radiantKillsBuilder_ == null) {
          return radiantKills_.size();
        } else {
          return radiantKillsBuilder_.getCount();
        }
      }
      /**
       * <code>repeated .CDOTAUserMsg_StatsKillDetails radiant_kills = 4;</code>
       */
      public skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_StatsKillDetails getRadiantKills(int index) {
        if (radiantKillsBuilder_ == null) {
          return radiantKills_.get(index);
        } else {
          return radiantKillsBuilder_.getMessage(index);
        }
      }
      /**
       * <code>repeated .CDOTAUserMsg_StatsKillDetails radiant_kills = 4;</code>
       */
      public Builder setRadiantKills(
          int index, skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_StatsKillDetails value) {
        if (radiantKillsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureRadiantKillsIsMutable();
          radiantKills_.set(index, value);
          onChanged();
        } else {
          radiantKillsBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .CDOTAUserMsg_StatsKillDetails radiant_kills = 4;</code>
       */
      public Builder setRadiantKills(
          int index, skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_StatsKillDetails.Builder builderForValue) {
        if (radiantKillsBuilder_ == null) {
          ensureRadiantKillsIsMutable();
          radiantKills_.set(index, builderForValue.build());
          onChanged();
        } else {
          radiantKillsBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .CDOTAUserMsg_StatsKillDetails radiant_kills = 4;</code>
       */
      public Builder addRadiantKills(skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_StatsKillDetails value) {
        if (radiantKillsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureRadiantKillsIsMutable();
          radiantKills_.add(value);
          onChanged();
        } else {
          radiantKillsBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <code>repeated .CDOTAUserMsg_StatsKillDetails radiant_kills = 4;</code>
       */
      public Builder addRadiantKills(
          int index, skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_StatsKillDetails value) {
        if (radiantKillsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureRadiantKillsIsMutable();
          radiantKills_.add(index, value);
          onChanged();
        } else {
          radiantKillsBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .CDOTAUserMsg_StatsKillDetails radiant_kills = 4;</code>
       */
      public Builder addRadiantKills(
          skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_StatsKillDetails.Builder builderForValue) {
        if (radiantKillsBuilder_ == null) {
          ensureRadiantKillsIsMutable();
          radiantKills_.add(builderForValue.build());
          onChanged();
        } else {
          radiantKillsBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .CDOTAUserMsg_StatsKillDetails radiant_kills = 4;</code>
       */
      public Builder addRadiantKills(
          int index, skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_StatsKillDetails.Builder builderForValue) {
        if (radiantKillsBuilder_ == null) {
          ensureRadiantKillsIsMutable();
          radiantKills_.add(index, builderForValue.build());
          onChanged();
        } else {
          radiantKillsBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .CDOTAUserMsg_StatsKillDetails radiant_kills = 4;</code>
       */
      public Builder addAllRadiantKills(
          java.lang.Iterable<? extends skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_StatsKillDetails> values) {
        if (radiantKillsBuilder_ == null) {
          ensureRadiantKillsIsMutable();
          com.google.protobuf.AbstractMessageLite.Builder.addAll(
              values, radiantKills_);
          onChanged();
        } else {
          radiantKillsBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <code>repeated .CDOTAUserMsg_StatsKillDetails radiant_kills = 4;</code>
       */
      public Builder clearRadiantKills() {
        if (radiantKillsBuilder_ == null) {
          radiantKills_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000008);
          onChanged();
        } else {
          radiantKillsBuilder_.clear();
        }
        return this;
      }
      /**
       * <code>repeated .CDOTAUserMsg_StatsKillDetails radiant_kills = 4;</code>
       */
      public Builder removeRadiantKills(int index) {
        if (radiantKillsBuilder_ == null) {
          ensureRadiantKillsIsMutable();
          radiantKills_.remove(index);
          onChanged();
        } else {
          radiantKillsBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <code>repeated .CDOTAUserMsg_StatsKillDetails radiant_kills = 4;</code>
       */
      public skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_StatsKillDetails.Builder getRadiantKillsBuilder(
          int index) {
        return getRadiantKillsFieldBuilder().getBuilder(index);
      }
      /**
       * <code>repeated .CDOTAUserMsg_StatsKillDetails radiant_kills = 4;</code>
       */
      public skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_StatsKillDetailsOrBuilder getRadiantKillsOrBuilder(
          int index) {
        if (radiantKillsBuilder_ == null) {
          return radiantKills_.get(index);  } else {
          return radiantKillsBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <code>repeated .CDOTAUserMsg_StatsKillDetails radiant_kills = 4;</code>
       */
      public java.util.List<? extends skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_StatsKillDetailsOrBuilder> 
           getRadiantKillsOrBuilderList() {
        if (radiantKillsBuilder_ != null) {
          return radiantKillsBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(radiantKills_);
        }
      }
      /**
       * <code>repeated .CDOTAUserMsg_StatsKillDetails radiant_kills = 4;</code>
       */
      public skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_StatsKillDetails.Builder addRadiantKillsBuilder() {
        return getRadiantKillsFieldBuilder().addBuilder(
            skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_StatsKillDetails.getDefaultInstance());
      }
      /**
       * <code>repeated .CDOTAUserMsg_StatsKillDetails radiant_kills = 4;</code>
       */
      public skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_StatsKillDetails.Builder addRadiantKillsBuilder(
          int index) {
        return getRadiantKillsFieldBuilder().addBuilder(
            index, skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_StatsKillDetails.getDefaultInstance());
      }
      /**
       * <code>repeated .CDOTAUserMsg_StatsKillDetails radiant_kills = 4;</code>
       */
      public java.util.List<skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_StatsKillDetails.Builder> 
           getRadiantKillsBuilderList() {
        return getRadiantKillsFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilder<
          skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_StatsKillDetails, skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_StatsKillDetails.Builder, skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_StatsKillDetailsOrBuilder> 
          getRadiantKillsFieldBuilder() {
        if (radiantKillsBuilder_ == null) {
          radiantKillsBuilder_ = new com.google.protobuf.RepeatedFieldBuilder<
              skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_StatsKillDetails, skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_StatsKillDetails.Builder, skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_StatsKillDetailsOrBuilder>(
                  radiantKills_,
                  ((bitField0_ & 0x00000008) == 0x00000008),
                  getParentForChildren(),
                  isClean());
          radiantKills_ = null;
        }
        return radiantKillsBuilder_;
      }

      private java.util.List<skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_StatsKillDetails> direKills_ =
        java.util.Collections.emptyList();
      private void ensureDireKillsIsMutable() {
        if (!((bitField0_ & 0x00000010) == 0x00000010)) {
          direKills_ = new java.util.ArrayList<skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_StatsKillDetails>(direKills_);
          bitField0_ |= 0x00000010;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilder<
          skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_StatsKillDetails, skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_StatsKillDetails.Builder, skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_StatsKillDetailsOrBuilder> direKillsBuilder_;

      /**
       * <code>repeated .CDOTAUserMsg_StatsKillDetails dire_kills = 5;</code>
       */
      public java.util.List<skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_StatsKillDetails> getDireKillsList() {
        if (direKillsBuilder_ == null) {
          return java.util.Collections.unmodifiableList(direKills_);
        } else {
          return direKillsBuilder_.getMessageList();
        }
      }
      /**
       * <code>repeated .CDOTAUserMsg_StatsKillDetails dire_kills = 5;</code>
       */
      public int getDireKillsCount() {
        if (direKillsBuilder_ == null) {
          return direKills_.size();
        } else {
          return direKillsBuilder_.getCount();
        }
      }
      /**
       * <code>repeated .CDOTAUserMsg_StatsKillDetails dire_kills = 5;</code>
       */
      public skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_StatsKillDetails getDireKills(int index) {
        if (direKillsBuilder_ == null) {
          return direKills_.get(index);
        } else {
          return direKillsBuilder_.getMessage(index);
        }
      }
      /**
       * <code>repeated .CDOTAUserMsg_StatsKillDetails dire_kills = 5;</code>
       */
      public Builder setDireKills(
          int index, skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_StatsKillDetails value) {
        if (direKillsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureDireKillsIsMutable();
          direKills_.set(index, value);
          onChanged();
        } else {
          direKillsBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .CDOTAUserMsg_StatsKillDetails dire_kills = 5;</code>
       */
      public Builder setDireKills(
          int index, skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_StatsKillDetails.Builder builderForValue) {
        if (direKillsBuilder_ == null) {
          ensureDireKillsIsMutable();
          direKills_.set(index, builderForValue.build());
          onChanged();
        } else {
          direKillsBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .CDOTAUserMsg_StatsKillDetails dire_kills = 5;</code>
       */
      public Builder addDireKills(skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_StatsKillDetails value) {
        if (direKillsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureDireKillsIsMutable();
          direKills_.add(value);
          onChanged();
        } else {
          direKillsBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <code>repeated .CDOTAUserMsg_StatsKillDetails dire_kills = 5;</code>
       */
      public Builder addDireKills(
          int index, skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_StatsKillDetails value) {
        if (direKillsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureDireKillsIsMutable();
          direKills_.add(index, value);
          onChanged();
        } else {
          direKillsBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .CDOTAUserMsg_StatsKillDetails dire_kills = 5;</code>
       */
      public Builder addDireKills(
          skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_StatsKillDetails.Builder builderForValue) {
        if (direKillsBuilder_ == null) {
          ensureDireKillsIsMutable();
          direKills_.add(builderForValue.build());
          onChanged();
        } else {
          direKillsBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .CDOTAUserMsg_StatsKillDetails dire_kills = 5;</code>
       */
      public Builder addDireKills(
          int index, skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_StatsKillDetails.Builder builderForValue) {
        if (direKillsBuilder_ == null) {
          ensureDireKillsIsMutable();
          direKills_.add(index, builderForValue.build());
          onChanged();
        } else {
          direKillsBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .CDOTAUserMsg_StatsKillDetails dire_kills = 5;</code>
       */
      public Builder addAllDireKills(
          java.lang.Iterable<? extends skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_StatsKillDetails> values) {
        if (direKillsBuilder_ == null) {
          ensureDireKillsIsMutable();
          com.google.protobuf.AbstractMessageLite.Builder.addAll(
              values, direKills_);
          onChanged();
        } else {
          direKillsBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <code>repeated .CDOTAUserMsg_StatsKillDetails dire_kills = 5;</code>
       */
      public Builder clearDireKills() {
        if (direKillsBuilder_ == null) {
          direKills_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000010);
          onChanged();
        } else {
          direKillsBuilder_.clear();
        }
        return this;
      }
      /**
       * <code>repeated .CDOTAUserMsg_StatsKillDetails dire_kills = 5;</code>
       */
      public Builder removeDireKills(int index) {
        if (direKillsBuilder_ == null) {
          ensureDireKillsIsMutable();
          direKills_.remove(index);
          onChanged();
        } else {
          direKillsBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <code>repeated .CDOTAUserMsg_StatsKillDetails dire_kills = 5;</code>
       */
      public skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_StatsKillDetails.Builder getDireKillsBuilder(
          int index) {
        return getDireKillsFieldBuilder().getBuilder(index);
      }
      /**
       * <code>repeated .CDOTAUserMsg_StatsKillDetails dire_kills = 5;</code>
       */
      public skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_StatsKillDetailsOrBuilder getDireKillsOrBuilder(
          int index) {
        if (direKillsBuilder_ == null) {
          return direKills_.get(index);  } else {
          return direKillsBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <code>repeated .CDOTAUserMsg_StatsKillDetails dire_kills = 5;</code>
       */
      public java.util.List<? extends skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_StatsKillDetailsOrBuilder> 
           getDireKillsOrBuilderList() {
        if (direKillsBuilder_ != null) {
          return direKillsBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(direKills_);
        }
      }
      /**
       * <code>repeated .CDOTAUserMsg_StatsKillDetails dire_kills = 5;</code>
       */
      public skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_StatsKillDetails.Builder addDireKillsBuilder() {
        return getDireKillsFieldBuilder().addBuilder(
            skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_StatsKillDetails.getDefaultInstance());
      }
      /**
       * <code>repeated .CDOTAUserMsg_StatsKillDetails dire_kills = 5;</code>
       */
      public skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_StatsKillDetails.Builder addDireKillsBuilder(
          int index) {
        return getDireKillsFieldBuilder().addBuilder(
            index, skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_StatsKillDetails.getDefaultInstance());
      }
      /**
       * <code>repeated .CDOTAUserMsg_StatsKillDetails dire_kills = 5;</code>
       */
      public java.util.List<skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_StatsKillDetails.Builder> 
           getDireKillsBuilderList() {
        return getDireKillsFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilder<
          skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_StatsKillDetails, skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_StatsKillDetails.Builder, skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_StatsKillDetailsOrBuilder> 
          getDireKillsFieldBuilder() {
        if (direKillsBuilder_ == null) {
          direKillsBuilder_ = new com.google.protobuf.RepeatedFieldBuilder<
              skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_StatsKillDetails, skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_StatsKillDetails.Builder, skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_StatsKillDetailsOrBuilder>(
                  direKills_,
                  ((bitField0_ & 0x00000010) == 0x00000010),
                  getParentForChildren(),
                  isClean());
          direKills_ = null;
        }
        return direKillsBuilder_;
      }

      private java.util.List<skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_StatsMatchDetails.CDOTAUserMsg_StatsFightDetails> fightDetails_ =
        java.util.Collections.emptyList();
      private void ensureFightDetailsIsMutable() {
        if (!((bitField0_ & 0x00000020) == 0x00000020)) {
          fightDetails_ = new java.util.ArrayList<skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_StatsMatchDetails.CDOTAUserMsg_StatsFightDetails>(fightDetails_);
          bitField0_ |= 0x00000020;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilder<
          skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_StatsMatchDetails.CDOTAUserMsg_StatsFightDetails, skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_StatsMatchDetails.CDOTAUserMsg_StatsFightDetails.Builder, skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_StatsMatchDetails.CDOTAUserMsg_StatsFightDetailsOrBuilder> fightDetailsBuilder_;

      /**
       * <code>repeated .CDOTAUserMsg_StatsMatchDetails.CDOTAUserMsg_StatsFightDetails fight_details = 6;</code>
       */
      public java.util.List<skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_StatsMatchDetails.CDOTAUserMsg_StatsFightDetails> getFightDetailsList() {
        if (fightDetailsBuilder_ == null) {
          return java.util.Collections.unmodifiableList(fightDetails_);
        } else {
          return fightDetailsBuilder_.getMessageList();
        }
      }
      /**
       * <code>repeated .CDOTAUserMsg_StatsMatchDetails.CDOTAUserMsg_StatsFightDetails fight_details = 6;</code>
       */
      public int getFightDetailsCount() {
        if (fightDetailsBuilder_ == null) {
          return fightDetails_.size();
        } else {
          return fightDetailsBuilder_.getCount();
        }
      }
      /**
       * <code>repeated .CDOTAUserMsg_StatsMatchDetails.CDOTAUserMsg_StatsFightDetails fight_details = 6;</code>
       */
      public skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_StatsMatchDetails.CDOTAUserMsg_StatsFightDetails getFightDetails(int index) {
        if (fightDetailsBuilder_ == null) {
          return fightDetails_.get(index);
        } else {
          return fightDetailsBuilder_.getMessage(index);
        }
      }
      /**
       * <code>repeated .CDOTAUserMsg_StatsMatchDetails.CDOTAUserMsg_StatsFightDetails fight_details = 6;</code>
       */
      public Builder setFightDetails(
          int index, skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_StatsMatchDetails.CDOTAUserMsg_StatsFightDetails value) {
        if (fightDetailsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureFightDetailsIsMutable();
          fightDetails_.set(index, value);
          onChanged();
        } else {
          fightDetailsBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .CDOTAUserMsg_StatsMatchDetails.CDOTAUserMsg_StatsFightDetails fight_details = 6;</code>
       */
      public Builder setFightDetails(
          int index, skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_StatsMatchDetails.CDOTAUserMsg_StatsFightDetails.Builder builderForValue) {
        if (fightDetailsBuilder_ == null) {
          ensureFightDetailsIsMutable();
          fightDetails_.set(index, builderForValue.build());
          onChanged();
        } else {
          fightDetailsBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .CDOTAUserMsg_StatsMatchDetails.CDOTAUserMsg_StatsFightDetails fight_details = 6;</code>
       */
      public Builder addFightDetails(skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_StatsMatchDetails.CDOTAUserMsg_StatsFightDetails value) {
        if (fightDetailsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureFightDetailsIsMutable();
          fightDetails_.add(value);
          onChanged();
        } else {
          fightDetailsBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <code>repeated .CDOTAUserMsg_StatsMatchDetails.CDOTAUserMsg_StatsFightDetails fight_details = 6;</code>
       */
      public Builder addFightDetails(
          int index, skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_StatsMatchDetails.CDOTAUserMsg_StatsFightDetails value) {
        if (fightDetailsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureFightDetailsIsMutable();
          fightDetails_.add(index, value);
          onChanged();
        } else {
          fightDetailsBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .CDOTAUserMsg_StatsMatchDetails.CDOTAUserMsg_StatsFightDetails fight_details = 6;</code>
       */
      public Builder addFightDetails(
          skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_StatsMatchDetails.CDOTAUserMsg_StatsFightDetails.Builder builderForValue) {
        if (fightDetailsBuilder_ == null) {
          ensureFightDetailsIsMutable();
          fightDetails_.add(builderForValue.build());
          onChanged();
        } else {
          fightDetailsBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .CDOTAUserMsg_StatsMatchDetails.CDOTAUserMsg_StatsFightDetails fight_details = 6;</code>
       */
      public Builder addFightDetails(
          int index, skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_StatsMatchDetails.CDOTAUserMsg_StatsFightDetails.Builder builderForValue) {
        if (fightDetailsBuilder_ == null) {
          ensureFightDetailsIsMutable();
          fightDetails_.add(index, builderForValue.build());
          onChanged();
        } else {
          fightDetailsBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .CDOTAUserMsg_StatsMatchDetails.CDOTAUserMsg_StatsFightDetails fight_details = 6;</code>
       */
      public Builder addAllFightDetails(
          java.lang.Iterable<? extends skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_StatsMatchDetails.CDOTAUserMsg_StatsFightDetails> values) {
        if (fightDetailsBuilder_ == null) {
          ensureFightDetailsIsMutable();
          com.google.protobuf.AbstractMessageLite.Builder.addAll(
              values, fightDetails_);
          onChanged();
        } else {
          fightDetailsBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <code>repeated .CDOTAUserMsg_StatsMatchDetails.CDOTAUserMsg_StatsFightDetails fight_details = 6;</code>
       */
      public Builder clearFightDetails() {
        if (fightDetailsBuilder_ == null) {
          fightDetails_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000020);
          onChanged();
        } else {
          fightDetailsBuilder_.clear();
        }
        return this;
      }
      /**
       * <code>repeated .CDOTAUserMsg_StatsMatchDetails.CDOTAUserMsg_StatsFightDetails fight_details = 6;</code>
       */
      public Builder removeFightDetails(int index) {
        if (fightDetailsBuilder_ == null) {
          ensureFightDetailsIsMutable();
          fightDetails_.remove(index);
          onChanged();
        } else {
          fightDetailsBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <code>repeated .CDOTAUserMsg_StatsMatchDetails.CDOTAUserMsg_StatsFightDetails fight_details = 6;</code>
       */
      public skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_StatsMatchDetails.CDOTAUserMsg_StatsFightDetails.Builder getFightDetailsBuilder(
          int index) {
        return getFightDetailsFieldBuilder().getBuilder(index);
      }
      /**
       * <code>repeated .CDOTAUserMsg_StatsMatchDetails.CDOTAUserMsg_StatsFightDetails fight_details = 6;</code>
       */
      public skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_StatsMatchDetails.CDOTAUserMsg_StatsFightDetailsOrBuilder getFightDetailsOrBuilder(
          int index) {
        if (fightDetailsBuilder_ == null) {
          return fightDetails_.get(index);  } else {
          return fightDetailsBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <code>repeated .CDOTAUserMsg_StatsMatchDetails.CDOTAUserMsg_StatsFightDetails fight_details = 6;</code>
       */
      public java.util.List<? extends skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_StatsMatchDetails.CDOTAUserMsg_StatsFightDetailsOrBuilder> 
           getFightDetailsOrBuilderList() {
        if (fightDetailsBuilder_ != null) {
          return fightDetailsBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(fightDetails_);
        }
      }
      /**
       * <code>repeated .CDOTAUserMsg_StatsMatchDetails.CDOTAUserMsg_StatsFightDetails fight_details = 6;</code>
       */
      public skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_StatsMatchDetails.CDOTAUserMsg_StatsFightDetails.Builder addFightDetailsBuilder() {
        return getFightDetailsFieldBuilder().addBuilder(
            skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_StatsMatchDetails.CDOTAUserMsg_StatsFightDetails.getDefaultInstance());
      }
      /**
       * <code>repeated .CDOTAUserMsg_StatsMatchDetails.CDOTAUserMsg_StatsFightDetails fight_details = 6;</code>
       */
      public skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_StatsMatchDetails.CDOTAUserMsg_StatsFightDetails.Builder addFightDetailsBuilder(
          int index) {
        return getFightDetailsFieldBuilder().addBuilder(
            index, skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_StatsMatchDetails.CDOTAUserMsg_StatsFightDetails.getDefaultInstance());
      }
      /**
       * <code>repeated .CDOTAUserMsg_StatsMatchDetails.CDOTAUserMsg_StatsFightDetails fight_details = 6;</code>
       */
      public java.util.List<skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_StatsMatchDetails.CDOTAUserMsg_StatsFightDetails.Builder> 
           getFightDetailsBuilderList() {
        return getFightDetailsFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilder<
          skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_StatsMatchDetails.CDOTAUserMsg_StatsFightDetails, skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_StatsMatchDetails.CDOTAUserMsg_StatsFightDetails.Builder, skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_StatsMatchDetails.CDOTAUserMsg_StatsFightDetailsOrBuilder> 
          getFightDetailsFieldBuilder() {
        if (fightDetailsBuilder_ == null) {
          fightDetailsBuilder_ = new com.google.protobuf.RepeatedFieldBuilder<
              skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_StatsMatchDetails.CDOTAUserMsg_StatsFightDetails, skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_StatsMatchDetails.CDOTAUserMsg_StatsFightDetails.Builder, skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_StatsMatchDetails.CDOTAUserMsg_StatsFightDetailsOrBuilder>(
                  fightDetails_,
                  ((bitField0_ & 0x00000020) == 0x00000020),
                  getParentForChildren(),
                  isClean());
          fightDetails_ = null;
        }
        return fightDetailsBuilder_;
      }

      // @@protoc_insertion_point(builder_scope:CDOTAUserMsg_StatsMatchDetails)
    }

    static {
      defaultInstance = new CDOTAUserMsg_StatsMatchDetails(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:CDOTAUserMsg_StatsMatchDetails)
  }

  public interface CDOTAUserMsg_MiniTauntOrBuilder extends
      // @@protoc_insertion_point(interface_extends:CDOTAUserMsg_MiniTaunt)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>optional uint32 taunting_player_id = 1;</code>
     */
    boolean hasTauntingPlayerId();
    /**
     * <code>optional uint32 taunting_player_id = 1;</code>
     */
    int getTauntingPlayerId();
  }
  /**
   * Protobuf type {@code CDOTAUserMsg_MiniTaunt}
   */
  public static final class CDOTAUserMsg_MiniTaunt extends
      com.google.protobuf.GeneratedMessage implements
      // @@protoc_insertion_point(message_implements:CDOTAUserMsg_MiniTaunt)
      CDOTAUserMsg_MiniTauntOrBuilder {
    // Use CDOTAUserMsg_MiniTaunt.newBuilder() to construct.
    private CDOTAUserMsg_MiniTaunt(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private CDOTAUserMsg_MiniTaunt(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final CDOTAUserMsg_MiniTaunt defaultInstance;
    public static CDOTAUserMsg_MiniTaunt getDefaultInstance() {
      return defaultInstance;
    }

    public CDOTAUserMsg_MiniTaunt getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private CDOTAUserMsg_MiniTaunt(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 8: {
              bitField0_ |= 0x00000001;
              tauntingPlayerId_ = input.readUInt32();
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return skadistats.clarity.wire.common.proto.DotaUserMessages.internal_static_CDOTAUserMsg_MiniTaunt_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return skadistats.clarity.wire.common.proto.DotaUserMessages.internal_static_CDOTAUserMsg_MiniTaunt_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_MiniTaunt.class, skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_MiniTaunt.Builder.class);
    }

    public static com.google.protobuf.Parser<CDOTAUserMsg_MiniTaunt> PARSER =
        new com.google.protobuf.AbstractParser<CDOTAUserMsg_MiniTaunt>() {
      public CDOTAUserMsg_MiniTaunt parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new CDOTAUserMsg_MiniTaunt(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<CDOTAUserMsg_MiniTaunt> getParserForType() {
      return PARSER;
    }

    private int bitField0_;
    public static final int TAUNTING_PLAYER_ID_FIELD_NUMBER = 1;
    private int tauntingPlayerId_;
    /**
     * <code>optional uint32 taunting_player_id = 1;</code>
     */
    public boolean hasTauntingPlayerId() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>optional uint32 taunting_player_id = 1;</code>
     */
    public int getTauntingPlayerId() {
      return tauntingPlayerId_;
    }

    private void initFields() {
      tauntingPlayerId_ = 0;
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeUInt32(1, tauntingPlayerId_);
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(1, tauntingPlayerId_);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_MiniTaunt parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_MiniTaunt parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_MiniTaunt parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_MiniTaunt parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_MiniTaunt parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_MiniTaunt parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_MiniTaunt parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_MiniTaunt parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_MiniTaunt parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_MiniTaunt parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_MiniTaunt prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code CDOTAUserMsg_MiniTaunt}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:CDOTAUserMsg_MiniTaunt)
        skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_MiniTauntOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return skadistats.clarity.wire.common.proto.DotaUserMessages.internal_static_CDOTAUserMsg_MiniTaunt_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return skadistats.clarity.wire.common.proto.DotaUserMessages.internal_static_CDOTAUserMsg_MiniTaunt_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_MiniTaunt.class, skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_MiniTaunt.Builder.class);
      }

      // Construct using skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_MiniTaunt.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        tauntingPlayerId_ = 0;
        bitField0_ = (bitField0_ & ~0x00000001);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return skadistats.clarity.wire.common.proto.DotaUserMessages.internal_static_CDOTAUserMsg_MiniTaunt_descriptor;
      }

      public skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_MiniTaunt getDefaultInstanceForType() {
        return skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_MiniTaunt.getDefaultInstance();
      }

      public skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_MiniTaunt build() {
        skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_MiniTaunt result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_MiniTaunt buildPartial() {
        skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_MiniTaunt result = new skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_MiniTaunt(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.tauntingPlayerId_ = tauntingPlayerId_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_MiniTaunt) {
          return mergeFrom((skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_MiniTaunt)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_MiniTaunt other) {
        if (other == skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_MiniTaunt.getDefaultInstance()) return this;
        if (other.hasTauntingPlayerId()) {
          setTauntingPlayerId(other.getTauntingPlayerId());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_MiniTaunt parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_MiniTaunt) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private int tauntingPlayerId_ ;
      /**
       * <code>optional uint32 taunting_player_id = 1;</code>
       */
      public boolean hasTauntingPlayerId() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>optional uint32 taunting_player_id = 1;</code>
       */
      public int getTauntingPlayerId() {
        return tauntingPlayerId_;
      }
      /**
       * <code>optional uint32 taunting_player_id = 1;</code>
       */
      public Builder setTauntingPlayerId(int value) {
        bitField0_ |= 0x00000001;
        tauntingPlayerId_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional uint32 taunting_player_id = 1;</code>
       */
      public Builder clearTauntingPlayerId() {
        bitField0_ = (bitField0_ & ~0x00000001);
        tauntingPlayerId_ = 0;
        onChanged();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:CDOTAUserMsg_MiniTaunt)
    }

    static {
      defaultInstance = new CDOTAUserMsg_MiniTaunt(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:CDOTAUserMsg_MiniTaunt)
  }

  public interface CDOTAUserMsg_SpeechBubbleOrBuilder extends
      // @@protoc_insertion_point(interface_extends:CDOTAUserMsg_SpeechBubble)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>optional bool destroy_all = 1;</code>
     */
    boolean hasDestroyAll();
    /**
     * <code>optional bool destroy_all = 1;</code>
     */
    boolean getDestroyAll();
  }
  /**
   * Protobuf type {@code CDOTAUserMsg_SpeechBubble}
   */
  public static final class CDOTAUserMsg_SpeechBubble extends
      com.google.protobuf.GeneratedMessage implements
      // @@protoc_insertion_point(message_implements:CDOTAUserMsg_SpeechBubble)
      CDOTAUserMsg_SpeechBubbleOrBuilder {
    // Use CDOTAUserMsg_SpeechBubble.newBuilder() to construct.
    private CDOTAUserMsg_SpeechBubble(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private CDOTAUserMsg_SpeechBubble(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final CDOTAUserMsg_SpeechBubble defaultInstance;
    public static CDOTAUserMsg_SpeechBubble getDefaultInstance() {
      return defaultInstance;
    }

    public CDOTAUserMsg_SpeechBubble getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private CDOTAUserMsg_SpeechBubble(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 8: {
              bitField0_ |= 0x00000001;
              destroyAll_ = input.readBool();
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return skadistats.clarity.wire.common.proto.DotaUserMessages.internal_static_CDOTAUserMsg_SpeechBubble_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return skadistats.clarity.wire.common.proto.DotaUserMessages.internal_static_CDOTAUserMsg_SpeechBubble_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_SpeechBubble.class, skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_SpeechBubble.Builder.class);
    }

    public static com.google.protobuf.Parser<CDOTAUserMsg_SpeechBubble> PARSER =
        new com.google.protobuf.AbstractParser<CDOTAUserMsg_SpeechBubble>() {
      public CDOTAUserMsg_SpeechBubble parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new CDOTAUserMsg_SpeechBubble(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<CDOTAUserMsg_SpeechBubble> getParserForType() {
      return PARSER;
    }

    private int bitField0_;
    public static final int DESTROY_ALL_FIELD_NUMBER = 1;
    private boolean destroyAll_;
    /**
     * <code>optional bool destroy_all = 1;</code>
     */
    public boolean hasDestroyAll() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>optional bool destroy_all = 1;</code>
     */
    public boolean getDestroyAll() {
      return destroyAll_;
    }

    private void initFields() {
      destroyAll_ = false;
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeBool(1, destroyAll_);
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBoolSize(1, destroyAll_);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_SpeechBubble parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_SpeechBubble parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_SpeechBubble parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_SpeechBubble parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_SpeechBubble parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_SpeechBubble parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_SpeechBubble parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_SpeechBubble parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_SpeechBubble parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_SpeechBubble parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_SpeechBubble prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code CDOTAUserMsg_SpeechBubble}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:CDOTAUserMsg_SpeechBubble)
        skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_SpeechBubbleOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return skadistats.clarity.wire.common.proto.DotaUserMessages.internal_static_CDOTAUserMsg_SpeechBubble_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return skadistats.clarity.wire.common.proto.DotaUserMessages.internal_static_CDOTAUserMsg_SpeechBubble_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_SpeechBubble.class, skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_SpeechBubble.Builder.class);
      }

      // Construct using skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_SpeechBubble.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        destroyAll_ = false;
        bitField0_ = (bitField0_ & ~0x00000001);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return skadistats.clarity.wire.common.proto.DotaUserMessages.internal_static_CDOTAUserMsg_SpeechBubble_descriptor;
      }

      public skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_SpeechBubble getDefaultInstanceForType() {
        return skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_SpeechBubble.getDefaultInstance();
      }

      public skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_SpeechBubble build() {
        skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_SpeechBubble result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_SpeechBubble buildPartial() {
        skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_SpeechBubble result = new skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_SpeechBubble(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.destroyAll_ = destroyAll_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_SpeechBubble) {
          return mergeFrom((skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_SpeechBubble)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_SpeechBubble other) {
        if (other == skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_SpeechBubble.getDefaultInstance()) return this;
        if (other.hasDestroyAll()) {
          setDestroyAll(other.getDestroyAll());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_SpeechBubble parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_SpeechBubble) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private boolean destroyAll_ ;
      /**
       * <code>optional bool destroy_all = 1;</code>
       */
      public boolean hasDestroyAll() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>optional bool destroy_all = 1;</code>
       */
      public boolean getDestroyAll() {
        return destroyAll_;
      }
      /**
       * <code>optional bool destroy_all = 1;</code>
       */
      public Builder setDestroyAll(boolean value) {
        bitField0_ |= 0x00000001;
        destroyAll_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional bool destroy_all = 1;</code>
       */
      public Builder clearDestroyAll() {
        bitField0_ = (bitField0_ & ~0x00000001);
        destroyAll_ = false;
        onChanged();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:CDOTAUserMsg_SpeechBubble)
    }

    static {
      defaultInstance = new CDOTAUserMsg_SpeechBubble(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:CDOTAUserMsg_SpeechBubble)
  }

  public interface CDOTAUserMsg_CustomHeaderMessageOrBuilder extends
      // @@protoc_insertion_point(interface_extends:CDOTAUserMsg_CustomHeaderMessage)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>optional uint32 player_id = 1;</code>
     */
    boolean hasPlayerId();
    /**
     * <code>optional uint32 player_id = 1;</code>
     */
    int getPlayerId();

    /**
     * <code>optional float duration = 2;</code>
     */
    boolean hasDuration();
    /**
     * <code>optional float duration = 2;</code>
     */
    float getDuration();

    /**
     * <code>optional string message = 3;</code>
     */
    boolean hasMessage();
    /**
     * <code>optional string message = 3;</code>
     */
    java.lang.String getMessage();
    /**
     * <code>optional string message = 3;</code>
     */
    com.google.protobuf.ByteString
        getMessageBytes();

    /**
     * <code>optional int32 value = 4;</code>
     */
    boolean hasValue();
    /**
     * <code>optional int32 value = 4;</code>
     */
    int getValue();
  }
  /**
   * Protobuf type {@code CDOTAUserMsg_CustomHeaderMessage}
   */
  public static final class CDOTAUserMsg_CustomHeaderMessage extends
      com.google.protobuf.GeneratedMessage implements
      // @@protoc_insertion_point(message_implements:CDOTAUserMsg_CustomHeaderMessage)
      CDOTAUserMsg_CustomHeaderMessageOrBuilder {
    // Use CDOTAUserMsg_CustomHeaderMessage.newBuilder() to construct.
    private CDOTAUserMsg_CustomHeaderMessage(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private CDOTAUserMsg_CustomHeaderMessage(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final CDOTAUserMsg_CustomHeaderMessage defaultInstance;
    public static CDOTAUserMsg_CustomHeaderMessage getDefaultInstance() {
      return defaultInstance;
    }

    public CDOTAUserMsg_CustomHeaderMessage getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private CDOTAUserMsg_CustomHeaderMessage(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 8: {
              bitField0_ |= 0x00000001;
              playerId_ = input.readUInt32();
              break;
            }
            case 21: {
              bitField0_ |= 0x00000002;
              duration_ = input.readFloat();
              break;
            }
            case 26: {
              com.google.protobuf.ByteString bs = input.readBytes();
              bitField0_ |= 0x00000004;
              message_ = bs;
              break;
            }
            case 32: {
              bitField0_ |= 0x00000008;
              value_ = input.readInt32();
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return skadistats.clarity.wire.common.proto.DotaUserMessages.internal_static_CDOTAUserMsg_CustomHeaderMessage_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return skadistats.clarity.wire.common.proto.DotaUserMessages.internal_static_CDOTAUserMsg_CustomHeaderMessage_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_CustomHeaderMessage.class, skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_CustomHeaderMessage.Builder.class);
    }

    public static com.google.protobuf.Parser<CDOTAUserMsg_CustomHeaderMessage> PARSER =
        new com.google.protobuf.AbstractParser<CDOTAUserMsg_CustomHeaderMessage>() {
      public CDOTAUserMsg_CustomHeaderMessage parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new CDOTAUserMsg_CustomHeaderMessage(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<CDOTAUserMsg_CustomHeaderMessage> getParserForType() {
      return PARSER;
    }

    private int bitField0_;
    public static final int PLAYER_ID_FIELD_NUMBER = 1;
    private int playerId_;
    /**
     * <code>optional uint32 player_id = 1;</code>
     */
    public boolean hasPlayerId() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>optional uint32 player_id = 1;</code>
     */
    public int getPlayerId() {
      return playerId_;
    }

    public static final int DURATION_FIELD_NUMBER = 2;
    private float duration_;
    /**
     * <code>optional float duration = 2;</code>
     */
    public boolean hasDuration() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>optional float duration = 2;</code>
     */
    public float getDuration() {
      return duration_;
    }

    public static final int MESSAGE_FIELD_NUMBER = 3;
    private java.lang.Object message_;
    /**
     * <code>optional string message = 3;</code>
     */
    public boolean hasMessage() {
      return ((bitField0_ & 0x00000004) == 0x00000004);
    }
    /**
     * <code>optional string message = 3;</code>
     */
    public java.lang.String getMessage() {
      java.lang.Object ref = message_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          message_ = s;
        }
        return s;
      }
    }
    /**
     * <code>optional string message = 3;</code>
     */
    public com.google.protobuf.ByteString
        getMessageBytes() {
      java.lang.Object ref = message_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        message_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int VALUE_FIELD_NUMBER = 4;
    private int value_;
    /**
     * <code>optional int32 value = 4;</code>
     */
    public boolean hasValue() {
      return ((bitField0_ & 0x00000008) == 0x00000008);
    }
    /**
     * <code>optional int32 value = 4;</code>
     */
    public int getValue() {
      return value_;
    }

    private void initFields() {
      playerId_ = 0;
      duration_ = 0F;
      message_ = "";
      value_ = 0;
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeUInt32(1, playerId_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeFloat(2, duration_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        output.writeBytes(3, getMessageBytes());
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        output.writeInt32(4, value_);
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(1, playerId_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeFloatSize(2, duration_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(3, getMessageBytes());
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(4, value_);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_CustomHeaderMessage parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_CustomHeaderMessage parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_CustomHeaderMessage parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_CustomHeaderMessage parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_CustomHeaderMessage parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_CustomHeaderMessage parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_CustomHeaderMessage parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_CustomHeaderMessage parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_CustomHeaderMessage parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_CustomHeaderMessage parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_CustomHeaderMessage prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code CDOTAUserMsg_CustomHeaderMessage}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:CDOTAUserMsg_CustomHeaderMessage)
        skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_CustomHeaderMessageOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return skadistats.clarity.wire.common.proto.DotaUserMessages.internal_static_CDOTAUserMsg_CustomHeaderMessage_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return skadistats.clarity.wire.common.proto.DotaUserMessages.internal_static_CDOTAUserMsg_CustomHeaderMessage_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_CustomHeaderMessage.class, skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_CustomHeaderMessage.Builder.class);
      }

      // Construct using skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_CustomHeaderMessage.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        playerId_ = 0;
        bitField0_ = (bitField0_ & ~0x00000001);
        duration_ = 0F;
        bitField0_ = (bitField0_ & ~0x00000002);
        message_ = "";
        bitField0_ = (bitField0_ & ~0x00000004);
        value_ = 0;
        bitField0_ = (bitField0_ & ~0x00000008);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return skadistats.clarity.wire.common.proto.DotaUserMessages.internal_static_CDOTAUserMsg_CustomHeaderMessage_descriptor;
      }

      public skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_CustomHeaderMessage getDefaultInstanceForType() {
        return skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_CustomHeaderMessage.getDefaultInstance();
      }

      public skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_CustomHeaderMessage build() {
        skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_CustomHeaderMessage result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_CustomHeaderMessage buildPartial() {
        skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_CustomHeaderMessage result = new skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_CustomHeaderMessage(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.playerId_ = playerId_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.duration_ = duration_;
        if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
          to_bitField0_ |= 0x00000004;
        }
        result.message_ = message_;
        if (((from_bitField0_ & 0x00000008) == 0x00000008)) {
          to_bitField0_ |= 0x00000008;
        }
        result.value_ = value_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_CustomHeaderMessage) {
          return mergeFrom((skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_CustomHeaderMessage)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_CustomHeaderMessage other) {
        if (other == skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_CustomHeaderMessage.getDefaultInstance()) return this;
        if (other.hasPlayerId()) {
          setPlayerId(other.getPlayerId());
        }
        if (other.hasDuration()) {
          setDuration(other.getDuration());
        }
        if (other.hasMessage()) {
          bitField0_ |= 0x00000004;
          message_ = other.message_;
          onChanged();
        }
        if (other.hasValue()) {
          setValue(other.getValue());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_CustomHeaderMessage parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_CustomHeaderMessage) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private int playerId_ ;
      /**
       * <code>optional uint32 player_id = 1;</code>
       */
      public boolean hasPlayerId() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>optional uint32 player_id = 1;</code>
       */
      public int getPlayerId() {
        return playerId_;
      }
      /**
       * <code>optional uint32 player_id = 1;</code>
       */
      public Builder setPlayerId(int value) {
        bitField0_ |= 0x00000001;
        playerId_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional uint32 player_id = 1;</code>
       */
      public Builder clearPlayerId() {
        bitField0_ = (bitField0_ & ~0x00000001);
        playerId_ = 0;
        onChanged();
        return this;
      }

      private float duration_ ;
      /**
       * <code>optional float duration = 2;</code>
       */
      public boolean hasDuration() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>optional float duration = 2;</code>
       */
      public float getDuration() {
        return duration_;
      }
      /**
       * <code>optional float duration = 2;</code>
       */
      public Builder setDuration(float value) {
        bitField0_ |= 0x00000002;
        duration_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional float duration = 2;</code>
       */
      public Builder clearDuration() {
        bitField0_ = (bitField0_ & ~0x00000002);
        duration_ = 0F;
        onChanged();
        return this;
      }

      private java.lang.Object message_ = "";
      /**
       * <code>optional string message = 3;</code>
       */
      public boolean hasMessage() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }
      /**
       * <code>optional string message = 3;</code>
       */
      public java.lang.String getMessage() {
        java.lang.Object ref = message_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          if (bs.isValidUtf8()) {
            message_ = s;
          }
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>optional string message = 3;</code>
       */
      public com.google.protobuf.ByteString
          getMessageBytes() {
        java.lang.Object ref = message_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          message_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>optional string message = 3;</code>
       */
      public Builder setMessage(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000004;
        message_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional string message = 3;</code>
       */
      public Builder clearMessage() {
        bitField0_ = (bitField0_ & ~0x00000004);
        message_ = getDefaultInstance().getMessage();
        onChanged();
        return this;
      }
      /**
       * <code>optional string message = 3;</code>
       */
      public Builder setMessageBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000004;
        message_ = value;
        onChanged();
        return this;
      }

      private int value_ ;
      /**
       * <code>optional int32 value = 4;</code>
       */
      public boolean hasValue() {
        return ((bitField0_ & 0x00000008) == 0x00000008);
      }
      /**
       * <code>optional int32 value = 4;</code>
       */
      public int getValue() {
        return value_;
      }
      /**
       * <code>optional int32 value = 4;</code>
       */
      public Builder setValue(int value) {
        bitField0_ |= 0x00000008;
        value_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 value = 4;</code>
       */
      public Builder clearValue() {
        bitField0_ = (bitField0_ & ~0x00000008);
        value_ = 0;
        onChanged();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:CDOTAUserMsg_CustomHeaderMessage)
    }

    static {
      defaultInstance = new CDOTAUserMsg_CustomHeaderMessage(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:CDOTAUserMsg_CustomHeaderMessage)
  }

  public interface CMsgHeroAbilityStatOrBuilder extends
      // @@protoc_insertion_point(interface_extends:CMsgHeroAbilityStat)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>optional .EHeroStatType stat_type = 1 [default = k_EHeroStatType_None];</code>
     */
    boolean hasStatType();
    /**
     * <code>optional .EHeroStatType stat_type = 1 [default = k_EHeroStatType_None];</code>
     */
    skadistats.clarity.wire.common.proto.DotaUserMessages.EHeroStatType getStatType();

    /**
     * <code>optional int32 int_value = 2;</code>
     */
    boolean hasIntValue();
    /**
     * <code>optional int32 int_value = 2;</code>
     */
    int getIntValue();

    /**
     * <code>optional float float_value = 3;</code>
     */
    boolean hasFloatValue();
    /**
     * <code>optional float float_value = 3;</code>
     */
    float getFloatValue();
  }
  /**
   * Protobuf type {@code CMsgHeroAbilityStat}
   */
  public static final class CMsgHeroAbilityStat extends
      com.google.protobuf.GeneratedMessage implements
      // @@protoc_insertion_point(message_implements:CMsgHeroAbilityStat)
      CMsgHeroAbilityStatOrBuilder {
    // Use CMsgHeroAbilityStat.newBuilder() to construct.
    private CMsgHeroAbilityStat(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private CMsgHeroAbilityStat(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final CMsgHeroAbilityStat defaultInstance;
    public static CMsgHeroAbilityStat getDefaultInstance() {
      return defaultInstance;
    }

    public CMsgHeroAbilityStat getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private CMsgHeroAbilityStat(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 8: {
              int rawValue = input.readEnum();
              skadistats.clarity.wire.common.proto.DotaUserMessages.EHeroStatType value = skadistats.clarity.wire.common.proto.DotaUserMessages.EHeroStatType.valueOf(rawValue);
              if (value == null) {
                unknownFields.mergeVarintField(1, rawValue);
              } else {
                bitField0_ |= 0x00000001;
                statType_ = value;
              }
              break;
            }
            case 16: {
              bitField0_ |= 0x00000002;
              intValue_ = input.readInt32();
              break;
            }
            case 29: {
              bitField0_ |= 0x00000004;
              floatValue_ = input.readFloat();
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return skadistats.clarity.wire.common.proto.DotaUserMessages.internal_static_CMsgHeroAbilityStat_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return skadistats.clarity.wire.common.proto.DotaUserMessages.internal_static_CMsgHeroAbilityStat_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              skadistats.clarity.wire.common.proto.DotaUserMessages.CMsgHeroAbilityStat.class, skadistats.clarity.wire.common.proto.DotaUserMessages.CMsgHeroAbilityStat.Builder.class);
    }

    public static com.google.protobuf.Parser<CMsgHeroAbilityStat> PARSER =
        new com.google.protobuf.AbstractParser<CMsgHeroAbilityStat>() {
      public CMsgHeroAbilityStat parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new CMsgHeroAbilityStat(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<CMsgHeroAbilityStat> getParserForType() {
      return PARSER;
    }

    private int bitField0_;
    public static final int STAT_TYPE_FIELD_NUMBER = 1;
    private skadistats.clarity.wire.common.proto.DotaUserMessages.EHeroStatType statType_;
    /**
     * <code>optional .EHeroStatType stat_type = 1 [default = k_EHeroStatType_None];</code>
     */
    public boolean hasStatType() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>optional .EHeroStatType stat_type = 1 [default = k_EHeroStatType_None];</code>
     */
    public skadistats.clarity.wire.common.proto.DotaUserMessages.EHeroStatType getStatType() {
      return statType_;
    }

    public static final int INT_VALUE_FIELD_NUMBER = 2;
    private int intValue_;
    /**
     * <code>optional int32 int_value = 2;</code>
     */
    public boolean hasIntValue() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>optional int32 int_value = 2;</code>
     */
    public int getIntValue() {
      return intValue_;
    }

    public static final int FLOAT_VALUE_FIELD_NUMBER = 3;
    private float floatValue_;
    /**
     * <code>optional float float_value = 3;</code>
     */
    public boolean hasFloatValue() {
      return ((bitField0_ & 0x00000004) == 0x00000004);
    }
    /**
     * <code>optional float float_value = 3;</code>
     */
    public float getFloatValue() {
      return floatValue_;
    }

    private void initFields() {
      statType_ = skadistats.clarity.wire.common.proto.DotaUserMessages.EHeroStatType.k_EHeroStatType_None;
      intValue_ = 0;
      floatValue_ = 0F;
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeEnum(1, statType_.getNumber());
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeInt32(2, intValue_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        output.writeFloat(3, floatValue_);
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeEnumSize(1, statType_.getNumber());
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(2, intValue_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        size += com.google.protobuf.CodedOutputStream
          .computeFloatSize(3, floatValue_);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static skadistats.clarity.wire.common.proto.DotaUserMessages.CMsgHeroAbilityStat parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static skadistats.clarity.wire.common.proto.DotaUserMessages.CMsgHeroAbilityStat parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static skadistats.clarity.wire.common.proto.DotaUserMessages.CMsgHeroAbilityStat parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static skadistats.clarity.wire.common.proto.DotaUserMessages.CMsgHeroAbilityStat parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static skadistats.clarity.wire.common.proto.DotaUserMessages.CMsgHeroAbilityStat parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static skadistats.clarity.wire.common.proto.DotaUserMessages.CMsgHeroAbilityStat parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static skadistats.clarity.wire.common.proto.DotaUserMessages.CMsgHeroAbilityStat parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static skadistats.clarity.wire.common.proto.DotaUserMessages.CMsgHeroAbilityStat parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static skadistats.clarity.wire.common.proto.DotaUserMessages.CMsgHeroAbilityStat parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static skadistats.clarity.wire.common.proto.DotaUserMessages.CMsgHeroAbilityStat parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(skadistats.clarity.wire.common.proto.DotaUserMessages.CMsgHeroAbilityStat prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code CMsgHeroAbilityStat}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:CMsgHeroAbilityStat)
        skadistats.clarity.wire.common.proto.DotaUserMessages.CMsgHeroAbilityStatOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return skadistats.clarity.wire.common.proto.DotaUserMessages.internal_static_CMsgHeroAbilityStat_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return skadistats.clarity.wire.common.proto.DotaUserMessages.internal_static_CMsgHeroAbilityStat_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                skadistats.clarity.wire.common.proto.DotaUserMessages.CMsgHeroAbilityStat.class, skadistats.clarity.wire.common.proto.DotaUserMessages.CMsgHeroAbilityStat.Builder.class);
      }

      // Construct using skadistats.clarity.wire.common.proto.DotaUserMessages.CMsgHeroAbilityStat.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        statType_ = skadistats.clarity.wire.common.proto.DotaUserMessages.EHeroStatType.k_EHeroStatType_None;
        bitField0_ = (bitField0_ & ~0x00000001);
        intValue_ = 0;
        bitField0_ = (bitField0_ & ~0x00000002);
        floatValue_ = 0F;
        bitField0_ = (bitField0_ & ~0x00000004);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return skadistats.clarity.wire.common.proto.DotaUserMessages.internal_static_CMsgHeroAbilityStat_descriptor;
      }

      public skadistats.clarity.wire.common.proto.DotaUserMessages.CMsgHeroAbilityStat getDefaultInstanceForType() {
        return skadistats.clarity.wire.common.proto.DotaUserMessages.CMsgHeroAbilityStat.getDefaultInstance();
      }

      public skadistats.clarity.wire.common.proto.DotaUserMessages.CMsgHeroAbilityStat build() {
        skadistats.clarity.wire.common.proto.DotaUserMessages.CMsgHeroAbilityStat result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public skadistats.clarity.wire.common.proto.DotaUserMessages.CMsgHeroAbilityStat buildPartial() {
        skadistats.clarity.wire.common.proto.DotaUserMessages.CMsgHeroAbilityStat result = new skadistats.clarity.wire.common.proto.DotaUserMessages.CMsgHeroAbilityStat(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.statType_ = statType_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.intValue_ = intValue_;
        if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
          to_bitField0_ |= 0x00000004;
        }
        result.floatValue_ = floatValue_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof skadistats.clarity.wire.common.proto.DotaUserMessages.CMsgHeroAbilityStat) {
          return mergeFrom((skadistats.clarity.wire.common.proto.DotaUserMessages.CMsgHeroAbilityStat)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(skadistats.clarity.wire.common.proto.DotaUserMessages.CMsgHeroAbilityStat other) {
        if (other == skadistats.clarity.wire.common.proto.DotaUserMessages.CMsgHeroAbilityStat.getDefaultInstance()) return this;
        if (other.hasStatType()) {
          setStatType(other.getStatType());
        }
        if (other.hasIntValue()) {
          setIntValue(other.getIntValue());
        }
        if (other.hasFloatValue()) {
          setFloatValue(other.getFloatValue());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        skadistats.clarity.wire.common.proto.DotaUserMessages.CMsgHeroAbilityStat parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (skadistats.clarity.wire.common.proto.DotaUserMessages.CMsgHeroAbilityStat) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private skadistats.clarity.wire.common.proto.DotaUserMessages.EHeroStatType statType_ = skadistats.clarity.wire.common.proto.DotaUserMessages.EHeroStatType.k_EHeroStatType_None;
      /**
       * <code>optional .EHeroStatType stat_type = 1 [default = k_EHeroStatType_None];</code>
       */
      public boolean hasStatType() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>optional .EHeroStatType stat_type = 1 [default = k_EHeroStatType_None];</code>
       */
      public skadistats.clarity.wire.common.proto.DotaUserMessages.EHeroStatType getStatType() {
        return statType_;
      }
      /**
       * <code>optional .EHeroStatType stat_type = 1 [default = k_EHeroStatType_None];</code>
       */
      public Builder setStatType(skadistats.clarity.wire.common.proto.DotaUserMessages.EHeroStatType value) {
        if (value == null) {
          throw new NullPointerException();
        }
        bitField0_ |= 0x00000001;
        statType_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional .EHeroStatType stat_type = 1 [default = k_EHeroStatType_None];</code>
       */
      public Builder clearStatType() {
        bitField0_ = (bitField0_ & ~0x00000001);
        statType_ = skadistats.clarity.wire.common.proto.DotaUserMessages.EHeroStatType.k_EHeroStatType_None;
        onChanged();
        return this;
      }

      private int intValue_ ;
      /**
       * <code>optional int32 int_value = 2;</code>
       */
      public boolean hasIntValue() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>optional int32 int_value = 2;</code>
       */
      public int getIntValue() {
        return intValue_;
      }
      /**
       * <code>optional int32 int_value = 2;</code>
       */
      public Builder setIntValue(int value) {
        bitField0_ |= 0x00000002;
        intValue_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 int_value = 2;</code>
       */
      public Builder clearIntValue() {
        bitField0_ = (bitField0_ & ~0x00000002);
        intValue_ = 0;
        onChanged();
        return this;
      }

      private float floatValue_ ;
      /**
       * <code>optional float float_value = 3;</code>
       */
      public boolean hasFloatValue() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }
      /**
       * <code>optional float float_value = 3;</code>
       */
      public float getFloatValue() {
        return floatValue_;
      }
      /**
       * <code>optional float float_value = 3;</code>
       */
      public Builder setFloatValue(float value) {
        bitField0_ |= 0x00000004;
        floatValue_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional float float_value = 3;</code>
       */
      public Builder clearFloatValue() {
        bitField0_ = (bitField0_ & ~0x00000004);
        floatValue_ = 0F;
        onChanged();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:CMsgHeroAbilityStat)
    }

    static {
      defaultInstance = new CMsgHeroAbilityStat(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:CMsgHeroAbilityStat)
  }

  public interface CMsgCombatAnalyzerPlayerStatOrBuilder extends
      // @@protoc_insertion_point(interface_extends:CMsgCombatAnalyzerPlayerStat)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>optional uint32 account_id = 1;</code>
     */
    boolean hasAccountId();
    /**
     * <code>optional uint32 account_id = 1;</code>
     */
    int getAccountId();

    /**
     * <code>repeated .CMsgHeroAbilityStat hero_ability_stats = 2;</code>
     */
    java.util.List<skadistats.clarity.wire.common.proto.DotaUserMessages.CMsgHeroAbilityStat> 
        getHeroAbilityStatsList();
    /**
     * <code>repeated .CMsgHeroAbilityStat hero_ability_stats = 2;</code>
     */
    skadistats.clarity.wire.common.proto.DotaUserMessages.CMsgHeroAbilityStat getHeroAbilityStats(int index);
    /**
     * <code>repeated .CMsgHeroAbilityStat hero_ability_stats = 2;</code>
     */
    int getHeroAbilityStatsCount();
    /**
     * <code>repeated .CMsgHeroAbilityStat hero_ability_stats = 2;</code>
     */
    java.util.List<? extends skadistats.clarity.wire.common.proto.DotaUserMessages.CMsgHeroAbilityStatOrBuilder> 
        getHeroAbilityStatsOrBuilderList();
    /**
     * <code>repeated .CMsgHeroAbilityStat hero_ability_stats = 2;</code>
     */
    skadistats.clarity.wire.common.proto.DotaUserMessages.CMsgHeroAbilityStatOrBuilder getHeroAbilityStatsOrBuilder(
        int index);
  }
  /**
   * Protobuf type {@code CMsgCombatAnalyzerPlayerStat}
   */
  public static final class CMsgCombatAnalyzerPlayerStat extends
      com.google.protobuf.GeneratedMessage implements
      // @@protoc_insertion_point(message_implements:CMsgCombatAnalyzerPlayerStat)
      CMsgCombatAnalyzerPlayerStatOrBuilder {
    // Use CMsgCombatAnalyzerPlayerStat.newBuilder() to construct.
    private CMsgCombatAnalyzerPlayerStat(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private CMsgCombatAnalyzerPlayerStat(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final CMsgCombatAnalyzerPlayerStat defaultInstance;
    public static CMsgCombatAnalyzerPlayerStat getDefaultInstance() {
      return defaultInstance;
    }

    public CMsgCombatAnalyzerPlayerStat getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private CMsgCombatAnalyzerPlayerStat(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 8: {
              bitField0_ |= 0x00000001;
              accountId_ = input.readUInt32();
              break;
            }
            case 18: {
              if (!((mutable_bitField0_ & 0x00000002) == 0x00000002)) {
                heroAbilityStats_ = new java.util.ArrayList<skadistats.clarity.wire.common.proto.DotaUserMessages.CMsgHeroAbilityStat>();
                mutable_bitField0_ |= 0x00000002;
              }
              heroAbilityStats_.add(input.readMessage(skadistats.clarity.wire.common.proto.DotaUserMessages.CMsgHeroAbilityStat.PARSER, extensionRegistry));
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        if (((mutable_bitField0_ & 0x00000002) == 0x00000002)) {
          heroAbilityStats_ = java.util.Collections.unmodifiableList(heroAbilityStats_);
        }
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return skadistats.clarity.wire.common.proto.DotaUserMessages.internal_static_CMsgCombatAnalyzerPlayerStat_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return skadistats.clarity.wire.common.proto.DotaUserMessages.internal_static_CMsgCombatAnalyzerPlayerStat_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              skadistats.clarity.wire.common.proto.DotaUserMessages.CMsgCombatAnalyzerPlayerStat.class, skadistats.clarity.wire.common.proto.DotaUserMessages.CMsgCombatAnalyzerPlayerStat.Builder.class);
    }

    public static com.google.protobuf.Parser<CMsgCombatAnalyzerPlayerStat> PARSER =
        new com.google.protobuf.AbstractParser<CMsgCombatAnalyzerPlayerStat>() {
      public CMsgCombatAnalyzerPlayerStat parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new CMsgCombatAnalyzerPlayerStat(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<CMsgCombatAnalyzerPlayerStat> getParserForType() {
      return PARSER;
    }

    private int bitField0_;
    public static final int ACCOUNT_ID_FIELD_NUMBER = 1;
    private int accountId_;
    /**
     * <code>optional uint32 account_id = 1;</code>
     */
    public boolean hasAccountId() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>optional uint32 account_id = 1;</code>
     */
    public int getAccountId() {
      return accountId_;
    }

    public static final int HERO_ABILITY_STATS_FIELD_NUMBER = 2;
    private java.util.List<skadistats.clarity.wire.common.proto.DotaUserMessages.CMsgHeroAbilityStat> heroAbilityStats_;
    /**
     * <code>repeated .CMsgHeroAbilityStat hero_ability_stats = 2;</code>
     */
    public java.util.List<skadistats.clarity.wire.common.proto.DotaUserMessages.CMsgHeroAbilityStat> getHeroAbilityStatsList() {
      return heroAbilityStats_;
    }
    /**
     * <code>repeated .CMsgHeroAbilityStat hero_ability_stats = 2;</code>
     */
    public java.util.List<? extends skadistats.clarity.wire.common.proto.DotaUserMessages.CMsgHeroAbilityStatOrBuilder> 
        getHeroAbilityStatsOrBuilderList() {
      return heroAbilityStats_;
    }
    /**
     * <code>repeated .CMsgHeroAbilityStat hero_ability_stats = 2;</code>
     */
    public int getHeroAbilityStatsCount() {
      return heroAbilityStats_.size();
    }
    /**
     * <code>repeated .CMsgHeroAbilityStat hero_ability_stats = 2;</code>
     */
    public skadistats.clarity.wire.common.proto.DotaUserMessages.CMsgHeroAbilityStat getHeroAbilityStats(int index) {
      return heroAbilityStats_.get(index);
    }
    /**
     * <code>repeated .CMsgHeroAbilityStat hero_ability_stats = 2;</code>
     */
    public skadistats.clarity.wire.common.proto.DotaUserMessages.CMsgHeroAbilityStatOrBuilder getHeroAbilityStatsOrBuilder(
        int index) {
      return heroAbilityStats_.get(index);
    }

    private void initFields() {
      accountId_ = 0;
      heroAbilityStats_ = java.util.Collections.emptyList();
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeUInt32(1, accountId_);
      }
      for (int i = 0; i < heroAbilityStats_.size(); i++) {
        output.writeMessage(2, heroAbilityStats_.get(i));
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(1, accountId_);
      }
      for (int i = 0; i < heroAbilityStats_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(2, heroAbilityStats_.get(i));
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static skadistats.clarity.wire.common.proto.DotaUserMessages.CMsgCombatAnalyzerPlayerStat parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static skadistats.clarity.wire.common.proto.DotaUserMessages.CMsgCombatAnalyzerPlayerStat parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static skadistats.clarity.wire.common.proto.DotaUserMessages.CMsgCombatAnalyzerPlayerStat parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static skadistats.clarity.wire.common.proto.DotaUserMessages.CMsgCombatAnalyzerPlayerStat parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static skadistats.clarity.wire.common.proto.DotaUserMessages.CMsgCombatAnalyzerPlayerStat parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static skadistats.clarity.wire.common.proto.DotaUserMessages.CMsgCombatAnalyzerPlayerStat parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static skadistats.clarity.wire.common.proto.DotaUserMessages.CMsgCombatAnalyzerPlayerStat parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static skadistats.clarity.wire.common.proto.DotaUserMessages.CMsgCombatAnalyzerPlayerStat parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static skadistats.clarity.wire.common.proto.DotaUserMessages.CMsgCombatAnalyzerPlayerStat parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static skadistats.clarity.wire.common.proto.DotaUserMessages.CMsgCombatAnalyzerPlayerStat parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(skadistats.clarity.wire.common.proto.DotaUserMessages.CMsgCombatAnalyzerPlayerStat prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code CMsgCombatAnalyzerPlayerStat}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:CMsgCombatAnalyzerPlayerStat)
        skadistats.clarity.wire.common.proto.DotaUserMessages.CMsgCombatAnalyzerPlayerStatOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return skadistats.clarity.wire.common.proto.DotaUserMessages.internal_static_CMsgCombatAnalyzerPlayerStat_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return skadistats.clarity.wire.common.proto.DotaUserMessages.internal_static_CMsgCombatAnalyzerPlayerStat_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                skadistats.clarity.wire.common.proto.DotaUserMessages.CMsgCombatAnalyzerPlayerStat.class, skadistats.clarity.wire.common.proto.DotaUserMessages.CMsgCombatAnalyzerPlayerStat.Builder.class);
      }

      // Construct using skadistats.clarity.wire.common.proto.DotaUserMessages.CMsgCombatAnalyzerPlayerStat.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
          getHeroAbilityStatsFieldBuilder();
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        accountId_ = 0;
        bitField0_ = (bitField0_ & ~0x00000001);
        if (heroAbilityStatsBuilder_ == null) {
          heroAbilityStats_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000002);
        } else {
          heroAbilityStatsBuilder_.clear();
        }
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return skadistats.clarity.wire.common.proto.DotaUserMessages.internal_static_CMsgCombatAnalyzerPlayerStat_descriptor;
      }

      public skadistats.clarity.wire.common.proto.DotaUserMessages.CMsgCombatAnalyzerPlayerStat getDefaultInstanceForType() {
        return skadistats.clarity.wire.common.proto.DotaUserMessages.CMsgCombatAnalyzerPlayerStat.getDefaultInstance();
      }

      public skadistats.clarity.wire.common.proto.DotaUserMessages.CMsgCombatAnalyzerPlayerStat build() {
        skadistats.clarity.wire.common.proto.DotaUserMessages.CMsgCombatAnalyzerPlayerStat result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public skadistats.clarity.wire.common.proto.DotaUserMessages.CMsgCombatAnalyzerPlayerStat buildPartial() {
        skadistats.clarity.wire.common.proto.DotaUserMessages.CMsgCombatAnalyzerPlayerStat result = new skadistats.clarity.wire.common.proto.DotaUserMessages.CMsgCombatAnalyzerPlayerStat(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.accountId_ = accountId_;
        if (heroAbilityStatsBuilder_ == null) {
          if (((bitField0_ & 0x00000002) == 0x00000002)) {
            heroAbilityStats_ = java.util.Collections.unmodifiableList(heroAbilityStats_);
            bitField0_ = (bitField0_ & ~0x00000002);
          }
          result.heroAbilityStats_ = heroAbilityStats_;
        } else {
          result.heroAbilityStats_ = heroAbilityStatsBuilder_.build();
        }
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof skadistats.clarity.wire.common.proto.DotaUserMessages.CMsgCombatAnalyzerPlayerStat) {
          return mergeFrom((skadistats.clarity.wire.common.proto.DotaUserMessages.CMsgCombatAnalyzerPlayerStat)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(skadistats.clarity.wire.common.proto.DotaUserMessages.CMsgCombatAnalyzerPlayerStat other) {
        if (other == skadistats.clarity.wire.common.proto.DotaUserMessages.CMsgCombatAnalyzerPlayerStat.getDefaultInstance()) return this;
        if (other.hasAccountId()) {
          setAccountId(other.getAccountId());
        }
        if (heroAbilityStatsBuilder_ == null) {
          if (!other.heroAbilityStats_.isEmpty()) {
            if (heroAbilityStats_.isEmpty()) {
              heroAbilityStats_ = other.heroAbilityStats_;
              bitField0_ = (bitField0_ & ~0x00000002);
            } else {
              ensureHeroAbilityStatsIsMutable();
              heroAbilityStats_.addAll(other.heroAbilityStats_);
            }
            onChanged();
          }
        } else {
          if (!other.heroAbilityStats_.isEmpty()) {
            if (heroAbilityStatsBuilder_.isEmpty()) {
              heroAbilityStatsBuilder_.dispose();
              heroAbilityStatsBuilder_ = null;
              heroAbilityStats_ = other.heroAbilityStats_;
              bitField0_ = (bitField0_ & ~0x00000002);
              heroAbilityStatsBuilder_ = 
                com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders ?
                   getHeroAbilityStatsFieldBuilder() : null;
            } else {
              heroAbilityStatsBuilder_.addAllMessages(other.heroAbilityStats_);
            }
          }
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        skadistats.clarity.wire.common.proto.DotaUserMessages.CMsgCombatAnalyzerPlayerStat parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (skadistats.clarity.wire.common.proto.DotaUserMessages.CMsgCombatAnalyzerPlayerStat) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private int accountId_ ;
      /**
       * <code>optional uint32 account_id = 1;</code>
       */
      public boolean hasAccountId() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>optional uint32 account_id = 1;</code>
       */
      public int getAccountId() {
        return accountId_;
      }
      /**
       * <code>optional uint32 account_id = 1;</code>
       */
      public Builder setAccountId(int value) {
        bitField0_ |= 0x00000001;
        accountId_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional uint32 account_id = 1;</code>
       */
      public Builder clearAccountId() {
        bitField0_ = (bitField0_ & ~0x00000001);
        accountId_ = 0;
        onChanged();
        return this;
      }

      private java.util.List<skadistats.clarity.wire.common.proto.DotaUserMessages.CMsgHeroAbilityStat> heroAbilityStats_ =
        java.util.Collections.emptyList();
      private void ensureHeroAbilityStatsIsMutable() {
        if (!((bitField0_ & 0x00000002) == 0x00000002)) {
          heroAbilityStats_ = new java.util.ArrayList<skadistats.clarity.wire.common.proto.DotaUserMessages.CMsgHeroAbilityStat>(heroAbilityStats_);
          bitField0_ |= 0x00000002;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilder<
          skadistats.clarity.wire.common.proto.DotaUserMessages.CMsgHeroAbilityStat, skadistats.clarity.wire.common.proto.DotaUserMessages.CMsgHeroAbilityStat.Builder, skadistats.clarity.wire.common.proto.DotaUserMessages.CMsgHeroAbilityStatOrBuilder> heroAbilityStatsBuilder_;

      /**
       * <code>repeated .CMsgHeroAbilityStat hero_ability_stats = 2;</code>
       */
      public java.util.List<skadistats.clarity.wire.common.proto.DotaUserMessages.CMsgHeroAbilityStat> getHeroAbilityStatsList() {
        if (heroAbilityStatsBuilder_ == null) {
          return java.util.Collections.unmodifiableList(heroAbilityStats_);
        } else {
          return heroAbilityStatsBuilder_.getMessageList();
        }
      }
      /**
       * <code>repeated .CMsgHeroAbilityStat hero_ability_stats = 2;</code>
       */
      public int getHeroAbilityStatsCount() {
        if (heroAbilityStatsBuilder_ == null) {
          return heroAbilityStats_.size();
        } else {
          return heroAbilityStatsBuilder_.getCount();
        }
      }
      /**
       * <code>repeated .CMsgHeroAbilityStat hero_ability_stats = 2;</code>
       */
      public skadistats.clarity.wire.common.proto.DotaUserMessages.CMsgHeroAbilityStat getHeroAbilityStats(int index) {
        if (heroAbilityStatsBuilder_ == null) {
          return heroAbilityStats_.get(index);
        } else {
          return heroAbilityStatsBuilder_.getMessage(index);
        }
      }
      /**
       * <code>repeated .CMsgHeroAbilityStat hero_ability_stats = 2;</code>
       */
      public Builder setHeroAbilityStats(
          int index, skadistats.clarity.wire.common.proto.DotaUserMessages.CMsgHeroAbilityStat value) {
        if (heroAbilityStatsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureHeroAbilityStatsIsMutable();
          heroAbilityStats_.set(index, value);
          onChanged();
        } else {
          heroAbilityStatsBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .CMsgHeroAbilityStat hero_ability_stats = 2;</code>
       */
      public Builder setHeroAbilityStats(
          int index, skadistats.clarity.wire.common.proto.DotaUserMessages.CMsgHeroAbilityStat.Builder builderForValue) {
        if (heroAbilityStatsBuilder_ == null) {
          ensureHeroAbilityStatsIsMutable();
          heroAbilityStats_.set(index, builderForValue.build());
          onChanged();
        } else {
          heroAbilityStatsBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .CMsgHeroAbilityStat hero_ability_stats = 2;</code>
       */
      public Builder addHeroAbilityStats(skadistats.clarity.wire.common.proto.DotaUserMessages.CMsgHeroAbilityStat value) {
        if (heroAbilityStatsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureHeroAbilityStatsIsMutable();
          heroAbilityStats_.add(value);
          onChanged();
        } else {
          heroAbilityStatsBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <code>repeated .CMsgHeroAbilityStat hero_ability_stats = 2;</code>
       */
      public Builder addHeroAbilityStats(
          int index, skadistats.clarity.wire.common.proto.DotaUserMessages.CMsgHeroAbilityStat value) {
        if (heroAbilityStatsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureHeroAbilityStatsIsMutable();
          heroAbilityStats_.add(index, value);
          onChanged();
        } else {
          heroAbilityStatsBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .CMsgHeroAbilityStat hero_ability_stats = 2;</code>
       */
      public Builder addHeroAbilityStats(
          skadistats.clarity.wire.common.proto.DotaUserMessages.CMsgHeroAbilityStat.Builder builderForValue) {
        if (heroAbilityStatsBuilder_ == null) {
          ensureHeroAbilityStatsIsMutable();
          heroAbilityStats_.add(builderForValue.build());
          onChanged();
        } else {
          heroAbilityStatsBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .CMsgHeroAbilityStat hero_ability_stats = 2;</code>
       */
      public Builder addHeroAbilityStats(
          int index, skadistats.clarity.wire.common.proto.DotaUserMessages.CMsgHeroAbilityStat.Builder builderForValue) {
        if (heroAbilityStatsBuilder_ == null) {
          ensureHeroAbilityStatsIsMutable();
          heroAbilityStats_.add(index, builderForValue.build());
          onChanged();
        } else {
          heroAbilityStatsBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .CMsgHeroAbilityStat hero_ability_stats = 2;</code>
       */
      public Builder addAllHeroAbilityStats(
          java.lang.Iterable<? extends skadistats.clarity.wire.common.proto.DotaUserMessages.CMsgHeroAbilityStat> values) {
        if (heroAbilityStatsBuilder_ == null) {
          ensureHeroAbilityStatsIsMutable();
          com.google.protobuf.AbstractMessageLite.Builder.addAll(
              values, heroAbilityStats_);
          onChanged();
        } else {
          heroAbilityStatsBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <code>repeated .CMsgHeroAbilityStat hero_ability_stats = 2;</code>
       */
      public Builder clearHeroAbilityStats() {
        if (heroAbilityStatsBuilder_ == null) {
          heroAbilityStats_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000002);
          onChanged();
        } else {
          heroAbilityStatsBuilder_.clear();
        }
        return this;
      }
      /**
       * <code>repeated .CMsgHeroAbilityStat hero_ability_stats = 2;</code>
       */
      public Builder removeHeroAbilityStats(int index) {
        if (heroAbilityStatsBuilder_ == null) {
          ensureHeroAbilityStatsIsMutable();
          heroAbilityStats_.remove(index);
          onChanged();
        } else {
          heroAbilityStatsBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <code>repeated .CMsgHeroAbilityStat hero_ability_stats = 2;</code>
       */
      public skadistats.clarity.wire.common.proto.DotaUserMessages.CMsgHeroAbilityStat.Builder getHeroAbilityStatsBuilder(
          int index) {
        return getHeroAbilityStatsFieldBuilder().getBuilder(index);
      }
      /**
       * <code>repeated .CMsgHeroAbilityStat hero_ability_stats = 2;</code>
       */
      public skadistats.clarity.wire.common.proto.DotaUserMessages.CMsgHeroAbilityStatOrBuilder getHeroAbilityStatsOrBuilder(
          int index) {
        if (heroAbilityStatsBuilder_ == null) {
          return heroAbilityStats_.get(index);  } else {
          return heroAbilityStatsBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <code>repeated .CMsgHeroAbilityStat hero_ability_stats = 2;</code>
       */
      public java.util.List<? extends skadistats.clarity.wire.common.proto.DotaUserMessages.CMsgHeroAbilityStatOrBuilder> 
           getHeroAbilityStatsOrBuilderList() {
        if (heroAbilityStatsBuilder_ != null) {
          return heroAbilityStatsBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(heroAbilityStats_);
        }
      }
      /**
       * <code>repeated .CMsgHeroAbilityStat hero_ability_stats = 2;</code>
       */
      public skadistats.clarity.wire.common.proto.DotaUserMessages.CMsgHeroAbilityStat.Builder addHeroAbilityStatsBuilder() {
        return getHeroAbilityStatsFieldBuilder().addBuilder(
            skadistats.clarity.wire.common.proto.DotaUserMessages.CMsgHeroAbilityStat.getDefaultInstance());
      }
      /**
       * <code>repeated .CMsgHeroAbilityStat hero_ability_stats = 2;</code>
       */
      public skadistats.clarity.wire.common.proto.DotaUserMessages.CMsgHeroAbilityStat.Builder addHeroAbilityStatsBuilder(
          int index) {
        return getHeroAbilityStatsFieldBuilder().addBuilder(
            index, skadistats.clarity.wire.common.proto.DotaUserMessages.CMsgHeroAbilityStat.getDefaultInstance());
      }
      /**
       * <code>repeated .CMsgHeroAbilityStat hero_ability_stats = 2;</code>
       */
      public java.util.List<skadistats.clarity.wire.common.proto.DotaUserMessages.CMsgHeroAbilityStat.Builder> 
           getHeroAbilityStatsBuilderList() {
        return getHeroAbilityStatsFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilder<
          skadistats.clarity.wire.common.proto.DotaUserMessages.CMsgHeroAbilityStat, skadistats.clarity.wire.common.proto.DotaUserMessages.CMsgHeroAbilityStat.Builder, skadistats.clarity.wire.common.proto.DotaUserMessages.CMsgHeroAbilityStatOrBuilder> 
          getHeroAbilityStatsFieldBuilder() {
        if (heroAbilityStatsBuilder_ == null) {
          heroAbilityStatsBuilder_ = new com.google.protobuf.RepeatedFieldBuilder<
              skadistats.clarity.wire.common.proto.DotaUserMessages.CMsgHeroAbilityStat, skadistats.clarity.wire.common.proto.DotaUserMessages.CMsgHeroAbilityStat.Builder, skadistats.clarity.wire.common.proto.DotaUserMessages.CMsgHeroAbilityStatOrBuilder>(
                  heroAbilityStats_,
                  ((bitField0_ & 0x00000002) == 0x00000002),
                  getParentForChildren(),
                  isClean());
          heroAbilityStats_ = null;
        }
        return heroAbilityStatsBuilder_;
      }

      // @@protoc_insertion_point(builder_scope:CMsgCombatAnalyzerPlayerStat)
    }

    static {
      defaultInstance = new CMsgCombatAnalyzerPlayerStat(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:CMsgCombatAnalyzerPlayerStat)
  }

  public interface CMsgCombatAnalyzerStatsOrBuilder extends
      // @@protoc_insertion_point(interface_extends:CMsgCombatAnalyzerStats)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>optional uint64 match_id = 1;</code>
     */
    boolean hasMatchId();
    /**
     * <code>optional uint64 match_id = 1;</code>
     */
    long getMatchId();

    /**
     * <code>repeated .CMsgCombatAnalyzerPlayerStat player_stats = 2;</code>
     */
    java.util.List<skadistats.clarity.wire.common.proto.DotaUserMessages.CMsgCombatAnalyzerPlayerStat> 
        getPlayerStatsList();
    /**
     * <code>repeated .CMsgCombatAnalyzerPlayerStat player_stats = 2;</code>
     */
    skadistats.clarity.wire.common.proto.DotaUserMessages.CMsgCombatAnalyzerPlayerStat getPlayerStats(int index);
    /**
     * <code>repeated .CMsgCombatAnalyzerPlayerStat player_stats = 2;</code>
     */
    int getPlayerStatsCount();
    /**
     * <code>repeated .CMsgCombatAnalyzerPlayerStat player_stats = 2;</code>
     */
    java.util.List<? extends skadistats.clarity.wire.common.proto.DotaUserMessages.CMsgCombatAnalyzerPlayerStatOrBuilder> 
        getPlayerStatsOrBuilderList();
    /**
     * <code>repeated .CMsgCombatAnalyzerPlayerStat player_stats = 2;</code>
     */
    skadistats.clarity.wire.common.proto.DotaUserMessages.CMsgCombatAnalyzerPlayerStatOrBuilder getPlayerStatsOrBuilder(
        int index);
  }
  /**
   * Protobuf type {@code CMsgCombatAnalyzerStats}
   */
  public static final class CMsgCombatAnalyzerStats extends
      com.google.protobuf.GeneratedMessage implements
      // @@protoc_insertion_point(message_implements:CMsgCombatAnalyzerStats)
      CMsgCombatAnalyzerStatsOrBuilder {
    // Use CMsgCombatAnalyzerStats.newBuilder() to construct.
    private CMsgCombatAnalyzerStats(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private CMsgCombatAnalyzerStats(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final CMsgCombatAnalyzerStats defaultInstance;
    public static CMsgCombatAnalyzerStats getDefaultInstance() {
      return defaultInstance;
    }

    public CMsgCombatAnalyzerStats getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private CMsgCombatAnalyzerStats(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 8: {
              bitField0_ |= 0x00000001;
              matchId_ = input.readUInt64();
              break;
            }
            case 18: {
              if (!((mutable_bitField0_ & 0x00000002) == 0x00000002)) {
                playerStats_ = new java.util.ArrayList<skadistats.clarity.wire.common.proto.DotaUserMessages.CMsgCombatAnalyzerPlayerStat>();
                mutable_bitField0_ |= 0x00000002;
              }
              playerStats_.add(input.readMessage(skadistats.clarity.wire.common.proto.DotaUserMessages.CMsgCombatAnalyzerPlayerStat.PARSER, extensionRegistry));
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        if (((mutable_bitField0_ & 0x00000002) == 0x00000002)) {
          playerStats_ = java.util.Collections.unmodifiableList(playerStats_);
        }
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return skadistats.clarity.wire.common.proto.DotaUserMessages.internal_static_CMsgCombatAnalyzerStats_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return skadistats.clarity.wire.common.proto.DotaUserMessages.internal_static_CMsgCombatAnalyzerStats_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              skadistats.clarity.wire.common.proto.DotaUserMessages.CMsgCombatAnalyzerStats.class, skadistats.clarity.wire.common.proto.DotaUserMessages.CMsgCombatAnalyzerStats.Builder.class);
    }

    public static com.google.protobuf.Parser<CMsgCombatAnalyzerStats> PARSER =
        new com.google.protobuf.AbstractParser<CMsgCombatAnalyzerStats>() {
      public CMsgCombatAnalyzerStats parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new CMsgCombatAnalyzerStats(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<CMsgCombatAnalyzerStats> getParserForType() {
      return PARSER;
    }

    private int bitField0_;
    public static final int MATCH_ID_FIELD_NUMBER = 1;
    private long matchId_;
    /**
     * <code>optional uint64 match_id = 1;</code>
     */
    public boolean hasMatchId() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>optional uint64 match_id = 1;</code>
     */
    public long getMatchId() {
      return matchId_;
    }

    public static final int PLAYER_STATS_FIELD_NUMBER = 2;
    private java.util.List<skadistats.clarity.wire.common.proto.DotaUserMessages.CMsgCombatAnalyzerPlayerStat> playerStats_;
    /**
     * <code>repeated .CMsgCombatAnalyzerPlayerStat player_stats = 2;</code>
     */
    public java.util.List<skadistats.clarity.wire.common.proto.DotaUserMessages.CMsgCombatAnalyzerPlayerStat> getPlayerStatsList() {
      return playerStats_;
    }
    /**
     * <code>repeated .CMsgCombatAnalyzerPlayerStat player_stats = 2;</code>
     */
    public java.util.List<? extends skadistats.clarity.wire.common.proto.DotaUserMessages.CMsgCombatAnalyzerPlayerStatOrBuilder> 
        getPlayerStatsOrBuilderList() {
      return playerStats_;
    }
    /**
     * <code>repeated .CMsgCombatAnalyzerPlayerStat player_stats = 2;</code>
     */
    public int getPlayerStatsCount() {
      return playerStats_.size();
    }
    /**
     * <code>repeated .CMsgCombatAnalyzerPlayerStat player_stats = 2;</code>
     */
    public skadistats.clarity.wire.common.proto.DotaUserMessages.CMsgCombatAnalyzerPlayerStat getPlayerStats(int index) {
      return playerStats_.get(index);
    }
    /**
     * <code>repeated .CMsgCombatAnalyzerPlayerStat player_stats = 2;</code>
     */
    public skadistats.clarity.wire.common.proto.DotaUserMessages.CMsgCombatAnalyzerPlayerStatOrBuilder getPlayerStatsOrBuilder(
        int index) {
      return playerStats_.get(index);
    }

    private void initFields() {
      matchId_ = 0L;
      playerStats_ = java.util.Collections.emptyList();
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeUInt64(1, matchId_);
      }
      for (int i = 0; i < playerStats_.size(); i++) {
        output.writeMessage(2, playerStats_.get(i));
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt64Size(1, matchId_);
      }
      for (int i = 0; i < playerStats_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(2, playerStats_.get(i));
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static skadistats.clarity.wire.common.proto.DotaUserMessages.CMsgCombatAnalyzerStats parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static skadistats.clarity.wire.common.proto.DotaUserMessages.CMsgCombatAnalyzerStats parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static skadistats.clarity.wire.common.proto.DotaUserMessages.CMsgCombatAnalyzerStats parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static skadistats.clarity.wire.common.proto.DotaUserMessages.CMsgCombatAnalyzerStats parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static skadistats.clarity.wire.common.proto.DotaUserMessages.CMsgCombatAnalyzerStats parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static skadistats.clarity.wire.common.proto.DotaUserMessages.CMsgCombatAnalyzerStats parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static skadistats.clarity.wire.common.proto.DotaUserMessages.CMsgCombatAnalyzerStats parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static skadistats.clarity.wire.common.proto.DotaUserMessages.CMsgCombatAnalyzerStats parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static skadistats.clarity.wire.common.proto.DotaUserMessages.CMsgCombatAnalyzerStats parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static skadistats.clarity.wire.common.proto.DotaUserMessages.CMsgCombatAnalyzerStats parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(skadistats.clarity.wire.common.proto.DotaUserMessages.CMsgCombatAnalyzerStats prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code CMsgCombatAnalyzerStats}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:CMsgCombatAnalyzerStats)
        skadistats.clarity.wire.common.proto.DotaUserMessages.CMsgCombatAnalyzerStatsOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return skadistats.clarity.wire.common.proto.DotaUserMessages.internal_static_CMsgCombatAnalyzerStats_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return skadistats.clarity.wire.common.proto.DotaUserMessages.internal_static_CMsgCombatAnalyzerStats_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                skadistats.clarity.wire.common.proto.DotaUserMessages.CMsgCombatAnalyzerStats.class, skadistats.clarity.wire.common.proto.DotaUserMessages.CMsgCombatAnalyzerStats.Builder.class);
      }

      // Construct using skadistats.clarity.wire.common.proto.DotaUserMessages.CMsgCombatAnalyzerStats.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
          getPlayerStatsFieldBuilder();
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        matchId_ = 0L;
        bitField0_ = (bitField0_ & ~0x00000001);
        if (playerStatsBuilder_ == null) {
          playerStats_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000002);
        } else {
          playerStatsBuilder_.clear();
        }
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return skadistats.clarity.wire.common.proto.DotaUserMessages.internal_static_CMsgCombatAnalyzerStats_descriptor;
      }

      public skadistats.clarity.wire.common.proto.DotaUserMessages.CMsgCombatAnalyzerStats getDefaultInstanceForType() {
        return skadistats.clarity.wire.common.proto.DotaUserMessages.CMsgCombatAnalyzerStats.getDefaultInstance();
      }

      public skadistats.clarity.wire.common.proto.DotaUserMessages.CMsgCombatAnalyzerStats build() {
        skadistats.clarity.wire.common.proto.DotaUserMessages.CMsgCombatAnalyzerStats result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public skadistats.clarity.wire.common.proto.DotaUserMessages.CMsgCombatAnalyzerStats buildPartial() {
        skadistats.clarity.wire.common.proto.DotaUserMessages.CMsgCombatAnalyzerStats result = new skadistats.clarity.wire.common.proto.DotaUserMessages.CMsgCombatAnalyzerStats(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.matchId_ = matchId_;
        if (playerStatsBuilder_ == null) {
          if (((bitField0_ & 0x00000002) == 0x00000002)) {
            playerStats_ = java.util.Collections.unmodifiableList(playerStats_);
            bitField0_ = (bitField0_ & ~0x00000002);
          }
          result.playerStats_ = playerStats_;
        } else {
          result.playerStats_ = playerStatsBuilder_.build();
        }
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof skadistats.clarity.wire.common.proto.DotaUserMessages.CMsgCombatAnalyzerStats) {
          return mergeFrom((skadistats.clarity.wire.common.proto.DotaUserMessages.CMsgCombatAnalyzerStats)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(skadistats.clarity.wire.common.proto.DotaUserMessages.CMsgCombatAnalyzerStats other) {
        if (other == skadistats.clarity.wire.common.proto.DotaUserMessages.CMsgCombatAnalyzerStats.getDefaultInstance()) return this;
        if (other.hasMatchId()) {
          setMatchId(other.getMatchId());
        }
        if (playerStatsBuilder_ == null) {
          if (!other.playerStats_.isEmpty()) {
            if (playerStats_.isEmpty()) {
              playerStats_ = other.playerStats_;
              bitField0_ = (bitField0_ & ~0x00000002);
            } else {
              ensurePlayerStatsIsMutable();
              playerStats_.addAll(other.playerStats_);
            }
            onChanged();
          }
        } else {
          if (!other.playerStats_.isEmpty()) {
            if (playerStatsBuilder_.isEmpty()) {
              playerStatsBuilder_.dispose();
              playerStatsBuilder_ = null;
              playerStats_ = other.playerStats_;
              bitField0_ = (bitField0_ & ~0x00000002);
              playerStatsBuilder_ = 
                com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders ?
                   getPlayerStatsFieldBuilder() : null;
            } else {
              playerStatsBuilder_.addAllMessages(other.playerStats_);
            }
          }
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        skadistats.clarity.wire.common.proto.DotaUserMessages.CMsgCombatAnalyzerStats parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (skadistats.clarity.wire.common.proto.DotaUserMessages.CMsgCombatAnalyzerStats) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private long matchId_ ;
      /**
       * <code>optional uint64 match_id = 1;</code>
       */
      public boolean hasMatchId() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>optional uint64 match_id = 1;</code>
       */
      public long getMatchId() {
        return matchId_;
      }
      /**
       * <code>optional uint64 match_id = 1;</code>
       */
      public Builder setMatchId(long value) {
        bitField0_ |= 0x00000001;
        matchId_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional uint64 match_id = 1;</code>
       */
      public Builder clearMatchId() {
        bitField0_ = (bitField0_ & ~0x00000001);
        matchId_ = 0L;
        onChanged();
        return this;
      }

      private java.util.List<skadistats.clarity.wire.common.proto.DotaUserMessages.CMsgCombatAnalyzerPlayerStat> playerStats_ =
        java.util.Collections.emptyList();
      private void ensurePlayerStatsIsMutable() {
        if (!((bitField0_ & 0x00000002) == 0x00000002)) {
          playerStats_ = new java.util.ArrayList<skadistats.clarity.wire.common.proto.DotaUserMessages.CMsgCombatAnalyzerPlayerStat>(playerStats_);
          bitField0_ |= 0x00000002;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilder<
          skadistats.clarity.wire.common.proto.DotaUserMessages.CMsgCombatAnalyzerPlayerStat, skadistats.clarity.wire.common.proto.DotaUserMessages.CMsgCombatAnalyzerPlayerStat.Builder, skadistats.clarity.wire.common.proto.DotaUserMessages.CMsgCombatAnalyzerPlayerStatOrBuilder> playerStatsBuilder_;

      /**
       * <code>repeated .CMsgCombatAnalyzerPlayerStat player_stats = 2;</code>
       */
      public java.util.List<skadistats.clarity.wire.common.proto.DotaUserMessages.CMsgCombatAnalyzerPlayerStat> getPlayerStatsList() {
        if (playerStatsBuilder_ == null) {
          return java.util.Collections.unmodifiableList(playerStats_);
        } else {
          return playerStatsBuilder_.getMessageList();
        }
      }
      /**
       * <code>repeated .CMsgCombatAnalyzerPlayerStat player_stats = 2;</code>
       */
      public int getPlayerStatsCount() {
        if (playerStatsBuilder_ == null) {
          return playerStats_.size();
        } else {
          return playerStatsBuilder_.getCount();
        }
      }
      /**
       * <code>repeated .CMsgCombatAnalyzerPlayerStat player_stats = 2;</code>
       */
      public skadistats.clarity.wire.common.proto.DotaUserMessages.CMsgCombatAnalyzerPlayerStat getPlayerStats(int index) {
        if (playerStatsBuilder_ == null) {
          return playerStats_.get(index);
        } else {
          return playerStatsBuilder_.getMessage(index);
        }
      }
      /**
       * <code>repeated .CMsgCombatAnalyzerPlayerStat player_stats = 2;</code>
       */
      public Builder setPlayerStats(
          int index, skadistats.clarity.wire.common.proto.DotaUserMessages.CMsgCombatAnalyzerPlayerStat value) {
        if (playerStatsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensurePlayerStatsIsMutable();
          playerStats_.set(index, value);
          onChanged();
        } else {
          playerStatsBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .CMsgCombatAnalyzerPlayerStat player_stats = 2;</code>
       */
      public Builder setPlayerStats(
          int index, skadistats.clarity.wire.common.proto.DotaUserMessages.CMsgCombatAnalyzerPlayerStat.Builder builderForValue) {
        if (playerStatsBuilder_ == null) {
          ensurePlayerStatsIsMutable();
          playerStats_.set(index, builderForValue.build());
          onChanged();
        } else {
          playerStatsBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .CMsgCombatAnalyzerPlayerStat player_stats = 2;</code>
       */
      public Builder addPlayerStats(skadistats.clarity.wire.common.proto.DotaUserMessages.CMsgCombatAnalyzerPlayerStat value) {
        if (playerStatsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensurePlayerStatsIsMutable();
          playerStats_.add(value);
          onChanged();
        } else {
          playerStatsBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <code>repeated .CMsgCombatAnalyzerPlayerStat player_stats = 2;</code>
       */
      public Builder addPlayerStats(
          int index, skadistats.clarity.wire.common.proto.DotaUserMessages.CMsgCombatAnalyzerPlayerStat value) {
        if (playerStatsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensurePlayerStatsIsMutable();
          playerStats_.add(index, value);
          onChanged();
        } else {
          playerStatsBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .CMsgCombatAnalyzerPlayerStat player_stats = 2;</code>
       */
      public Builder addPlayerStats(
          skadistats.clarity.wire.common.proto.DotaUserMessages.CMsgCombatAnalyzerPlayerStat.Builder builderForValue) {
        if (playerStatsBuilder_ == null) {
          ensurePlayerStatsIsMutable();
          playerStats_.add(builderForValue.build());
          onChanged();
        } else {
          playerStatsBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .CMsgCombatAnalyzerPlayerStat player_stats = 2;</code>
       */
      public Builder addPlayerStats(
          int index, skadistats.clarity.wire.common.proto.DotaUserMessages.CMsgCombatAnalyzerPlayerStat.Builder builderForValue) {
        if (playerStatsBuilder_ == null) {
          ensurePlayerStatsIsMutable();
          playerStats_.add(index, builderForValue.build());
          onChanged();
        } else {
          playerStatsBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .CMsgCombatAnalyzerPlayerStat player_stats = 2;</code>
       */
      public Builder addAllPlayerStats(
          java.lang.Iterable<? extends skadistats.clarity.wire.common.proto.DotaUserMessages.CMsgCombatAnalyzerPlayerStat> values) {
        if (playerStatsBuilder_ == null) {
          ensurePlayerStatsIsMutable();
          com.google.protobuf.AbstractMessageLite.Builder.addAll(
              values, playerStats_);
          onChanged();
        } else {
          playerStatsBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <code>repeated .CMsgCombatAnalyzerPlayerStat player_stats = 2;</code>
       */
      public Builder clearPlayerStats() {
        if (playerStatsBuilder_ == null) {
          playerStats_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000002);
          onChanged();
        } else {
          playerStatsBuilder_.clear();
        }
        return this;
      }
      /**
       * <code>repeated .CMsgCombatAnalyzerPlayerStat player_stats = 2;</code>
       */
      public Builder removePlayerStats(int index) {
        if (playerStatsBuilder_ == null) {
          ensurePlayerStatsIsMutable();
          playerStats_.remove(index);
          onChanged();
        } else {
          playerStatsBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <code>repeated .CMsgCombatAnalyzerPlayerStat player_stats = 2;</code>
       */
      public skadistats.clarity.wire.common.proto.DotaUserMessages.CMsgCombatAnalyzerPlayerStat.Builder getPlayerStatsBuilder(
          int index) {
        return getPlayerStatsFieldBuilder().getBuilder(index);
      }
      /**
       * <code>repeated .CMsgCombatAnalyzerPlayerStat player_stats = 2;</code>
       */
      public skadistats.clarity.wire.common.proto.DotaUserMessages.CMsgCombatAnalyzerPlayerStatOrBuilder getPlayerStatsOrBuilder(
          int index) {
        if (playerStatsBuilder_ == null) {
          return playerStats_.get(index);  } else {
          return playerStatsBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <code>repeated .CMsgCombatAnalyzerPlayerStat player_stats = 2;</code>
       */
      public java.util.List<? extends skadistats.clarity.wire.common.proto.DotaUserMessages.CMsgCombatAnalyzerPlayerStatOrBuilder> 
           getPlayerStatsOrBuilderList() {
        if (playerStatsBuilder_ != null) {
          return playerStatsBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(playerStats_);
        }
      }
      /**
       * <code>repeated .CMsgCombatAnalyzerPlayerStat player_stats = 2;</code>
       */
      public skadistats.clarity.wire.common.proto.DotaUserMessages.CMsgCombatAnalyzerPlayerStat.Builder addPlayerStatsBuilder() {
        return getPlayerStatsFieldBuilder().addBuilder(
            skadistats.clarity.wire.common.proto.DotaUserMessages.CMsgCombatAnalyzerPlayerStat.getDefaultInstance());
      }
      /**
       * <code>repeated .CMsgCombatAnalyzerPlayerStat player_stats = 2;</code>
       */
      public skadistats.clarity.wire.common.proto.DotaUserMessages.CMsgCombatAnalyzerPlayerStat.Builder addPlayerStatsBuilder(
          int index) {
        return getPlayerStatsFieldBuilder().addBuilder(
            index, skadistats.clarity.wire.common.proto.DotaUserMessages.CMsgCombatAnalyzerPlayerStat.getDefaultInstance());
      }
      /**
       * <code>repeated .CMsgCombatAnalyzerPlayerStat player_stats = 2;</code>
       */
      public java.util.List<skadistats.clarity.wire.common.proto.DotaUserMessages.CMsgCombatAnalyzerPlayerStat.Builder> 
           getPlayerStatsBuilderList() {
        return getPlayerStatsFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilder<
          skadistats.clarity.wire.common.proto.DotaUserMessages.CMsgCombatAnalyzerPlayerStat, skadistats.clarity.wire.common.proto.DotaUserMessages.CMsgCombatAnalyzerPlayerStat.Builder, skadistats.clarity.wire.common.proto.DotaUserMessages.CMsgCombatAnalyzerPlayerStatOrBuilder> 
          getPlayerStatsFieldBuilder() {
        if (playerStatsBuilder_ == null) {
          playerStatsBuilder_ = new com.google.protobuf.RepeatedFieldBuilder<
              skadistats.clarity.wire.common.proto.DotaUserMessages.CMsgCombatAnalyzerPlayerStat, skadistats.clarity.wire.common.proto.DotaUserMessages.CMsgCombatAnalyzerPlayerStat.Builder, skadistats.clarity.wire.common.proto.DotaUserMessages.CMsgCombatAnalyzerPlayerStatOrBuilder>(
                  playerStats_,
                  ((bitField0_ & 0x00000002) == 0x00000002),
                  getParentForChildren(),
                  isClean());
          playerStats_ = null;
        }
        return playerStatsBuilder_;
      }

      // @@protoc_insertion_point(builder_scope:CMsgCombatAnalyzerStats)
    }

    static {
      defaultInstance = new CMsgCombatAnalyzerStats(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:CMsgCombatAnalyzerStats)
  }

  public interface CDOTAUserMsg_BeastChatOrBuilder extends
      // @@protoc_insertion_point(interface_extends:CDOTAUserMsg_BeastChat)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>optional uint32 team = 1;</code>
     */
    boolean hasTeam();
    /**
     * <code>optional uint32 team = 1;</code>
     */
    int getTeam();

    /**
     * <code>optional string format = 2;</code>
     */
    boolean hasFormat();
    /**
     * <code>optional string format = 2;</code>
     */
    java.lang.String getFormat();
    /**
     * <code>optional string format = 2;</code>
     */
    com.google.protobuf.ByteString
        getFormatBytes();

    /**
     * <code>optional string message = 3;</code>
     */
    boolean hasMessage();
    /**
     * <code>optional string message = 3;</code>
     */
    java.lang.String getMessage();
    /**
     * <code>optional string message = 3;</code>
     */
    com.google.protobuf.ByteString
        getMessageBytes();

    /**
     * <code>optional string target = 4;</code>
     */
    boolean hasTarget();
    /**
     * <code>optional string target = 4;</code>
     */
    java.lang.String getTarget();
    /**
     * <code>optional string target = 4;</code>
     */
    com.google.protobuf.ByteString
        getTargetBytes();
  }
  /**
   * Protobuf type {@code CDOTAUserMsg_BeastChat}
   */
  public static final class CDOTAUserMsg_BeastChat extends
      com.google.protobuf.GeneratedMessage implements
      // @@protoc_insertion_point(message_implements:CDOTAUserMsg_BeastChat)
      CDOTAUserMsg_BeastChatOrBuilder {
    // Use CDOTAUserMsg_BeastChat.newBuilder() to construct.
    private CDOTAUserMsg_BeastChat(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private CDOTAUserMsg_BeastChat(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final CDOTAUserMsg_BeastChat defaultInstance;
    public static CDOTAUserMsg_BeastChat getDefaultInstance() {
      return defaultInstance;
    }

    public CDOTAUserMsg_BeastChat getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private CDOTAUserMsg_BeastChat(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 8: {
              bitField0_ |= 0x00000001;
              team_ = input.readUInt32();
              break;
            }
            case 18: {
              com.google.protobuf.ByteString bs = input.readBytes();
              bitField0_ |= 0x00000002;
              format_ = bs;
              break;
            }
            case 26: {
              com.google.protobuf.ByteString bs = input.readBytes();
              bitField0_ |= 0x00000004;
              message_ = bs;
              break;
            }
            case 34: {
              com.google.protobuf.ByteString bs = input.readBytes();
              bitField0_ |= 0x00000008;
              target_ = bs;
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return skadistats.clarity.wire.common.proto.DotaUserMessages.internal_static_CDOTAUserMsg_BeastChat_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return skadistats.clarity.wire.common.proto.DotaUserMessages.internal_static_CDOTAUserMsg_BeastChat_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_BeastChat.class, skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_BeastChat.Builder.class);
    }

    public static com.google.protobuf.Parser<CDOTAUserMsg_BeastChat> PARSER =
        new com.google.protobuf.AbstractParser<CDOTAUserMsg_BeastChat>() {
      public CDOTAUserMsg_BeastChat parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new CDOTAUserMsg_BeastChat(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<CDOTAUserMsg_BeastChat> getParserForType() {
      return PARSER;
    }

    private int bitField0_;
    public static final int TEAM_FIELD_NUMBER = 1;
    private int team_;
    /**
     * <code>optional uint32 team = 1;</code>
     */
    public boolean hasTeam() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>optional uint32 team = 1;</code>
     */
    public int getTeam() {
      return team_;
    }

    public static final int FORMAT_FIELD_NUMBER = 2;
    private java.lang.Object format_;
    /**
     * <code>optional string format = 2;</code>
     */
    public boolean hasFormat() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>optional string format = 2;</code>
     */
    public java.lang.String getFormat() {
      java.lang.Object ref = format_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          format_ = s;
        }
        return s;
      }
    }
    /**
     * <code>optional string format = 2;</code>
     */
    public com.google.protobuf.ByteString
        getFormatBytes() {
      java.lang.Object ref = format_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        format_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int MESSAGE_FIELD_NUMBER = 3;
    private java.lang.Object message_;
    /**
     * <code>optional string message = 3;</code>
     */
    public boolean hasMessage() {
      return ((bitField0_ & 0x00000004) == 0x00000004);
    }
    /**
     * <code>optional string message = 3;</code>
     */
    public java.lang.String getMessage() {
      java.lang.Object ref = message_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          message_ = s;
        }
        return s;
      }
    }
    /**
     * <code>optional string message = 3;</code>
     */
    public com.google.protobuf.ByteString
        getMessageBytes() {
      java.lang.Object ref = message_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        message_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int TARGET_FIELD_NUMBER = 4;
    private java.lang.Object target_;
    /**
     * <code>optional string target = 4;</code>
     */
    public boolean hasTarget() {
      return ((bitField0_ & 0x00000008) == 0x00000008);
    }
    /**
     * <code>optional string target = 4;</code>
     */
    public java.lang.String getTarget() {
      java.lang.Object ref = target_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          target_ = s;
        }
        return s;
      }
    }
    /**
     * <code>optional string target = 4;</code>
     */
    public com.google.protobuf.ByteString
        getTargetBytes() {
      java.lang.Object ref = target_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        target_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    private void initFields() {
      team_ = 0;
      format_ = "";
      message_ = "";
      target_ = "";
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeUInt32(1, team_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeBytes(2, getFormatBytes());
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        output.writeBytes(3, getMessageBytes());
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        output.writeBytes(4, getTargetBytes());
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(1, team_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(2, getFormatBytes());
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(3, getMessageBytes());
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(4, getTargetBytes());
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_BeastChat parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_BeastChat parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_BeastChat parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_BeastChat parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_BeastChat parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_BeastChat parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_BeastChat parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_BeastChat parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_BeastChat parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_BeastChat parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_BeastChat prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code CDOTAUserMsg_BeastChat}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:CDOTAUserMsg_BeastChat)
        skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_BeastChatOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return skadistats.clarity.wire.common.proto.DotaUserMessages.internal_static_CDOTAUserMsg_BeastChat_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return skadistats.clarity.wire.common.proto.DotaUserMessages.internal_static_CDOTAUserMsg_BeastChat_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_BeastChat.class, skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_BeastChat.Builder.class);
      }

      // Construct using skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_BeastChat.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        team_ = 0;
        bitField0_ = (bitField0_ & ~0x00000001);
        format_ = "";
        bitField0_ = (bitField0_ & ~0x00000002);
        message_ = "";
        bitField0_ = (bitField0_ & ~0x00000004);
        target_ = "";
        bitField0_ = (bitField0_ & ~0x00000008);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return skadistats.clarity.wire.common.proto.DotaUserMessages.internal_static_CDOTAUserMsg_BeastChat_descriptor;
      }

      public skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_BeastChat getDefaultInstanceForType() {
        return skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_BeastChat.getDefaultInstance();
      }

      public skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_BeastChat build() {
        skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_BeastChat result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_BeastChat buildPartial() {
        skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_BeastChat result = new skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_BeastChat(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.team_ = team_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.format_ = format_;
        if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
          to_bitField0_ |= 0x00000004;
        }
        result.message_ = message_;
        if (((from_bitField0_ & 0x00000008) == 0x00000008)) {
          to_bitField0_ |= 0x00000008;
        }
        result.target_ = target_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_BeastChat) {
          return mergeFrom((skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_BeastChat)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_BeastChat other) {
        if (other == skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_BeastChat.getDefaultInstance()) return this;
        if (other.hasTeam()) {
          setTeam(other.getTeam());
        }
        if (other.hasFormat()) {
          bitField0_ |= 0x00000002;
          format_ = other.format_;
          onChanged();
        }
        if (other.hasMessage()) {
          bitField0_ |= 0x00000004;
          message_ = other.message_;
          onChanged();
        }
        if (other.hasTarget()) {
          bitField0_ |= 0x00000008;
          target_ = other.target_;
          onChanged();
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_BeastChat parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_BeastChat) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private int team_ ;
      /**
       * <code>optional uint32 team = 1;</code>
       */
      public boolean hasTeam() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>optional uint32 team = 1;</code>
       */
      public int getTeam() {
        return team_;
      }
      /**
       * <code>optional uint32 team = 1;</code>
       */
      public Builder setTeam(int value) {
        bitField0_ |= 0x00000001;
        team_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional uint32 team = 1;</code>
       */
      public Builder clearTeam() {
        bitField0_ = (bitField0_ & ~0x00000001);
        team_ = 0;
        onChanged();
        return this;
      }

      private java.lang.Object format_ = "";
      /**
       * <code>optional string format = 2;</code>
       */
      public boolean hasFormat() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>optional string format = 2;</code>
       */
      public java.lang.String getFormat() {
        java.lang.Object ref = format_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          if (bs.isValidUtf8()) {
            format_ = s;
          }
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>optional string format = 2;</code>
       */
      public com.google.protobuf.ByteString
          getFormatBytes() {
        java.lang.Object ref = format_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          format_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>optional string format = 2;</code>
       */
      public Builder setFormat(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000002;
        format_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional string format = 2;</code>
       */
      public Builder clearFormat() {
        bitField0_ = (bitField0_ & ~0x00000002);
        format_ = getDefaultInstance().getFormat();
        onChanged();
        return this;
      }
      /**
       * <code>optional string format = 2;</code>
       */
      public Builder setFormatBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000002;
        format_ = value;
        onChanged();
        return this;
      }

      private java.lang.Object message_ = "";
      /**
       * <code>optional string message = 3;</code>
       */
      public boolean hasMessage() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }
      /**
       * <code>optional string message = 3;</code>
       */
      public java.lang.String getMessage() {
        java.lang.Object ref = message_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          if (bs.isValidUtf8()) {
            message_ = s;
          }
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>optional string message = 3;</code>
       */
      public com.google.protobuf.ByteString
          getMessageBytes() {
        java.lang.Object ref = message_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          message_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>optional string message = 3;</code>
       */
      public Builder setMessage(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000004;
        message_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional string message = 3;</code>
       */
      public Builder clearMessage() {
        bitField0_ = (bitField0_ & ~0x00000004);
        message_ = getDefaultInstance().getMessage();
        onChanged();
        return this;
      }
      /**
       * <code>optional string message = 3;</code>
       */
      public Builder setMessageBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000004;
        message_ = value;
        onChanged();
        return this;
      }

      private java.lang.Object target_ = "";
      /**
       * <code>optional string target = 4;</code>
       */
      public boolean hasTarget() {
        return ((bitField0_ & 0x00000008) == 0x00000008);
      }
      /**
       * <code>optional string target = 4;</code>
       */
      public java.lang.String getTarget() {
        java.lang.Object ref = target_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          if (bs.isValidUtf8()) {
            target_ = s;
          }
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>optional string target = 4;</code>
       */
      public com.google.protobuf.ByteString
          getTargetBytes() {
        java.lang.Object ref = target_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          target_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>optional string target = 4;</code>
       */
      public Builder setTarget(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000008;
        target_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional string target = 4;</code>
       */
      public Builder clearTarget() {
        bitField0_ = (bitField0_ & ~0x00000008);
        target_ = getDefaultInstance().getTarget();
        onChanged();
        return this;
      }
      /**
       * <code>optional string target = 4;</code>
       */
      public Builder setTargetBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000008;
        target_ = value;
        onChanged();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:CDOTAUserMsg_BeastChat)
    }

    static {
      defaultInstance = new CDOTAUserMsg_BeastChat(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:CDOTAUserMsg_BeastChat)
  }

  public interface CDOTAUserMsg_CustomHudElement_CreateOrBuilder extends
      // @@protoc_insertion_point(interface_extends:CDOTAUserMsg_CustomHudElement_Create)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>optional string element_id = 1;</code>
     */
    boolean hasElementId();
    /**
     * <code>optional string element_id = 1;</code>
     */
    java.lang.String getElementId();
    /**
     * <code>optional string element_id = 1;</code>
     */
    com.google.protobuf.ByteString
        getElementIdBytes();

    /**
     * <code>optional string layout_filename = 2;</code>
     */
    boolean hasLayoutFilename();
    /**
     * <code>optional string layout_filename = 2;</code>
     */
    java.lang.String getLayoutFilename();
    /**
     * <code>optional string layout_filename = 2;</code>
     */
    com.google.protobuf.ByteString
        getLayoutFilenameBytes();

    /**
     * <code>optional bytes data = 3;</code>
     */
    boolean hasData();
    /**
     * <code>optional bytes data = 3;</code>
     */
    com.google.protobuf.ByteString getData();
  }
  /**
   * Protobuf type {@code CDOTAUserMsg_CustomHudElement_Create}
   */
  public static final class CDOTAUserMsg_CustomHudElement_Create extends
      com.google.protobuf.GeneratedMessage implements
      // @@protoc_insertion_point(message_implements:CDOTAUserMsg_CustomHudElement_Create)
      CDOTAUserMsg_CustomHudElement_CreateOrBuilder {
    // Use CDOTAUserMsg_CustomHudElement_Create.newBuilder() to construct.
    private CDOTAUserMsg_CustomHudElement_Create(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private CDOTAUserMsg_CustomHudElement_Create(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final CDOTAUserMsg_CustomHudElement_Create defaultInstance;
    public static CDOTAUserMsg_CustomHudElement_Create getDefaultInstance() {
      return defaultInstance;
    }

    public CDOTAUserMsg_CustomHudElement_Create getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private CDOTAUserMsg_CustomHudElement_Create(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 10: {
              com.google.protobuf.ByteString bs = input.readBytes();
              bitField0_ |= 0x00000001;
              elementId_ = bs;
              break;
            }
            case 18: {
              com.google.protobuf.ByteString bs = input.readBytes();
              bitField0_ |= 0x00000002;
              layoutFilename_ = bs;
              break;
            }
            case 26: {
              bitField0_ |= 0x00000004;
              data_ = input.readBytes();
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return skadistats.clarity.wire.common.proto.DotaUserMessages.internal_static_CDOTAUserMsg_CustomHudElement_Create_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return skadistats.clarity.wire.common.proto.DotaUserMessages.internal_static_CDOTAUserMsg_CustomHudElement_Create_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_CustomHudElement_Create.class, skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_CustomHudElement_Create.Builder.class);
    }

    public static com.google.protobuf.Parser<CDOTAUserMsg_CustomHudElement_Create> PARSER =
        new com.google.protobuf.AbstractParser<CDOTAUserMsg_CustomHudElement_Create>() {
      public CDOTAUserMsg_CustomHudElement_Create parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new CDOTAUserMsg_CustomHudElement_Create(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<CDOTAUserMsg_CustomHudElement_Create> getParserForType() {
      return PARSER;
    }

    private int bitField0_;
    public static final int ELEMENT_ID_FIELD_NUMBER = 1;
    private java.lang.Object elementId_;
    /**
     * <code>optional string element_id = 1;</code>
     */
    public boolean hasElementId() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>optional string element_id = 1;</code>
     */
    public java.lang.String getElementId() {
      java.lang.Object ref = elementId_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          elementId_ = s;
        }
        return s;
      }
    }
    /**
     * <code>optional string element_id = 1;</code>
     */
    public com.google.protobuf.ByteString
        getElementIdBytes() {
      java.lang.Object ref = elementId_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        elementId_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int LAYOUT_FILENAME_FIELD_NUMBER = 2;
    private java.lang.Object layoutFilename_;
    /**
     * <code>optional string layout_filename = 2;</code>
     */
    public boolean hasLayoutFilename() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>optional string layout_filename = 2;</code>
     */
    public java.lang.String getLayoutFilename() {
      java.lang.Object ref = layoutFilename_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          layoutFilename_ = s;
        }
        return s;
      }
    }
    /**
     * <code>optional string layout_filename = 2;</code>
     */
    public com.google.protobuf.ByteString
        getLayoutFilenameBytes() {
      java.lang.Object ref = layoutFilename_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        layoutFilename_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int DATA_FIELD_NUMBER = 3;
    private com.google.protobuf.ByteString data_;
    /**
     * <code>optional bytes data = 3;</code>
     */
    public boolean hasData() {
      return ((bitField0_ & 0x00000004) == 0x00000004);
    }
    /**
     * <code>optional bytes data = 3;</code>
     */
    public com.google.protobuf.ByteString getData() {
      return data_;
    }

    private void initFields() {
      elementId_ = "";
      layoutFilename_ = "";
      data_ = com.google.protobuf.ByteString.EMPTY;
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeBytes(1, getElementIdBytes());
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeBytes(2, getLayoutFilenameBytes());
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        output.writeBytes(3, data_);
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(1, getElementIdBytes());
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(2, getLayoutFilenameBytes());
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(3, data_);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_CustomHudElement_Create parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_CustomHudElement_Create parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_CustomHudElement_Create parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_CustomHudElement_Create parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_CustomHudElement_Create parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_CustomHudElement_Create parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_CustomHudElement_Create parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_CustomHudElement_Create parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_CustomHudElement_Create parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_CustomHudElement_Create parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_CustomHudElement_Create prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code CDOTAUserMsg_CustomHudElement_Create}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:CDOTAUserMsg_CustomHudElement_Create)
        skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_CustomHudElement_CreateOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return skadistats.clarity.wire.common.proto.DotaUserMessages.internal_static_CDOTAUserMsg_CustomHudElement_Create_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return skadistats.clarity.wire.common.proto.DotaUserMessages.internal_static_CDOTAUserMsg_CustomHudElement_Create_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_CustomHudElement_Create.class, skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_CustomHudElement_Create.Builder.class);
      }

      // Construct using skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_CustomHudElement_Create.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        elementId_ = "";
        bitField0_ = (bitField0_ & ~0x00000001);
        layoutFilename_ = "";
        bitField0_ = (bitField0_ & ~0x00000002);
        data_ = com.google.protobuf.ByteString.EMPTY;
        bitField0_ = (bitField0_ & ~0x00000004);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return skadistats.clarity.wire.common.proto.DotaUserMessages.internal_static_CDOTAUserMsg_CustomHudElement_Create_descriptor;
      }

      public skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_CustomHudElement_Create getDefaultInstanceForType() {
        return skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_CustomHudElement_Create.getDefaultInstance();
      }

      public skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_CustomHudElement_Create build() {
        skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_CustomHudElement_Create result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_CustomHudElement_Create buildPartial() {
        skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_CustomHudElement_Create result = new skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_CustomHudElement_Create(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.elementId_ = elementId_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.layoutFilename_ = layoutFilename_;
        if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
          to_bitField0_ |= 0x00000004;
        }
        result.data_ = data_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_CustomHudElement_Create) {
          return mergeFrom((skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_CustomHudElement_Create)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_CustomHudElement_Create other) {
        if (other == skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_CustomHudElement_Create.getDefaultInstance()) return this;
        if (other.hasElementId()) {
          bitField0_ |= 0x00000001;
          elementId_ = other.elementId_;
          onChanged();
        }
        if (other.hasLayoutFilename()) {
          bitField0_ |= 0x00000002;
          layoutFilename_ = other.layoutFilename_;
          onChanged();
        }
        if (other.hasData()) {
          setData(other.getData());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_CustomHudElement_Create parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_CustomHudElement_Create) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private java.lang.Object elementId_ = "";
      /**
       * <code>optional string element_id = 1;</code>
       */
      public boolean hasElementId() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>optional string element_id = 1;</code>
       */
      public java.lang.String getElementId() {
        java.lang.Object ref = elementId_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          if (bs.isValidUtf8()) {
            elementId_ = s;
          }
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>optional string element_id = 1;</code>
       */
      public com.google.protobuf.ByteString
          getElementIdBytes() {
        java.lang.Object ref = elementId_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          elementId_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>optional string element_id = 1;</code>
       */
      public Builder setElementId(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000001;
        elementId_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional string element_id = 1;</code>
       */
      public Builder clearElementId() {
        bitField0_ = (bitField0_ & ~0x00000001);
        elementId_ = getDefaultInstance().getElementId();
        onChanged();
        return this;
      }
      /**
       * <code>optional string element_id = 1;</code>
       */
      public Builder setElementIdBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000001;
        elementId_ = value;
        onChanged();
        return this;
      }

      private java.lang.Object layoutFilename_ = "";
      /**
       * <code>optional string layout_filename = 2;</code>
       */
      public boolean hasLayoutFilename() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>optional string layout_filename = 2;</code>
       */
      public java.lang.String getLayoutFilename() {
        java.lang.Object ref = layoutFilename_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          if (bs.isValidUtf8()) {
            layoutFilename_ = s;
          }
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>optional string layout_filename = 2;</code>
       */
      public com.google.protobuf.ByteString
          getLayoutFilenameBytes() {
        java.lang.Object ref = layoutFilename_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          layoutFilename_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>optional string layout_filename = 2;</code>
       */
      public Builder setLayoutFilename(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000002;
        layoutFilename_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional string layout_filename = 2;</code>
       */
      public Builder clearLayoutFilename() {
        bitField0_ = (bitField0_ & ~0x00000002);
        layoutFilename_ = getDefaultInstance().getLayoutFilename();
        onChanged();
        return this;
      }
      /**
       * <code>optional string layout_filename = 2;</code>
       */
      public Builder setLayoutFilenameBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000002;
        layoutFilename_ = value;
        onChanged();
        return this;
      }

      private com.google.protobuf.ByteString data_ = com.google.protobuf.ByteString.EMPTY;
      /**
       * <code>optional bytes data = 3;</code>
       */
      public boolean hasData() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }
      /**
       * <code>optional bytes data = 3;</code>
       */
      public com.google.protobuf.ByteString getData() {
        return data_;
      }
      /**
       * <code>optional bytes data = 3;</code>
       */
      public Builder setData(com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000004;
        data_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional bytes data = 3;</code>
       */
      public Builder clearData() {
        bitField0_ = (bitField0_ & ~0x00000004);
        data_ = getDefaultInstance().getData();
        onChanged();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:CDOTAUserMsg_CustomHudElement_Create)
    }

    static {
      defaultInstance = new CDOTAUserMsg_CustomHudElement_Create(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:CDOTAUserMsg_CustomHudElement_Create)
  }

  public interface CDOTAUserMsg_CustomHudElement_ModifyOrBuilder extends
      // @@protoc_insertion_point(interface_extends:CDOTAUserMsg_CustomHudElement_Modify)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>optional string element_id = 1;</code>
     */
    boolean hasElementId();
    /**
     * <code>optional string element_id = 1;</code>
     */
    java.lang.String getElementId();
    /**
     * <code>optional string element_id = 1;</code>
     */
    com.google.protobuf.ByteString
        getElementIdBytes();

    /**
     * <code>optional bool modify_visible = 2;</code>
     */
    boolean hasModifyVisible();
    /**
     * <code>optional bool modify_visible = 2;</code>
     */
    boolean getModifyVisible();

    /**
     * <code>optional bytes data = 3;</code>
     */
    boolean hasData();
    /**
     * <code>optional bytes data = 3;</code>
     */
    com.google.protobuf.ByteString getData();
  }
  /**
   * Protobuf type {@code CDOTAUserMsg_CustomHudElement_Modify}
   */
  public static final class CDOTAUserMsg_CustomHudElement_Modify extends
      com.google.protobuf.GeneratedMessage implements
      // @@protoc_insertion_point(message_implements:CDOTAUserMsg_CustomHudElement_Modify)
      CDOTAUserMsg_CustomHudElement_ModifyOrBuilder {
    // Use CDOTAUserMsg_CustomHudElement_Modify.newBuilder() to construct.
    private CDOTAUserMsg_CustomHudElement_Modify(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private CDOTAUserMsg_CustomHudElement_Modify(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final CDOTAUserMsg_CustomHudElement_Modify defaultInstance;
    public static CDOTAUserMsg_CustomHudElement_Modify getDefaultInstance() {
      return defaultInstance;
    }

    public CDOTAUserMsg_CustomHudElement_Modify getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private CDOTAUserMsg_CustomHudElement_Modify(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 10: {
              com.google.protobuf.ByteString bs = input.readBytes();
              bitField0_ |= 0x00000001;
              elementId_ = bs;
              break;
            }
            case 16: {
              bitField0_ |= 0x00000002;
              modifyVisible_ = input.readBool();
              break;
            }
            case 26: {
              bitField0_ |= 0x00000004;
              data_ = input.readBytes();
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return skadistats.clarity.wire.common.proto.DotaUserMessages.internal_static_CDOTAUserMsg_CustomHudElement_Modify_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return skadistats.clarity.wire.common.proto.DotaUserMessages.internal_static_CDOTAUserMsg_CustomHudElement_Modify_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_CustomHudElement_Modify.class, skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_CustomHudElement_Modify.Builder.class);
    }

    public static com.google.protobuf.Parser<CDOTAUserMsg_CustomHudElement_Modify> PARSER =
        new com.google.protobuf.AbstractParser<CDOTAUserMsg_CustomHudElement_Modify>() {
      public CDOTAUserMsg_CustomHudElement_Modify parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new CDOTAUserMsg_CustomHudElement_Modify(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<CDOTAUserMsg_CustomHudElement_Modify> getParserForType() {
      return PARSER;
    }

    private int bitField0_;
    public static final int ELEMENT_ID_FIELD_NUMBER = 1;
    private java.lang.Object elementId_;
    /**
     * <code>optional string element_id = 1;</code>
     */
    public boolean hasElementId() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>optional string element_id = 1;</code>
     */
    public java.lang.String getElementId() {
      java.lang.Object ref = elementId_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          elementId_ = s;
        }
        return s;
      }
    }
    /**
     * <code>optional string element_id = 1;</code>
     */
    public com.google.protobuf.ByteString
        getElementIdBytes() {
      java.lang.Object ref = elementId_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        elementId_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int MODIFY_VISIBLE_FIELD_NUMBER = 2;
    private boolean modifyVisible_;
    /**
     * <code>optional bool modify_visible = 2;</code>
     */
    public boolean hasModifyVisible() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>optional bool modify_visible = 2;</code>
     */
    public boolean getModifyVisible() {
      return modifyVisible_;
    }

    public static final int DATA_FIELD_NUMBER = 3;
    private com.google.protobuf.ByteString data_;
    /**
     * <code>optional bytes data = 3;</code>
     */
    public boolean hasData() {
      return ((bitField0_ & 0x00000004) == 0x00000004);
    }
    /**
     * <code>optional bytes data = 3;</code>
     */
    public com.google.protobuf.ByteString getData() {
      return data_;
    }

    private void initFields() {
      elementId_ = "";
      modifyVisible_ = false;
      data_ = com.google.protobuf.ByteString.EMPTY;
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeBytes(1, getElementIdBytes());
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeBool(2, modifyVisible_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        output.writeBytes(3, data_);
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(1, getElementIdBytes());
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBoolSize(2, modifyVisible_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(3, data_);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_CustomHudElement_Modify parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_CustomHudElement_Modify parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_CustomHudElement_Modify parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_CustomHudElement_Modify parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_CustomHudElement_Modify parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_CustomHudElement_Modify parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_CustomHudElement_Modify parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_CustomHudElement_Modify parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_CustomHudElement_Modify parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_CustomHudElement_Modify parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_CustomHudElement_Modify prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code CDOTAUserMsg_CustomHudElement_Modify}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:CDOTAUserMsg_CustomHudElement_Modify)
        skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_CustomHudElement_ModifyOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return skadistats.clarity.wire.common.proto.DotaUserMessages.internal_static_CDOTAUserMsg_CustomHudElement_Modify_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return skadistats.clarity.wire.common.proto.DotaUserMessages.internal_static_CDOTAUserMsg_CustomHudElement_Modify_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_CustomHudElement_Modify.class, skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_CustomHudElement_Modify.Builder.class);
      }

      // Construct using skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_CustomHudElement_Modify.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        elementId_ = "";
        bitField0_ = (bitField0_ & ~0x00000001);
        modifyVisible_ = false;
        bitField0_ = (bitField0_ & ~0x00000002);
        data_ = com.google.protobuf.ByteString.EMPTY;
        bitField0_ = (bitField0_ & ~0x00000004);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return skadistats.clarity.wire.common.proto.DotaUserMessages.internal_static_CDOTAUserMsg_CustomHudElement_Modify_descriptor;
      }

      public skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_CustomHudElement_Modify getDefaultInstanceForType() {
        return skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_CustomHudElement_Modify.getDefaultInstance();
      }

      public skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_CustomHudElement_Modify build() {
        skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_CustomHudElement_Modify result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_CustomHudElement_Modify buildPartial() {
        skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_CustomHudElement_Modify result = new skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_CustomHudElement_Modify(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.elementId_ = elementId_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.modifyVisible_ = modifyVisible_;
        if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
          to_bitField0_ |= 0x00000004;
        }
        result.data_ = data_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_CustomHudElement_Modify) {
          return mergeFrom((skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_CustomHudElement_Modify)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_CustomHudElement_Modify other) {
        if (other == skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_CustomHudElement_Modify.getDefaultInstance()) return this;
        if (other.hasElementId()) {
          bitField0_ |= 0x00000001;
          elementId_ = other.elementId_;
          onChanged();
        }
        if (other.hasModifyVisible()) {
          setModifyVisible(other.getModifyVisible());
        }
        if (other.hasData()) {
          setData(other.getData());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_CustomHudElement_Modify parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_CustomHudElement_Modify) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private java.lang.Object elementId_ = "";
      /**
       * <code>optional string element_id = 1;</code>
       */
      public boolean hasElementId() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>optional string element_id = 1;</code>
       */
      public java.lang.String getElementId() {
        java.lang.Object ref = elementId_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          if (bs.isValidUtf8()) {
            elementId_ = s;
          }
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>optional string element_id = 1;</code>
       */
      public com.google.protobuf.ByteString
          getElementIdBytes() {
        java.lang.Object ref = elementId_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          elementId_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>optional string element_id = 1;</code>
       */
      public Builder setElementId(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000001;
        elementId_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional string element_id = 1;</code>
       */
      public Builder clearElementId() {
        bitField0_ = (bitField0_ & ~0x00000001);
        elementId_ = getDefaultInstance().getElementId();
        onChanged();
        return this;
      }
      /**
       * <code>optional string element_id = 1;</code>
       */
      public Builder setElementIdBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000001;
        elementId_ = value;
        onChanged();
        return this;
      }

      private boolean modifyVisible_ ;
      /**
       * <code>optional bool modify_visible = 2;</code>
       */
      public boolean hasModifyVisible() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>optional bool modify_visible = 2;</code>
       */
      public boolean getModifyVisible() {
        return modifyVisible_;
      }
      /**
       * <code>optional bool modify_visible = 2;</code>
       */
      public Builder setModifyVisible(boolean value) {
        bitField0_ |= 0x00000002;
        modifyVisible_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional bool modify_visible = 2;</code>
       */
      public Builder clearModifyVisible() {
        bitField0_ = (bitField0_ & ~0x00000002);
        modifyVisible_ = false;
        onChanged();
        return this;
      }

      private com.google.protobuf.ByteString data_ = com.google.protobuf.ByteString.EMPTY;
      /**
       * <code>optional bytes data = 3;</code>
       */
      public boolean hasData() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }
      /**
       * <code>optional bytes data = 3;</code>
       */
      public com.google.protobuf.ByteString getData() {
        return data_;
      }
      /**
       * <code>optional bytes data = 3;</code>
       */
      public Builder setData(com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000004;
        data_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional bytes data = 3;</code>
       */
      public Builder clearData() {
        bitField0_ = (bitField0_ & ~0x00000004);
        data_ = getDefaultInstance().getData();
        onChanged();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:CDOTAUserMsg_CustomHudElement_Modify)
    }

    static {
      defaultInstance = new CDOTAUserMsg_CustomHudElement_Modify(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:CDOTAUserMsg_CustomHudElement_Modify)
  }

  public interface CDOTAUserMsg_CustomHudElement_DestroyOrBuilder extends
      // @@protoc_insertion_point(interface_extends:CDOTAUserMsg_CustomHudElement_Destroy)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>optional string element_id = 1;</code>
     */
    boolean hasElementId();
    /**
     * <code>optional string element_id = 1;</code>
     */
    java.lang.String getElementId();
    /**
     * <code>optional string element_id = 1;</code>
     */
    com.google.protobuf.ByteString
        getElementIdBytes();
  }
  /**
   * Protobuf type {@code CDOTAUserMsg_CustomHudElement_Destroy}
   */
  public static final class CDOTAUserMsg_CustomHudElement_Destroy extends
      com.google.protobuf.GeneratedMessage implements
      // @@protoc_insertion_point(message_implements:CDOTAUserMsg_CustomHudElement_Destroy)
      CDOTAUserMsg_CustomHudElement_DestroyOrBuilder {
    // Use CDOTAUserMsg_CustomHudElement_Destroy.newBuilder() to construct.
    private CDOTAUserMsg_CustomHudElement_Destroy(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private CDOTAUserMsg_CustomHudElement_Destroy(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final CDOTAUserMsg_CustomHudElement_Destroy defaultInstance;
    public static CDOTAUserMsg_CustomHudElement_Destroy getDefaultInstance() {
      return defaultInstance;
    }

    public CDOTAUserMsg_CustomHudElement_Destroy getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private CDOTAUserMsg_CustomHudElement_Destroy(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 10: {
              com.google.protobuf.ByteString bs = input.readBytes();
              bitField0_ |= 0x00000001;
              elementId_ = bs;
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return skadistats.clarity.wire.common.proto.DotaUserMessages.internal_static_CDOTAUserMsg_CustomHudElement_Destroy_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return skadistats.clarity.wire.common.proto.DotaUserMessages.internal_static_CDOTAUserMsg_CustomHudElement_Destroy_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_CustomHudElement_Destroy.class, skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_CustomHudElement_Destroy.Builder.class);
    }

    public static com.google.protobuf.Parser<CDOTAUserMsg_CustomHudElement_Destroy> PARSER =
        new com.google.protobuf.AbstractParser<CDOTAUserMsg_CustomHudElement_Destroy>() {
      public CDOTAUserMsg_CustomHudElement_Destroy parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new CDOTAUserMsg_CustomHudElement_Destroy(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<CDOTAUserMsg_CustomHudElement_Destroy> getParserForType() {
      return PARSER;
    }

    private int bitField0_;
    public static final int ELEMENT_ID_FIELD_NUMBER = 1;
    private java.lang.Object elementId_;
    /**
     * <code>optional string element_id = 1;</code>
     */
    public boolean hasElementId() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>optional string element_id = 1;</code>
     */
    public java.lang.String getElementId() {
      java.lang.Object ref = elementId_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          elementId_ = s;
        }
        return s;
      }
    }
    /**
     * <code>optional string element_id = 1;</code>
     */
    public com.google.protobuf.ByteString
        getElementIdBytes() {
      java.lang.Object ref = elementId_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        elementId_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    private void initFields() {
      elementId_ = "";
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeBytes(1, getElementIdBytes());
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(1, getElementIdBytes());
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_CustomHudElement_Destroy parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_CustomHudElement_Destroy parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_CustomHudElement_Destroy parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_CustomHudElement_Destroy parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_CustomHudElement_Destroy parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_CustomHudElement_Destroy parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_CustomHudElement_Destroy parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_CustomHudElement_Destroy parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_CustomHudElement_Destroy parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_CustomHudElement_Destroy parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_CustomHudElement_Destroy prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code CDOTAUserMsg_CustomHudElement_Destroy}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:CDOTAUserMsg_CustomHudElement_Destroy)
        skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_CustomHudElement_DestroyOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return skadistats.clarity.wire.common.proto.DotaUserMessages.internal_static_CDOTAUserMsg_CustomHudElement_Destroy_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return skadistats.clarity.wire.common.proto.DotaUserMessages.internal_static_CDOTAUserMsg_CustomHudElement_Destroy_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_CustomHudElement_Destroy.class, skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_CustomHudElement_Destroy.Builder.class);
      }

      // Construct using skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_CustomHudElement_Destroy.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        elementId_ = "";
        bitField0_ = (bitField0_ & ~0x00000001);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return skadistats.clarity.wire.common.proto.DotaUserMessages.internal_static_CDOTAUserMsg_CustomHudElement_Destroy_descriptor;
      }

      public skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_CustomHudElement_Destroy getDefaultInstanceForType() {
        return skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_CustomHudElement_Destroy.getDefaultInstance();
      }

      public skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_CustomHudElement_Destroy build() {
        skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_CustomHudElement_Destroy result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_CustomHudElement_Destroy buildPartial() {
        skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_CustomHudElement_Destroy result = new skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_CustomHudElement_Destroy(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.elementId_ = elementId_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_CustomHudElement_Destroy) {
          return mergeFrom((skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_CustomHudElement_Destroy)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_CustomHudElement_Destroy other) {
        if (other == skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_CustomHudElement_Destroy.getDefaultInstance()) return this;
        if (other.hasElementId()) {
          bitField0_ |= 0x00000001;
          elementId_ = other.elementId_;
          onChanged();
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_CustomHudElement_Destroy parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_CustomHudElement_Destroy) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private java.lang.Object elementId_ = "";
      /**
       * <code>optional string element_id = 1;</code>
       */
      public boolean hasElementId() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>optional string element_id = 1;</code>
       */
      public java.lang.String getElementId() {
        java.lang.Object ref = elementId_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          if (bs.isValidUtf8()) {
            elementId_ = s;
          }
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>optional string element_id = 1;</code>
       */
      public com.google.protobuf.ByteString
          getElementIdBytes() {
        java.lang.Object ref = elementId_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          elementId_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>optional string element_id = 1;</code>
       */
      public Builder setElementId(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000001;
        elementId_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional string element_id = 1;</code>
       */
      public Builder clearElementId() {
        bitField0_ = (bitField0_ & ~0x00000001);
        elementId_ = getDefaultInstance().getElementId();
        onChanged();
        return this;
      }
      /**
       * <code>optional string element_id = 1;</code>
       */
      public Builder setElementIdBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000001;
        elementId_ = value;
        onChanged();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:CDOTAUserMsg_CustomHudElement_Destroy)
    }

    static {
      defaultInstance = new CDOTAUserMsg_CustomHudElement_Destroy(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:CDOTAUserMsg_CustomHudElement_Destroy)
  }

  public interface CDOTAUserMsg_CompendiumStatePlayerOrBuilder extends
      // @@protoc_insertion_point(interface_extends:CDOTAUserMsg_CompendiumStatePlayer)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>optional uint32 player_id = 1;</code>
     */
    boolean hasPlayerId();
    /**
     * <code>optional uint32 player_id = 1;</code>
     */
    int getPlayerId();

    /**
     * <code>optional uint32 level = 2;</code>
     */
    boolean hasLevel();
    /**
     * <code>optional uint32 level = 2;</code>
     */
    int getLevel();
  }
  /**
   * Protobuf type {@code CDOTAUserMsg_CompendiumStatePlayer}
   */
  public static final class CDOTAUserMsg_CompendiumStatePlayer extends
      com.google.protobuf.GeneratedMessage implements
      // @@protoc_insertion_point(message_implements:CDOTAUserMsg_CompendiumStatePlayer)
      CDOTAUserMsg_CompendiumStatePlayerOrBuilder {
    // Use CDOTAUserMsg_CompendiumStatePlayer.newBuilder() to construct.
    private CDOTAUserMsg_CompendiumStatePlayer(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private CDOTAUserMsg_CompendiumStatePlayer(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final CDOTAUserMsg_CompendiumStatePlayer defaultInstance;
    public static CDOTAUserMsg_CompendiumStatePlayer getDefaultInstance() {
      return defaultInstance;
    }

    public CDOTAUserMsg_CompendiumStatePlayer getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private CDOTAUserMsg_CompendiumStatePlayer(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 8: {
              bitField0_ |= 0x00000001;
              playerId_ = input.readUInt32();
              break;
            }
            case 16: {
              bitField0_ |= 0x00000002;
              level_ = input.readUInt32();
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return skadistats.clarity.wire.common.proto.DotaUserMessages.internal_static_CDOTAUserMsg_CompendiumStatePlayer_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return skadistats.clarity.wire.common.proto.DotaUserMessages.internal_static_CDOTAUserMsg_CompendiumStatePlayer_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_CompendiumStatePlayer.class, skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_CompendiumStatePlayer.Builder.class);
    }

    public static com.google.protobuf.Parser<CDOTAUserMsg_CompendiumStatePlayer> PARSER =
        new com.google.protobuf.AbstractParser<CDOTAUserMsg_CompendiumStatePlayer>() {
      public CDOTAUserMsg_CompendiumStatePlayer parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new CDOTAUserMsg_CompendiumStatePlayer(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<CDOTAUserMsg_CompendiumStatePlayer> getParserForType() {
      return PARSER;
    }

    private int bitField0_;
    public static final int PLAYER_ID_FIELD_NUMBER = 1;
    private int playerId_;
    /**
     * <code>optional uint32 player_id = 1;</code>
     */
    public boolean hasPlayerId() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>optional uint32 player_id = 1;</code>
     */
    public int getPlayerId() {
      return playerId_;
    }

    public static final int LEVEL_FIELD_NUMBER = 2;
    private int level_;
    /**
     * <code>optional uint32 level = 2;</code>
     */
    public boolean hasLevel() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>optional uint32 level = 2;</code>
     */
    public int getLevel() {
      return level_;
    }

    private void initFields() {
      playerId_ = 0;
      level_ = 0;
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeUInt32(1, playerId_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeUInt32(2, level_);
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(1, playerId_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(2, level_);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_CompendiumStatePlayer parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_CompendiumStatePlayer parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_CompendiumStatePlayer parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_CompendiumStatePlayer parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_CompendiumStatePlayer parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_CompendiumStatePlayer parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_CompendiumStatePlayer parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_CompendiumStatePlayer parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_CompendiumStatePlayer parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_CompendiumStatePlayer parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_CompendiumStatePlayer prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code CDOTAUserMsg_CompendiumStatePlayer}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:CDOTAUserMsg_CompendiumStatePlayer)
        skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_CompendiumStatePlayerOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return skadistats.clarity.wire.common.proto.DotaUserMessages.internal_static_CDOTAUserMsg_CompendiumStatePlayer_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return skadistats.clarity.wire.common.proto.DotaUserMessages.internal_static_CDOTAUserMsg_CompendiumStatePlayer_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_CompendiumStatePlayer.class, skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_CompendiumStatePlayer.Builder.class);
      }

      // Construct using skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_CompendiumStatePlayer.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        playerId_ = 0;
        bitField0_ = (bitField0_ & ~0x00000001);
        level_ = 0;
        bitField0_ = (bitField0_ & ~0x00000002);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return skadistats.clarity.wire.common.proto.DotaUserMessages.internal_static_CDOTAUserMsg_CompendiumStatePlayer_descriptor;
      }

      public skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_CompendiumStatePlayer getDefaultInstanceForType() {
        return skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_CompendiumStatePlayer.getDefaultInstance();
      }

      public skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_CompendiumStatePlayer build() {
        skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_CompendiumStatePlayer result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_CompendiumStatePlayer buildPartial() {
        skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_CompendiumStatePlayer result = new skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_CompendiumStatePlayer(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.playerId_ = playerId_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.level_ = level_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_CompendiumStatePlayer) {
          return mergeFrom((skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_CompendiumStatePlayer)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_CompendiumStatePlayer other) {
        if (other == skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_CompendiumStatePlayer.getDefaultInstance()) return this;
        if (other.hasPlayerId()) {
          setPlayerId(other.getPlayerId());
        }
        if (other.hasLevel()) {
          setLevel(other.getLevel());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_CompendiumStatePlayer parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_CompendiumStatePlayer) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private int playerId_ ;
      /**
       * <code>optional uint32 player_id = 1;</code>
       */
      public boolean hasPlayerId() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>optional uint32 player_id = 1;</code>
       */
      public int getPlayerId() {
        return playerId_;
      }
      /**
       * <code>optional uint32 player_id = 1;</code>
       */
      public Builder setPlayerId(int value) {
        bitField0_ |= 0x00000001;
        playerId_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional uint32 player_id = 1;</code>
       */
      public Builder clearPlayerId() {
        bitField0_ = (bitField0_ & ~0x00000001);
        playerId_ = 0;
        onChanged();
        return this;
      }

      private int level_ ;
      /**
       * <code>optional uint32 level = 2;</code>
       */
      public boolean hasLevel() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>optional uint32 level = 2;</code>
       */
      public int getLevel() {
        return level_;
      }
      /**
       * <code>optional uint32 level = 2;</code>
       */
      public Builder setLevel(int value) {
        bitField0_ |= 0x00000002;
        level_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional uint32 level = 2;</code>
       */
      public Builder clearLevel() {
        bitField0_ = (bitField0_ & ~0x00000002);
        level_ = 0;
        onChanged();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:CDOTAUserMsg_CompendiumStatePlayer)
    }

    static {
      defaultInstance = new CDOTAUserMsg_CompendiumStatePlayer(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:CDOTAUserMsg_CompendiumStatePlayer)
  }

  public interface CDOTAUserMsg_CompendiumStateOrBuilder extends
      // @@protoc_insertion_point(interface_extends:CDOTAUserMsg_CompendiumState)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>repeated .CDOTAUserMsg_CompendiumStatePlayer compendium_players = 1;</code>
     */
    java.util.List<skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_CompendiumStatePlayer> 
        getCompendiumPlayersList();
    /**
     * <code>repeated .CDOTAUserMsg_CompendiumStatePlayer compendium_players = 1;</code>
     */
    skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_CompendiumStatePlayer getCompendiumPlayers(int index);
    /**
     * <code>repeated .CDOTAUserMsg_CompendiumStatePlayer compendium_players = 1;</code>
     */
    int getCompendiumPlayersCount();
    /**
     * <code>repeated .CDOTAUserMsg_CompendiumStatePlayer compendium_players = 1;</code>
     */
    java.util.List<? extends skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_CompendiumStatePlayerOrBuilder> 
        getCompendiumPlayersOrBuilderList();
    /**
     * <code>repeated .CDOTAUserMsg_CompendiumStatePlayer compendium_players = 1;</code>
     */
    skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_CompendiumStatePlayerOrBuilder getCompendiumPlayersOrBuilder(
        int index);
  }
  /**
   * Protobuf type {@code CDOTAUserMsg_CompendiumState}
   */
  public static final class CDOTAUserMsg_CompendiumState extends
      com.google.protobuf.GeneratedMessage implements
      // @@protoc_insertion_point(message_implements:CDOTAUserMsg_CompendiumState)
      CDOTAUserMsg_CompendiumStateOrBuilder {
    // Use CDOTAUserMsg_CompendiumState.newBuilder() to construct.
    private CDOTAUserMsg_CompendiumState(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private CDOTAUserMsg_CompendiumState(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final CDOTAUserMsg_CompendiumState defaultInstance;
    public static CDOTAUserMsg_CompendiumState getDefaultInstance() {
      return defaultInstance;
    }

    public CDOTAUserMsg_CompendiumState getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private CDOTAUserMsg_CompendiumState(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 10: {
              if (!((mutable_bitField0_ & 0x00000001) == 0x00000001)) {
                compendiumPlayers_ = new java.util.ArrayList<skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_CompendiumStatePlayer>();
                mutable_bitField0_ |= 0x00000001;
              }
              compendiumPlayers_.add(input.readMessage(skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_CompendiumStatePlayer.PARSER, extensionRegistry));
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        if (((mutable_bitField0_ & 0x00000001) == 0x00000001)) {
          compendiumPlayers_ = java.util.Collections.unmodifiableList(compendiumPlayers_);
        }
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return skadistats.clarity.wire.common.proto.DotaUserMessages.internal_static_CDOTAUserMsg_CompendiumState_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return skadistats.clarity.wire.common.proto.DotaUserMessages.internal_static_CDOTAUserMsg_CompendiumState_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_CompendiumState.class, skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_CompendiumState.Builder.class);
    }

    public static com.google.protobuf.Parser<CDOTAUserMsg_CompendiumState> PARSER =
        new com.google.protobuf.AbstractParser<CDOTAUserMsg_CompendiumState>() {
      public CDOTAUserMsg_CompendiumState parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new CDOTAUserMsg_CompendiumState(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<CDOTAUserMsg_CompendiumState> getParserForType() {
      return PARSER;
    }

    public static final int COMPENDIUM_PLAYERS_FIELD_NUMBER = 1;
    private java.util.List<skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_CompendiumStatePlayer> compendiumPlayers_;
    /**
     * <code>repeated .CDOTAUserMsg_CompendiumStatePlayer compendium_players = 1;</code>
     */
    public java.util.List<skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_CompendiumStatePlayer> getCompendiumPlayersList() {
      return compendiumPlayers_;
    }
    /**
     * <code>repeated .CDOTAUserMsg_CompendiumStatePlayer compendium_players = 1;</code>
     */
    public java.util.List<? extends skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_CompendiumStatePlayerOrBuilder> 
        getCompendiumPlayersOrBuilderList() {
      return compendiumPlayers_;
    }
    /**
     * <code>repeated .CDOTAUserMsg_CompendiumStatePlayer compendium_players = 1;</code>
     */
    public int getCompendiumPlayersCount() {
      return compendiumPlayers_.size();
    }
    /**
     * <code>repeated .CDOTAUserMsg_CompendiumStatePlayer compendium_players = 1;</code>
     */
    public skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_CompendiumStatePlayer getCompendiumPlayers(int index) {
      return compendiumPlayers_.get(index);
    }
    /**
     * <code>repeated .CDOTAUserMsg_CompendiumStatePlayer compendium_players = 1;</code>
     */
    public skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_CompendiumStatePlayerOrBuilder getCompendiumPlayersOrBuilder(
        int index) {
      return compendiumPlayers_.get(index);
    }

    private void initFields() {
      compendiumPlayers_ = java.util.Collections.emptyList();
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      for (int i = 0; i < compendiumPlayers_.size(); i++) {
        output.writeMessage(1, compendiumPlayers_.get(i));
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      for (int i = 0; i < compendiumPlayers_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(1, compendiumPlayers_.get(i));
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_CompendiumState parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_CompendiumState parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_CompendiumState parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_CompendiumState parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_CompendiumState parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_CompendiumState parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_CompendiumState parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_CompendiumState parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_CompendiumState parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_CompendiumState parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_CompendiumState prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code CDOTAUserMsg_CompendiumState}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:CDOTAUserMsg_CompendiumState)
        skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_CompendiumStateOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return skadistats.clarity.wire.common.proto.DotaUserMessages.internal_static_CDOTAUserMsg_CompendiumState_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return skadistats.clarity.wire.common.proto.DotaUserMessages.internal_static_CDOTAUserMsg_CompendiumState_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_CompendiumState.class, skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_CompendiumState.Builder.class);
      }

      // Construct using skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_CompendiumState.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
          getCompendiumPlayersFieldBuilder();
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        if (compendiumPlayersBuilder_ == null) {
          compendiumPlayers_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000001);
        } else {
          compendiumPlayersBuilder_.clear();
        }
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return skadistats.clarity.wire.common.proto.DotaUserMessages.internal_static_CDOTAUserMsg_CompendiumState_descriptor;
      }

      public skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_CompendiumState getDefaultInstanceForType() {
        return skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_CompendiumState.getDefaultInstance();
      }

      public skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_CompendiumState build() {
        skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_CompendiumState result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_CompendiumState buildPartial() {
        skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_CompendiumState result = new skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_CompendiumState(this);
        int from_bitField0_ = bitField0_;
        if (compendiumPlayersBuilder_ == null) {
          if (((bitField0_ & 0x00000001) == 0x00000001)) {
            compendiumPlayers_ = java.util.Collections.unmodifiableList(compendiumPlayers_);
            bitField0_ = (bitField0_ & ~0x00000001);
          }
          result.compendiumPlayers_ = compendiumPlayers_;
        } else {
          result.compendiumPlayers_ = compendiumPlayersBuilder_.build();
        }
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_CompendiumState) {
          return mergeFrom((skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_CompendiumState)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_CompendiumState other) {
        if (other == skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_CompendiumState.getDefaultInstance()) return this;
        if (compendiumPlayersBuilder_ == null) {
          if (!other.compendiumPlayers_.isEmpty()) {
            if (compendiumPlayers_.isEmpty()) {
              compendiumPlayers_ = other.compendiumPlayers_;
              bitField0_ = (bitField0_ & ~0x00000001);
            } else {
              ensureCompendiumPlayersIsMutable();
              compendiumPlayers_.addAll(other.compendiumPlayers_);
            }
            onChanged();
          }
        } else {
          if (!other.compendiumPlayers_.isEmpty()) {
            if (compendiumPlayersBuilder_.isEmpty()) {
              compendiumPlayersBuilder_.dispose();
              compendiumPlayersBuilder_ = null;
              compendiumPlayers_ = other.compendiumPlayers_;
              bitField0_ = (bitField0_ & ~0x00000001);
              compendiumPlayersBuilder_ = 
                com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders ?
                   getCompendiumPlayersFieldBuilder() : null;
            } else {
              compendiumPlayersBuilder_.addAllMessages(other.compendiumPlayers_);
            }
          }
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_CompendiumState parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_CompendiumState) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private java.util.List<skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_CompendiumStatePlayer> compendiumPlayers_ =
        java.util.Collections.emptyList();
      private void ensureCompendiumPlayersIsMutable() {
        if (!((bitField0_ & 0x00000001) == 0x00000001)) {
          compendiumPlayers_ = new java.util.ArrayList<skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_CompendiumStatePlayer>(compendiumPlayers_);
          bitField0_ |= 0x00000001;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilder<
          skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_CompendiumStatePlayer, skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_CompendiumStatePlayer.Builder, skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_CompendiumStatePlayerOrBuilder> compendiumPlayersBuilder_;

      /**
       * <code>repeated .CDOTAUserMsg_CompendiumStatePlayer compendium_players = 1;</code>
       */
      public java.util.List<skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_CompendiumStatePlayer> getCompendiumPlayersList() {
        if (compendiumPlayersBuilder_ == null) {
          return java.util.Collections.unmodifiableList(compendiumPlayers_);
        } else {
          return compendiumPlayersBuilder_.getMessageList();
        }
      }
      /**
       * <code>repeated .CDOTAUserMsg_CompendiumStatePlayer compendium_players = 1;</code>
       */
      public int getCompendiumPlayersCount() {
        if (compendiumPlayersBuilder_ == null) {
          return compendiumPlayers_.size();
        } else {
          return compendiumPlayersBuilder_.getCount();
        }
      }
      /**
       * <code>repeated .CDOTAUserMsg_CompendiumStatePlayer compendium_players = 1;</code>
       */
      public skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_CompendiumStatePlayer getCompendiumPlayers(int index) {
        if (compendiumPlayersBuilder_ == null) {
          return compendiumPlayers_.get(index);
        } else {
          return compendiumPlayersBuilder_.getMessage(index);
        }
      }
      /**
       * <code>repeated .CDOTAUserMsg_CompendiumStatePlayer compendium_players = 1;</code>
       */
      public Builder setCompendiumPlayers(
          int index, skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_CompendiumStatePlayer value) {
        if (compendiumPlayersBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureCompendiumPlayersIsMutable();
          compendiumPlayers_.set(index, value);
          onChanged();
        } else {
          compendiumPlayersBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .CDOTAUserMsg_CompendiumStatePlayer compendium_players = 1;</code>
       */
      public Builder setCompendiumPlayers(
          int index, skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_CompendiumStatePlayer.Builder builderForValue) {
        if (compendiumPlayersBuilder_ == null) {
          ensureCompendiumPlayersIsMutable();
          compendiumPlayers_.set(index, builderForValue.build());
          onChanged();
        } else {
          compendiumPlayersBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .CDOTAUserMsg_CompendiumStatePlayer compendium_players = 1;</code>
       */
      public Builder addCompendiumPlayers(skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_CompendiumStatePlayer value) {
        if (compendiumPlayersBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureCompendiumPlayersIsMutable();
          compendiumPlayers_.add(value);
          onChanged();
        } else {
          compendiumPlayersBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <code>repeated .CDOTAUserMsg_CompendiumStatePlayer compendium_players = 1;</code>
       */
      public Builder addCompendiumPlayers(
          int index, skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_CompendiumStatePlayer value) {
        if (compendiumPlayersBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureCompendiumPlayersIsMutable();
          compendiumPlayers_.add(index, value);
          onChanged();
        } else {
          compendiumPlayersBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .CDOTAUserMsg_CompendiumStatePlayer compendium_players = 1;</code>
       */
      public Builder addCompendiumPlayers(
          skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_CompendiumStatePlayer.Builder builderForValue) {
        if (compendiumPlayersBuilder_ == null) {
          ensureCompendiumPlayersIsMutable();
          compendiumPlayers_.add(builderForValue.build());
          onChanged();
        } else {
          compendiumPlayersBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .CDOTAUserMsg_CompendiumStatePlayer compendium_players = 1;</code>
       */
      public Builder addCompendiumPlayers(
          int index, skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_CompendiumStatePlayer.Builder builderForValue) {
        if (compendiumPlayersBuilder_ == null) {
          ensureCompendiumPlayersIsMutable();
          compendiumPlayers_.add(index, builderForValue.build());
          onChanged();
        } else {
          compendiumPlayersBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .CDOTAUserMsg_CompendiumStatePlayer compendium_players = 1;</code>
       */
      public Builder addAllCompendiumPlayers(
          java.lang.Iterable<? extends skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_CompendiumStatePlayer> values) {
        if (compendiumPlayersBuilder_ == null) {
          ensureCompendiumPlayersIsMutable();
          com.google.protobuf.AbstractMessageLite.Builder.addAll(
              values, compendiumPlayers_);
          onChanged();
        } else {
          compendiumPlayersBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <code>repeated .CDOTAUserMsg_CompendiumStatePlayer compendium_players = 1;</code>
       */
      public Builder clearCompendiumPlayers() {
        if (compendiumPlayersBuilder_ == null) {
          compendiumPlayers_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000001);
          onChanged();
        } else {
          compendiumPlayersBuilder_.clear();
        }
        return this;
      }
      /**
       * <code>repeated .CDOTAUserMsg_CompendiumStatePlayer compendium_players = 1;</code>
       */
      public Builder removeCompendiumPlayers(int index) {
        if (compendiumPlayersBuilder_ == null) {
          ensureCompendiumPlayersIsMutable();
          compendiumPlayers_.remove(index);
          onChanged();
        } else {
          compendiumPlayersBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <code>repeated .CDOTAUserMsg_CompendiumStatePlayer compendium_players = 1;</code>
       */
      public skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_CompendiumStatePlayer.Builder getCompendiumPlayersBuilder(
          int index) {
        return getCompendiumPlayersFieldBuilder().getBuilder(index);
      }
      /**
       * <code>repeated .CDOTAUserMsg_CompendiumStatePlayer compendium_players = 1;</code>
       */
      public skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_CompendiumStatePlayerOrBuilder getCompendiumPlayersOrBuilder(
          int index) {
        if (compendiumPlayersBuilder_ == null) {
          return compendiumPlayers_.get(index);  } else {
          return compendiumPlayersBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <code>repeated .CDOTAUserMsg_CompendiumStatePlayer compendium_players = 1;</code>
       */
      public java.util.List<? extends skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_CompendiumStatePlayerOrBuilder> 
           getCompendiumPlayersOrBuilderList() {
        if (compendiumPlayersBuilder_ != null) {
          return compendiumPlayersBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(compendiumPlayers_);
        }
      }
      /**
       * <code>repeated .CDOTAUserMsg_CompendiumStatePlayer compendium_players = 1;</code>
       */
      public skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_CompendiumStatePlayer.Builder addCompendiumPlayersBuilder() {
        return getCompendiumPlayersFieldBuilder().addBuilder(
            skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_CompendiumStatePlayer.getDefaultInstance());
      }
      /**
       * <code>repeated .CDOTAUserMsg_CompendiumStatePlayer compendium_players = 1;</code>
       */
      public skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_CompendiumStatePlayer.Builder addCompendiumPlayersBuilder(
          int index) {
        return getCompendiumPlayersFieldBuilder().addBuilder(
            index, skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_CompendiumStatePlayer.getDefaultInstance());
      }
      /**
       * <code>repeated .CDOTAUserMsg_CompendiumStatePlayer compendium_players = 1;</code>
       */
      public java.util.List<skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_CompendiumStatePlayer.Builder> 
           getCompendiumPlayersBuilderList() {
        return getCompendiumPlayersFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilder<
          skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_CompendiumStatePlayer, skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_CompendiumStatePlayer.Builder, skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_CompendiumStatePlayerOrBuilder> 
          getCompendiumPlayersFieldBuilder() {
        if (compendiumPlayersBuilder_ == null) {
          compendiumPlayersBuilder_ = new com.google.protobuf.RepeatedFieldBuilder<
              skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_CompendiumStatePlayer, skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_CompendiumStatePlayer.Builder, skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_CompendiumStatePlayerOrBuilder>(
                  compendiumPlayers_,
                  ((bitField0_ & 0x00000001) == 0x00000001),
                  getParentForChildren(),
                  isClean());
          compendiumPlayers_ = null;
        }
        return compendiumPlayersBuilder_;
      }

      // @@protoc_insertion_point(builder_scope:CDOTAUserMsg_CompendiumState)
    }

    static {
      defaultInstance = new CDOTAUserMsg_CompendiumState(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:CDOTAUserMsg_CompendiumState)
  }

  public interface CDOTAUserMsg_ProjectionAbilityOrBuilder extends
      // @@protoc_insertion_point(interface_extends:CDOTAUserMsg_ProjectionAbility)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>optional uint32 ability_id = 1;</code>
     */
    boolean hasAbilityId();
    /**
     * <code>optional uint32 ability_id = 1;</code>
     */
    int getAbilityId();

    /**
     * <code>optional int32 caster_ent_index = 2;</code>
     */
    boolean hasCasterEntIndex();
    /**
     * <code>optional int32 caster_ent_index = 2;</code>
     */
    int getCasterEntIndex();

    /**
     * <code>optional int32 caster_team = 3;</code>
     */
    boolean hasCasterTeam();
    /**
     * <code>optional int32 caster_team = 3;</code>
     */
    int getCasterTeam();

    /**
     * <code>optional bool channel_end = 4;</code>
     */
    boolean hasChannelEnd();
    /**
     * <code>optional bool channel_end = 4;</code>
     */
    boolean getChannelEnd();

    /**
     * <code>optional .CMsgVector origin = 5;</code>
     */
    boolean hasOrigin();
    /**
     * <code>optional .CMsgVector origin = 5;</code>
     */
    skadistats.clarity.wire.common.proto.NetworkBaseTypes.CMsgVector getOrigin();
    /**
     * <code>optional .CMsgVector origin = 5;</code>
     */
    skadistats.clarity.wire.common.proto.NetworkBaseTypes.CMsgVectorOrBuilder getOriginOrBuilder();

    /**
     * <code>optional bool track_caster_only = 6;</code>
     */
    boolean hasTrackCasterOnly();
    /**
     * <code>optional bool track_caster_only = 6;</code>
     */
    boolean getTrackCasterOnly();

    /**
     * <code>optional float end_time = 7;</code>
     */
    boolean hasEndTime();
    /**
     * <code>optional float end_time = 7;</code>
     */
    float getEndTime();

    /**
     * <code>optional int32 victim_ent_index = 8;</code>
     */
    boolean hasVictimEntIndex();
    /**
     * <code>optional int32 victim_ent_index = 8;</code>
     */
    int getVictimEntIndex();
  }
  /**
   * Protobuf type {@code CDOTAUserMsg_ProjectionAbility}
   */
  public static final class CDOTAUserMsg_ProjectionAbility extends
      com.google.protobuf.GeneratedMessage implements
      // @@protoc_insertion_point(message_implements:CDOTAUserMsg_ProjectionAbility)
      CDOTAUserMsg_ProjectionAbilityOrBuilder {
    // Use CDOTAUserMsg_ProjectionAbility.newBuilder() to construct.
    private CDOTAUserMsg_ProjectionAbility(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private CDOTAUserMsg_ProjectionAbility(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final CDOTAUserMsg_ProjectionAbility defaultInstance;
    public static CDOTAUserMsg_ProjectionAbility getDefaultInstance() {
      return defaultInstance;
    }

    public CDOTAUserMsg_ProjectionAbility getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private CDOTAUserMsg_ProjectionAbility(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 8: {
              bitField0_ |= 0x00000001;
              abilityId_ = input.readUInt32();
              break;
            }
            case 16: {
              bitField0_ |= 0x00000002;
              casterEntIndex_ = input.readInt32();
              break;
            }
            case 24: {
              bitField0_ |= 0x00000004;
              casterTeam_ = input.readInt32();
              break;
            }
            case 32: {
              bitField0_ |= 0x00000008;
              channelEnd_ = input.readBool();
              break;
            }
            case 42: {
              skadistats.clarity.wire.common.proto.NetworkBaseTypes.CMsgVector.Builder subBuilder = null;
              if (((bitField0_ & 0x00000010) == 0x00000010)) {
                subBuilder = origin_.toBuilder();
              }
              origin_ = input.readMessage(skadistats.clarity.wire.common.proto.NetworkBaseTypes.CMsgVector.PARSER, extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(origin_);
                origin_ = subBuilder.buildPartial();
              }
              bitField0_ |= 0x00000010;
              break;
            }
            case 48: {
              bitField0_ |= 0x00000020;
              trackCasterOnly_ = input.readBool();
              break;
            }
            case 61: {
              bitField0_ |= 0x00000040;
              endTime_ = input.readFloat();
              break;
            }
            case 64: {
              bitField0_ |= 0x00000080;
              victimEntIndex_ = input.readInt32();
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return skadistats.clarity.wire.common.proto.DotaUserMessages.internal_static_CDOTAUserMsg_ProjectionAbility_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return skadistats.clarity.wire.common.proto.DotaUserMessages.internal_static_CDOTAUserMsg_ProjectionAbility_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_ProjectionAbility.class, skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_ProjectionAbility.Builder.class);
    }

    public static com.google.protobuf.Parser<CDOTAUserMsg_ProjectionAbility> PARSER =
        new com.google.protobuf.AbstractParser<CDOTAUserMsg_ProjectionAbility>() {
      public CDOTAUserMsg_ProjectionAbility parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new CDOTAUserMsg_ProjectionAbility(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<CDOTAUserMsg_ProjectionAbility> getParserForType() {
      return PARSER;
    }

    private int bitField0_;
    public static final int ABILITY_ID_FIELD_NUMBER = 1;
    private int abilityId_;
    /**
     * <code>optional uint32 ability_id = 1;</code>
     */
    public boolean hasAbilityId() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>optional uint32 ability_id = 1;</code>
     */
    public int getAbilityId() {
      return abilityId_;
    }

    public static final int CASTER_ENT_INDEX_FIELD_NUMBER = 2;
    private int casterEntIndex_;
    /**
     * <code>optional int32 caster_ent_index = 2;</code>
     */
    public boolean hasCasterEntIndex() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>optional int32 caster_ent_index = 2;</code>
     */
    public int getCasterEntIndex() {
      return casterEntIndex_;
    }

    public static final int CASTER_TEAM_FIELD_NUMBER = 3;
    private int casterTeam_;
    /**
     * <code>optional int32 caster_team = 3;</code>
     */
    public boolean hasCasterTeam() {
      return ((bitField0_ & 0x00000004) == 0x00000004);
    }
    /**
     * <code>optional int32 caster_team = 3;</code>
     */
    public int getCasterTeam() {
      return casterTeam_;
    }

    public static final int CHANNEL_END_FIELD_NUMBER = 4;
    private boolean channelEnd_;
    /**
     * <code>optional bool channel_end = 4;</code>
     */
    public boolean hasChannelEnd() {
      return ((bitField0_ & 0x00000008) == 0x00000008);
    }
    /**
     * <code>optional bool channel_end = 4;</code>
     */
    public boolean getChannelEnd() {
      return channelEnd_;
    }

    public static final int ORIGIN_FIELD_NUMBER = 5;
    private skadistats.clarity.wire.common.proto.NetworkBaseTypes.CMsgVector origin_;
    /**
     * <code>optional .CMsgVector origin = 5;</code>
     */
    public boolean hasOrigin() {
      return ((bitField0_ & 0x00000010) == 0x00000010);
    }
    /**
     * <code>optional .CMsgVector origin = 5;</code>
     */
    public skadistats.clarity.wire.common.proto.NetworkBaseTypes.CMsgVector getOrigin() {
      return origin_;
    }
    /**
     * <code>optional .CMsgVector origin = 5;</code>
     */
    public skadistats.clarity.wire.common.proto.NetworkBaseTypes.CMsgVectorOrBuilder getOriginOrBuilder() {
      return origin_;
    }

    public static final int TRACK_CASTER_ONLY_FIELD_NUMBER = 6;
    private boolean trackCasterOnly_;
    /**
     * <code>optional bool track_caster_only = 6;</code>
     */
    public boolean hasTrackCasterOnly() {
      return ((bitField0_ & 0x00000020) == 0x00000020);
    }
    /**
     * <code>optional bool track_caster_only = 6;</code>
     */
    public boolean getTrackCasterOnly() {
      return trackCasterOnly_;
    }

    public static final int END_TIME_FIELD_NUMBER = 7;
    private float endTime_;
    /**
     * <code>optional float end_time = 7;</code>
     */
    public boolean hasEndTime() {
      return ((bitField0_ & 0x00000040) == 0x00000040);
    }
    /**
     * <code>optional float end_time = 7;</code>
     */
    public float getEndTime() {
      return endTime_;
    }

    public static final int VICTIM_ENT_INDEX_FIELD_NUMBER = 8;
    private int victimEntIndex_;
    /**
     * <code>optional int32 victim_ent_index = 8;</code>
     */
    public boolean hasVictimEntIndex() {
      return ((bitField0_ & 0x00000080) == 0x00000080);
    }
    /**
     * <code>optional int32 victim_ent_index = 8;</code>
     */
    public int getVictimEntIndex() {
      return victimEntIndex_;
    }

    private void initFields() {
      abilityId_ = 0;
      casterEntIndex_ = 0;
      casterTeam_ = 0;
      channelEnd_ = false;
      origin_ = skadistats.clarity.wire.common.proto.NetworkBaseTypes.CMsgVector.getDefaultInstance();
      trackCasterOnly_ = false;
      endTime_ = 0F;
      victimEntIndex_ = 0;
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeUInt32(1, abilityId_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeInt32(2, casterEntIndex_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        output.writeInt32(3, casterTeam_);
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        output.writeBool(4, channelEnd_);
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        output.writeMessage(5, origin_);
      }
      if (((bitField0_ & 0x00000020) == 0x00000020)) {
        output.writeBool(6, trackCasterOnly_);
      }
      if (((bitField0_ & 0x00000040) == 0x00000040)) {
        output.writeFloat(7, endTime_);
      }
      if (((bitField0_ & 0x00000080) == 0x00000080)) {
        output.writeInt32(8, victimEntIndex_);
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(1, abilityId_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(2, casterEntIndex_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(3, casterTeam_);
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBoolSize(4, channelEnd_);
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(5, origin_);
      }
      if (((bitField0_ & 0x00000020) == 0x00000020)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBoolSize(6, trackCasterOnly_);
      }
      if (((bitField0_ & 0x00000040) == 0x00000040)) {
        size += com.google.protobuf.CodedOutputStream
          .computeFloatSize(7, endTime_);
      }
      if (((bitField0_ & 0x00000080) == 0x00000080)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(8, victimEntIndex_);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_ProjectionAbility parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_ProjectionAbility parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_ProjectionAbility parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_ProjectionAbility parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_ProjectionAbility parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_ProjectionAbility parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_ProjectionAbility parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_ProjectionAbility parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_ProjectionAbility parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_ProjectionAbility parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_ProjectionAbility prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code CDOTAUserMsg_ProjectionAbility}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:CDOTAUserMsg_ProjectionAbility)
        skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_ProjectionAbilityOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return skadistats.clarity.wire.common.proto.DotaUserMessages.internal_static_CDOTAUserMsg_ProjectionAbility_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return skadistats.clarity.wire.common.proto.DotaUserMessages.internal_static_CDOTAUserMsg_ProjectionAbility_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_ProjectionAbility.class, skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_ProjectionAbility.Builder.class);
      }

      // Construct using skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_ProjectionAbility.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
          getOriginFieldBuilder();
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        abilityId_ = 0;
        bitField0_ = (bitField0_ & ~0x00000001);
        casterEntIndex_ = 0;
        bitField0_ = (bitField0_ & ~0x00000002);
        casterTeam_ = 0;
        bitField0_ = (bitField0_ & ~0x00000004);
        channelEnd_ = false;
        bitField0_ = (bitField0_ & ~0x00000008);
        if (originBuilder_ == null) {
          origin_ = skadistats.clarity.wire.common.proto.NetworkBaseTypes.CMsgVector.getDefaultInstance();
        } else {
          originBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000010);
        trackCasterOnly_ = false;
        bitField0_ = (bitField0_ & ~0x00000020);
        endTime_ = 0F;
        bitField0_ = (bitField0_ & ~0x00000040);
        victimEntIndex_ = 0;
        bitField0_ = (bitField0_ & ~0x00000080);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return skadistats.clarity.wire.common.proto.DotaUserMessages.internal_static_CDOTAUserMsg_ProjectionAbility_descriptor;
      }

      public skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_ProjectionAbility getDefaultInstanceForType() {
        return skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_ProjectionAbility.getDefaultInstance();
      }

      public skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_ProjectionAbility build() {
        skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_ProjectionAbility result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_ProjectionAbility buildPartial() {
        skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_ProjectionAbility result = new skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_ProjectionAbility(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.abilityId_ = abilityId_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.casterEntIndex_ = casterEntIndex_;
        if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
          to_bitField0_ |= 0x00000004;
        }
        result.casterTeam_ = casterTeam_;
        if (((from_bitField0_ & 0x00000008) == 0x00000008)) {
          to_bitField0_ |= 0x00000008;
        }
        result.channelEnd_ = channelEnd_;
        if (((from_bitField0_ & 0x00000010) == 0x00000010)) {
          to_bitField0_ |= 0x00000010;
        }
        if (originBuilder_ == null) {
          result.origin_ = origin_;
        } else {
          result.origin_ = originBuilder_.build();
        }
        if (((from_bitField0_ & 0x00000020) == 0x00000020)) {
          to_bitField0_ |= 0x00000020;
        }
        result.trackCasterOnly_ = trackCasterOnly_;
        if (((from_bitField0_ & 0x00000040) == 0x00000040)) {
          to_bitField0_ |= 0x00000040;
        }
        result.endTime_ = endTime_;
        if (((from_bitField0_ & 0x00000080) == 0x00000080)) {
          to_bitField0_ |= 0x00000080;
        }
        result.victimEntIndex_ = victimEntIndex_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_ProjectionAbility) {
          return mergeFrom((skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_ProjectionAbility)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_ProjectionAbility other) {
        if (other == skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_ProjectionAbility.getDefaultInstance()) return this;
        if (other.hasAbilityId()) {
          setAbilityId(other.getAbilityId());
        }
        if (other.hasCasterEntIndex()) {
          setCasterEntIndex(other.getCasterEntIndex());
        }
        if (other.hasCasterTeam()) {
          setCasterTeam(other.getCasterTeam());
        }
        if (other.hasChannelEnd()) {
          setChannelEnd(other.getChannelEnd());
        }
        if (other.hasOrigin()) {
          mergeOrigin(other.getOrigin());
        }
        if (other.hasTrackCasterOnly()) {
          setTrackCasterOnly(other.getTrackCasterOnly());
        }
        if (other.hasEndTime()) {
          setEndTime(other.getEndTime());
        }
        if (other.hasVictimEntIndex()) {
          setVictimEntIndex(other.getVictimEntIndex());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_ProjectionAbility parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_ProjectionAbility) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private int abilityId_ ;
      /**
       * <code>optional uint32 ability_id = 1;</code>
       */
      public boolean hasAbilityId() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>optional uint32 ability_id = 1;</code>
       */
      public int getAbilityId() {
        return abilityId_;
      }
      /**
       * <code>optional uint32 ability_id = 1;</code>
       */
      public Builder setAbilityId(int value) {
        bitField0_ |= 0x00000001;
        abilityId_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional uint32 ability_id = 1;</code>
       */
      public Builder clearAbilityId() {
        bitField0_ = (bitField0_ & ~0x00000001);
        abilityId_ = 0;
        onChanged();
        return this;
      }

      private int casterEntIndex_ ;
      /**
       * <code>optional int32 caster_ent_index = 2;</code>
       */
      public boolean hasCasterEntIndex() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>optional int32 caster_ent_index = 2;</code>
       */
      public int getCasterEntIndex() {
        return casterEntIndex_;
      }
      /**
       * <code>optional int32 caster_ent_index = 2;</code>
       */
      public Builder setCasterEntIndex(int value) {
        bitField0_ |= 0x00000002;
        casterEntIndex_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 caster_ent_index = 2;</code>
       */
      public Builder clearCasterEntIndex() {
        bitField0_ = (bitField0_ & ~0x00000002);
        casterEntIndex_ = 0;
        onChanged();
        return this;
      }

      private int casterTeam_ ;
      /**
       * <code>optional int32 caster_team = 3;</code>
       */
      public boolean hasCasterTeam() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }
      /**
       * <code>optional int32 caster_team = 3;</code>
       */
      public int getCasterTeam() {
        return casterTeam_;
      }
      /**
       * <code>optional int32 caster_team = 3;</code>
       */
      public Builder setCasterTeam(int value) {
        bitField0_ |= 0x00000004;
        casterTeam_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 caster_team = 3;</code>
       */
      public Builder clearCasterTeam() {
        bitField0_ = (bitField0_ & ~0x00000004);
        casterTeam_ = 0;
        onChanged();
        return this;
      }

      private boolean channelEnd_ ;
      /**
       * <code>optional bool channel_end = 4;</code>
       */
      public boolean hasChannelEnd() {
        return ((bitField0_ & 0x00000008) == 0x00000008);
      }
      /**
       * <code>optional bool channel_end = 4;</code>
       */
      public boolean getChannelEnd() {
        return channelEnd_;
      }
      /**
       * <code>optional bool channel_end = 4;</code>
       */
      public Builder setChannelEnd(boolean value) {
        bitField0_ |= 0x00000008;
        channelEnd_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional bool channel_end = 4;</code>
       */
      public Builder clearChannelEnd() {
        bitField0_ = (bitField0_ & ~0x00000008);
        channelEnd_ = false;
        onChanged();
        return this;
      }

      private skadistats.clarity.wire.common.proto.NetworkBaseTypes.CMsgVector origin_ = skadistats.clarity.wire.common.proto.NetworkBaseTypes.CMsgVector.getDefaultInstance();
      private com.google.protobuf.SingleFieldBuilder<
          skadistats.clarity.wire.common.proto.NetworkBaseTypes.CMsgVector, skadistats.clarity.wire.common.proto.NetworkBaseTypes.CMsgVector.Builder, skadistats.clarity.wire.common.proto.NetworkBaseTypes.CMsgVectorOrBuilder> originBuilder_;
      /**
       * <code>optional .CMsgVector origin = 5;</code>
       */
      public boolean hasOrigin() {
        return ((bitField0_ & 0x00000010) == 0x00000010);
      }
      /**
       * <code>optional .CMsgVector origin = 5;</code>
       */
      public skadistats.clarity.wire.common.proto.NetworkBaseTypes.CMsgVector getOrigin() {
        if (originBuilder_ == null) {
          return origin_;
        } else {
          return originBuilder_.getMessage();
        }
      }
      /**
       * <code>optional .CMsgVector origin = 5;</code>
       */
      public Builder setOrigin(skadistats.clarity.wire.common.proto.NetworkBaseTypes.CMsgVector value) {
        if (originBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          origin_ = value;
          onChanged();
        } else {
          originBuilder_.setMessage(value);
        }
        bitField0_ |= 0x00000010;
        return this;
      }
      /**
       * <code>optional .CMsgVector origin = 5;</code>
       */
      public Builder setOrigin(
          skadistats.clarity.wire.common.proto.NetworkBaseTypes.CMsgVector.Builder builderForValue) {
        if (originBuilder_ == null) {
          origin_ = builderForValue.build();
          onChanged();
        } else {
          originBuilder_.setMessage(builderForValue.build());
        }
        bitField0_ |= 0x00000010;
        return this;
      }
      /**
       * <code>optional .CMsgVector origin = 5;</code>
       */
      public Builder mergeOrigin(skadistats.clarity.wire.common.proto.NetworkBaseTypes.CMsgVector value) {
        if (originBuilder_ == null) {
          if (((bitField0_ & 0x00000010) == 0x00000010) &&
              origin_ != skadistats.clarity.wire.common.proto.NetworkBaseTypes.CMsgVector.getDefaultInstance()) {
            origin_ =
              skadistats.clarity.wire.common.proto.NetworkBaseTypes.CMsgVector.newBuilder(origin_).mergeFrom(value).buildPartial();
          } else {
            origin_ = value;
          }
          onChanged();
        } else {
          originBuilder_.mergeFrom(value);
        }
        bitField0_ |= 0x00000010;
        return this;
      }
      /**
       * <code>optional .CMsgVector origin = 5;</code>
       */
      public Builder clearOrigin() {
        if (originBuilder_ == null) {
          origin_ = skadistats.clarity.wire.common.proto.NetworkBaseTypes.CMsgVector.getDefaultInstance();
          onChanged();
        } else {
          originBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000010);
        return this;
      }
      /**
       * <code>optional .CMsgVector origin = 5;</code>
       */
      public skadistats.clarity.wire.common.proto.NetworkBaseTypes.CMsgVector.Builder getOriginBuilder() {
        bitField0_ |= 0x00000010;
        onChanged();
        return getOriginFieldBuilder().getBuilder();
      }
      /**
       * <code>optional .CMsgVector origin = 5;</code>
       */
      public skadistats.clarity.wire.common.proto.NetworkBaseTypes.CMsgVectorOrBuilder getOriginOrBuilder() {
        if (originBuilder_ != null) {
          return originBuilder_.getMessageOrBuilder();
        } else {
          return origin_;
        }
      }
      /**
       * <code>optional .CMsgVector origin = 5;</code>
       */
      private com.google.protobuf.SingleFieldBuilder<
          skadistats.clarity.wire.common.proto.NetworkBaseTypes.CMsgVector, skadistats.clarity.wire.common.proto.NetworkBaseTypes.CMsgVector.Builder, skadistats.clarity.wire.common.proto.NetworkBaseTypes.CMsgVectorOrBuilder> 
          getOriginFieldBuilder() {
        if (originBuilder_ == null) {
          originBuilder_ = new com.google.protobuf.SingleFieldBuilder<
              skadistats.clarity.wire.common.proto.NetworkBaseTypes.CMsgVector, skadistats.clarity.wire.common.proto.NetworkBaseTypes.CMsgVector.Builder, skadistats.clarity.wire.common.proto.NetworkBaseTypes.CMsgVectorOrBuilder>(
                  getOrigin(),
                  getParentForChildren(),
                  isClean());
          origin_ = null;
        }
        return originBuilder_;
      }

      private boolean trackCasterOnly_ ;
      /**
       * <code>optional bool track_caster_only = 6;</code>
       */
      public boolean hasTrackCasterOnly() {
        return ((bitField0_ & 0x00000020) == 0x00000020);
      }
      /**
       * <code>optional bool track_caster_only = 6;</code>
       */
      public boolean getTrackCasterOnly() {
        return trackCasterOnly_;
      }
      /**
       * <code>optional bool track_caster_only = 6;</code>
       */
      public Builder setTrackCasterOnly(boolean value) {
        bitField0_ |= 0x00000020;
        trackCasterOnly_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional bool track_caster_only = 6;</code>
       */
      public Builder clearTrackCasterOnly() {
        bitField0_ = (bitField0_ & ~0x00000020);
        trackCasterOnly_ = false;
        onChanged();
        return this;
      }

      private float endTime_ ;
      /**
       * <code>optional float end_time = 7;</code>
       */
      public boolean hasEndTime() {
        return ((bitField0_ & 0x00000040) == 0x00000040);
      }
      /**
       * <code>optional float end_time = 7;</code>
       */
      public float getEndTime() {
        return endTime_;
      }
      /**
       * <code>optional float end_time = 7;</code>
       */
      public Builder setEndTime(float value) {
        bitField0_ |= 0x00000040;
        endTime_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional float end_time = 7;</code>
       */
      public Builder clearEndTime() {
        bitField0_ = (bitField0_ & ~0x00000040);
        endTime_ = 0F;
        onChanged();
        return this;
      }

      private int victimEntIndex_ ;
      /**
       * <code>optional int32 victim_ent_index = 8;</code>
       */
      public boolean hasVictimEntIndex() {
        return ((bitField0_ & 0x00000080) == 0x00000080);
      }
      /**
       * <code>optional int32 victim_ent_index = 8;</code>
       */
      public int getVictimEntIndex() {
        return victimEntIndex_;
      }
      /**
       * <code>optional int32 victim_ent_index = 8;</code>
       */
      public Builder setVictimEntIndex(int value) {
        bitField0_ |= 0x00000080;
        victimEntIndex_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 victim_ent_index = 8;</code>
       */
      public Builder clearVictimEntIndex() {
        bitField0_ = (bitField0_ & ~0x00000080);
        victimEntIndex_ = 0;
        onChanged();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:CDOTAUserMsg_ProjectionAbility)
    }

    static {
      defaultInstance = new CDOTAUserMsg_ProjectionAbility(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:CDOTAUserMsg_ProjectionAbility)
  }

  public interface CDOTAUserMsg_ProjectionEventOrBuilder extends
      // @@protoc_insertion_point(interface_extends:CDOTAUserMsg_ProjectionEvent)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>optional .EProjectionEvent event_id = 1 [default = ePE_FirstBlood];</code>
     */
    boolean hasEventId();
    /**
     * <code>optional .EProjectionEvent event_id = 1 [default = ePE_FirstBlood];</code>
     */
    skadistats.clarity.wire.common.proto.DotaUserMessages.EProjectionEvent getEventId();

    /**
     * <code>optional uint32 team = 2;</code>
     */
    boolean hasTeam();
    /**
     * <code>optional uint32 team = 2;</code>
     */
    int getTeam();
  }
  /**
   * Protobuf type {@code CDOTAUserMsg_ProjectionEvent}
   */
  public static final class CDOTAUserMsg_ProjectionEvent extends
      com.google.protobuf.GeneratedMessage implements
      // @@protoc_insertion_point(message_implements:CDOTAUserMsg_ProjectionEvent)
      CDOTAUserMsg_ProjectionEventOrBuilder {
    // Use CDOTAUserMsg_ProjectionEvent.newBuilder() to construct.
    private CDOTAUserMsg_ProjectionEvent(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private CDOTAUserMsg_ProjectionEvent(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final CDOTAUserMsg_ProjectionEvent defaultInstance;
    public static CDOTAUserMsg_ProjectionEvent getDefaultInstance() {
      return defaultInstance;
    }

    public CDOTAUserMsg_ProjectionEvent getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private CDOTAUserMsg_ProjectionEvent(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 8: {
              int rawValue = input.readEnum();
              skadistats.clarity.wire.common.proto.DotaUserMessages.EProjectionEvent value = skadistats.clarity.wire.common.proto.DotaUserMessages.EProjectionEvent.valueOf(rawValue);
              if (value == null) {
                unknownFields.mergeVarintField(1, rawValue);
              } else {
                bitField0_ |= 0x00000001;
                eventId_ = value;
              }
              break;
            }
            case 16: {
              bitField0_ |= 0x00000002;
              team_ = input.readUInt32();
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return skadistats.clarity.wire.common.proto.DotaUserMessages.internal_static_CDOTAUserMsg_ProjectionEvent_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return skadistats.clarity.wire.common.proto.DotaUserMessages.internal_static_CDOTAUserMsg_ProjectionEvent_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_ProjectionEvent.class, skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_ProjectionEvent.Builder.class);
    }

    public static com.google.protobuf.Parser<CDOTAUserMsg_ProjectionEvent> PARSER =
        new com.google.protobuf.AbstractParser<CDOTAUserMsg_ProjectionEvent>() {
      public CDOTAUserMsg_ProjectionEvent parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new CDOTAUserMsg_ProjectionEvent(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<CDOTAUserMsg_ProjectionEvent> getParserForType() {
      return PARSER;
    }

    private int bitField0_;
    public static final int EVENT_ID_FIELD_NUMBER = 1;
    private skadistats.clarity.wire.common.proto.DotaUserMessages.EProjectionEvent eventId_;
    /**
     * <code>optional .EProjectionEvent event_id = 1 [default = ePE_FirstBlood];</code>
     */
    public boolean hasEventId() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>optional .EProjectionEvent event_id = 1 [default = ePE_FirstBlood];</code>
     */
    public skadistats.clarity.wire.common.proto.DotaUserMessages.EProjectionEvent getEventId() {
      return eventId_;
    }

    public static final int TEAM_FIELD_NUMBER = 2;
    private int team_;
    /**
     * <code>optional uint32 team = 2;</code>
     */
    public boolean hasTeam() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>optional uint32 team = 2;</code>
     */
    public int getTeam() {
      return team_;
    }

    private void initFields() {
      eventId_ = skadistats.clarity.wire.common.proto.DotaUserMessages.EProjectionEvent.ePE_FirstBlood;
      team_ = 0;
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeEnum(1, eventId_.getNumber());
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeUInt32(2, team_);
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeEnumSize(1, eventId_.getNumber());
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(2, team_);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_ProjectionEvent parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_ProjectionEvent parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_ProjectionEvent parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_ProjectionEvent parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_ProjectionEvent parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_ProjectionEvent parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_ProjectionEvent parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_ProjectionEvent parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_ProjectionEvent parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_ProjectionEvent parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_ProjectionEvent prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code CDOTAUserMsg_ProjectionEvent}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:CDOTAUserMsg_ProjectionEvent)
        skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_ProjectionEventOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return skadistats.clarity.wire.common.proto.DotaUserMessages.internal_static_CDOTAUserMsg_ProjectionEvent_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return skadistats.clarity.wire.common.proto.DotaUserMessages.internal_static_CDOTAUserMsg_ProjectionEvent_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_ProjectionEvent.class, skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_ProjectionEvent.Builder.class);
      }

      // Construct using skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_ProjectionEvent.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        eventId_ = skadistats.clarity.wire.common.proto.DotaUserMessages.EProjectionEvent.ePE_FirstBlood;
        bitField0_ = (bitField0_ & ~0x00000001);
        team_ = 0;
        bitField0_ = (bitField0_ & ~0x00000002);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return skadistats.clarity.wire.common.proto.DotaUserMessages.internal_static_CDOTAUserMsg_ProjectionEvent_descriptor;
      }

      public skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_ProjectionEvent getDefaultInstanceForType() {
        return skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_ProjectionEvent.getDefaultInstance();
      }

      public skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_ProjectionEvent build() {
        skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_ProjectionEvent result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_ProjectionEvent buildPartial() {
        skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_ProjectionEvent result = new skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_ProjectionEvent(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.eventId_ = eventId_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.team_ = team_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_ProjectionEvent) {
          return mergeFrom((skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_ProjectionEvent)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_ProjectionEvent other) {
        if (other == skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_ProjectionEvent.getDefaultInstance()) return this;
        if (other.hasEventId()) {
          setEventId(other.getEventId());
        }
        if (other.hasTeam()) {
          setTeam(other.getTeam());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_ProjectionEvent parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_ProjectionEvent) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private skadistats.clarity.wire.common.proto.DotaUserMessages.EProjectionEvent eventId_ = skadistats.clarity.wire.common.proto.DotaUserMessages.EProjectionEvent.ePE_FirstBlood;
      /**
       * <code>optional .EProjectionEvent event_id = 1 [default = ePE_FirstBlood];</code>
       */
      public boolean hasEventId() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>optional .EProjectionEvent event_id = 1 [default = ePE_FirstBlood];</code>
       */
      public skadistats.clarity.wire.common.proto.DotaUserMessages.EProjectionEvent getEventId() {
        return eventId_;
      }
      /**
       * <code>optional .EProjectionEvent event_id = 1 [default = ePE_FirstBlood];</code>
       */
      public Builder setEventId(skadistats.clarity.wire.common.proto.DotaUserMessages.EProjectionEvent value) {
        if (value == null) {
          throw new NullPointerException();
        }
        bitField0_ |= 0x00000001;
        eventId_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional .EProjectionEvent event_id = 1 [default = ePE_FirstBlood];</code>
       */
      public Builder clearEventId() {
        bitField0_ = (bitField0_ & ~0x00000001);
        eventId_ = skadistats.clarity.wire.common.proto.DotaUserMessages.EProjectionEvent.ePE_FirstBlood;
        onChanged();
        return this;
      }

      private int team_ ;
      /**
       * <code>optional uint32 team = 2;</code>
       */
      public boolean hasTeam() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>optional uint32 team = 2;</code>
       */
      public int getTeam() {
        return team_;
      }
      /**
       * <code>optional uint32 team = 2;</code>
       */
      public Builder setTeam(int value) {
        bitField0_ |= 0x00000002;
        team_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional uint32 team = 2;</code>
       */
      public Builder clearTeam() {
        bitField0_ = (bitField0_ & ~0x00000002);
        team_ = 0;
        onChanged();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:CDOTAUserMsg_ProjectionEvent)
    }

    static {
      defaultInstance = new CDOTAUserMsg_ProjectionEvent(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:CDOTAUserMsg_ProjectionEvent)
  }

  public interface CDOTAUserMsg_XPAlertOrBuilder extends
      // @@protoc_insertion_point(interface_extends:CDOTAUserMsg_XPAlert)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>optional uint32 player_id = 1;</code>
     */
    boolean hasPlayerId();
    /**
     * <code>optional uint32 player_id = 1;</code>
     */
    int getPlayerId();

    /**
     * <code>optional uint32 target_entindex = 2;</code>
     */
    boolean hasTargetEntindex();
    /**
     * <code>optional uint32 target_entindex = 2;</code>
     */
    int getTargetEntindex();
  }
  /**
   * Protobuf type {@code CDOTAUserMsg_XPAlert}
   */
  public static final class CDOTAUserMsg_XPAlert extends
      com.google.protobuf.GeneratedMessage implements
      // @@protoc_insertion_point(message_implements:CDOTAUserMsg_XPAlert)
      CDOTAUserMsg_XPAlertOrBuilder {
    // Use CDOTAUserMsg_XPAlert.newBuilder() to construct.
    private CDOTAUserMsg_XPAlert(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private CDOTAUserMsg_XPAlert(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final CDOTAUserMsg_XPAlert defaultInstance;
    public static CDOTAUserMsg_XPAlert getDefaultInstance() {
      return defaultInstance;
    }

    public CDOTAUserMsg_XPAlert getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private CDOTAUserMsg_XPAlert(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 8: {
              bitField0_ |= 0x00000001;
              playerId_ = input.readUInt32();
              break;
            }
            case 16: {
              bitField0_ |= 0x00000002;
              targetEntindex_ = input.readUInt32();
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return skadistats.clarity.wire.common.proto.DotaUserMessages.internal_static_CDOTAUserMsg_XPAlert_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return skadistats.clarity.wire.common.proto.DotaUserMessages.internal_static_CDOTAUserMsg_XPAlert_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_XPAlert.class, skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_XPAlert.Builder.class);
    }

    public static com.google.protobuf.Parser<CDOTAUserMsg_XPAlert> PARSER =
        new com.google.protobuf.AbstractParser<CDOTAUserMsg_XPAlert>() {
      public CDOTAUserMsg_XPAlert parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new CDOTAUserMsg_XPAlert(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<CDOTAUserMsg_XPAlert> getParserForType() {
      return PARSER;
    }

    private int bitField0_;
    public static final int PLAYER_ID_FIELD_NUMBER = 1;
    private int playerId_;
    /**
     * <code>optional uint32 player_id = 1;</code>
     */
    public boolean hasPlayerId() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>optional uint32 player_id = 1;</code>
     */
    public int getPlayerId() {
      return playerId_;
    }

    public static final int TARGET_ENTINDEX_FIELD_NUMBER = 2;
    private int targetEntindex_;
    /**
     * <code>optional uint32 target_entindex = 2;</code>
     */
    public boolean hasTargetEntindex() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>optional uint32 target_entindex = 2;</code>
     */
    public int getTargetEntindex() {
      return targetEntindex_;
    }

    private void initFields() {
      playerId_ = 0;
      targetEntindex_ = 0;
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeUInt32(1, playerId_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeUInt32(2, targetEntindex_);
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(1, playerId_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(2, targetEntindex_);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_XPAlert parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_XPAlert parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_XPAlert parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_XPAlert parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_XPAlert parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_XPAlert parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_XPAlert parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_XPAlert parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_XPAlert parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_XPAlert parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_XPAlert prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code CDOTAUserMsg_XPAlert}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:CDOTAUserMsg_XPAlert)
        skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_XPAlertOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return skadistats.clarity.wire.common.proto.DotaUserMessages.internal_static_CDOTAUserMsg_XPAlert_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return skadistats.clarity.wire.common.proto.DotaUserMessages.internal_static_CDOTAUserMsg_XPAlert_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_XPAlert.class, skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_XPAlert.Builder.class);
      }

      // Construct using skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_XPAlert.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        playerId_ = 0;
        bitField0_ = (bitField0_ & ~0x00000001);
        targetEntindex_ = 0;
        bitField0_ = (bitField0_ & ~0x00000002);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return skadistats.clarity.wire.common.proto.DotaUserMessages.internal_static_CDOTAUserMsg_XPAlert_descriptor;
      }

      public skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_XPAlert getDefaultInstanceForType() {
        return skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_XPAlert.getDefaultInstance();
      }

      public skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_XPAlert build() {
        skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_XPAlert result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_XPAlert buildPartial() {
        skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_XPAlert result = new skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_XPAlert(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.playerId_ = playerId_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.targetEntindex_ = targetEntindex_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_XPAlert) {
          return mergeFrom((skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_XPAlert)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_XPAlert other) {
        if (other == skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_XPAlert.getDefaultInstance()) return this;
        if (other.hasPlayerId()) {
          setPlayerId(other.getPlayerId());
        }
        if (other.hasTargetEntindex()) {
          setTargetEntindex(other.getTargetEntindex());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_XPAlert parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_XPAlert) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private int playerId_ ;
      /**
       * <code>optional uint32 player_id = 1;</code>
       */
      public boolean hasPlayerId() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>optional uint32 player_id = 1;</code>
       */
      public int getPlayerId() {
        return playerId_;
      }
      /**
       * <code>optional uint32 player_id = 1;</code>
       */
      public Builder setPlayerId(int value) {
        bitField0_ |= 0x00000001;
        playerId_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional uint32 player_id = 1;</code>
       */
      public Builder clearPlayerId() {
        bitField0_ = (bitField0_ & ~0x00000001);
        playerId_ = 0;
        onChanged();
        return this;
      }

      private int targetEntindex_ ;
      /**
       * <code>optional uint32 target_entindex = 2;</code>
       */
      public boolean hasTargetEntindex() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>optional uint32 target_entindex = 2;</code>
       */
      public int getTargetEntindex() {
        return targetEntindex_;
      }
      /**
       * <code>optional uint32 target_entindex = 2;</code>
       */
      public Builder setTargetEntindex(int value) {
        bitField0_ |= 0x00000002;
        targetEntindex_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional uint32 target_entindex = 2;</code>
       */
      public Builder clearTargetEntindex() {
        bitField0_ = (bitField0_ & ~0x00000002);
        targetEntindex_ = 0;
        onChanged();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:CDOTAUserMsg_XPAlert)
    }

    static {
      defaultInstance = new CDOTAUserMsg_XPAlert(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:CDOTAUserMsg_XPAlert)
  }

  public interface CDOTAUserMsg_QuestStatusOrBuilder extends
      // @@protoc_insertion_point(interface_extends:CDOTAUserMsg_QuestStatus)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>required uint32 player_id = 1;</code>
     */
    boolean hasPlayerId();
    /**
     * <code>required uint32 player_id = 1;</code>
     */
    int getPlayerId();

    /**
     * <code>optional uint32 quest_id = 2;</code>
     */
    boolean hasQuestId();
    /**
     * <code>optional uint32 quest_id = 2;</code>
     */
    int getQuestId();

    /**
     * <code>optional uint32 challenge_id = 3;</code>
     */
    boolean hasChallengeId();
    /**
     * <code>optional uint32 challenge_id = 3;</code>
     */
    int getChallengeId();

    /**
     * <code>optional uint32 progress = 4;</code>
     */
    boolean hasProgress();
    /**
     * <code>optional uint32 progress = 4;</code>
     */
    int getProgress();

    /**
     * <code>optional uint32 goal = 5;</code>
     */
    boolean hasGoal();
    /**
     * <code>optional uint32 goal = 5;</code>
     */
    int getGoal();

    /**
     * <code>optional uint32 query = 6;</code>
     */
    boolean hasQuery();
    /**
     * <code>optional uint32 query = 6;</code>
     */
    int getQuery();

    /**
     * <code>optional float fail_gametime = 7;</code>
     */
    boolean hasFailGametime();
    /**
     * <code>optional float fail_gametime = 7;</code>
     */
    float getFailGametime();

    /**
     * <code>optional uint32 item_id = 8;</code>
     */
    boolean hasItemId();
    /**
     * <code>optional uint32 item_id = 8;</code>
     */
    int getItemId();
  }
  /**
   * Protobuf type {@code CDOTAUserMsg_QuestStatus}
   */
  public static final class CDOTAUserMsg_QuestStatus extends
      com.google.protobuf.GeneratedMessage implements
      // @@protoc_insertion_point(message_implements:CDOTAUserMsg_QuestStatus)
      CDOTAUserMsg_QuestStatusOrBuilder {
    // Use CDOTAUserMsg_QuestStatus.newBuilder() to construct.
    private CDOTAUserMsg_QuestStatus(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private CDOTAUserMsg_QuestStatus(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final CDOTAUserMsg_QuestStatus defaultInstance;
    public static CDOTAUserMsg_QuestStatus getDefaultInstance() {
      return defaultInstance;
    }

    public CDOTAUserMsg_QuestStatus getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private CDOTAUserMsg_QuestStatus(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 8: {
              bitField0_ |= 0x00000001;
              playerId_ = input.readUInt32();
              break;
            }
            case 16: {
              bitField0_ |= 0x00000002;
              questId_ = input.readUInt32();
              break;
            }
            case 24: {
              bitField0_ |= 0x00000004;
              challengeId_ = input.readUInt32();
              break;
            }
            case 32: {
              bitField0_ |= 0x00000008;
              progress_ = input.readUInt32();
              break;
            }
            case 40: {
              bitField0_ |= 0x00000010;
              goal_ = input.readUInt32();
              break;
            }
            case 48: {
              bitField0_ |= 0x00000020;
              query_ = input.readUInt32();
              break;
            }
            case 61: {
              bitField0_ |= 0x00000040;
              failGametime_ = input.readFloat();
              break;
            }
            case 64: {
              bitField0_ |= 0x00000080;
              itemId_ = input.readUInt32();
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return skadistats.clarity.wire.common.proto.DotaUserMessages.internal_static_CDOTAUserMsg_QuestStatus_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return skadistats.clarity.wire.common.proto.DotaUserMessages.internal_static_CDOTAUserMsg_QuestStatus_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_QuestStatus.class, skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_QuestStatus.Builder.class);
    }

    public static com.google.protobuf.Parser<CDOTAUserMsg_QuestStatus> PARSER =
        new com.google.protobuf.AbstractParser<CDOTAUserMsg_QuestStatus>() {
      public CDOTAUserMsg_QuestStatus parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new CDOTAUserMsg_QuestStatus(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<CDOTAUserMsg_QuestStatus> getParserForType() {
      return PARSER;
    }

    private int bitField0_;
    public static final int PLAYER_ID_FIELD_NUMBER = 1;
    private int playerId_;
    /**
     * <code>required uint32 player_id = 1;</code>
     */
    public boolean hasPlayerId() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>required uint32 player_id = 1;</code>
     */
    public int getPlayerId() {
      return playerId_;
    }

    public static final int QUEST_ID_FIELD_NUMBER = 2;
    private int questId_;
    /**
     * <code>optional uint32 quest_id = 2;</code>
     */
    public boolean hasQuestId() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>optional uint32 quest_id = 2;</code>
     */
    public int getQuestId() {
      return questId_;
    }

    public static final int CHALLENGE_ID_FIELD_NUMBER = 3;
    private int challengeId_;
    /**
     * <code>optional uint32 challenge_id = 3;</code>
     */
    public boolean hasChallengeId() {
      return ((bitField0_ & 0x00000004) == 0x00000004);
    }
    /**
     * <code>optional uint32 challenge_id = 3;</code>
     */
    public int getChallengeId() {
      return challengeId_;
    }

    public static final int PROGRESS_FIELD_NUMBER = 4;
    private int progress_;
    /**
     * <code>optional uint32 progress = 4;</code>
     */
    public boolean hasProgress() {
      return ((bitField0_ & 0x00000008) == 0x00000008);
    }
    /**
     * <code>optional uint32 progress = 4;</code>
     */
    public int getProgress() {
      return progress_;
    }

    public static final int GOAL_FIELD_NUMBER = 5;
    private int goal_;
    /**
     * <code>optional uint32 goal = 5;</code>
     */
    public boolean hasGoal() {
      return ((bitField0_ & 0x00000010) == 0x00000010);
    }
    /**
     * <code>optional uint32 goal = 5;</code>
     */
    public int getGoal() {
      return goal_;
    }

    public static final int QUERY_FIELD_NUMBER = 6;
    private int query_;
    /**
     * <code>optional uint32 query = 6;</code>
     */
    public boolean hasQuery() {
      return ((bitField0_ & 0x00000020) == 0x00000020);
    }
    /**
     * <code>optional uint32 query = 6;</code>
     */
    public int getQuery() {
      return query_;
    }

    public static final int FAIL_GAMETIME_FIELD_NUMBER = 7;
    private float failGametime_;
    /**
     * <code>optional float fail_gametime = 7;</code>
     */
    public boolean hasFailGametime() {
      return ((bitField0_ & 0x00000040) == 0x00000040);
    }
    /**
     * <code>optional float fail_gametime = 7;</code>
     */
    public float getFailGametime() {
      return failGametime_;
    }

    public static final int ITEM_ID_FIELD_NUMBER = 8;
    private int itemId_;
    /**
     * <code>optional uint32 item_id = 8;</code>
     */
    public boolean hasItemId() {
      return ((bitField0_ & 0x00000080) == 0x00000080);
    }
    /**
     * <code>optional uint32 item_id = 8;</code>
     */
    public int getItemId() {
      return itemId_;
    }

    private void initFields() {
      playerId_ = 0;
      questId_ = 0;
      challengeId_ = 0;
      progress_ = 0;
      goal_ = 0;
      query_ = 0;
      failGametime_ = 0F;
      itemId_ = 0;
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      if (!hasPlayerId()) {
        memoizedIsInitialized = 0;
        return false;
      }
      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeUInt32(1, playerId_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeUInt32(2, questId_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        output.writeUInt32(3, challengeId_);
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        output.writeUInt32(4, progress_);
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        output.writeUInt32(5, goal_);
      }
      if (((bitField0_ & 0x00000020) == 0x00000020)) {
        output.writeUInt32(6, query_);
      }
      if (((bitField0_ & 0x00000040) == 0x00000040)) {
        output.writeFloat(7, failGametime_);
      }
      if (((bitField0_ & 0x00000080) == 0x00000080)) {
        output.writeUInt32(8, itemId_);
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(1, playerId_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(2, questId_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(3, challengeId_);
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(4, progress_);
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(5, goal_);
      }
      if (((bitField0_ & 0x00000020) == 0x00000020)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(6, query_);
      }
      if (((bitField0_ & 0x00000040) == 0x00000040)) {
        size += com.google.protobuf.CodedOutputStream
          .computeFloatSize(7, failGametime_);
      }
      if (((bitField0_ & 0x00000080) == 0x00000080)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(8, itemId_);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_QuestStatus parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_QuestStatus parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_QuestStatus parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_QuestStatus parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_QuestStatus parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_QuestStatus parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_QuestStatus parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_QuestStatus parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_QuestStatus parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_QuestStatus parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_QuestStatus prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code CDOTAUserMsg_QuestStatus}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:CDOTAUserMsg_QuestStatus)
        skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_QuestStatusOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return skadistats.clarity.wire.common.proto.DotaUserMessages.internal_static_CDOTAUserMsg_QuestStatus_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return skadistats.clarity.wire.common.proto.DotaUserMessages.internal_static_CDOTAUserMsg_QuestStatus_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_QuestStatus.class, skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_QuestStatus.Builder.class);
      }

      // Construct using skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_QuestStatus.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        playerId_ = 0;
        bitField0_ = (bitField0_ & ~0x00000001);
        questId_ = 0;
        bitField0_ = (bitField0_ & ~0x00000002);
        challengeId_ = 0;
        bitField0_ = (bitField0_ & ~0x00000004);
        progress_ = 0;
        bitField0_ = (bitField0_ & ~0x00000008);
        goal_ = 0;
        bitField0_ = (bitField0_ & ~0x00000010);
        query_ = 0;
        bitField0_ = (bitField0_ & ~0x00000020);
        failGametime_ = 0F;
        bitField0_ = (bitField0_ & ~0x00000040);
        itemId_ = 0;
        bitField0_ = (bitField0_ & ~0x00000080);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return skadistats.clarity.wire.common.proto.DotaUserMessages.internal_static_CDOTAUserMsg_QuestStatus_descriptor;
      }

      public skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_QuestStatus getDefaultInstanceForType() {
        return skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_QuestStatus.getDefaultInstance();
      }

      public skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_QuestStatus build() {
        skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_QuestStatus result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_QuestStatus buildPartial() {
        skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_QuestStatus result = new skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_QuestStatus(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.playerId_ = playerId_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.questId_ = questId_;
        if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
          to_bitField0_ |= 0x00000004;
        }
        result.challengeId_ = challengeId_;
        if (((from_bitField0_ & 0x00000008) == 0x00000008)) {
          to_bitField0_ |= 0x00000008;
        }
        result.progress_ = progress_;
        if (((from_bitField0_ & 0x00000010) == 0x00000010)) {
          to_bitField0_ |= 0x00000010;
        }
        result.goal_ = goal_;
        if (((from_bitField0_ & 0x00000020) == 0x00000020)) {
          to_bitField0_ |= 0x00000020;
        }
        result.query_ = query_;
        if (((from_bitField0_ & 0x00000040) == 0x00000040)) {
          to_bitField0_ |= 0x00000040;
        }
        result.failGametime_ = failGametime_;
        if (((from_bitField0_ & 0x00000080) == 0x00000080)) {
          to_bitField0_ |= 0x00000080;
        }
        result.itemId_ = itemId_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_QuestStatus) {
          return mergeFrom((skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_QuestStatus)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_QuestStatus other) {
        if (other == skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_QuestStatus.getDefaultInstance()) return this;
        if (other.hasPlayerId()) {
          setPlayerId(other.getPlayerId());
        }
        if (other.hasQuestId()) {
          setQuestId(other.getQuestId());
        }
        if (other.hasChallengeId()) {
          setChallengeId(other.getChallengeId());
        }
        if (other.hasProgress()) {
          setProgress(other.getProgress());
        }
        if (other.hasGoal()) {
          setGoal(other.getGoal());
        }
        if (other.hasQuery()) {
          setQuery(other.getQuery());
        }
        if (other.hasFailGametime()) {
          setFailGametime(other.getFailGametime());
        }
        if (other.hasItemId()) {
          setItemId(other.getItemId());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        if (!hasPlayerId()) {
          
          return false;
        }
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_QuestStatus parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_QuestStatus) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private int playerId_ ;
      /**
       * <code>required uint32 player_id = 1;</code>
       */
      public boolean hasPlayerId() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>required uint32 player_id = 1;</code>
       */
      public int getPlayerId() {
        return playerId_;
      }
      /**
       * <code>required uint32 player_id = 1;</code>
       */
      public Builder setPlayerId(int value) {
        bitField0_ |= 0x00000001;
        playerId_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required uint32 player_id = 1;</code>
       */
      public Builder clearPlayerId() {
        bitField0_ = (bitField0_ & ~0x00000001);
        playerId_ = 0;
        onChanged();
        return this;
      }

      private int questId_ ;
      /**
       * <code>optional uint32 quest_id = 2;</code>
       */
      public boolean hasQuestId() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>optional uint32 quest_id = 2;</code>
       */
      public int getQuestId() {
        return questId_;
      }
      /**
       * <code>optional uint32 quest_id = 2;</code>
       */
      public Builder setQuestId(int value) {
        bitField0_ |= 0x00000002;
        questId_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional uint32 quest_id = 2;</code>
       */
      public Builder clearQuestId() {
        bitField0_ = (bitField0_ & ~0x00000002);
        questId_ = 0;
        onChanged();
        return this;
      }

      private int challengeId_ ;
      /**
       * <code>optional uint32 challenge_id = 3;</code>
       */
      public boolean hasChallengeId() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }
      /**
       * <code>optional uint32 challenge_id = 3;</code>
       */
      public int getChallengeId() {
        return challengeId_;
      }
      /**
       * <code>optional uint32 challenge_id = 3;</code>
       */
      public Builder setChallengeId(int value) {
        bitField0_ |= 0x00000004;
        challengeId_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional uint32 challenge_id = 3;</code>
       */
      public Builder clearChallengeId() {
        bitField0_ = (bitField0_ & ~0x00000004);
        challengeId_ = 0;
        onChanged();
        return this;
      }

      private int progress_ ;
      /**
       * <code>optional uint32 progress = 4;</code>
       */
      public boolean hasProgress() {
        return ((bitField0_ & 0x00000008) == 0x00000008);
      }
      /**
       * <code>optional uint32 progress = 4;</code>
       */
      public int getProgress() {
        return progress_;
      }
      /**
       * <code>optional uint32 progress = 4;</code>
       */
      public Builder setProgress(int value) {
        bitField0_ |= 0x00000008;
        progress_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional uint32 progress = 4;</code>
       */
      public Builder clearProgress() {
        bitField0_ = (bitField0_ & ~0x00000008);
        progress_ = 0;
        onChanged();
        return this;
      }

      private int goal_ ;
      /**
       * <code>optional uint32 goal = 5;</code>
       */
      public boolean hasGoal() {
        return ((bitField0_ & 0x00000010) == 0x00000010);
      }
      /**
       * <code>optional uint32 goal = 5;</code>
       */
      public int getGoal() {
        return goal_;
      }
      /**
       * <code>optional uint32 goal = 5;</code>
       */
      public Builder setGoal(int value) {
        bitField0_ |= 0x00000010;
        goal_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional uint32 goal = 5;</code>
       */
      public Builder clearGoal() {
        bitField0_ = (bitField0_ & ~0x00000010);
        goal_ = 0;
        onChanged();
        return this;
      }

      private int query_ ;
      /**
       * <code>optional uint32 query = 6;</code>
       */
      public boolean hasQuery() {
        return ((bitField0_ & 0x00000020) == 0x00000020);
      }
      /**
       * <code>optional uint32 query = 6;</code>
       */
      public int getQuery() {
        return query_;
      }
      /**
       * <code>optional uint32 query = 6;</code>
       */
      public Builder setQuery(int value) {
        bitField0_ |= 0x00000020;
        query_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional uint32 query = 6;</code>
       */
      public Builder clearQuery() {
        bitField0_ = (bitField0_ & ~0x00000020);
        query_ = 0;
        onChanged();
        return this;
      }

      private float failGametime_ ;
      /**
       * <code>optional float fail_gametime = 7;</code>
       */
      public boolean hasFailGametime() {
        return ((bitField0_ & 0x00000040) == 0x00000040);
      }
      /**
       * <code>optional float fail_gametime = 7;</code>
       */
      public float getFailGametime() {
        return failGametime_;
      }
      /**
       * <code>optional float fail_gametime = 7;</code>
       */
      public Builder setFailGametime(float value) {
        bitField0_ |= 0x00000040;
        failGametime_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional float fail_gametime = 7;</code>
       */
      public Builder clearFailGametime() {
        bitField0_ = (bitField0_ & ~0x00000040);
        failGametime_ = 0F;
        onChanged();
        return this;
      }

      private int itemId_ ;
      /**
       * <code>optional uint32 item_id = 8;</code>
       */
      public boolean hasItemId() {
        return ((bitField0_ & 0x00000080) == 0x00000080);
      }
      /**
       * <code>optional uint32 item_id = 8;</code>
       */
      public int getItemId() {
        return itemId_;
      }
      /**
       * <code>optional uint32 item_id = 8;</code>
       */
      public Builder setItemId(int value) {
        bitField0_ |= 0x00000080;
        itemId_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional uint32 item_id = 8;</code>
       */
      public Builder clearItemId() {
        bitField0_ = (bitField0_ & ~0x00000080);
        itemId_ = 0;
        onChanged();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:CDOTAUserMsg_QuestStatus)
    }

    static {
      defaultInstance = new CDOTAUserMsg_QuestStatus(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:CDOTAUserMsg_QuestStatus)
  }

  public interface CDOTAUserMsg_UpdateQuestProgressOrBuilder extends
      // @@protoc_insertion_point(interface_extends:CDOTAUserMsg_UpdateQuestProgress)
      com.google.protobuf.MessageOrBuilder {
  }
  /**
   * Protobuf type {@code CDOTAUserMsg_UpdateQuestProgress}
   */
  public static final class CDOTAUserMsg_UpdateQuestProgress extends
      com.google.protobuf.GeneratedMessage implements
      // @@protoc_insertion_point(message_implements:CDOTAUserMsg_UpdateQuestProgress)
      CDOTAUserMsg_UpdateQuestProgressOrBuilder {
    // Use CDOTAUserMsg_UpdateQuestProgress.newBuilder() to construct.
    private CDOTAUserMsg_UpdateQuestProgress(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private CDOTAUserMsg_UpdateQuestProgress(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final CDOTAUserMsg_UpdateQuestProgress defaultInstance;
    public static CDOTAUserMsg_UpdateQuestProgress getDefaultInstance() {
      return defaultInstance;
    }

    public CDOTAUserMsg_UpdateQuestProgress getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private CDOTAUserMsg_UpdateQuestProgress(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return skadistats.clarity.wire.common.proto.DotaUserMessages.internal_static_CDOTAUserMsg_UpdateQuestProgress_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return skadistats.clarity.wire.common.proto.DotaUserMessages.internal_static_CDOTAUserMsg_UpdateQuestProgress_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_UpdateQuestProgress.class, skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_UpdateQuestProgress.Builder.class);
    }

    public static com.google.protobuf.Parser<CDOTAUserMsg_UpdateQuestProgress> PARSER =
        new com.google.protobuf.AbstractParser<CDOTAUserMsg_UpdateQuestProgress>() {
      public CDOTAUserMsg_UpdateQuestProgress parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new CDOTAUserMsg_UpdateQuestProgress(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<CDOTAUserMsg_UpdateQuestProgress> getParserForType() {
      return PARSER;
    }

    private void initFields() {
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_UpdateQuestProgress parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_UpdateQuestProgress parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_UpdateQuestProgress parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_UpdateQuestProgress parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_UpdateQuestProgress parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_UpdateQuestProgress parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_UpdateQuestProgress parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_UpdateQuestProgress parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_UpdateQuestProgress parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_UpdateQuestProgress parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_UpdateQuestProgress prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code CDOTAUserMsg_UpdateQuestProgress}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:CDOTAUserMsg_UpdateQuestProgress)
        skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_UpdateQuestProgressOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return skadistats.clarity.wire.common.proto.DotaUserMessages.internal_static_CDOTAUserMsg_UpdateQuestProgress_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return skadistats.clarity.wire.common.proto.DotaUserMessages.internal_static_CDOTAUserMsg_UpdateQuestProgress_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_UpdateQuestProgress.class, skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_UpdateQuestProgress.Builder.class);
      }

      // Construct using skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_UpdateQuestProgress.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return skadistats.clarity.wire.common.proto.DotaUserMessages.internal_static_CDOTAUserMsg_UpdateQuestProgress_descriptor;
      }

      public skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_UpdateQuestProgress getDefaultInstanceForType() {
        return skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_UpdateQuestProgress.getDefaultInstance();
      }

      public skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_UpdateQuestProgress build() {
        skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_UpdateQuestProgress result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_UpdateQuestProgress buildPartial() {
        skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_UpdateQuestProgress result = new skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_UpdateQuestProgress(this);
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_UpdateQuestProgress) {
          return mergeFrom((skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_UpdateQuestProgress)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_UpdateQuestProgress other) {
        if (other == skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_UpdateQuestProgress.getDefaultInstance()) return this;
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_UpdateQuestProgress parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (skadistats.clarity.wire.common.proto.DotaUserMessages.CDOTAUserMsg_UpdateQuestProgress) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }

      // @@protoc_insertion_point(builder_scope:CDOTAUserMsg_UpdateQuestProgress)
    }

    static {
      defaultInstance = new CDOTAUserMsg_UpdateQuestProgress(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:CDOTAUserMsg_UpdateQuestProgress)
  }

  public interface CMsgDOTACombatLogEntryOrBuilder extends
      // @@protoc_insertion_point(interface_extends:CMsgDOTACombatLogEntry)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>optional .DOTA_COMBATLOG_TYPES type = 1 [default = DOTA_COMBATLOG_DAMAGE];</code>
     */
    boolean hasType();
    /**
     * <code>optional .DOTA_COMBATLOG_TYPES type = 1 [default = DOTA_COMBATLOG_DAMAGE];</code>
     */
    skadistats.clarity.wire.common.proto.DotaUserMessages.DOTA_COMBATLOG_TYPES getType();

    /**
     * <code>optional uint32 target_name = 2;</code>
     */
    boolean hasTargetName();
    /**
     * <code>optional uint32 target_name = 2;</code>
     */
    int getTargetName();

    /**
     * <code>optional uint32 target_source_name = 3;</code>
     */
    boolean hasTargetSourceName();
    /**
     * <code>optional uint32 target_source_name = 3;</code>
     */
    int getTargetSourceName();

    /**
     * <code>optional uint32 attacker_name = 4;</code>
     */
    boolean hasAttackerName();
    /**
     * <code>optional uint32 attacker_name = 4;</code>
     */
    int getAttackerName();

    /**
     * <code>optional uint32 damage_source_name = 5;</code>
     */
    boolean hasDamageSourceName();
    /**
     * <code>optional uint32 damage_source_name = 5;</code>
     */
    int getDamageSourceName();

    /**
     * <code>optional uint32 inflictor_name = 6;</code>
     */
    boolean hasInflictorName();
    /**
     * <code>optional uint32 inflictor_name = 6;</code>
     */
    int getInflictorName();

    /**
     * <code>optional bool is_attacker_illusion = 7;</code>
     */
    boolean hasIsAttackerIllusion();
    /**
     * <code>optional bool is_attacker_illusion = 7;</code>
     */
    boolean getIsAttackerIllusion();

    /**
     * <code>optional bool is_attacker_hero = 8;</code>
     */
    boolean hasIsAttackerHero();
    /**
     * <code>optional bool is_attacker_hero = 8;</code>
     */
    boolean getIsAttackerHero();

    /**
     * <code>optional bool is_target_illusion = 9;</code>
     */
    boolean hasIsTargetIllusion();
    /**
     * <code>optional bool is_target_illusion = 9;</code>
     */
    boolean getIsTargetIllusion();

    /**
     * <code>optional bool is_target_hero = 10;</code>
     */
    boolean hasIsTargetHero();
    /**
     * <code>optional bool is_target_hero = 10;</code>
     */
    boolean getIsTargetHero();

    /**
     * <code>optional bool is_visible_radiant = 11;</code>
     */
    boolean hasIsVisibleRadiant();
    /**
     * <code>optional bool is_visible_radiant = 11;</code>
     */
    boolean getIsVisibleRadiant();

    /**
     * <code>optional bool is_visible_dire = 12;</code>
     */
    boolean hasIsVisibleDire();
    /**
     * <code>optional bool is_visible_dire = 12;</code>
     */
    boolean getIsVisibleDire();

    /**
     * <code>optional uint32 value = 13;</code>
     */
    boolean hasValue();
    /**
     * <code>optional uint32 value = 13;</code>
     */
    int getValue();

    /**
     * <code>optional int32 health = 14;</code>
     */
    boolean hasHealth();
    /**
     * <code>optional int32 health = 14;</code>
     */
    int getHealth();

    /**
     * <code>optional float timestamp = 15;</code>
     */
    boolean hasTimestamp();
    /**
     * <code>optional float timestamp = 15;</code>
     */
    float getTimestamp();

    /**
     * <code>optional float stun_duration = 16;</code>
     */
    boolean hasStunDuration();
    /**
     * <code>optional float stun_duration = 16;</code>
     */
    float getStunDuration();

    /**
     * <code>optional float slow_duration = 17;</code>
     */
    boolean hasSlowDuration();
    /**
     * <code>optional float slow_duration = 17;</code>
     */
    float getSlowDuration();

    /**
     * <code>optional bool is_ability_toggle_on = 18;</code>
     */
    boolean hasIsAbilityToggleOn();
    /**
     * <code>optional bool is_ability_toggle_on = 18;</code>
     */
    boolean getIsAbilityToggleOn();

    /**
     * <code>optional bool is_ability_toggle_off = 19;</code>
     */
    boolean hasIsAbilityToggleOff();
    /**
     * <code>optional bool is_ability_toggle_off = 19;</code>
     */
    boolean getIsAbilityToggleOff();

    /**
     * <code>optional uint32 ability_level = 20;</code>
     */
    boolean hasAbilityLevel();
    /**
     * <code>optional uint32 ability_level = 20;</code>
     */
    int getAbilityLevel();

    /**
     * <code>optional float location_x = 21;</code>
     */
    boolean hasLocationX();
    /**
     * <code>optional float location_x = 21;</code>
     */
    float getLocationX();

    /**
     * <code>optional float location_y = 22;</code>
     */
    boolean hasLocationY();
    /**
     * <code>optional float location_y = 22;</code>
     */
    float getLocationY();

    /**
     * <code>optional uint32 gold_reason = 23;</code>
     */
    boolean hasGoldReason();
    /**
     * <code>optional uint32 gold_reason = 23;</code>
     */
    int getGoldReason();

    /**
     * <code>optional float timestamp_raw = 24;</code>
     */
    boolean hasTimestampRaw();
    /**
     * <code>optional float timestamp_raw = 24;</code>
     */
    float getTimestampRaw();

    /**
     * <code>optional float modifier_duration = 25;</code>
     */
    boolean hasModifierDuration();
    /**
     * <code>optional float modifier_duration = 25;</code>
     */
    float getModifierDuration();

    /**
     * <code>optional uint32 xp_reason = 26;</code>
     */
    boolean hasXpReason();
    /**
     * <code>optional uint32 xp_reason = 26;</code>
     */
    int getXpReason();

    /**
     * <code>optional uint32 last_hits = 27;</code>
     */
    boolean hasLastHits();
    /**
     * <code>optional uint32 last_hits = 27;</code>
     */
    int getLastHits();

    /**
     * <code>optional uint32 attacker_team = 28;</code>
     */
    boolean hasAttackerTeam();
    /**
     * <code>optional uint32 attacker_team = 28;</code>
     */
    int getAttackerTeam();

    /**
     * <code>optional uint32 target_team = 29;</code>
     */
    boolean hasTargetTeam();
    /**
     * <code>optional uint32 target_team = 29;</code>
     */
    int getTargetTeam();

    /**
     * <code>optional uint32 obs_wards_placed = 30;</code>
     */
    boolean hasObsWardsPlaced();
    /**
     * <code>optional uint32 obs_wards_placed = 30;</code>
     */
    int getObsWardsPlaced();

    /**
     * <code>optional uint32 assist_player0 = 31;</code>
     */
    boolean hasAssistPlayer0();
    /**
     * <code>optional uint32 assist_player0 = 31;</code>
     */
    int getAssistPlayer0();

    /**
     * <code>optional uint32 assist_player1 = 32;</code>
     */
    boolean hasAssistPlayer1();
    /**
     * <code>optional uint32 assist_player1 = 32;</code>
     */
    int getAssistPlayer1();

    /**
     * <code>optional uint32 assist_player2 = 33;</code>
     */
    boolean hasAssistPlayer2();
    /**
     * <code>optional uint32 assist_player2 = 33;</code>
     */
    int getAssistPlayer2();

    /**
     * <code>optional uint32 assist_player3 = 34;</code>
     */
    boolean hasAssistPlayer3();
    /**
     * <code>optional uint32 assist_player3 = 34;</code>
     */
    int getAssistPlayer3();

    /**
     * <code>optional uint32 stack_count = 35;</code>
     */
    boolean hasStackCount();
    /**
     * <code>optional uint32 stack_count = 35;</code>
     */
    int getStackCount();

    /**
     * <code>optional bool hidden_modifier = 36;</code>
     */
    boolean hasHiddenModifier();
    /**
     * <code>optional bool hidden_modifier = 36;</code>
     */
    boolean getHiddenModifier();

    /**
     * <code>optional bool is_target_building = 37;</code>
     */
    boolean hasIsTargetBuilding();
    /**
     * <code>optional bool is_target_building = 37;</code>
     */
    boolean getIsTargetBuilding();

    /**
     * <code>optional uint32 neutral_camp_type = 38;</code>
     */
    boolean hasNeutralCampType();
    /**
     * <code>optional uint32 neutral_camp_type = 38;</code>
     */
    int getNeutralCampType();

    /**
     * <code>optional uint32 rune_type = 39;</code>
     */
    boolean hasRuneType();
    /**
     * <code>optional uint32 rune_type = 39;</code>
     */
    int getRuneType();

    /**
     * <code>repeated uint32 assist_players = 40;</code>
     */
    java.util.List<java.lang.Integer> getAssistPlayersList();
    /**
     * <code>repeated uint32 assist_players = 40;</code>
     */
    int getAssistPlayersCount();
    /**
     * <code>repeated uint32 assist_players = 40;</code>
     */
    int getAssistPlayers(int index);

    /**
     * <code>optional bool is_heal_save = 41;</code>
     */
    boolean hasIsHealSave();
    /**
     * <code>optional bool is_heal_save = 41;</code>
     */
    boolean getIsHealSave();

    /**
     * <code>optional bool is_ultimate_ability = 42;</code>
     */
    boolean hasIsUltimateAbility();
    /**
     * <code>optional bool is_ultimate_ability = 42;</code>
     */
    boolean getIsUltimateAbility();

    /**
     * <code>optional uint32 attacker_hero_level = 43;</code>
     */
    boolean hasAttackerHeroLevel();
    /**
     * <code>optional uint32 attacker_hero_level = 43;</code>
     */
    int getAttackerHeroLevel();

    /**
     * <code>optional uint32 target_hero_level = 44;</code>
     */
    boolean hasTargetHeroLevel();
    /**
     * <code>optional uint32 target_hero_level = 44;</code>
     */
    int getTargetHeroLevel();

    /**
     * <code>optional uint32 xpm = 45;</code>
     */
    boolean hasXpm();
    /**
     * <code>optional uint32 xpm = 45;</code>
     */
    int getXpm();

    /**
     * <code>optional uint32 gpm = 46;</code>
     */
    boolean hasGpm();
    /**
     * <code>optional uint32 gpm = 46;</code>
     */
    int getGpm();

    /**
     * <code>optional uint32 event_location = 47;</code>
     */
    boolean hasEventLocation();
    /**
     * <code>optional uint32 event_location = 47;</code>
     */
    int getEventLocation();

    /**
     * <code>optional bool target_is_self = 48;</code>
     */
    boolean hasTargetIsSelf();
    /**
     * <code>optional bool target_is_self = 48;</code>
     */
    boolean getTargetIsSelf();

    /**
     * <code>optional uint32 damage_type = 49;</code>
     */
    boolean hasDamageType();
    /**
     * <code>optional uint32 damage_type = 49;</code>
     */
    int getDamageType();

    /**
     * <code>optional bool invisibility_modifier = 50;</code>
     */
    boolean hasInvisibilityModifier();
    /**
     * <code>optional bool invisibility_modifier = 50;</code>
     */
    boolean getInvisibilityModifier();

    /**
     * <code>optional uint32 damage_category = 51;</code>
     */
    boolean hasDamageCategory();
    /**
     * <code>optional uint32 damage_category = 51;</code>
     */
    int getDamageCategory();

    /**
     * <code>optional uint32 networth = 52;</code>
     */
    boolean hasNetworth();
    /**
     * <code>optional uint32 networth = 52;</code>
     */
    int getNetworth();
  }
  /**
   * Protobuf type {@code CMsgDOTACombatLogEntry}
   */
  public static final class CMsgDOTACombatLogEntry extends
      com.google.protobuf.GeneratedMessage implements
      // @@protoc_insertion_point(message_implements:CMsgDOTACombatLogEntry)
      CMsgDOTACombatLogEntryOrBuilder {
    // Use CMsgDOTACombatLogEntry.newBuilder() to construct.
    private CMsgDOTACombatLogEntry(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private CMsgDOTACombatLogEntry(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final CMsgDOTACombatLogEntry defaultInstance;
    public static CMsgDOTACombatLogEntry getDefaultInstance() {
      return defaultInstance;
    }

    public CMsgDOTACombatLogEntry getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private CMsgDOTACombatLogEntry(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      int mutable_bitField1_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 8: {
              int rawValue = input.readEnum();
              skadistats.clarity.wire.common.proto.DotaUserMessages.DOTA_COMBATLOG_TYPES value = skadistats.clarity.wire.common.proto.DotaUserMessages.DOTA_COMBATLOG_TYPES.valueOf(rawValue);
              if (value == null) {
                unknownFields.mergeVarintField(1, rawValue);
              } else {
                bitField0_ |= 0x00000001;
                type_ = value;
              }
              break;
            }
            case 16: {
              bitField0_ |= 0x00000002;
              targetName_ = input.readUInt32();
              break;
            }
            case 24: {
              bitField0_ |= 0x00000004;
              targetSourceName_ = input.readUInt32();
              break;
            }
            case 32: {
              bitField0_ |= 0x00000008;
              attackerName_ = input.readUInt32();
              break;
            }
            case 40: {
              bitField0_ |= 0x00000010;
              damageSourceName_ = input.readUInt32();
              break;
            }
            case 48: {
              bitField0_ |= 0x00000020;
              inflictorName_ = input.readUInt32();
              break;
            }
            case 56: {
              bitField0_ |= 0x00000040;
              isAttackerIllusion_ = input.readBool();
              break;
            }
            case 64: {
              bitField0_ |= 0x00000080;
              isAttackerHero_ = input.readBool();
              break;
            }
            case 72: {
              bitField0_ |= 0x00000100;
              isTargetIllusion_ = input.readBool();
              break;
            }
            case 80: {
              bitField0_ |= 0x00000200;
              isTargetHero_ = input.readBool();
              break;
            }
            case 88: {
              bitField0_ |= 0x00000400;
              isVisibleRadiant_ = input.readBool();
              break;
            }
            case 96: {
              bitField0_ |= 0x00000800;
              isVisibleDire_ = input.readBool();
              break;
            }
            case 104: {
              bitField0_ |= 0x00001000;
              value_ = input.readUInt32();
              break;
            }
            case 112: {
              bitField0_ |= 0x00002000;
              health_ = input.readInt32();
              break;
            }
            case 125: {
              bitField0_ |= 0x00004000;
              timestamp_ = input.readFloat();
              break;
            }
            case 133: {
              bitField0_ |= 0x00008000;
              stunDuration_ = input.readFloat();
              break;
            }
            case 141: {
              bitField0_ |= 0x00010000;
              slowDuration_ = input.readFloat();
              break;
            }
            case 144: {
              bitField0_ |= 0x00020000;
              isAbilityToggleOn_ = input.readBool();
              break;
            }
            case 152: {
              bitField0_ |= 0x00040000;
              isAbilityToggleOff_ = input.readBool();
              break;
            }
            case 160: {
              bitField0_ |= 0x00080000;
              abilityLevel_ = input.readUInt32();
              break;
            }
            case 173: {
              bitField0_ |= 0x00100000;
              locationX_ = input.readFloat();
              break;
            }
            case 181: {
              bitField0_ |= 0x00200000;
              locationY_ = input.readFloat();
              break;
            }
            case 184: {
              bitField0_ |= 0x00400000;
              goldReason_ = input.readUInt32();
              break;
            }
            case 197: {
              bitField0_ |= 0x00800000;
              timestampRaw_ = input.readFloat();
              break;
            }
            case 205: {
              bitField0_ |= 0x01000000;
              modifierDuration_ = input.readFloat();
              break;
            }
            case 208: {
              bitField0_ |= 0x02000000;
              xpReason_ = input.readUInt32();
              break;
            }
            case 216: {
              bitField0_ |= 0x04000000;
              lastHits_ = input.readUInt32();
              break;
            }
            case 224: {
              bitField0_ |= 0x08000000;
              attackerTeam_ = input.readUInt32();
              break;
            }
            case 232: {
              bitField0_ |= 0x10000000;
              targetTeam_ = input.readUInt32();
              break;
            }
            case 240: {
              bitField0_ |= 0x20000000;
              obsWardsPlaced_ = input.readUInt32();
              break;
            }
            case 248: {
              bitField0_ |= 0x40000000;
              assistPlayer0_ = input.readUInt32();
              break;
            }
            case 256: {
              bitField0_ |= 0x80000000;
              assistPlayer1_ = input.readUInt32();
              break;
            }
            case 264: {
              bitField1_ |= 0x00000001;
              assistPlayer2_ = input.readUInt32();
              break;
            }
            case 272: {
              bitField1_ |= 0x00000002;
              assistPlayer3_ = input.readUInt32();
              break;
            }
            case 280: {
              bitField1_ |= 0x00000004;
              stackCount_ = input.readUInt32();
              break;
            }
            case 288: {
              bitField1_ |= 0x00000008;
              hiddenModifier_ = input.readBool();
              break;
            }
            case 296: {
              bitField1_ |= 0x00000010;
              isTargetBuilding_ = input.readBool();
              break;
            }
            case 304: {
              bitField1_ |= 0x00000020;
              neutralCampType_ = input.readUInt32();
              break;
            }
            case 312: {
              bitField1_ |= 0x00000040;
              runeType_ = input.readUInt32();
              break;
            }
            case 320: {
              if (!((mutable_bitField1_ & 0x00000080) == 0x00000080)) {
                assistPlayers_ = new java.util.ArrayList<java.lang.Integer>();
                mutable_bitField1_ |= 0x00000080;
              }
              assistPlayers_.add(input.readUInt32());
              break;
            }
            case 322: {
              int length = input.readRawVarint32();
              int limit = input.pushLimit(length);
              if (!((mutable_bitField1_ & 0x00000080) == 0x00000080) && input.getBytesUntilLimit() > 0) {
                assistPlayers_ = new java.util.ArrayList<java.lang.Integer>();
                mutable_bitField1_ |= 0x00000080;
              }
              while (input.getBytesUntilLimit() > 0) {
                assistPlayers_.add(input.readUInt32());
              }
              input.popLimit(limit);
              break;
            }
            case 328: {
              bitField1_ |= 0x00000080;
              isHealSave_ = input.readBool();
              break;
            }
            case 336: {
              bitField1_ |= 0x00000100;
              isUltimateAbility_ = input.readBool();
              break;
            }
            case 344: {
              bitField1_ |= 0x00000200;
              attackerHeroLevel_ = input.readUInt32();
              break;
            }
            case 352: {
              bitField1_ |= 0x00000400;
              targetHeroLevel_ = input.readUInt32();
              break;
            }
            case 360: {
              bitField1_ |= 0x00000800;
              xpm_ = input.readUInt32();
              break;
            }
            case 368: {
              bitField1_ |= 0x00001000;
              gpm_ = input.readUInt32();
              break;
            }
            case 376: {
              bitField1_ |= 0x00002000;
              eventLocation_ = input.readUInt32();
              break;
            }
            case 384: {
              bitField1_ |= 0x00004000;
              targetIsSelf_ = input.readBool();
              break;
            }
            case 392: {
              bitField1_ |= 0x00008000;
              damageType_ = input.readUInt32();
              break;
            }
            case 400: {
              bitField1_ |= 0x00010000;
              invisibilityModifier_ = input.readBool();
              break;
            }
            case 408: {
              bitField1_ |= 0x00020000;
              damageCategory_ = input.readUInt32();
              break;
            }
            case 416: {
              bitField1_ |= 0x00040000;
              networth_ = input.readUInt32();
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        if (((mutable_bitField1_ & 0x00000080) == 0x00000080)) {
          assistPlayers_ = java.util.Collections.unmodifiableList(assistPlayers_);
        }
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return skadistats.clarity.wire.common.proto.DotaUserMessages.internal_static_CMsgDOTACombatLogEntry_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return skadistats.clarity.wire.common.proto.DotaUserMessages.internal_static_CMsgDOTACombatLogEntry_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              skadistats.clarity.wire.common.proto.DotaUserMessages.CMsgDOTACombatLogEntry.class, skadistats.clarity.wire.common.proto.DotaUserMessages.CMsgDOTACombatLogEntry.Builder.class);
    }

    public static com.google.protobuf.Parser<CMsgDOTACombatLogEntry> PARSER =
        new com.google.protobuf.AbstractParser<CMsgDOTACombatLogEntry>() {
      public CMsgDOTACombatLogEntry parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new CMsgDOTACombatLogEntry(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<CMsgDOTACombatLogEntry> getParserForType() {
      return PARSER;
    }

    private int bitField0_;
    private int bitField1_;
    public static final int TYPE_FIELD_NUMBER = 1;
    private skadistats.clarity.wire.common.proto.DotaUserMessages.DOTA_COMBATLOG_TYPES type_;
    /**
     * <code>optional .DOTA_COMBATLOG_TYPES type = 1 [default = DOTA_COMBATLOG_DAMAGE];</code>
     */
    public boolean hasType() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>optional .DOTA_COMBATLOG_TYPES type = 1 [default = DOTA_COMBATLOG_DAMAGE];</code>
     */
    public skadistats.clarity.wire.common.proto.DotaUserMessages.DOTA_COMBATLOG_TYPES getType() {
      return type_;
    }

    public static final int TARGET_NAME_FIELD_NUMBER = 2;
    private int targetName_;
    /**
     * <code>optional uint32 target_name = 2;</code>
     */
    public boolean hasTargetName() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>optional uint32 target_name = 2;</code>
     */
    public int getTargetName() {
      return targetName_;
    }

    public static final int TARGET_SOURCE_NAME_FIELD_NUMBER = 3;
    private int targetSourceName_;
    /**
     * <code>optional uint32 target_source_name = 3;</code>
     */
    public boolean hasTargetSourceName() {
      return ((bitField0_ & 0x00000004) == 0x00000004);
    }
    /**
     * <code>optional uint32 target_source_name = 3;</code>
     */
    public int getTargetSourceName() {
      return targetSourceName_;
    }

    public static final int ATTACKER_NAME_FIELD_NUMBER = 4;
    private int attackerName_;
    /**
     * <code>optional uint32 attacker_name = 4;</code>
     */
    public boolean hasAttackerName() {
      return ((bitField0_ & 0x00000008) == 0x00000008);
    }
    /**
     * <code>optional uint32 attacker_name = 4;</code>
     */
    public int getAttackerName() {
      return attackerName_;
    }

    public static final int DAMAGE_SOURCE_NAME_FIELD_NUMBER = 5;
    private int damageSourceName_;
    /**
     * <code>optional uint32 damage_source_name = 5;</code>
     */
    public boolean hasDamageSourceName() {
      return ((bitField0_ & 0x00000010) == 0x00000010);
    }
    /**
     * <code>optional uint32 damage_source_name = 5;</code>
     */
    public int getDamageSourceName() {
      return damageSourceName_;
    }

    public static final int INFLICTOR_NAME_FIELD_NUMBER = 6;
    private int inflictorName_;
    /**
     * <code>optional uint32 inflictor_name = 6;</code>
     */
    public boolean hasInflictorName() {
      return ((bitField0_ & 0x00000020) == 0x00000020);
    }
    /**
     * <code>optional uint32 inflictor_name = 6;</code>
     */
    public int getInflictorName() {
      return inflictorName_;
    }

    public static final int IS_ATTACKER_ILLUSION_FIELD_NUMBER = 7;
    private boolean isAttackerIllusion_;
    /**
     * <code>optional bool is_attacker_illusion = 7;</code>
     */
    public boolean hasIsAttackerIllusion() {
      return ((bitField0_ & 0x00000040) == 0x00000040);
    }
    /**
     * <code>optional bool is_attacker_illusion = 7;</code>
     */
    public boolean getIsAttackerIllusion() {
      return isAttackerIllusion_;
    }

    public static final int IS_ATTACKER_HERO_FIELD_NUMBER = 8;
    private boolean isAttackerHero_;
    /**
     * <code>optional bool is_attacker_hero = 8;</code>
     */
    public boolean hasIsAttackerHero() {
      return ((bitField0_ & 0x00000080) == 0x00000080);
    }
    /**
     * <code>optional bool is_attacker_hero = 8;</code>
     */
    public boolean getIsAttackerHero() {
      return isAttackerHero_;
    }

    public static final int IS_TARGET_ILLUSION_FIELD_NUMBER = 9;
    private boolean isTargetIllusion_;
    /**
     * <code>optional bool is_target_illusion = 9;</code>
     */
    public boolean hasIsTargetIllusion() {
      return ((bitField0_ & 0x00000100) == 0x00000100);
    }
    /**
     * <code>optional bool is_target_illusion = 9;</code>
     */
    public boolean getIsTargetIllusion() {
      return isTargetIllusion_;
    }

    public static final int IS_TARGET_HERO_FIELD_NUMBER = 10;
    private boolean isTargetHero_;
    /**
     * <code>optional bool is_target_hero = 10;</code>
     */
    public boolean hasIsTargetHero() {
      return ((bitField0_ & 0x00000200) == 0x00000200);
    }
    /**
     * <code>optional bool is_target_hero = 10;</code>
     */
    public boolean getIsTargetHero() {
      return isTargetHero_;
    }

    public static final int IS_VISIBLE_RADIANT_FIELD_NUMBER = 11;
    private boolean isVisibleRadiant_;
    /**
     * <code>optional bool is_visible_radiant = 11;</code>
     */
    public boolean hasIsVisibleRadiant() {
      return ((bitField0_ & 0x00000400) == 0x00000400);
    }
    /**
     * <code>optional bool is_visible_radiant = 11;</code>
     */
    public boolean getIsVisibleRadiant() {
      return isVisibleRadiant_;
    }

    public static final int IS_VISIBLE_DIRE_FIELD_NUMBER = 12;
    private boolean isVisibleDire_;
    /**
     * <code>optional bool is_visible_dire = 12;</code>
     */
    public boolean hasIsVisibleDire() {
      return ((bitField0_ & 0x00000800) == 0x00000800);
    }
    /**
     * <code>optional bool is_visible_dire = 12;</code>
     */
    public boolean getIsVisibleDire() {
      return isVisibleDire_;
    }

    public static final int VALUE_FIELD_NUMBER = 13;
    private int value_;
    /**
     * <code>optional uint32 value = 13;</code>
     */
    public boolean hasValue() {
      return ((bitField0_ & 0x00001000) == 0x00001000);
    }
    /**
     * <code>optional uint32 value = 13;</code>
     */
    public int getValue() {
      return value_;
    }

    public static final int HEALTH_FIELD_NUMBER = 14;
    private int health_;
    /**
     * <code>optional int32 health = 14;</code>
     */
    public boolean hasHealth() {
      return ((bitField0_ & 0x00002000) == 0x00002000);
    }
    /**
     * <code>optional int32 health = 14;</code>
     */
    public int getHealth() {
      return health_;
    }

    public static final int TIMESTAMP_FIELD_NUMBER = 15;
    private float timestamp_;
    /**
     * <code>optional float timestamp = 15;</code>
     */
    public boolean hasTimestamp() {
      return ((bitField0_ & 0x00004000) == 0x00004000);
    }
    /**
     * <code>optional float timestamp = 15;</code>
     */
    public float getTimestamp() {
      return timestamp_;
    }

    public static final int STUN_DURATION_FIELD_NUMBER = 16;
    private float stunDuration_;
    /**
     * <code>optional float stun_duration = 16;</code>
     */
    public boolean hasStunDuration() {
      return ((bitField0_ & 0x00008000) == 0x00008000);
    }
    /**
     * <code>optional float stun_duration = 16;</code>
     */
    public float getStunDuration() {
      return stunDuration_;
    }

    public static final int SLOW_DURATION_FIELD_NUMBER = 17;
    private float slowDuration_;
    /**
     * <code>optional float slow_duration = 17;</code>
     */
    public boolean hasSlowDuration() {
      return ((bitField0_ & 0x00010000) == 0x00010000);
    }
    /**
     * <code>optional float slow_duration = 17;</code>
     */
    public float getSlowDuration() {
      return slowDuration_;
    }

    public static final int IS_ABILITY_TOGGLE_ON_FIELD_NUMBER = 18;
    private boolean isAbilityToggleOn_;
    /**
     * <code>optional bool is_ability_toggle_on = 18;</code>
     */
    public boolean hasIsAbilityToggleOn() {
      return ((bitField0_ & 0x00020000) == 0x00020000);
    }
    /**
     * <code>optional bool is_ability_toggle_on = 18;</code>
     */
    public boolean getIsAbilityToggleOn() {
      return isAbilityToggleOn_;
    }

    public static final int IS_ABILITY_TOGGLE_OFF_FIELD_NUMBER = 19;
    private boolean isAbilityToggleOff_;
    /**
     * <code>optional bool is_ability_toggle_off = 19;</code>
     */
    public boolean hasIsAbilityToggleOff() {
      return ((bitField0_ & 0x00040000) == 0x00040000);
    }
    /**
     * <code>optional bool is_ability_toggle_off = 19;</code>
     */
    public boolean getIsAbilityToggleOff() {
      return isAbilityToggleOff_;
    }

    public static final int ABILITY_LEVEL_FIELD_NUMBER = 20;
    private int abilityLevel_;
    /**
     * <code>optional uint32 ability_level = 20;</code>
     */
    public boolean hasAbilityLevel() {
      return ((bitField0_ & 0x00080000) == 0x00080000);
    }
    /**
     * <code>optional uint32 ability_level = 20;</code>
     */
    public int getAbilityLevel() {
      return abilityLevel_;
    }

    public static final int LOCATION_X_FIELD_NUMBER = 21;
    private float locationX_;
    /**
     * <code>optional float location_x = 21;</code>
     */
    public boolean hasLocationX() {
      return ((bitField0_ & 0x00100000) == 0x00100000);
    }
    /**
     * <code>optional float location_x = 21;</code>
     */
    public float getLocationX() {
      return locationX_;
    }

    public static final int LOCATION_Y_FIELD_NUMBER = 22;
    private float locationY_;
    /**
     * <code>optional float location_y = 22;</code>
     */
    public boolean hasLocationY() {
      return ((bitField0_ & 0x00200000) == 0x00200000);
    }
    /**
     * <code>optional float location_y = 22;</code>
     */
    public float getLocationY() {
      return locationY_;
    }

    public static final int GOLD_REASON_FIELD_NUMBER = 23;
    private int goldReason_;
    /**
     * <code>optional uint32 gold_reason = 23;</code>
     */
    public boolean hasGoldReason() {
      return ((bitField0_ & 0x00400000) == 0x00400000);
    }
    /**
     * <code>optional uint32 gold_reason = 23;</code>
     */
    public int getGoldReason() {
      return goldReason_;
    }

    public static final int TIMESTAMP_RAW_FIELD_NUMBER = 24;
    private float timestampRaw_;
    /**
     * <code>optional float timestamp_raw = 24;</code>
     */
    public boolean hasTimestampRaw() {
      return ((bitField0_ & 0x00800000) == 0x00800000);
    }
    /**
     * <code>optional float timestamp_raw = 24;</code>
     */
    public float getTimestampRaw() {
      return timestampRaw_;
    }

    public static final int MODIFIER_DURATION_FIELD_NUMBER = 25;
    private float modifierDuration_;
    /**
     * <code>optional float modifier_duration = 25;</code>
     */
    public boolean hasModifierDuration() {
      return ((bitField0_ & 0x01000000) == 0x01000000);
    }
    /**
     * <code>optional float modifier_duration = 25;</code>
     */
    public float getModifierDuration() {
      return modifierDuration_;
    }

    public static final int XP_REASON_FIELD_NUMBER = 26;
    private int xpReason_;
    /**
     * <code>optional uint32 xp_reason = 26;</code>
     */
    public boolean hasXpReason() {
      return ((bitField0_ & 0x02000000) == 0x02000000);
    }
    /**
     * <code>optional uint32 xp_reason = 26;</code>
     */
    public int getXpReason() {
      return xpReason_;
    }

    public static final int LAST_HITS_FIELD_NUMBER = 27;
    private int lastHits_;
    /**
     * <code>optional uint32 last_hits = 27;</code>
     */
    public boolean hasLastHits() {
      return ((bitField0_ & 0x04000000) == 0x04000000);
    }
    /**
     * <code>optional uint32 last_hits = 27;</code>
     */
    public int getLastHits() {
      return lastHits_;
    }

    public static final int ATTACKER_TEAM_FIELD_NUMBER = 28;
    private int attackerTeam_;
    /**
     * <code>optional uint32 attacker_team = 28;</code>
     */
    public boolean hasAttackerTeam() {
      return ((bitField0_ & 0x08000000) == 0x08000000);
    }
    /**
     * <code>optional uint32 attacker_team = 28;</code>
     */
    public int getAttackerTeam() {
      return attackerTeam_;
    }

    public static final int TARGET_TEAM_FIELD_NUMBER = 29;
    private int targetTeam_;
    /**
     * <code>optional uint32 target_team = 29;</code>
     */
    public boolean hasTargetTeam() {
      return ((bitField0_ & 0x10000000) == 0x10000000);
    }
    /**
     * <code>optional uint32 target_team = 29;</code>
     */
    public int getTargetTeam() {
      return targetTeam_;
    }

    public static final int OBS_WARDS_PLACED_FIELD_NUMBER = 30;
    private int obsWardsPlaced_;
    /**
     * <code>optional uint32 obs_wards_placed = 30;</code>
     */
    public boolean hasObsWardsPlaced() {
      return ((bitField0_ & 0x20000000) == 0x20000000);
    }
    /**
     * <code>optional uint32 obs_wards_placed = 30;</code>
     */
    public int getObsWardsPlaced() {
      return obsWardsPlaced_;
    }

    public static final int ASSIST_PLAYER0_FIELD_NUMBER = 31;
    private int assistPlayer0_;
    /**
     * <code>optional uint32 assist_player0 = 31;</code>
     */
    public boolean hasAssistPlayer0() {
      return ((bitField0_ & 0x40000000) == 0x40000000);
    }
    /**
     * <code>optional uint32 assist_player0 = 31;</code>
     */
    public int getAssistPlayer0() {
      return assistPlayer0_;
    }

    public static final int ASSIST_PLAYER1_FIELD_NUMBER = 32;
    private int assistPlayer1_;
    /**
     * <code>optional uint32 assist_player1 = 32;</code>
     */
    public boolean hasAssistPlayer1() {
      return ((bitField0_ & 0x80000000) == 0x80000000);
    }
    /**
     * <code>optional uint32 assist_player1 = 32;</code>
     */
    public int getAssistPlayer1() {
      return assistPlayer1_;
    }

    public static final int ASSIST_PLAYER2_FIELD_NUMBER = 33;
    private int assistPlayer2_;
    /**
     * <code>optional uint32 assist_player2 = 33;</code>
     */
    public boolean hasAssistPlayer2() {
      return ((bitField1_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>optional uint32 assist_player2 = 33;</code>
     */
    public int getAssistPlayer2() {
      return assistPlayer2_;
    }

    public static final int ASSIST_PLAYER3_FIELD_NUMBER = 34;
    private int assistPlayer3_;
    /**
     * <code>optional uint32 assist_player3 = 34;</code>
     */
    public boolean hasAssistPlayer3() {
      return ((bitField1_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>optional uint32 assist_player3 = 34;</code>
     */
    public int getAssistPlayer3() {
      return assistPlayer3_;
    }

    public static final int STACK_COUNT_FIELD_NUMBER = 35;
    private int stackCount_;
    /**
     * <code>optional uint32 stack_count = 35;</code>
     */
    public boolean hasStackCount() {
      return ((bitField1_ & 0x00000004) == 0x00000004);
    }
    /**
     * <code>optional uint32 stack_count = 35;</code>
     */
    public int getStackCount() {
      return stackCount_;
    }

    public static final int HIDDEN_MODIFIER_FIELD_NUMBER = 36;
    private boolean hiddenModifier_;
    /**
     * <code>optional bool hidden_modifier = 36;</code>
     */
    public boolean hasHiddenModifier() {
      return ((bitField1_ & 0x00000008) == 0x00000008);
    }
    /**
     * <code>optional bool hidden_modifier = 36;</code>
     */
    public boolean getHiddenModifier() {
      return hiddenModifier_;
    }

    public static final int IS_TARGET_BUILDING_FIELD_NUMBER = 37;
    private boolean isTargetBuilding_;
    /**
     * <code>optional bool is_target_building = 37;</code>
     */
    public boolean hasIsTargetBuilding() {
      return ((bitField1_ & 0x00000010) == 0x00000010);
    }
    /**
     * <code>optional bool is_target_building = 37;</code>
     */
    public boolean getIsTargetBuilding() {
      return isTargetBuilding_;
    }

    public static final int NEUTRAL_CAMP_TYPE_FIELD_NUMBER = 38;
    private int neutralCampType_;
    /**
     * <code>optional uint32 neutral_camp_type = 38;</code>
     */
    public boolean hasNeutralCampType() {
      return ((bitField1_ & 0x00000020) == 0x00000020);
    }
    /**
     * <code>optional uint32 neutral_camp_type = 38;</code>
     */
    public int getNeutralCampType() {
      return neutralCampType_;
    }

    public static final int RUNE_TYPE_FIELD_NUMBER = 39;
    private int runeType_;
    /**
     * <code>optional uint32 rune_type = 39;</code>
     */
    public boolean hasRuneType() {
      return ((bitField1_ & 0x00000040) == 0x00000040);
    }
    /**
     * <code>optional uint32 rune_type = 39;</code>
     */
    public int getRuneType() {
      return runeType_;
    }

    public static final int ASSIST_PLAYERS_FIELD_NUMBER = 40;
    private java.util.List<java.lang.Integer> assistPlayers_;
    /**
     * <code>repeated uint32 assist_players = 40;</code>
     */
    public java.util.List<java.lang.Integer>
        getAssistPlayersList() {
      return assistPlayers_;
    }
    /**
     * <code>repeated uint32 assist_players = 40;</code>
     */
    public int getAssistPlayersCount() {
      return assistPlayers_.size();
    }
    /**
     * <code>repeated uint32 assist_players = 40;</code>
     */
    public int getAssistPlayers(int index) {
      return assistPlayers_.get(index);
    }

    public static final int IS_HEAL_SAVE_FIELD_NUMBER = 41;
    private boolean isHealSave_;
    /**
     * <code>optional bool is_heal_save = 41;</code>
     */
    public boolean hasIsHealSave() {
      return ((bitField1_ & 0x00000080) == 0x00000080);
    }
    /**
     * <code>optional bool is_heal_save = 41;</code>
     */
    public boolean getIsHealSave() {
      return isHealSave_;
    }

    public static final int IS_ULTIMATE_ABILITY_FIELD_NUMBER = 42;
    private boolean isUltimateAbility_;
    /**
     * <code>optional bool is_ultimate_ability = 42;</code>
     */
    public boolean hasIsUltimateAbility() {
      return ((bitField1_ & 0x00000100) == 0x00000100);
    }
    /**
     * <code>optional bool is_ultimate_ability = 42;</code>
     */
    public boolean getIsUltimateAbility() {
      return isUltimateAbility_;
    }

    public static final int ATTACKER_HERO_LEVEL_FIELD_NUMBER = 43;
    private int attackerHeroLevel_;
    /**
     * <code>optional uint32 attacker_hero_level = 43;</code>
     */
    public boolean hasAttackerHeroLevel() {
      return ((bitField1_ & 0x00000200) == 0x00000200);
    }
    /**
     * <code>optional uint32 attacker_hero_level = 43;</code>
     */
    public int getAttackerHeroLevel() {
      return attackerHeroLevel_;
    }

    public static final int TARGET_HERO_LEVEL_FIELD_NUMBER = 44;
    private int targetHeroLevel_;
    /**
     * <code>optional uint32 target_hero_level = 44;</code>
     */
    public boolean hasTargetHeroLevel() {
      return ((bitField1_ & 0x00000400) == 0x00000400);
    }
    /**
     * <code>optional uint32 target_hero_level = 44;</code>
     */
    public int getTargetHeroLevel() {
      return targetHeroLevel_;
    }

    public static final int XPM_FIELD_NUMBER = 45;
    private int xpm_;
    /**
     * <code>optional uint32 xpm = 45;</code>
     */
    public boolean hasXpm() {
      return ((bitField1_ & 0x00000800) == 0x00000800);
    }
    /**
     * <code>optional uint32 xpm = 45;</code>
     */
    public int getXpm() {
      return xpm_;
    }

    public static final int GPM_FIELD_NUMBER = 46;
    private int gpm_;
    /**
     * <code>optional uint32 gpm = 46;</code>
     */
    public boolean hasGpm() {
      return ((bitField1_ & 0x00001000) == 0x00001000);
    }
    /**
     * <code>optional uint32 gpm = 46;</code>
     */
    public int getGpm() {
      return gpm_;
    }

    public static final int EVENT_LOCATION_FIELD_NUMBER = 47;
    private int eventLocation_;
    /**
     * <code>optional uint32 event_location = 47;</code>
     */
    public boolean hasEventLocation() {
      return ((bitField1_ & 0x00002000) == 0x00002000);
    }
    /**
     * <code>optional uint32 event_location = 47;</code>
     */
    public int getEventLocation() {
      return eventLocation_;
    }

    public static final int TARGET_IS_SELF_FIELD_NUMBER = 48;
    private boolean targetIsSelf_;
    /**
     * <code>optional bool target_is_self = 48;</code>
     */
    public boolean hasTargetIsSelf() {
      return ((bitField1_ & 0x00004000) == 0x00004000);
    }
    /**
     * <code>optional bool target_is_self = 48;</code>
     */
    public boolean getTargetIsSelf() {
      return targetIsSelf_;
    }

    public static final int DAMAGE_TYPE_FIELD_NUMBER = 49;
    private int damageType_;
    /**
     * <code>optional uint32 damage_type = 49;</code>
     */
    public boolean hasDamageType() {
      return ((bitField1_ & 0x00008000) == 0x00008000);
    }
    /**
     * <code>optional uint32 damage_type = 49;</code>
     */
    public int getDamageType() {
      return damageType_;
    }

    public static final int INVISIBILITY_MODIFIER_FIELD_NUMBER = 50;
    private boolean invisibilityModifier_;
    /**
     * <code>optional bool invisibility_modifier = 50;</code>
     */
    public boolean hasInvisibilityModifier() {
      return ((bitField1_ & 0x00010000) == 0x00010000);
    }
    /**
     * <code>optional bool invisibility_modifier = 50;</code>
     */
    public boolean getInvisibilityModifier() {
      return invisibilityModifier_;
    }

    public static final int DAMAGE_CATEGORY_FIELD_NUMBER = 51;
    private int damageCategory_;
    /**
     * <code>optional uint32 damage_category = 51;</code>
     */
    public boolean hasDamageCategory() {
      return ((bitField1_ & 0x00020000) == 0x00020000);
    }
    /**
     * <code>optional uint32 damage_category = 51;</code>
     */
    public int getDamageCategory() {
      return damageCategory_;
    }

    public static final int NETWORTH_FIELD_NUMBER = 52;
    private int networth_;
    /**
     * <code>optional uint32 networth = 52;</code>
     */
    public boolean hasNetworth() {
      return ((bitField1_ & 0x00040000) == 0x00040000);
    }
    /**
     * <code>optional uint32 networth = 52;</code>
     */
    public int getNetworth() {
      return networth_;
    }

    private void initFields() {
      type_ = skadistats.clarity.wire.common.proto.DotaUserMessages.DOTA_COMBATLOG_TYPES.DOTA_COMBATLOG_DAMAGE;
      targetName_ = 0;
      targetSourceName_ = 0;
      attackerName_ = 0;
      damageSourceName_ = 0;
      inflictorName_ = 0;
      isAttackerIllusion_ = false;
      isAttackerHero_ = false;
      isTargetIllusion_ = false;
      isTargetHero_ = false;
      isVisibleRadiant_ = false;
      isVisibleDire_ = false;
      value_ = 0;
      health_ = 0;
      timestamp_ = 0F;
      stunDuration_ = 0F;
      slowDuration_ = 0F;
      isAbilityToggleOn_ = false;
      isAbilityToggleOff_ = false;
      abilityLevel_ = 0;
      locationX_ = 0F;
      locationY_ = 0F;
      goldReason_ = 0;
      timestampRaw_ = 0F;
      modifierDuration_ = 0F;
      xpReason_ = 0;
      lastHits_ = 0;
      attackerTeam_ = 0;
      targetTeam_ = 0;
      obsWardsPlaced_ = 0;
      assistPlayer0_ = 0;
      assistPlayer1_ = 0;
      assistPlayer2_ = 0;
      assistPlayer3_ = 0;
      stackCount_ = 0;
      hiddenModifier_ = false;
      isTargetBuilding_ = false;
      neutralCampType_ = 0;
      runeType_ = 0;
      assistPlayers_ = java.util.Collections.emptyList();
      isHealSave_ = false;
      isUltimateAbility_ = false;
      attackerHeroLevel_ = 0;
      targetHeroLevel_ = 0;
      xpm_ = 0;
      gpm_ = 0;
      eventLocation_ = 0;
      targetIsSelf_ = false;
      damageType_ = 0;
      invisibilityModifier_ = false;
      damageCategory_ = 0;
      networth_ = 0;
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeEnum(1, type_.getNumber());
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeUInt32(2, targetName_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        output.writeUInt32(3, targetSourceName_);
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        output.writeUInt32(4, attackerName_);
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        output.writeUInt32(5, damageSourceName_);
      }
      if (((bitField0_ & 0x00000020) == 0x00000020)) {
        output.writeUInt32(6, inflictorName_);
      }
      if (((bitField0_ & 0x00000040) == 0x00000040)) {
        output.writeBool(7, isAttackerIllusion_);
      }
      if (((bitField0_ & 0x00000080) == 0x00000080)) {
        output.writeBool(8, isAttackerHero_);
      }
      if (((bitField0_ & 0x00000100) == 0x00000100)) {
        output.writeBool(9, isTargetIllusion_);
      }
      if (((bitField0_ & 0x00000200) == 0x00000200)) {
        output.writeBool(10, isTargetHero_);
      }
      if (((bitField0_ & 0x00000400) == 0x00000400)) {
        output.writeBool(11, isVisibleRadiant_);
      }
      if (((bitField0_ & 0x00000800) == 0x00000800)) {
        output.writeBool(12, isVisibleDire_);
      }
      if (((bitField0_ & 0x00001000) == 0x00001000)) {
        output.writeUInt32(13, value_);
      }
      if (((bitField0_ & 0x00002000) == 0x00002000)) {
        output.writeInt32(14, health_);
      }
      if (((bitField0_ & 0x00004000) == 0x00004000)) {
        output.writeFloat(15, timestamp_);
      }
      if (((bitField0_ & 0x00008000) == 0x00008000)) {
        output.writeFloat(16, stunDuration_);
      }
      if (((bitField0_ & 0x00010000) == 0x00010000)) {
        output.writeFloat(17, slowDuration_);
      }
      if (((bitField0_ & 0x00020000) == 0x00020000)) {
        output.writeBool(18, isAbilityToggleOn_);
      }
      if (((bitField0_ & 0x00040000) == 0x00040000)) {
        output.writeBool(19, isAbilityToggleOff_);
      }
      if (((bitField0_ & 0x00080000) == 0x00080000)) {
        output.writeUInt32(20, abilityLevel_);
      }
      if (((bitField0_ & 0x00100000) == 0x00100000)) {
        output.writeFloat(21, locationX_);
      }
      if (((bitField0_ & 0x00200000) == 0x00200000)) {
        output.writeFloat(22, locationY_);
      }
      if (((bitField0_ & 0x00400000) == 0x00400000)) {
        output.writeUInt32(23, goldReason_);
      }
      if (((bitField0_ & 0x00800000) == 0x00800000)) {
        output.writeFloat(24, timestampRaw_);
      }
      if (((bitField0_ & 0x01000000) == 0x01000000)) {
        output.writeFloat(25, modifierDuration_);
      }
      if (((bitField0_ & 0x02000000) == 0x02000000)) {
        output.writeUInt32(26, xpReason_);
      }
      if (((bitField0_ & 0x04000000) == 0x04000000)) {
        output.writeUInt32(27, lastHits_);
      }
      if (((bitField0_ & 0x08000000) == 0x08000000)) {
        output.writeUInt32(28, attackerTeam_);
      }
      if (((bitField0_ & 0x10000000) == 0x10000000)) {
        output.writeUInt32(29, targetTeam_);
      }
      if (((bitField0_ & 0x20000000) == 0x20000000)) {
        output.writeUInt32(30, obsWardsPlaced_);
      }
      if (((bitField0_ & 0x40000000) == 0x40000000)) {
        output.writeUInt32(31, assistPlayer0_);
      }
      if (((bitField0_ & 0x80000000) == 0x80000000)) {
        output.writeUInt32(32, assistPlayer1_);
      }
      if (((bitField1_ & 0x00000001) == 0x00000001)) {
        output.writeUInt32(33, assistPlayer2_);
      }
      if (((bitField1_ & 0x00000002) == 0x00000002)) {
        output.writeUInt32(34, assistPlayer3_);
      }
      if (((bitField1_ & 0x00000004) == 0x00000004)) {
        output.writeUInt32(35, stackCount_);
      }
      if (((bitField1_ & 0x00000008) == 0x00000008)) {
        output.writeBool(36, hiddenModifier_);
      }
      if (((bitField1_ & 0x00000010) == 0x00000010)) {
        output.writeBool(37, isTargetBuilding_);
      }
      if (((bitField1_ & 0x00000020) == 0x00000020)) {
        output.writeUInt32(38, neutralCampType_);
      }
      if (((bitField1_ & 0x00000040) == 0x00000040)) {
        output.writeUInt32(39, runeType_);
      }
      for (int i = 0; i < assistPlayers_.size(); i++) {
        output.writeUInt32(40, assistPlayers_.get(i));
      }
      if (((bitField1_ & 0x00000080) == 0x00000080)) {
        output.writeBool(41, isHealSave_);
      }
      if (((bitField1_ & 0x00000100) == 0x00000100)) {
        output.writeBool(42, isUltimateAbility_);
      }
      if (((bitField1_ & 0x00000200) == 0x00000200)) {
        output.writeUInt32(43, attackerHeroLevel_);
      }
      if (((bitField1_ & 0x00000400) == 0x00000400)) {
        output.writeUInt32(44, targetHeroLevel_);
      }
      if (((bitField1_ & 0x00000800) == 0x00000800)) {
        output.writeUInt32(45, xpm_);
      }
      if (((bitField1_ & 0x00001000) == 0x00001000)) {
        output.writeUInt32(46, gpm_);
      }
      if (((bitField1_ & 0x00002000) == 0x00002000)) {
        output.writeUInt32(47, eventLocation_);
      }
      if (((bitField1_ & 0x00004000) == 0x00004000)) {
        output.writeBool(48, targetIsSelf_);
      }
      if (((bitField1_ & 0x00008000) == 0x00008000)) {
        output.writeUInt32(49, damageType_);
      }
      if (((bitField1_ & 0x00010000) == 0x00010000)) {
        output.writeBool(50, invisibilityModifier_);
      }
      if (((bitField1_ & 0x00020000) == 0x00020000)) {
        output.writeUInt32(51, damageCategory_);
      }
      if (((bitField1_ & 0x00040000) == 0x00040000)) {
        output.writeUInt32(52, networth_);
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeEnumSize(1, type_.getNumber());
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(2, targetName_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(3, targetSourceName_);
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(4, attackerName_);
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(5, damageSourceName_);
      }
      if (((bitField0_ & 0x00000020) == 0x00000020)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(6, inflictorName_);
      }
      if (((bitField0_ & 0x00000040) == 0x00000040)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBoolSize(7, isAttackerIllusion_);
      }
      if (((bitField0_ & 0x00000080) == 0x00000080)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBoolSize(8, isAttackerHero_);
      }
      if (((bitField0_ & 0x00000100) == 0x00000100)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBoolSize(9, isTargetIllusion_);
      }
      if (((bitField0_ & 0x00000200) == 0x00000200)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBoolSize(10, isTargetHero_);
      }
      if (((bitField0_ & 0x00000400) == 0x00000400)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBoolSize(11, isVisibleRadiant_);
      }
      if (((bitField0_ & 0x00000800) == 0x00000800)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBoolSize(12, isVisibleDire_);
      }
      if (((bitField0_ & 0x00001000) == 0x00001000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(13, value_);
      }
      if (((bitField0_ & 0x00002000) == 0x00002000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(14, health_);
      }
      if (((bitField0_ & 0x00004000) == 0x00004000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeFloatSize(15, timestamp_);
      }
      if (((bitField0_ & 0x00008000) == 0x00008000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeFloatSize(16, stunDuration_);
      }
      if (((bitField0_ & 0x00010000) == 0x00010000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeFloatSize(17, slowDuration_);
      }
      if (((bitField0_ & 0x00020000) == 0x00020000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBoolSize(18, isAbilityToggleOn_);
      }
      if (((bitField0_ & 0x00040000) == 0x00040000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBoolSize(19, isAbilityToggleOff_);
      }
      if (((bitField0_ & 0x00080000) == 0x00080000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(20, abilityLevel_);
      }
      if (((bitField0_ & 0x00100000) == 0x00100000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeFloatSize(21, locationX_);
      }
      if (((bitField0_ & 0x00200000) == 0x00200000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeFloatSize(22, locationY_);
      }
      if (((bitField0_ & 0x00400000) == 0x00400000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(23, goldReason_);
      }
      if (((bitField0_ & 0x00800000) == 0x00800000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeFloatSize(24, timestampRaw_);
      }
      if (((bitField0_ & 0x01000000) == 0x01000000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeFloatSize(25, modifierDuration_);
      }
      if (((bitField0_ & 0x02000000) == 0x02000000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(26, xpReason_);
      }
      if (((bitField0_ & 0x04000000) == 0x04000000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(27, lastHits_);
      }
      if (((bitField0_ & 0x08000000) == 0x08000000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(28, attackerTeam_);
      }
      if (((bitField0_ & 0x10000000) == 0x10000000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(29, targetTeam_);
      }
      if (((bitField0_ & 0x20000000) == 0x20000000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(30, obsWardsPlaced_);
      }
      if (((bitField0_ & 0x40000000) == 0x40000000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(31, assistPlayer0_);
      }
      if (((bitField0_ & 0x80000000) == 0x80000000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(32, assistPlayer1_);
      }
      if (((bitField1_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(33, assistPlayer2_);
      }
      if (((bitField1_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(34, assistPlayer3_);
      }
      if (((bitField1_ & 0x00000004) == 0x00000004)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(35, stackCount_);
      }
      if (((bitField1_ & 0x00000008) == 0x00000008)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBoolSize(36, hiddenModifier_);
      }
      if (((bitField1_ & 0x00000010) == 0x00000010)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBoolSize(37, isTargetBuilding_);
      }
      if (((bitField1_ & 0x00000020) == 0x00000020)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(38, neutralCampType_);
      }
      if (((bitField1_ & 0x00000040) == 0x00000040)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(39, runeType_);
      }
      {
        int dataSize = 0;
        for (int i = 0; i < assistPlayers_.size(); i++) {
          dataSize += com.google.protobuf.CodedOutputStream
            .computeUInt32SizeNoTag(assistPlayers_.get(i));
        }
        size += dataSize;
        size += 2 * getAssistPlayersList().size();
      }
      if (((bitField1_ & 0x00000080) == 0x00000080)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBoolSize(41, isHealSave_);
      }
      if (((bitField1_ & 0x00000100) == 0x00000100)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBoolSize(42, isUltimateAbility_);
      }
      if (((bitField1_ & 0x00000200) == 0x00000200)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(43, attackerHeroLevel_);
      }
      if (((bitField1_ & 0x00000400) == 0x00000400)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(44, targetHeroLevel_);
      }
      if (((bitField1_ & 0x00000800) == 0x00000800)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(45, xpm_);
      }
      if (((bitField1_ & 0x00001000) == 0x00001000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(46, gpm_);
      }
      if (((bitField1_ & 0x00002000) == 0x00002000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(47, eventLocation_);
      }
      if (((bitField1_ & 0x00004000) == 0x00004000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBoolSize(48, targetIsSelf_);
      }
      if (((bitField1_ & 0x00008000) == 0x00008000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(49, damageType_);
      }
      if (((bitField1_ & 0x00010000) == 0x00010000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBoolSize(50, invisibilityModifier_);
      }
      if (((bitField1_ & 0x00020000) == 0x00020000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(51, damageCategory_);
      }
      if (((bitField1_ & 0x00040000) == 0x00040000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(52, networth_);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static skadistats.clarity.wire.common.proto.DotaUserMessages.CMsgDOTACombatLogEntry parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static skadistats.clarity.wire.common.proto.DotaUserMessages.CMsgDOTACombatLogEntry parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static skadistats.clarity.wire.common.proto.DotaUserMessages.CMsgDOTACombatLogEntry parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static skadistats.clarity.wire.common.proto.DotaUserMessages.CMsgDOTACombatLogEntry parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static skadistats.clarity.wire.common.proto.DotaUserMessages.CMsgDOTACombatLogEntry parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static skadistats.clarity.wire.common.proto.DotaUserMessages.CMsgDOTACombatLogEntry parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static skadistats.clarity.wire.common.proto.DotaUserMessages.CMsgDOTACombatLogEntry parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static skadistats.clarity.wire.common.proto.DotaUserMessages.CMsgDOTACombatLogEntry parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static skadistats.clarity.wire.common.proto.DotaUserMessages.CMsgDOTACombatLogEntry parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static skadistats.clarity.wire.common.proto.DotaUserMessages.CMsgDOTACombatLogEntry parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(skadistats.clarity.wire.common.proto.DotaUserMessages.CMsgDOTACombatLogEntry prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code CMsgDOTACombatLogEntry}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:CMsgDOTACombatLogEntry)
        skadistats.clarity.wire.common.proto.DotaUserMessages.CMsgDOTACombatLogEntryOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return skadistats.clarity.wire.common.proto.DotaUserMessages.internal_static_CMsgDOTACombatLogEntry_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return skadistats.clarity.wire.common.proto.DotaUserMessages.internal_static_CMsgDOTACombatLogEntry_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                skadistats.clarity.wire.common.proto.DotaUserMessages.CMsgDOTACombatLogEntry.class, skadistats.clarity.wire.common.proto.DotaUserMessages.CMsgDOTACombatLogEntry.Builder.class);
      }

      // Construct using skadistats.clarity.wire.common.proto.DotaUserMessages.CMsgDOTACombatLogEntry.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        type_ = skadistats.clarity.wire.common.proto.DotaUserMessages.DOTA_COMBATLOG_TYPES.DOTA_COMBATLOG_DAMAGE;
        bitField0_ = (bitField0_ & ~0x00000001);
        targetName_ = 0;
        bitField0_ = (bitField0_ & ~0x00000002);
        targetSourceName_ = 0;
        bitField0_ = (bitField0_ & ~0x00000004);
        attackerName_ = 0;
        bitField0_ = (bitField0_ & ~0x00000008);
        damageSourceName_ = 0;
        bitField0_ = (bitField0_ & ~0x00000010);
        inflictorName_ = 0;
        bitField0_ = (bitField0_ & ~0x00000020);
        isAttackerIllusion_ = false;
        bitField0_ = (bitField0_ & ~0x00000040);
        isAttackerHero_ = false;
        bitField0_ = (bitField0_ & ~0x00000080);
        isTargetIllusion_ = false;
        bitField0_ = (bitField0_ & ~0x00000100);
        isTargetHero_ = false;
        bitField0_ = (bitField0_ & ~0x00000200);
        isVisibleRadiant_ = false;
        bitField0_ = (bitField0_ & ~0x00000400);
        isVisibleDire_ = false;
        bitField0_ = (bitField0_ & ~0x00000800);
        value_ = 0;
        bitField0_ = (bitField0_ & ~0x00001000);
        health_ = 0;
        bitField0_ = (bitField0_ & ~0x00002000);
        timestamp_ = 0F;
        bitField0_ = (bitField0_ & ~0x00004000);
        stunDuration_ = 0F;
        bitField0_ = (bitField0_ & ~0x00008000);
        slowDuration_ = 0F;
        bitField0_ = (bitField0_ & ~0x00010000);
        isAbilityToggleOn_ = false;
        bitField0_ = (bitField0_ & ~0x00020000);
        isAbilityToggleOff_ = false;
        bitField0_ = (bitField0_ & ~0x00040000);
        abilityLevel_ = 0;
        bitField0_ = (bitField0_ & ~0x00080000);
        locationX_ = 0F;
        bitField0_ = (bitField0_ & ~0x00100000);
        locationY_ = 0F;
        bitField0_ = (bitField0_ & ~0x00200000);
        goldReason_ = 0;
        bitField0_ = (bitField0_ & ~0x00400000);
        timestampRaw_ = 0F;
        bitField0_ = (bitField0_ & ~0x00800000);
        modifierDuration_ = 0F;
        bitField0_ = (bitField0_ & ~0x01000000);
        xpReason_ = 0;
        bitField0_ = (bitField0_ & ~0x02000000);
        lastHits_ = 0;
        bitField0_ = (bitField0_ & ~0x04000000);
        attackerTeam_ = 0;
        bitField0_ = (bitField0_ & ~0x08000000);
        targetTeam_ = 0;
        bitField0_ = (bitField0_ & ~0x10000000);
        obsWardsPlaced_ = 0;
        bitField0_ = (bitField0_ & ~0x20000000);
        assistPlayer0_ = 0;
        bitField0_ = (bitField0_ & ~0x40000000);
        assistPlayer1_ = 0;
        bitField0_ = (bitField0_ & ~0x80000000);
        assistPlayer2_ = 0;
        bitField1_ = (bitField1_ & ~0x00000001);
        assistPlayer3_ = 0;
        bitField1_ = (bitField1_ & ~0x00000002);
        stackCount_ = 0;
        bitField1_ = (bitField1_ & ~0x00000004);
        hiddenModifier_ = false;
        bitField1_ = (bitField1_ & ~0x00000008);
        isTargetBuilding_ = false;
        bitField1_ = (bitField1_ & ~0x00000010);
        neutralCampType_ = 0;
        bitField1_ = (bitField1_ & ~0x00000020);
        runeType_ = 0;
        bitField1_ = (bitField1_ & ~0x00000040);
        assistPlayers_ = java.util.Collections.emptyList();
        bitField1_ = (bitField1_ & ~0x00000080);
        isHealSave_ = false;
        bitField1_ = (bitField1_ & ~0x00000100);
        isUltimateAbility_ = false;
        bitField1_ = (bitField1_ & ~0x00000200);
        attackerHeroLevel_ = 0;
        bitField1_ = (bitField1_ & ~0x00000400);
        targetHeroLevel_ = 0;
        bitField1_ = (bitField1_ & ~0x00000800);
        xpm_ = 0;
        bitField1_ = (bitField1_ & ~0x00001000);
        gpm_ = 0;
        bitField1_ = (bitField1_ & ~0x00002000);
        eventLocation_ = 0;
        bitField1_ = (bitField1_ & ~0x00004000);
        targetIsSelf_ = false;
        bitField1_ = (bitField1_ & ~0x00008000);
        damageType_ = 0;
        bitField1_ = (bitField1_ & ~0x00010000);
        invisibilityModifier_ = false;
        bitField1_ = (bitField1_ & ~0x00020000);
        damageCategory_ = 0;
        bitField1_ = (bitField1_ & ~0x00040000);
        networth_ = 0;
        bitField1_ = (bitField1_ & ~0x00080000);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return skadistats.clarity.wire.common.proto.DotaUserMessages.internal_static_CMsgDOTACombatLogEntry_descriptor;
      }

      public skadistats.clarity.wire.common.proto.DotaUserMessages.CMsgDOTACombatLogEntry getDefaultInstanceForType() {
        return skadistats.clarity.wire.common.proto.DotaUserMessages.CMsgDOTACombatLogEntry.getDefaultInstance();
      }

      public skadistats.clarity.wire.common.proto.DotaUserMessages.CMsgDOTACombatLogEntry build() {
        skadistats.clarity.wire.common.proto.DotaUserMessages.CMsgDOTACombatLogEntry result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public skadistats.clarity.wire.common.proto.DotaUserMessages.CMsgDOTACombatLogEntry buildPartial() {
        skadistats.clarity.wire.common.proto.DotaUserMessages.CMsgDOTACombatLogEntry result = new skadistats.clarity.wire.common.proto.DotaUserMessages.CMsgDOTACombatLogEntry(this);
        int from_bitField0_ = bitField0_;
        int from_bitField1_ = bitField1_;
        int to_bitField0_ = 0;
        int to_bitField1_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.type_ = type_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.targetName_ = targetName_;
        if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
          to_bitField0_ |= 0x00000004;
        }
        result.targetSourceName_ = targetSourceName_;
        if (((from_bitField0_ & 0x00000008) == 0x00000008)) {
          to_bitField0_ |= 0x00000008;
        }
        result.attackerName_ = attackerName_;
        if (((from_bitField0_ & 0x00000010) == 0x00000010)) {
          to_bitField0_ |= 0x00000010;
        }
        result.damageSourceName_ = damageSourceName_;
        if (((from_bitField0_ & 0x00000020) == 0x00000020)) {
          to_bitField0_ |= 0x00000020;
        }
        result.inflictorName_ = inflictorName_;
        if (((from_bitField0_ & 0x00000040) == 0x00000040)) {
          to_bitField0_ |= 0x00000040;
        }
        result.isAttackerIllusion_ = isAttackerIllusion_;
        if (((from_bitField0_ & 0x00000080) == 0x00000080)) {
          to_bitField0_ |= 0x00000080;
        }
        result.isAttackerHero_ = isAttackerHero_;
        if (((from_bitField0_ & 0x00000100) == 0x00000100)) {
          to_bitField0_ |= 0x00000100;
        }
        result.isTargetIllusion_ = isTargetIllusion_;
        if (((from_bitField0_ & 0x00000200) == 0x00000200)) {
          to_bitField0_ |= 0x00000200;
        }
        result.isTargetHero_ = isTargetHero_;
        if (((from_bitField0_ & 0x00000400) == 0x00000400)) {
          to_bitField0_ |= 0x00000400;
        }
        result.isVisibleRadiant_ = isVisibleRadiant_;
        if (((from_bitField0_ & 0x00000800) == 0x00000800)) {
          to_bitField0_ |= 0x00000800;
        }
        result.isVisibleDire_ = isVisibleDire_;
        if (((from_bitField0_ & 0x00001000) == 0x00001000)) {
          to_bitField0_ |= 0x00001000;
        }
        result.value_ = value_;
        if (((from_bitField0_ & 0x00002000) == 0x00002000)) {
          to_bitField0_ |= 0x00002000;
        }
        result.health_ = health_;
        if (((from_bitField0_ & 0x00004000) == 0x00004000)) {
          to_bitField0_ |= 0x00004000;
        }
        result.timestamp_ = timestamp_;
        if (((from_bitField0_ & 0x00008000) == 0x00008000)) {
          to_bitField0_ |= 0x00008000;
        }
        result.stunDuration_ = stunDuration_;
        if (((from_bitField0_ & 0x00010000) == 0x00010000)) {
          to_bitField0_ |= 0x00010000;
        }
        result.slowDuration_ = slowDuration_;
        if (((from_bitField0_ & 0x00020000) == 0x00020000)) {
          to_bitField0_ |= 0x00020000;
        }
        result.isAbilityToggleOn_ = isAbilityToggleOn_;
        if (((from_bitField0_ & 0x00040000) == 0x00040000)) {
          to_bitField0_ |= 0x00040000;
        }
        result.isAbilityToggleOff_ = isAbilityToggleOff_;
        if (((from_bitField0_ & 0x00080000) == 0x00080000)) {
          to_bitField0_ |= 0x00080000;
        }
        result.abilityLevel_ = abilityLevel_;
        if (((from_bitField0_ & 0x00100000) == 0x00100000)) {
          to_bitField0_ |= 0x00100000;
        }
        result.locationX_ = locationX_;
        if (((from_bitField0_ & 0x00200000) == 0x00200000)) {
          to_bitField0_ |= 0x00200000;
        }
        result.locationY_ = locationY_;
        if (((from_bitField0_ & 0x00400000) == 0x00400000)) {
          to_bitField0_ |= 0x00400000;
        }
        result.goldReason_ = goldReason_;
        if (((from_bitField0_ & 0x00800000) == 0x00800000)) {
          to_bitField0_ |= 0x00800000;
        }
        result.timestampRaw_ = timestampRaw_;
        if (((from_bitField0_ & 0x01000000) == 0x01000000)) {
          to_bitField0_ |= 0x01000000;
        }
        result.modifierDuration_ = modifierDuration_;
        if (((from_bitField0_ & 0x02000000) == 0x02000000)) {
          to_bitField0_ |= 0x02000000;
        }
        result.xpReason_ = xpReason_;
        if (((from_bitField0_ & 0x04000000) == 0x04000000)) {
          to_bitField0_ |= 0x04000000;
        }
        result.lastHits_ = lastHits_;
        if (((from_bitField0_ & 0x08000000) == 0x08000000)) {
          to_bitField0_ |= 0x08000000;
        }
        result.attackerTeam_ = attackerTeam_;
        if (((from_bitField0_ & 0x10000000) == 0x10000000)) {
          to_bitField0_ |= 0x10000000;
        }
        result.targetTeam_ = targetTeam_;
        if (((from_bitField0_ & 0x20000000) == 0x20000000)) {
          to_bitField0_ |= 0x20000000;
        }
        result.obsWardsPlaced_ = obsWardsPlaced_;
        if (((from_bitField0_ & 0x40000000) == 0x40000000)) {
          to_bitField0_ |= 0x40000000;
        }
        result.assistPlayer0_ = assistPlayer0_;
        if (((from_bitField0_ & 0x80000000) == 0x80000000)) {
          to_bitField0_ |= 0x80000000;
        }
        result.assistPlayer1_ = assistPlayer1_;
        if (((from_bitField1_ & 0x00000001) == 0x00000001)) {
          to_bitField1_ |= 0x00000001;
        }
        result.assistPlayer2_ = assistPlayer2_;
        if (((from_bitField1_ & 0x00000002) == 0x00000002)) {
          to_bitField1_ |= 0x00000002;
        }
        result.assistPlayer3_ = assistPlayer3_;
        if (((from_bitField1_ & 0x00000004) == 0x00000004)) {
          to_bitField1_ |= 0x00000004;
        }
        result.stackCount_ = stackCount_;
        if (((from_bitField1_ & 0x00000008) == 0x00000008)) {
          to_bitField1_ |= 0x00000008;
        }
        result.hiddenModifier_ = hiddenModifier_;
        if (((from_bitField1_ & 0x00000010) == 0x00000010)) {
          to_bitField1_ |= 0x00000010;
        }
        result.isTargetBuilding_ = isTargetBuilding_;
        if (((from_bitField1_ & 0x00000020) == 0x00000020)) {
          to_bitField1_ |= 0x00000020;
        }
        result.neutralCampType_ = neutralCampType_;
        if (((from_bitField1_ & 0x00000040) == 0x00000040)) {
          to_bitField1_ |= 0x00000040;
        }
        result.runeType_ = runeType_;
        if (((bitField1_ & 0x00000080) == 0x00000080)) {
          assistPlayers_ = java.util.Collections.unmodifiableList(assistPlayers_);
          bitField1_ = (bitField1_ & ~0x00000080);
        }
        result.assistPlayers_ = assistPlayers_;
        if (((from_bitField1_ & 0x00000100) == 0x00000100)) {
          to_bitField1_ |= 0x00000080;
        }
        result.isHealSave_ = isHealSave_;
        if (((from_bitField1_ & 0x00000200) == 0x00000200)) {
          to_bitField1_ |= 0x00000100;
        }
        result.isUltimateAbility_ = isUltimateAbility_;
        if (((from_bitField1_ & 0x00000400) == 0x00000400)) {
          to_bitField1_ |= 0x00000200;
        }
        result.attackerHeroLevel_ = attackerHeroLevel_;
        if (((from_bitField1_ & 0x00000800) == 0x00000800)) {
          to_bitField1_ |= 0x00000400;
        }
        result.targetHeroLevel_ = targetHeroLevel_;
        if (((from_bitField1_ & 0x00001000) == 0x00001000)) {
          to_bitField1_ |= 0x00000800;
        }
        result.xpm_ = xpm_;
        if (((from_bitField1_ & 0x00002000) == 0x00002000)) {
          to_bitField1_ |= 0x00001000;
        }
        result.gpm_ = gpm_;
        if (((from_bitField1_ & 0x00004000) == 0x00004000)) {
          to_bitField1_ |= 0x00002000;
        }
        result.eventLocation_ = eventLocation_;
        if (((from_bitField1_ & 0x00008000) == 0x00008000)) {
          to_bitField1_ |= 0x00004000;
        }
        result.targetIsSelf_ = targetIsSelf_;
        if (((from_bitField1_ & 0x00010000) == 0x00010000)) {
          to_bitField1_ |= 0x00008000;
        }
        result.damageType_ = damageType_;
        if (((from_bitField1_ & 0x00020000) == 0x00020000)) {
          to_bitField1_ |= 0x00010000;
        }
        result.invisibilityModifier_ = invisibilityModifier_;
        if (((from_bitField1_ & 0x00040000) == 0x00040000)) {
          to_bitField1_ |= 0x00020000;
        }
        result.damageCategory_ = damageCategory_;
        if (((from_bitField1_ & 0x00080000) == 0x00080000)) {
          to_bitField1_ |= 0x00040000;
        }
        result.networth_ = networth_;
        result.bitField0_ = to_bitField0_;
        result.bitField1_ = to_bitField1_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof skadistats.clarity.wire.common.proto.DotaUserMessages.CMsgDOTACombatLogEntry) {
          return mergeFrom((skadistats.clarity.wire.common.proto.DotaUserMessages.CMsgDOTACombatLogEntry)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(skadistats.clarity.wire.common.proto.DotaUserMessages.CMsgDOTACombatLogEntry other) {
        if (other == skadistats.clarity.wire.common.proto.DotaUserMessages.CMsgDOTACombatLogEntry.getDefaultInstance()) return this;
        if (other.hasType()) {
          setType(other.getType());
        }
        if (other.hasTargetName()) {
          setTargetName(other.getTargetName());
        }
        if (other.hasTargetSourceName()) {
          setTargetSourceName(other.getTargetSourceName());
        }
        if (other.hasAttackerName()) {
          setAttackerName(other.getAttackerName());
        }
        if (other.hasDamageSourceName()) {
          setDamageSourceName(other.getDamageSourceName());
        }
        if (other.hasInflictorName()) {
          setInflictorName(other.getInflictorName());
        }
        if (other.hasIsAttackerIllusion()) {
          setIsAttackerIllusion(other.getIsAttackerIllusion());
        }
        if (other.hasIsAttackerHero()) {
          setIsAttackerHero(other.getIsAttackerHero());
        }
        if (other.hasIsTargetIllusion()) {
          setIsTargetIllusion(other.getIsTargetIllusion());
        }
        if (other.hasIsTargetHero()) {
          setIsTargetHero(other.getIsTargetHero());
        }
        if (other.hasIsVisibleRadiant()) {
          setIsVisibleRadiant(other.getIsVisibleRadiant());
        }
        if (other.hasIsVisibleDire()) {
          setIsVisibleDire(other.getIsVisibleDire());
        }
        if (other.hasValue()) {
          setValue(other.getValue());
        }
        if (other.hasHealth()) {
          setHealth(other.getHealth());
        }
        if (other.hasTimestamp()) {
          setTimestamp(other.getTimestamp());
        }
        if (other.hasStunDuration()) {
          setStunDuration(other.getStunDuration());
        }
        if (other.hasSlowDuration()) {
          setSlowDuration(other.getSlowDuration());
        }
        if (other.hasIsAbilityToggleOn()) {
          setIsAbilityToggleOn(other.getIsAbilityToggleOn());
        }
        if (other.hasIsAbilityToggleOff()) {
          setIsAbilityToggleOff(other.getIsAbilityToggleOff());
        }
        if (other.hasAbilityLevel()) {
          setAbilityLevel(other.getAbilityLevel());
        }
        if (other.hasLocationX()) {
          setLocationX(other.getLocationX());
        }
        if (other.hasLocationY()) {
          setLocationY(other.getLocationY());
        }
        if (other.hasGoldReason()) {
          setGoldReason(other.getGoldReason());
        }
        if (other.hasTimestampRaw()) {
          setTimestampRaw(other.getTimestampRaw());
        }
        if (other.hasModifierDuration()) {
          setModifierDuration(other.getModifierDuration());
        }
        if (other.hasXpReason()) {
          setXpReason(other.getXpReason());
        }
        if (other.hasLastHits()) {
          setLastHits(other.getLastHits());
        }
        if (other.hasAttackerTeam()) {
          setAttackerTeam(other.getAttackerTeam());
        }
        if (other.hasTargetTeam()) {
          setTargetTeam(other.getTargetTeam());
        }
        if (other.hasObsWardsPlaced()) {
          setObsWardsPlaced(other.getObsWardsPlaced());
        }
        if (other.hasAssistPlayer0()) {
          setAssistPlayer0(other.getAssistPlayer0());
        }
        if (other.hasAssistPlayer1()) {
          setAssistPlayer1(other.getAssistPlayer1());
        }
        if (other.hasAssistPlayer2()) {
          setAssistPlayer2(other.getAssistPlayer2());
        }
        if (other.hasAssistPlayer3()) {
          setAssistPlayer3(other.getAssistPlayer3());
        }
        if (other.hasStackCount()) {
          setStackCount(other.getStackCount());
        }
        if (other.hasHiddenModifier()) {
          setHiddenModifier(other.getHiddenModifier());
        }
        if (other.hasIsTargetBuilding()) {
          setIsTargetBuilding(other.getIsTargetBuilding());
        }
        if (other.hasNeutralCampType()) {
          setNeutralCampType(other.getNeutralCampType());
        }
        if (other.hasRuneType()) {
          setRuneType(other.getRuneType());
        }
        if (!other.assistPlayers_.isEmpty()) {
          if (assistPlayers_.isEmpty()) {
            assistPlayers_ = other.assistPlayers_;
            bitField1_ = (bitField1_ & ~0x00000080);
          } else {
            ensureAssistPlayersIsMutable();
            assistPlayers_.addAll(other.assistPlayers_);
          }
          onChanged();
        }
        if (other.hasIsHealSave()) {
          setIsHealSave(other.getIsHealSave());
        }
        if (other.hasIsUltimateAbility()) {
          setIsUltimateAbility(other.getIsUltimateAbility());
        }
        if (other.hasAttackerHeroLevel()) {
          setAttackerHeroLevel(other.getAttackerHeroLevel());
        }
        if (other.hasTargetHeroLevel()) {
          setTargetHeroLevel(other.getTargetHeroLevel());
        }
        if (other.hasXpm()) {
          setXpm(other.getXpm());
        }
        if (other.hasGpm()) {
          setGpm(other.getGpm());
        }
        if (other.hasEventLocation()) {
          setEventLocation(other.getEventLocation());
        }
        if (other.hasTargetIsSelf()) {
          setTargetIsSelf(other.getTargetIsSelf());
        }
        if (other.hasDamageType()) {
          setDamageType(other.getDamageType());
        }
        if (other.hasInvisibilityModifier()) {
          setInvisibilityModifier(other.getInvisibilityModifier());
        }
        if (other.hasDamageCategory()) {
          setDamageCategory(other.getDamageCategory());
        }
        if (other.hasNetworth()) {
          setNetworth(other.getNetworth());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        skadistats.clarity.wire.common.proto.DotaUserMessages.CMsgDOTACombatLogEntry parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (skadistats.clarity.wire.common.proto.DotaUserMessages.CMsgDOTACombatLogEntry) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;
      private int bitField1_;

      private skadistats.clarity.wire.common.proto.DotaUserMessages.DOTA_COMBATLOG_TYPES type_ = skadistats.clarity.wire.common.proto.DotaUserMessages.DOTA_COMBATLOG_TYPES.DOTA_COMBATLOG_DAMAGE;
      /**
       * <code>optional .DOTA_COMBATLOG_TYPES type = 1 [default = DOTA_COMBATLOG_DAMAGE];</code>
       */
      public boolean hasType() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>optional .DOTA_COMBATLOG_TYPES type = 1 [default = DOTA_COMBATLOG_DAMAGE];</code>
       */
      public skadistats.clarity.wire.common.proto.DotaUserMessages.DOTA_COMBATLOG_TYPES getType() {
        return type_;
      }
      /**
       * <code>optional .DOTA_COMBATLOG_TYPES type = 1 [default = DOTA_COMBATLOG_DAMAGE];</code>
       */
      public Builder setType(skadistats.clarity.wire.common.proto.DotaUserMessages.DOTA_COMBATLOG_TYPES value) {
        if (value == null) {
          throw new NullPointerException();
        }
        bitField0_ |= 0x00000001;
        type_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional .DOTA_COMBATLOG_TYPES type = 1 [default = DOTA_COMBATLOG_DAMAGE];</code>
       */
      public Builder clearType() {
        bitField0_ = (bitField0_ & ~0x00000001);
        type_ = skadistats.clarity.wire.common.proto.DotaUserMessages.DOTA_COMBATLOG_TYPES.DOTA_COMBATLOG_DAMAGE;
        onChanged();
        return this;
      }

      private int targetName_ ;
      /**
       * <code>optional uint32 target_name = 2;</code>
       */
      public boolean hasTargetName() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>optional uint32 target_name = 2;</code>
       */
      public int getTargetName() {
        return targetName_;
      }
      /**
       * <code>optional uint32 target_name = 2;</code>
       */
      public Builder setTargetName(int value) {
        bitField0_ |= 0x00000002;
        targetName_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional uint32 target_name = 2;</code>
       */
      public Builder clearTargetName() {
        bitField0_ = (bitField0_ & ~0x00000002);
        targetName_ = 0;
        onChanged();
        return this;
      }

      private int targetSourceName_ ;
      /**
       * <code>optional uint32 target_source_name = 3;</code>
       */
      public boolean hasTargetSourceName() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }
      /**
       * <code>optional uint32 target_source_name = 3;</code>
       */
      public int getTargetSourceName() {
        return targetSourceName_;
      }
      /**
       * <code>optional uint32 target_source_name = 3;</code>
       */
      public Builder setTargetSourceName(int value) {
        bitField0_ |= 0x00000004;
        targetSourceName_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional uint32 target_source_name = 3;</code>
       */
      public Builder clearTargetSourceName() {
        bitField0_ = (bitField0_ & ~0x00000004);
        targetSourceName_ = 0;
        onChanged();
        return this;
      }

      private int attackerName_ ;
      /**
       * <code>optional uint32 attacker_name = 4;</code>
       */
      public boolean hasAttackerName() {
        return ((bitField0_ & 0x00000008) == 0x00000008);
      }
      /**
       * <code>optional uint32 attacker_name = 4;</code>
       */
      public int getAttackerName() {
        return attackerName_;
      }
      /**
       * <code>optional uint32 attacker_name = 4;</code>
       */
      public Builder setAttackerName(int value) {
        bitField0_ |= 0x00000008;
        attackerName_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional uint32 attacker_name = 4;</code>
       */
      public Builder clearAttackerName() {
        bitField0_ = (bitField0_ & ~0x00000008);
        attackerName_ = 0;
        onChanged();
        return this;
      }

      private int damageSourceName_ ;
      /**
       * <code>optional uint32 damage_source_name = 5;</code>
       */
      public boolean hasDamageSourceName() {
        return ((bitField0_ & 0x00000010) == 0x00000010);
      }
      /**
       * <code>optional uint32 damage_source_name = 5;</code>
       */
      public int getDamageSourceName() {
        return damageSourceName_;
      }
      /**
       * <code>optional uint32 damage_source_name = 5;</code>
       */
      public Builder setDamageSourceName(int value) {
        bitField0_ |= 0x00000010;
        damageSourceName_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional uint32 damage_source_name = 5;</code>
       */
      public Builder clearDamageSourceName() {
        bitField0_ = (bitField0_ & ~0x00000010);
        damageSourceName_ = 0;
        onChanged();
        return this;
      }

      private int inflictorName_ ;
      /**
       * <code>optional uint32 inflictor_name = 6;</code>
       */
      public boolean hasInflictorName() {
        return ((bitField0_ & 0x00000020) == 0x00000020);
      }
      /**
       * <code>optional uint32 inflictor_name = 6;</code>
       */
      public int getInflictorName() {
        return inflictorName_;
      }
      /**
       * <code>optional uint32 inflictor_name = 6;</code>
       */
      public Builder setInflictorName(int value) {
        bitField0_ |= 0x00000020;
        inflictorName_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional uint32 inflictor_name = 6;</code>
       */
      public Builder clearInflictorName() {
        bitField0_ = (bitField0_ & ~0x00000020);
        inflictorName_ = 0;
        onChanged();
        return this;
      }

      private boolean isAttackerIllusion_ ;
      /**
       * <code>optional bool is_attacker_illusion = 7;</code>
       */
      public boolean hasIsAttackerIllusion() {
        return ((bitField0_ & 0x00000040) == 0x00000040);
      }
      /**
       * <code>optional bool is_attacker_illusion = 7;</code>
       */
      public boolean getIsAttackerIllusion() {
        return isAttackerIllusion_;
      }
      /**
       * <code>optional bool is_attacker_illusion = 7;</code>
       */
      public Builder setIsAttackerIllusion(boolean value) {
        bitField0_ |= 0x00000040;
        isAttackerIllusion_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional bool is_attacker_illusion = 7;</code>
       */
      public Builder clearIsAttackerIllusion() {
        bitField0_ = (bitField0_ & ~0x00000040);
        isAttackerIllusion_ = false;
        onChanged();
        return this;
      }

      private boolean isAttackerHero_ ;
      /**
       * <code>optional bool is_attacker_hero = 8;</code>
       */
      public boolean hasIsAttackerHero() {
        return ((bitField0_ & 0x00000080) == 0x00000080);
      }
      /**
       * <code>optional bool is_attacker_hero = 8;</code>
       */
      public boolean getIsAttackerHero() {
        return isAttackerHero_;
      }
      /**
       * <code>optional bool is_attacker_hero = 8;</code>
       */
      public Builder setIsAttackerHero(boolean value) {
        bitField0_ |= 0x00000080;
        isAttackerHero_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional bool is_attacker_hero = 8;</code>
       */
      public Builder clearIsAttackerHero() {
        bitField0_ = (bitField0_ & ~0x00000080);
        isAttackerHero_ = false;
        onChanged();
        return this;
      }

      private boolean isTargetIllusion_ ;
      /**
       * <code>optional bool is_target_illusion = 9;</code>
       */
      public boolean hasIsTargetIllusion() {
        return ((bitField0_ & 0x00000100) == 0x00000100);
      }
      /**
       * <code>optional bool is_target_illusion = 9;</code>
       */
      public boolean getIsTargetIllusion() {
        return isTargetIllusion_;
      }
      /**
       * <code>optional bool is_target_illusion = 9;</code>
       */
      public Builder setIsTargetIllusion(boolean value) {
        bitField0_ |= 0x00000100;
        isTargetIllusion_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional bool is_target_illusion = 9;</code>
       */
      public Builder clearIsTargetIllusion() {
        bitField0_ = (bitField0_ & ~0x00000100);
        isTargetIllusion_ = false;
        onChanged();
        return this;
      }

      private boolean isTargetHero_ ;
      /**
       * <code>optional bool is_target_hero = 10;</code>
       */
      public boolean hasIsTargetHero() {
        return ((bitField0_ & 0x00000200) == 0x00000200);
      }
      /**
       * <code>optional bool is_target_hero = 10;</code>
       */
      public boolean getIsTargetHero() {
        return isTargetHero_;
      }
      /**
       * <code>optional bool is_target_hero = 10;</code>
       */
      public Builder setIsTargetHero(boolean value) {
        bitField0_ |= 0x00000200;
        isTargetHero_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional bool is_target_hero = 10;</code>
       */
      public Builder clearIsTargetHero() {
        bitField0_ = (bitField0_ & ~0x00000200);
        isTargetHero_ = false;
        onChanged();
        return this;
      }

      private boolean isVisibleRadiant_ ;
      /**
       * <code>optional bool is_visible_radiant = 11;</code>
       */
      public boolean hasIsVisibleRadiant() {
        return ((bitField0_ & 0x00000400) == 0x00000400);
      }
      /**
       * <code>optional bool is_visible_radiant = 11;</code>
       */
      public boolean getIsVisibleRadiant() {
        return isVisibleRadiant_;
      }
      /**
       * <code>optional bool is_visible_radiant = 11;</code>
       */
      public Builder setIsVisibleRadiant(boolean value) {
        bitField0_ |= 0x00000400;
        isVisibleRadiant_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional bool is_visible_radiant = 11;</code>
       */
      public Builder clearIsVisibleRadiant() {
        bitField0_ = (bitField0_ & ~0x00000400);
        isVisibleRadiant_ = false;
        onChanged();
        return this;
      }

      private boolean isVisibleDire_ ;
      /**
       * <code>optional bool is_visible_dire = 12;</code>
       */
      public boolean hasIsVisibleDire() {
        return ((bitField0_ & 0x00000800) == 0x00000800);
      }
      /**
       * <code>optional bool is_visible_dire = 12;</code>
       */
      public boolean getIsVisibleDire() {
        return isVisibleDire_;
      }
      /**
       * <code>optional bool is_visible_dire = 12;</code>
       */
      public Builder setIsVisibleDire(boolean value) {
        bitField0_ |= 0x00000800;
        isVisibleDire_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional bool is_visible_dire = 12;</code>
       */
      public Builder clearIsVisibleDire() {
        bitField0_ = (bitField0_ & ~0x00000800);
        isVisibleDire_ = false;
        onChanged();
        return this;
      }

      private int value_ ;
      /**
       * <code>optional uint32 value = 13;</code>
       */
      public boolean hasValue() {
        return ((bitField0_ & 0x00001000) == 0x00001000);
      }
      /**
       * <code>optional uint32 value = 13;</code>
       */
      public int getValue() {
        return value_;
      }
      /**
       * <code>optional uint32 value = 13;</code>
       */
      public Builder setValue(int value) {
        bitField0_ |= 0x00001000;
        value_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional uint32 value = 13;</code>
       */
      public Builder clearValue() {
        bitField0_ = (bitField0_ & ~0x00001000);
        value_ = 0;
        onChanged();
        return this;
      }

      private int health_ ;
      /**
       * <code>optional int32 health = 14;</code>
       */
      public boolean hasHealth() {
        return ((bitField0_ & 0x00002000) == 0x00002000);
      }
      /**
       * <code>optional int32 health = 14;</code>
       */
      public int getHealth() {
        return health_;
      }
      /**
       * <code>optional int32 health = 14;</code>
       */
      public Builder setHealth(int value) {
        bitField0_ |= 0x00002000;
        health_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 health = 14;</code>
       */
      public Builder clearHealth() {
        bitField0_ = (bitField0_ & ~0x00002000);
        health_ = 0;
        onChanged();
        return this;
      }

      private float timestamp_ ;
      /**
       * <code>optional float timestamp = 15;</code>
       */
      public boolean hasTimestamp() {
        return ((bitField0_ & 0x00004000) == 0x00004000);
      }
      /**
       * <code>optional float timestamp = 15;</code>
       */
      public float getTimestamp() {
        return timestamp_;
      }
      /**
       * <code>optional float timestamp = 15;</code>
       */
      public Builder setTimestamp(float value) {
        bitField0_ |= 0x00004000;
        timestamp_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional float timestamp = 15;</code>
       */
      public Builder clearTimestamp() {
        bitField0_ = (bitField0_ & ~0x00004000);
        timestamp_ = 0F;
        onChanged();
        return this;
      }

      private float stunDuration_ ;
      /**
       * <code>optional float stun_duration = 16;</code>
       */
      public boolean hasStunDuration() {
        return ((bitField0_ & 0x00008000) == 0x00008000);
      }
      /**
       * <code>optional float stun_duration = 16;</code>
       */
      public float getStunDuration() {
        return stunDuration_;
      }
      /**
       * <code>optional float stun_duration = 16;</code>
       */
      public Builder setStunDuration(float value) {
        bitField0_ |= 0x00008000;
        stunDuration_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional float stun_duration = 16;</code>
       */
      public Builder clearStunDuration() {
        bitField0_ = (bitField0_ & ~0x00008000);
        stunDuration_ = 0F;
        onChanged();
        return this;
      }

      private float slowDuration_ ;
      /**
       * <code>optional float slow_duration = 17;</code>
       */
      public boolean hasSlowDuration() {
        return ((bitField0_ & 0x00010000) == 0x00010000);
      }
      /**
       * <code>optional float slow_duration = 17;</code>
       */
      public float getSlowDuration() {
        return slowDuration_;
      }
      /**
       * <code>optional float slow_duration = 17;</code>
       */
      public Builder setSlowDuration(float value) {
        bitField0_ |= 0x00010000;
        slowDuration_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional float slow_duration = 17;</code>
       */
      public Builder clearSlowDuration() {
        bitField0_ = (bitField0_ & ~0x00010000);
        slowDuration_ = 0F;
        onChanged();
        return this;
      }

      private boolean isAbilityToggleOn_ ;
      /**
       * <code>optional bool is_ability_toggle_on = 18;</code>
       */
      public boolean hasIsAbilityToggleOn() {
        return ((bitField0_ & 0x00020000) == 0x00020000);
      }
      /**
       * <code>optional bool is_ability_toggle_on = 18;</code>
       */
      public boolean getIsAbilityToggleOn() {
        return isAbilityToggleOn_;
      }
      /**
       * <code>optional bool is_ability_toggle_on = 18;</code>
       */
      public Builder setIsAbilityToggleOn(boolean value) {
        bitField0_ |= 0x00020000;
        isAbilityToggleOn_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional bool is_ability_toggle_on = 18;</code>
       */
      public Builder clearIsAbilityToggleOn() {
        bitField0_ = (bitField0_ & ~0x00020000);
        isAbilityToggleOn_ = false;
        onChanged();
        return this;
      }

      private boolean isAbilityToggleOff_ ;
      /**
       * <code>optional bool is_ability_toggle_off = 19;</code>
       */
      public boolean hasIsAbilityToggleOff() {
        return ((bitField0_ & 0x00040000) == 0x00040000);
      }
      /**
       * <code>optional bool is_ability_toggle_off = 19;</code>
       */
      public boolean getIsAbilityToggleOff() {
        return isAbilityToggleOff_;
      }
      /**
       * <code>optional bool is_ability_toggle_off = 19;</code>
       */
      public Builder setIsAbilityToggleOff(boolean value) {
        bitField0_ |= 0x00040000;
        isAbilityToggleOff_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional bool is_ability_toggle_off = 19;</code>
       */
      public Builder clearIsAbilityToggleOff() {
        bitField0_ = (bitField0_ & ~0x00040000);
        isAbilityToggleOff_ = false;
        onChanged();
        return this;
      }

      private int abilityLevel_ ;
      /**
       * <code>optional uint32 ability_level = 20;</code>
       */
      public boolean hasAbilityLevel() {
        return ((bitField0_ & 0x00080000) == 0x00080000);
      }
      /**
       * <code>optional uint32 ability_level = 20;</code>
       */
      public int getAbilityLevel() {
        return abilityLevel_;
      }
      /**
       * <code>optional uint32 ability_level = 20;</code>
       */
      public Builder setAbilityLevel(int value) {
        bitField0_ |= 0x00080000;
        abilityLevel_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional uint32 ability_level = 20;</code>
       */
      public Builder clearAbilityLevel() {
        bitField0_ = (bitField0_ & ~0x00080000);
        abilityLevel_ = 0;
        onChanged();
        return this;
      }

      private float locationX_ ;
      /**
       * <code>optional float location_x = 21;</code>
       */
      public boolean hasLocationX() {
        return ((bitField0_ & 0x00100000) == 0x00100000);
      }
      /**
       * <code>optional float location_x = 21;</code>
       */
      public float getLocationX() {
        return locationX_;
      }
      /**
       * <code>optional float location_x = 21;</code>
       */
      public Builder setLocationX(float value) {
        bitField0_ |= 0x00100000;
        locationX_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional float location_x = 21;</code>
       */
      public Builder clearLocationX() {
        bitField0_ = (bitField0_ & ~0x00100000);
        locationX_ = 0F;
        onChanged();
        return this;
      }

      private float locationY_ ;
      /**
       * <code>optional float location_y = 22;</code>
       */
      public boolean hasLocationY() {
        return ((bitField0_ & 0x00200000) == 0x00200000);
      }
      /**
       * <code>optional float location_y = 22;</code>
       */
      public float getLocationY() {
        return locationY_;
      }
      /**
       * <code>optional float location_y = 22;</code>
       */
      public Builder setLocationY(float value) {
        bitField0_ |= 0x00200000;
        locationY_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional float location_y = 22;</code>
       */
      public Builder clearLocationY() {
        bitField0_ = (bitField0_ & ~0x00200000);
        locationY_ = 0F;
        onChanged();
        return this;
      }

      private int goldReason_ ;
      /**
       * <code>optional uint32 gold_reason = 23;</code>
       */
      public boolean hasGoldReason() {
        return ((bitField0_ & 0x00400000) == 0x00400000);
      }
      /**
       * <code>optional uint32 gold_reason = 23;</code>
       */
      public int getGoldReason() {
        return goldReason_;
      }
      /**
       * <code>optional uint32 gold_reason = 23;</code>
       */
      public Builder setGoldReason(int value) {
        bitField0_ |= 0x00400000;
        goldReason_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional uint32 gold_reason = 23;</code>
       */
      public Builder clearGoldReason() {
        bitField0_ = (bitField0_ & ~0x00400000);
        goldReason_ = 0;
        onChanged();
        return this;
      }

      private float timestampRaw_ ;
      /**
       * <code>optional float timestamp_raw = 24;</code>
       */
      public boolean hasTimestampRaw() {
        return ((bitField0_ & 0x00800000) == 0x00800000);
      }
      /**
       * <code>optional float timestamp_raw = 24;</code>
       */
      public float getTimestampRaw() {
        return timestampRaw_;
      }
      /**
       * <code>optional float timestamp_raw = 24;</code>
       */
      public Builder setTimestampRaw(float value) {
        bitField0_ |= 0x00800000;
        timestampRaw_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional float timestamp_raw = 24;</code>
       */
      public Builder clearTimestampRaw() {
        bitField0_ = (bitField0_ & ~0x00800000);
        timestampRaw_ = 0F;
        onChanged();
        return this;
      }

      private float modifierDuration_ ;
      /**
       * <code>optional float modifier_duration = 25;</code>
       */
      public boolean hasModifierDuration() {
        return ((bitField0_ & 0x01000000) == 0x01000000);
      }
      /**
       * <code>optional float modifier_duration = 25;</code>
       */
      public float getModifierDuration() {
        return modifierDuration_;
      }
      /**
       * <code>optional float modifier_duration = 25;</code>
       */
      public Builder setModifierDuration(float value) {
        bitField0_ |= 0x01000000;
        modifierDuration_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional float modifier_duration = 25;</code>
       */
      public Builder clearModifierDuration() {
        bitField0_ = (bitField0_ & ~0x01000000);
        modifierDuration_ = 0F;
        onChanged();
        return this;
      }

      private int xpReason_ ;
      /**
       * <code>optional uint32 xp_reason = 26;</code>
       */
      public boolean hasXpReason() {
        return ((bitField0_ & 0x02000000) == 0x02000000);
      }
      /**
       * <code>optional uint32 xp_reason = 26;</code>
       */
      public int getXpReason() {
        return xpReason_;
      }
      /**
       * <code>optional uint32 xp_reason = 26;</code>
       */
      public Builder setXpReason(int value) {
        bitField0_ |= 0x02000000;
        xpReason_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional uint32 xp_reason = 26;</code>
       */
      public Builder clearXpReason() {
        bitField0_ = (bitField0_ & ~0x02000000);
        xpReason_ = 0;
        onChanged();
        return this;
      }

      private int lastHits_ ;
      /**
       * <code>optional uint32 last_hits = 27;</code>
       */
      public boolean hasLastHits() {
        return ((bitField0_ & 0x04000000) == 0x04000000);
      }
      /**
       * <code>optional uint32 last_hits = 27;</code>
       */
      public int getLastHits() {
        return lastHits_;
      }
      /**
       * <code>optional uint32 last_hits = 27;</code>
       */
      public Builder setLastHits(int value) {
        bitField0_ |= 0x04000000;
        lastHits_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional uint32 last_hits = 27;</code>
       */
      public Builder clearLastHits() {
        bitField0_ = (bitField0_ & ~0x04000000);
        lastHits_ = 0;
        onChanged();
        return this;
      }

      private int attackerTeam_ ;
      /**
       * <code>optional uint32 attacker_team = 28;</code>
       */
      public boolean hasAttackerTeam() {
        return ((bitField0_ & 0x08000000) == 0x08000000);
      }
      /**
       * <code>optional uint32 attacker_team = 28;</code>
       */
      public int getAttackerTeam() {
        return attackerTeam_;
      }
      /**
       * <code>optional uint32 attacker_team = 28;</code>
       */
      public Builder setAttackerTeam(int value) {
        bitField0_ |= 0x08000000;
        attackerTeam_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional uint32 attacker_team = 28;</code>
       */
      public Builder clearAttackerTeam() {
        bitField0_ = (bitField0_ & ~0x08000000);
        attackerTeam_ = 0;
        onChanged();
        return this;
      }

      private int targetTeam_ ;
      /**
       * <code>optional uint32 target_team = 29;</code>
       */
      public boolean hasTargetTeam() {
        return ((bitField0_ & 0x10000000) == 0x10000000);
      }
      /**
       * <code>optional uint32 target_team = 29;</code>
       */
      public int getTargetTeam() {
        return targetTeam_;
      }
      /**
       * <code>optional uint32 target_team = 29;</code>
       */
      public Builder setTargetTeam(int value) {
        bitField0_ |= 0x10000000;
        targetTeam_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional uint32 target_team = 29;</code>
       */
      public Builder clearTargetTeam() {
        bitField0_ = (bitField0_ & ~0x10000000);
        targetTeam_ = 0;
        onChanged();
        return this;
      }

      private int obsWardsPlaced_ ;
      /**
       * <code>optional uint32 obs_wards_placed = 30;</code>
       */
      public boolean hasObsWardsPlaced() {
        return ((bitField0_ & 0x20000000) == 0x20000000);
      }
      /**
       * <code>optional uint32 obs_wards_placed = 30;</code>
       */
      public int getObsWardsPlaced() {
        return obsWardsPlaced_;
      }
      /**
       * <code>optional uint32 obs_wards_placed = 30;</code>
       */
      public Builder setObsWardsPlaced(int value) {
        bitField0_ |= 0x20000000;
        obsWardsPlaced_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional uint32 obs_wards_placed = 30;</code>
       */
      public Builder clearObsWardsPlaced() {
        bitField0_ = (bitField0_ & ~0x20000000);
        obsWardsPlaced_ = 0;
        onChanged();
        return this;
      }

      private int assistPlayer0_ ;
      /**
       * <code>optional uint32 assist_player0 = 31;</code>
       */
      public boolean hasAssistPlayer0() {
        return ((bitField0_ & 0x40000000) == 0x40000000);
      }
      /**
       * <code>optional uint32 assist_player0 = 31;</code>
       */
      public int getAssistPlayer0() {
        return assistPlayer0_;
      }
      /**
       * <code>optional uint32 assist_player0 = 31;</code>
       */
      public Builder setAssistPlayer0(int value) {
        bitField0_ |= 0x40000000;
        assistPlayer0_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional uint32 assist_player0 = 31;</code>
       */
      public Builder clearAssistPlayer0() {
        bitField0_ = (bitField0_ & ~0x40000000);
        assistPlayer0_ = 0;
        onChanged();
        return this;
      }

      private int assistPlayer1_ ;
      /**
       * <code>optional uint32 assist_player1 = 32;</code>
       */
      public boolean hasAssistPlayer1() {
        return ((bitField0_ & 0x80000000) == 0x80000000);
      }
      /**
       * <code>optional uint32 assist_player1 = 32;</code>
       */
      public int getAssistPlayer1() {
        return assistPlayer1_;
      }
      /**
       * <code>optional uint32 assist_player1 = 32;</code>
       */
      public Builder setAssistPlayer1(int value) {
        bitField0_ |= 0x80000000;
        assistPlayer1_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional uint32 assist_player1 = 32;</code>
       */
      public Builder clearAssistPlayer1() {
        bitField0_ = (bitField0_ & ~0x80000000);
        assistPlayer1_ = 0;
        onChanged();
        return this;
      }

      private int assistPlayer2_ ;
      /**
       * <code>optional uint32 assist_player2 = 33;</code>
       */
      public boolean hasAssistPlayer2() {
        return ((bitField1_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>optional uint32 assist_player2 = 33;</code>
       */
      public int getAssistPlayer2() {
        return assistPlayer2_;
      }
      /**
       * <code>optional uint32 assist_player2 = 33;</code>
       */
      public Builder setAssistPlayer2(int value) {
        bitField1_ |= 0x00000001;
        assistPlayer2_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional uint32 assist_player2 = 33;</code>
       */
      public Builder clearAssistPlayer2() {
        bitField1_ = (bitField1_ & ~0x00000001);
        assistPlayer2_ = 0;
        onChanged();
        return this;
      }

      private int assistPlayer3_ ;
      /**
       * <code>optional uint32 assist_player3 = 34;</code>
       */
      public boolean hasAssistPlayer3() {
        return ((bitField1_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>optional uint32 assist_player3 = 34;</code>
       */
      public int getAssistPlayer3() {
        return assistPlayer3_;
      }
      /**
       * <code>optional uint32 assist_player3 = 34;</code>
       */
      public Builder setAssistPlayer3(int value) {
        bitField1_ |= 0x00000002;
        assistPlayer3_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional uint32 assist_player3 = 34;</code>
       */
      public Builder clearAssistPlayer3() {
        bitField1_ = (bitField1_ & ~0x00000002);
        assistPlayer3_ = 0;
        onChanged();
        return this;
      }

      private int stackCount_ ;
      /**
       * <code>optional uint32 stack_count = 35;</code>
       */
      public boolean hasStackCount() {
        return ((bitField1_ & 0x00000004) == 0x00000004);
      }
      /**
       * <code>optional uint32 stack_count = 35;</code>
       */
      public int getStackCount() {
        return stackCount_;
      }
      /**
       * <code>optional uint32 stack_count = 35;</code>
       */
      public Builder setStackCount(int value) {
        bitField1_ |= 0x00000004;
        stackCount_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional uint32 stack_count = 35;</code>
       */
      public Builder clearStackCount() {
        bitField1_ = (bitField1_ & ~0x00000004);
        stackCount_ = 0;
        onChanged();
        return this;
      }

      private boolean hiddenModifier_ ;
      /**
       * <code>optional bool hidden_modifier = 36;</code>
       */
      public boolean hasHiddenModifier() {
        return ((bitField1_ & 0x00000008) == 0x00000008);
      }
      /**
       * <code>optional bool hidden_modifier = 36;</code>
       */
      public boolean getHiddenModifier() {
        return hiddenModifier_;
      }
      /**
       * <code>optional bool hidden_modifier = 36;</code>
       */
      public Builder setHiddenModifier(boolean value) {
        bitField1_ |= 0x00000008;
        hiddenModifier_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional bool hidden_modifier = 36;</code>
       */
      public Builder clearHiddenModifier() {
        bitField1_ = (bitField1_ & ~0x00000008);
        hiddenModifier_ = false;
        onChanged();
        return this;
      }

      private boolean isTargetBuilding_ ;
      /**
       * <code>optional bool is_target_building = 37;</code>
       */
      public boolean hasIsTargetBuilding() {
        return ((bitField1_ & 0x00000010) == 0x00000010);
      }
      /**
       * <code>optional bool is_target_building = 37;</code>
       */
      public boolean getIsTargetBuilding() {
        return isTargetBuilding_;
      }
      /**
       * <code>optional bool is_target_building = 37;</code>
       */
      public Builder setIsTargetBuilding(boolean value) {
        bitField1_ |= 0x00000010;
        isTargetBuilding_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional bool is_target_building = 37;</code>
       */
      public Builder clearIsTargetBuilding() {
        bitField1_ = (bitField1_ & ~0x00000010);
        isTargetBuilding_ = false;
        onChanged();
        return this;
      }

      private int neutralCampType_ ;
      /**
       * <code>optional uint32 neutral_camp_type = 38;</code>
       */
      public boolean hasNeutralCampType() {
        return ((bitField1_ & 0x00000020) == 0x00000020);
      }
      /**
       * <code>optional uint32 neutral_camp_type = 38;</code>
       */
      public int getNeutralCampType() {
        return neutralCampType_;
      }
      /**
       * <code>optional uint32 neutral_camp_type = 38;</code>
       */
      public Builder setNeutralCampType(int value) {
        bitField1_ |= 0x00000020;
        neutralCampType_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional uint32 neutral_camp_type = 38;</code>
       */
      public Builder clearNeutralCampType() {
        bitField1_ = (bitField1_ & ~0x00000020);
        neutralCampType_ = 0;
        onChanged();
        return this;
      }

      private int runeType_ ;
      /**
       * <code>optional uint32 rune_type = 39;</code>
       */
      public boolean hasRuneType() {
        return ((bitField1_ & 0x00000040) == 0x00000040);
      }
      /**
       * <code>optional uint32 rune_type = 39;</code>
       */
      public int getRuneType() {
        return runeType_;
      }
      /**
       * <code>optional uint32 rune_type = 39;</code>
       */
      public Builder setRuneType(int value) {
        bitField1_ |= 0x00000040;
        runeType_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional uint32 rune_type = 39;</code>
       */
      public Builder clearRuneType() {
        bitField1_ = (bitField1_ & ~0x00000040);
        runeType_ = 0;
        onChanged();
        return this;
      }

      private java.util.List<java.lang.Integer> assistPlayers_ = java.util.Collections.emptyList();
      private void ensureAssistPlayersIsMutable() {
        if (!((bitField1_ & 0x00000080) == 0x00000080)) {
          assistPlayers_ = new java.util.ArrayList<java.lang.Integer>(assistPlayers_);
          bitField1_ |= 0x00000080;
         }
      }
      /**
       * <code>repeated uint32 assist_players = 40;</code>
       */
      public java.util.List<java.lang.Integer>
          getAssistPlayersList() {
        return java.util.Collections.unmodifiableList(assistPlayers_);
      }
      /**
       * <code>repeated uint32 assist_players = 40;</code>
       */
      public int getAssistPlayersCount() {
        return assistPlayers_.size();
      }
      /**
       * <code>repeated uint32 assist_players = 40;</code>
       */
      public int getAssistPlayers(int index) {
        return assistPlayers_.get(index);
      }
      /**
       * <code>repeated uint32 assist_players = 40;</code>
       */
      public Builder setAssistPlayers(
          int index, int value) {
        ensureAssistPlayersIsMutable();
        assistPlayers_.set(index, value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated uint32 assist_players = 40;</code>
       */
      public Builder addAssistPlayers(int value) {
        ensureAssistPlayersIsMutable();
        assistPlayers_.add(value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated uint32 assist_players = 40;</code>
       */
      public Builder addAllAssistPlayers(
          java.lang.Iterable<? extends java.lang.Integer> values) {
        ensureAssistPlayersIsMutable();
        com.google.protobuf.AbstractMessageLite.Builder.addAll(
            values, assistPlayers_);
        onChanged();
        return this;
      }
      /**
       * <code>repeated uint32 assist_players = 40;</code>
       */
      public Builder clearAssistPlayers() {
        assistPlayers_ = java.util.Collections.emptyList();
        bitField1_ = (bitField1_ & ~0x00000080);
        onChanged();
        return this;
      }

      private boolean isHealSave_ ;
      /**
       * <code>optional bool is_heal_save = 41;</code>
       */
      public boolean hasIsHealSave() {
        return ((bitField1_ & 0x00000100) == 0x00000100);
      }
      /**
       * <code>optional bool is_heal_save = 41;</code>
       */
      public boolean getIsHealSave() {
        return isHealSave_;
      }
      /**
       * <code>optional bool is_heal_save = 41;</code>
       */
      public Builder setIsHealSave(boolean value) {
        bitField1_ |= 0x00000100;
        isHealSave_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional bool is_heal_save = 41;</code>
       */
      public Builder clearIsHealSave() {
        bitField1_ = (bitField1_ & ~0x00000100);
        isHealSave_ = false;
        onChanged();
        return this;
      }

      private boolean isUltimateAbility_ ;
      /**
       * <code>optional bool is_ultimate_ability = 42;</code>
       */
      public boolean hasIsUltimateAbility() {
        return ((bitField1_ & 0x00000200) == 0x00000200);
      }
      /**
       * <code>optional bool is_ultimate_ability = 42;</code>
       */
      public boolean getIsUltimateAbility() {
        return isUltimateAbility_;
      }
      /**
       * <code>optional bool is_ultimate_ability = 42;</code>
       */
      public Builder setIsUltimateAbility(boolean value) {
        bitField1_ |= 0x00000200;
        isUltimateAbility_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional bool is_ultimate_ability = 42;</code>
       */
      public Builder clearIsUltimateAbility() {
        bitField1_ = (bitField1_ & ~0x00000200);
        isUltimateAbility_ = false;
        onChanged();
        return this;
      }

      private int attackerHeroLevel_ ;
      /**
       * <code>optional uint32 attacker_hero_level = 43;</code>
       */
      public boolean hasAttackerHeroLevel() {
        return ((bitField1_ & 0x00000400) == 0x00000400);
      }
      /**
       * <code>optional uint32 attacker_hero_level = 43;</code>
       */
      public int getAttackerHeroLevel() {
        return attackerHeroLevel_;
      }
      /**
       * <code>optional uint32 attacker_hero_level = 43;</code>
       */
      public Builder setAttackerHeroLevel(int value) {
        bitField1_ |= 0x00000400;
        attackerHeroLevel_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional uint32 attacker_hero_level = 43;</code>
       */
      public Builder clearAttackerHeroLevel() {
        bitField1_ = (bitField1_ & ~0x00000400);
        attackerHeroLevel_ = 0;
        onChanged();
        return this;
      }

      private int targetHeroLevel_ ;
      /**
       * <code>optional uint32 target_hero_level = 44;</code>
       */
      public boolean hasTargetHeroLevel() {
        return ((bitField1_ & 0x00000800) == 0x00000800);
      }
      /**
       * <code>optional uint32 target_hero_level = 44;</code>
       */
      public int getTargetHeroLevel() {
        return targetHeroLevel_;
      }
      /**
       * <code>optional uint32 target_hero_level = 44;</code>
       */
      public Builder setTargetHeroLevel(int value) {
        bitField1_ |= 0x00000800;
        targetHeroLevel_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional uint32 target_hero_level = 44;</code>
       */
      public Builder clearTargetHeroLevel() {
        bitField1_ = (bitField1_ & ~0x00000800);
        targetHeroLevel_ = 0;
        onChanged();
        return this;
      }

      private int xpm_ ;
      /**
       * <code>optional uint32 xpm = 45;</code>
       */
      public boolean hasXpm() {
        return ((bitField1_ & 0x00001000) == 0x00001000);
      }
      /**
       * <code>optional uint32 xpm = 45;</code>
       */
      public int getXpm() {
        return xpm_;
      }
      /**
       * <code>optional uint32 xpm = 45;</code>
       */
      public Builder setXpm(int value) {
        bitField1_ |= 0x00001000;
        xpm_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional uint32 xpm = 45;</code>
       */
      public Builder clearXpm() {
        bitField1_ = (bitField1_ & ~0x00001000);
        xpm_ = 0;
        onChanged();
        return this;
      }

      private int gpm_ ;
      /**
       * <code>optional uint32 gpm = 46;</code>
       */
      public boolean hasGpm() {
        return ((bitField1_ & 0x00002000) == 0x00002000);
      }
      /**
       * <code>optional uint32 gpm = 46;</code>
       */
      public int getGpm() {
        return gpm_;
      }
      /**
       * <code>optional uint32 gpm = 46;</code>
       */
      public Builder setGpm(int value) {
        bitField1_ |= 0x00002000;
        gpm_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional uint32 gpm = 46;</code>
       */
      public Builder clearGpm() {
        bitField1_ = (bitField1_ & ~0x00002000);
        gpm_ = 0;
        onChanged();
        return this;
      }

      private int eventLocation_ ;
      /**
       * <code>optional uint32 event_location = 47;</code>
       */
      public boolean hasEventLocation() {
        return ((bitField1_ & 0x00004000) == 0x00004000);
      }
      /**
       * <code>optional uint32 event_location = 47;</code>
       */
      public int getEventLocation() {
        return eventLocation_;
      }
      /**
       * <code>optional uint32 event_location = 47;</code>
       */
      public Builder setEventLocation(int value) {
        bitField1_ |= 0x00004000;
        eventLocation_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional uint32 event_location = 47;</code>
       */
      public Builder clearEventLocation() {
        bitField1_ = (bitField1_ & ~0x00004000);
        eventLocation_ = 0;
        onChanged();
        return this;
      }

      private boolean targetIsSelf_ ;
      /**
       * <code>optional bool target_is_self = 48;</code>
       */
      public boolean hasTargetIsSelf() {
        return ((bitField1_ & 0x00008000) == 0x00008000);
      }
      /**
       * <code>optional bool target_is_self = 48;</code>
       */
      public boolean getTargetIsSelf() {
        return targetIsSelf_;
      }
      /**
       * <code>optional bool target_is_self = 48;</code>
       */
      public Builder setTargetIsSelf(boolean value) {
        bitField1_ |= 0x00008000;
        targetIsSelf_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional bool target_is_self = 48;</code>
       */
      public Builder clearTargetIsSelf() {
        bitField1_ = (bitField1_ & ~0x00008000);
        targetIsSelf_ = false;
        onChanged();
        return this;
      }

      private int damageType_ ;
      /**
       * <code>optional uint32 damage_type = 49;</code>
       */
      public boolean hasDamageType() {
        return ((bitField1_ & 0x00010000) == 0x00010000);
      }
      /**
       * <code>optional uint32 damage_type = 49;</code>
       */
      public int getDamageType() {
        return damageType_;
      }
      /**
       * <code>optional uint32 damage_type = 49;</code>
       */
      public Builder setDamageType(int value) {
        bitField1_ |= 0x00010000;
        damageType_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional uint32 damage_type = 49;</code>
       */
      public Builder clearDamageType() {
        bitField1_ = (bitField1_ & ~0x00010000);
        damageType_ = 0;
        onChanged();
        return this;
      }

      private boolean invisibilityModifier_ ;
      /**
       * <code>optional bool invisibility_modifier = 50;</code>
       */
      public boolean hasInvisibilityModifier() {
        return ((bitField1_ & 0x00020000) == 0x00020000);
      }
      /**
       * <code>optional bool invisibility_modifier = 50;</code>
       */
      public boolean getInvisibilityModifier() {
        return invisibilityModifier_;
      }
      /**
       * <code>optional bool invisibility_modifier = 50;</code>
       */
      public Builder setInvisibilityModifier(boolean value) {
        bitField1_ |= 0x00020000;
        invisibilityModifier_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional bool invisibility_modifier = 50;</code>
       */
      public Builder clearInvisibilityModifier() {
        bitField1_ = (bitField1_ & ~0x00020000);
        invisibilityModifier_ = false;
        onChanged();
        return this;
      }

      private int damageCategory_ ;
      /**
       * <code>optional uint32 damage_category = 51;</code>
       */
      public boolean hasDamageCategory() {
        return ((bitField1_ & 0x00040000) == 0x00040000);
      }
      /**
       * <code>optional uint32 damage_category = 51;</code>
       */
      public int getDamageCategory() {
        return damageCategory_;
      }
      /**
       * <code>optional uint32 damage_category = 51;</code>
       */
      public Builder setDamageCategory(int value) {
        bitField1_ |= 0x00040000;
        damageCategory_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional uint32 damage_category = 51;</code>
       */
      public Builder clearDamageCategory() {
        bitField1_ = (bitField1_ & ~0x00040000);
        damageCategory_ = 0;
        onChanged();
        return this;
      }

      private int networth_ ;
      /**
       * <code>optional uint32 networth = 52;</code>
       */
      public boolean hasNetworth() {
        return ((bitField1_ & 0x00080000) == 0x00080000);
      }
      /**
       * <code>optional uint32 networth = 52;</code>
       */
      public int getNetworth() {
        return networth_;
      }
      /**
       * <code>optional uint32 networth = 52;</code>
       */
      public Builder setNetworth(int value) {
        bitField1_ |= 0x00080000;
        networth_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional uint32 networth = 52;</code>
       */
      public Builder clearNetworth() {
        bitField1_ = (bitField1_ & ~0x00080000);
        networth_ = 0;
        onChanged();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:CMsgDOTACombatLogEntry)
    }

    static {
      defaultInstance = new CMsgDOTACombatLogEntry(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:CMsgDOTACombatLogEntry)
  }

  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_CDOTAUserMsg_AIDebugLine_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_CDOTAUserMsg_AIDebugLine_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_CDOTAUserMsg_Ping_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_CDOTAUserMsg_Ping_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_CDOTAUserMsg_SwapVerify_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_CDOTAUserMsg_SwapVerify_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_CDOTAUserMsg_ChatEvent_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_CDOTAUserMsg_ChatEvent_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_CDOTAUserMsg_CombatLogShowDeath_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_CDOTAUserMsg_CombatLogShowDeath_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_CDOTAUserMsg_BotChat_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_CDOTAUserMsg_BotChat_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_CDOTAUserMsg_CombatHeroPositions_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_CDOTAUserMsg_CombatHeroPositions_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_CDOTAUserMsg_MiniKillCamInfo_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_CDOTAUserMsg_MiniKillCamInfo_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_CDOTAUserMsg_MiniKillCamInfo_Attacker_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_CDOTAUserMsg_MiniKillCamInfo_Attacker_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_CDOTAUserMsg_MiniKillCamInfo_Attacker_Ability_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_CDOTAUserMsg_MiniKillCamInfo_Attacker_Ability_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_CDOTAUserMsg_GlobalLightColor_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_CDOTAUserMsg_GlobalLightColor_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_CDOTAUserMsg_GlobalLightDirection_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_CDOTAUserMsg_GlobalLightDirection_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_CDOTAUserMsg_LocationPing_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_CDOTAUserMsg_LocationPing_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_CDOTAUserMsg_ItemAlert_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_CDOTAUserMsg_ItemAlert_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_CDOTAUserMsg_EnemyItemAlert_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_CDOTAUserMsg_EnemyItemAlert_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_CDOTAUserMsg_ModifierAlert_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_CDOTAUserMsg_ModifierAlert_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_CDOTAUserMsg_HPManaAlert_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_CDOTAUserMsg_HPManaAlert_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_CDOTAUserMsg_GlyphAlert_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_CDOTAUserMsg_GlyphAlert_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_CDOTAUserMsg_WillPurchaseAlert_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_CDOTAUserMsg_WillPurchaseAlert_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_CDOTAUserMsg_BuyBackStateAlert_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_CDOTAUserMsg_BuyBackStateAlert_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_CDOTAUserMsg_QuickBuyAlert_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_CDOTAUserMsg_QuickBuyAlert_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_CDOTAUserMsg_CourierKilledAlert_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_CDOTAUserMsg_CourierKilledAlert_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_CDOTAUserMsg_MinimapEvent_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_CDOTAUserMsg_MinimapEvent_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_CDOTAUserMsg_MapLine_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_CDOTAUserMsg_MapLine_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_CDOTAUserMsg_MinimapDebugPoint_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_CDOTAUserMsg_MinimapDebugPoint_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_CDOTAUserMsg_CreateLinearProjectile_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_CDOTAUserMsg_CreateLinearProjectile_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_CDOTAUserMsg_DestroyLinearProjectile_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_CDOTAUserMsg_DestroyLinearProjectile_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_CDOTAUserMsg_DodgeTrackingProjectiles_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_CDOTAUserMsg_DodgeTrackingProjectiles_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_CDOTAUserMsg_SpectatorPlayerClick_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_CDOTAUserMsg_SpectatorPlayerClick_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_CDOTAUserMsg_SpectatorPlayerUnitOrders_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_CDOTAUserMsg_SpectatorPlayerUnitOrders_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_CDOTAUserMsg_NevermoreRequiem_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_CDOTAUserMsg_NevermoreRequiem_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_CDOTAUserMsg_InvalidCommand_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_CDOTAUserMsg_InvalidCommand_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_CDOTAUserMsg_HudError_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_CDOTAUserMsg_HudError_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_CDOTAUserMsg_SharedCooldown_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_CDOTAUserMsg_SharedCooldown_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_CDOTAUserMsg_SetNextAutobuyItem_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_CDOTAUserMsg_SetNextAutobuyItem_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_CDOTAUserMsg_HalloweenDrops_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_CDOTAUserMsg_HalloweenDrops_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_CDOTAUserMsg_PredictionResult_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_CDOTAUserMsg_PredictionResult_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_CDOTAUserMsg_PredictionResult_Prediction_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_CDOTAUserMsg_PredictionResult_Prediction_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_CDOTAResponseQuerySerialized_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_CDOTAResponseQuerySerialized_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_CDOTAResponseQuerySerialized_Fact_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_CDOTAResponseQuerySerialized_Fact_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_CDOTASpeechMatchOnClient_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_CDOTASpeechMatchOnClient_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_CDOTAUserMsg_UnitEvent_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_CDOTAUserMsg_UnitEvent_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_CDOTAUserMsg_UnitEvent_Speech_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_CDOTAUserMsg_UnitEvent_Speech_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_CDOTAUserMsg_UnitEvent_SpeechMute_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_CDOTAUserMsg_UnitEvent_SpeechMute_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_CDOTAUserMsg_UnitEvent_AddGesture_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_CDOTAUserMsg_UnitEvent_AddGesture_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_CDOTAUserMsg_UnitEvent_RemoveGesture_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_CDOTAUserMsg_UnitEvent_RemoveGesture_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_CDOTAUserMsg_UnitEvent_BloodImpact_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_CDOTAUserMsg_UnitEvent_BloodImpact_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_CDOTAUserMsg_UnitEvent_FadeGesture_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_CDOTAUserMsg_UnitEvent_FadeGesture_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_CDOTAUserMsg_ItemPurchased_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_CDOTAUserMsg_ItemPurchased_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_CDOTAUserMsg_ItemFound_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_CDOTAUserMsg_ItemFound_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_CDOTAUserMsg_ParticleManager_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_CDOTAUserMsg_ParticleManager_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_CDOTAUserMsg_ParticleManager_ReleaseParticleIndex_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_CDOTAUserMsg_ParticleManager_ReleaseParticleIndex_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_CDOTAUserMsg_ParticleManager_CreateParticle_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_CDOTAUserMsg_ParticleManager_CreateParticle_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_CDOTAUserMsg_ParticleManager_DestroyParticle_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_CDOTAUserMsg_ParticleManager_DestroyParticle_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_CDOTAUserMsg_ParticleManager_DestroyParticleInvolving_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_CDOTAUserMsg_ParticleManager_DestroyParticleInvolving_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_CDOTAUserMsg_ParticleManager_UpdateParticle_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_CDOTAUserMsg_ParticleManager_UpdateParticle_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_CDOTAUserMsg_ParticleManager_UpdateParticleFwd_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_CDOTAUserMsg_ParticleManager_UpdateParticleFwd_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_CDOTAUserMsg_ParticleManager_UpdateParticleOrient_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_CDOTAUserMsg_ParticleManager_UpdateParticleOrient_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_CDOTAUserMsg_ParticleManager_UpdateParticleFallback_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_CDOTAUserMsg_ParticleManager_UpdateParticleFallback_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_CDOTAUserMsg_ParticleManager_UpdateParticleOffset_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_CDOTAUserMsg_ParticleManager_UpdateParticleOffset_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_CDOTAUserMsg_ParticleManager_UpdateParticleEnt_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_CDOTAUserMsg_ParticleManager_UpdateParticleEnt_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_CDOTAUserMsg_ParticleManager_UpdateParticleSetFrozen_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_CDOTAUserMsg_ParticleManager_UpdateParticleSetFrozen_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_CDOTAUserMsg_ParticleManager_UpdateParticleShouldDraw_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_CDOTAUserMsg_ParticleManager_UpdateParticleShouldDraw_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_CDOTAUserMsg_ParticleManager_ChangeControlPointAttachment_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_CDOTAUserMsg_ParticleManager_ChangeControlPointAttachment_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_CDOTAUserMsg_ParticleManager_UpdateEntityPosition_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_CDOTAUserMsg_ParticleManager_UpdateEntityPosition_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_CDOTAUserMsg_OverheadEvent_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_CDOTAUserMsg_OverheadEvent_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_CDOTAUserMsg_TutorialTipInfo_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_CDOTAUserMsg_TutorialTipInfo_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_CDOTAUserMsg_TutorialFinish_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_CDOTAUserMsg_TutorialFinish_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_CDOTAUserMsg_TutorialMinimapPosition_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_CDOTAUserMsg_TutorialMinimapPosition_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_CDOTAUserMsg_SendGenericToolTip_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_CDOTAUserMsg_SendGenericToolTip_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_CDOTAUserMsg_WorldLine_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_CDOTAUserMsg_WorldLine_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_CDOTAUserMsg_ChatWheel_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_CDOTAUserMsg_ChatWheel_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_CDOTAUserMsg_ReceivedXmasGift_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_CDOTAUserMsg_ReceivedXmasGift_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_CDOTAUserMsg_ShowSurvey_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_CDOTAUserMsg_ShowSurvey_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_CDOTAUserMsg_UpdateSharedContent_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_CDOTAUserMsg_UpdateSharedContent_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_CDOTAUserMsg_TutorialRequestExp_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_CDOTAUserMsg_TutorialRequestExp_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_CDOTAUserMsg_TutorialFade_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_CDOTAUserMsg_TutorialFade_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_CDOTAUserMsg_TutorialPingMinimap_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_CDOTAUserMsg_TutorialPingMinimap_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_CDOTAUserMsg_GamerulesStateChanged_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_CDOTAUserMsg_GamerulesStateChanged_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_CDOTAUserMsg_AddQuestLogEntry_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_CDOTAUserMsg_AddQuestLogEntry_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_CDOTAUserMsg_SendStatPopup_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_CDOTAUserMsg_SendStatPopup_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_CDOTAUserMsg_SendRoshanPopup_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_CDOTAUserMsg_SendRoshanPopup_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_CDOTAUserMsg_SendFinalGold_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_CDOTAUserMsg_SendFinalGold_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_CDOTAUserMsg_CustomMsg_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_CDOTAUserMsg_CustomMsg_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_CDOTAUserMsg_CoachHUDPing_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_CDOTAUserMsg_CoachHUDPing_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_CDOTAUserMsg_ClientLoadGridNav_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_CDOTAUserMsg_ClientLoadGridNav_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_CDOTAUserMsg_TE_Projectile_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_CDOTAUserMsg_TE_Projectile_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_CDOTAUserMsg_TE_ProjectileLoc_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_CDOTAUserMsg_TE_ProjectileLoc_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_CDOTAUserMsg_TE_DotaBloodImpact_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_CDOTAUserMsg_TE_DotaBloodImpact_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_CDOTAUserMsg_AbilityPing_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_CDOTAUserMsg_AbilityPing_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_CDOTAUserMsg_TE_UnitAnimation_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_CDOTAUserMsg_TE_UnitAnimation_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_CDOTAUserMsg_TE_UnitAnimationEnd_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_CDOTAUserMsg_TE_UnitAnimationEnd_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_CDOTAUserMsg_ShowGenericPopup_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_CDOTAUserMsg_ShowGenericPopup_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_CDOTAUserMsg_VoteStart_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_CDOTAUserMsg_VoteStart_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_CDOTAUserMsg_VoteUpdate_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_CDOTAUserMsg_VoteUpdate_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_CDOTAUserMsg_VoteEnd_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_CDOTAUserMsg_VoteEnd_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_CDOTAUserMsg_BoosterStatePlayer_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_CDOTAUserMsg_BoosterStatePlayer_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_CDOTAUserMsg_BoosterState_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_CDOTAUserMsg_BoosterState_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_CDOTAUserMsg_PlayerMMR_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_CDOTAUserMsg_PlayerMMR_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_CDOTAUserMsg_AbilitySteal_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_CDOTAUserMsg_AbilitySteal_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_CDOTAUserMsg_StatsHeroLookup_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_CDOTAUserMsg_StatsHeroLookup_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_CDOTAUserMsg_StatsHeroPositionInfo_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_CDOTAUserMsg_StatsHeroPositionInfo_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_CDOTAUserMsg_StatsHeroPositionInfo_PositionPair_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_CDOTAUserMsg_StatsHeroPositionInfo_PositionPair_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_CDOTAUserMsg_StatsHeroMinuteDetails_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_CDOTAUserMsg_StatsHeroMinuteDetails_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_CDOTAUserMsg_StatsTeamMinuteDetails_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_CDOTAUserMsg_StatsTeamMinuteDetails_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_CDOTAUserMsg_StatsTeamMinuteDetails_LocationPerformance_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_CDOTAUserMsg_StatsTeamMinuteDetails_LocationPerformance_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_CDOTAUserMsg_StatsPlayerKillShare_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_CDOTAUserMsg_StatsPlayerKillShare_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_CDOTAUserMsg_StatsKillDetails_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_CDOTAUserMsg_StatsKillDetails_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_CDOTAUserMsg_StatsMatchDetails_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_CDOTAUserMsg_StatsMatchDetails_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_CDOTAUserMsg_StatsMatchDetails_CDOTAUserMsg_StatsFightTeamDetails_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_CDOTAUserMsg_StatsMatchDetails_CDOTAUserMsg_StatsFightTeamDetails_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_CDOTAUserMsg_StatsMatchDetails_CDOTAUserMsg_StatsFightDetails_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_CDOTAUserMsg_StatsMatchDetails_CDOTAUserMsg_StatsFightDetails_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_CDOTAUserMsg_MiniTaunt_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_CDOTAUserMsg_MiniTaunt_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_CDOTAUserMsg_SpeechBubble_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_CDOTAUserMsg_SpeechBubble_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_CDOTAUserMsg_CustomHeaderMessage_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_CDOTAUserMsg_CustomHeaderMessage_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_CMsgHeroAbilityStat_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_CMsgHeroAbilityStat_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_CMsgCombatAnalyzerPlayerStat_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_CMsgCombatAnalyzerPlayerStat_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_CMsgCombatAnalyzerStats_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_CMsgCombatAnalyzerStats_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_CDOTAUserMsg_BeastChat_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_CDOTAUserMsg_BeastChat_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_CDOTAUserMsg_CustomHudElement_Create_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_CDOTAUserMsg_CustomHudElement_Create_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_CDOTAUserMsg_CustomHudElement_Modify_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_CDOTAUserMsg_CustomHudElement_Modify_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_CDOTAUserMsg_CustomHudElement_Destroy_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_CDOTAUserMsg_CustomHudElement_Destroy_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_CDOTAUserMsg_CompendiumStatePlayer_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_CDOTAUserMsg_CompendiumStatePlayer_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_CDOTAUserMsg_CompendiumState_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_CDOTAUserMsg_CompendiumState_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_CDOTAUserMsg_ProjectionAbility_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_CDOTAUserMsg_ProjectionAbility_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_CDOTAUserMsg_ProjectionEvent_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_CDOTAUserMsg_ProjectionEvent_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_CDOTAUserMsg_XPAlert_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_CDOTAUserMsg_XPAlert_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_CDOTAUserMsg_QuestStatus_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_CDOTAUserMsg_QuestStatus_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_CDOTAUserMsg_UpdateQuestProgress_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_CDOTAUserMsg_UpdateQuestProgress_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_CMsgDOTACombatLogEntry_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_CMsgDOTACombatLogEntry_fieldAccessorTable;

  public static com.google.protobuf.Descriptors.FileDescriptor
      getDescriptor() {
    return descriptor;
  }
  private static com.google.protobuf.Descriptors.FileDescriptor
      descriptor;
  static {
    java.lang.String[] descriptorData = {
      "\n\027dota_usermessages.proto\032\026networkbasety" +
      "pes.proto\032\031dota_commonmessages.proto\"G\n\030" +
      "CDOTAUserMsg_AIDebugLine\022\017\n\007message\030\001 \001(" +
      "\t\022\014\n\004ping\030\002 \001(\r\022\014\n\004loss\030\003 \001(\r\"$\n\021CDOTAUs" +
      "erMsg_Ping\022\017\n\007message\030\001 \001(\t\",\n\027CDOTAUser" +
      "Msg_SwapVerify\022\021\n\tplayer_id\030\001 \001(\r\"\217\002\n\026CD" +
      "OTAUserMsg_ChatEvent\0226\n\004type\030\001 \001(\0162\022.DOT" +
      "A_CHAT_MESSAGE:\024CHAT_MESSAGE_INVALID\022\r\n\005" +
      "value\030\002 \001(\r\022\026\n\nplayerid_1\030\003 \001(\021:\002-1\022\026\n\np" +
      "layerid_2\030\004 \001(\021:\002-1\022\026\n\nplayerid_3\030\005 \001(\021:",
      "\002-1\022\026\n\nplayerid_4\030\006 \001(\021:\002-1\022\026\n\nplayerid_" +
      "5\030\007 \001(\021:\002-1\022\026\n\nplayerid_6\030\010 \001(\021:\002-1\022\016\n\006v" +
      "alue2\030\t \001(\r\022\016\n\006value3\030\n \001(\r\"!\n\037CDOTAUser" +
      "Msg_CombatLogShowDeath\"Z\n\024CDOTAUserMsg_B" +
      "otChat\022\021\n\tplayer_id\030\001 \001(\r\022\016\n\006format\030\002 \001(" +
      "\t\022\017\n\007message\030\003 \001(\t\022\016\n\006target\030\004 \001(\t\"q\n CD" +
      "OTAUserMsg_CombatHeroPositions\022\r\n\005index\030" +
      "\001 \001(\r\022\014\n\004time\030\002 \001(\005\022 \n\tworld_pos\030\003 \001(\0132\r" +
      ".CMsgVector2D\022\016\n\006health\030\004 \001(\005\"\375\001\n\034CDOTAU" +
      "serMsg_MiniKillCamInfo\0229\n\tattackers\030\001 \003(",
      "\0132&.CDOTAUserMsg_MiniKillCamInfo.Attacke" +
      "r\032\241\001\n\010Attacker\022\020\n\010attacker\030\001 \001(\r\022\024\n\014tota" +
      "l_damage\030\002 \001(\005\022A\n\tabilities\030\003 \003(\0132..CDOT" +
      "AUserMsg_MiniKillCamInfo.Attacker.Abilit" +
      "y\032*\n\007Ability\022\017\n\007ability\030\001 \001(\r\022\016\n\006damage\030" +
      "\002 \001(\005\"@\n\035CDOTAUserMsg_GlobalLightColor\022\r" +
      "\n\005color\030\001 \001(\r\022\020\n\010duration\030\002 \001(\002\"U\n!CDOTA" +
      "UserMsg_GlobalLightDirection\022\036\n\tdirectio" +
      "n\030\001 \001(\0132\013.CMsgVector\022\020\n\010duration\030\002 \001(\002\"]" +
      "\n\031CDOTAUserMsg_LocationPing\022\021\n\tplayer_id",
      "\030\001 \001(\r\022-\n\rlocation_ping\030\002 \001(\0132\026.CDOTAMsg" +
      "_LocationPing\"T\n\026CDOTAUserMsg_ItemAlert\022" +
      "\021\n\tplayer_id\030\001 \001(\r\022\'\n\nitem_alert\030\002 \001(\0132\023" +
      ".CDOTAMsg_ItemAlert\"m\n\033CDOTAUserMsg_Enem" +
      "yItemAlert\022\021\n\tplayer_id\030\001 \001(\r\022\030\n\020target_" +
      "player_id\030\002 \001(\r\022\016\n\006itemid\030\003 \001(\005\022\021\n\trune_" +
      "type\030\004 \001(\r\"\204\001\n\032CDOTAUserMsg_ModifierAler" +
      "t\022\021\n\tplayer_id\030\001 \001(\r\022\022\n\nclass_name\030\002 \001(\t" +
      "\022\023\n\013stack_count\030\003 \001(\r\022\021\n\tis_debuff\030\004 \001(\010" +
      "\022\027\n\017target_entindex\030\005 \001(\r\"F\n\030CDOTAUserMs",
      "g_HPManaAlert\022\021\n\tplayer_id\030\001 \001(\r\022\027\n\017targ" +
      "et_entindex\030\002 \001(\r\">\n\027CDOTAUserMsg_GlyphA" +
      "lert\022\021\n\tplayer_id\030\001 \001(\r\022\020\n\010negative\030\002 \001(" +
      "\010\"[\n\036CDOTAUserMsg_WillPurchaseAlert\022\016\n\006i" +
      "temid\030\001 \001(\005\022\021\n\tplayer_id\030\002 \001(\005\022\026\n\016gold_r" +
      "emaining\030\003 \001(\r\"3\n\036CDOTAUserMsg_BuyBackSt" +
      "ateAlert\022\021\n\tplayer_id\030\001 \001(\005\"V\n\032CDOTAUser" +
      "Msg_QuickBuyAlert\022\021\n\tplayer_id\030\001 \001(\005\022\016\n\006" +
      "itemid\030\002 \001(\005\022\025\n\rgold_required\030\003 \001(\005\"m\n\037C" +
      "DOTAUserMsg_CourierKilledAlert\022\014\n\004team\030\001",
      " \001(\r\022\022\n\ngold_value\030\002 \001(\r\022\025\n\rentity_handl" +
      "e\030\003 \001(\005\022\021\n\ttimestamp\030\004 \001(\005\"n\n\031CDOTAUserM" +
      "sg_MinimapEvent\022\022\n\nevent_type\030\001 \001(\005\022\025\n\re" +
      "ntity_handle\030\002 \001(\005\022\t\n\001x\030\003 \001(\005\022\t\n\001y\030\004 \001(\005" +
      "\022\020\n\010duration\030\005 \001(\005\"M\n\024CDOTAUserMsg_MapLi" +
      "ne\022\021\n\tplayer_id\030\001 \001(\005\022\"\n\007mapline\030\002 \001(\0132\021" +
      ".CDOTAMsg_MapLine\"}\n\036CDOTAUserMsg_Minima" +
      "pDebugPoint\022\035\n\010location\030\001 \001(\0132\013.CMsgVect" +
      "or\022\r\n\005color\030\002 \001(\r\022\014\n\004size\030\003 \001(\005\022\020\n\010durat" +
      "ion\030\004 \001(\002\022\r\n\005index\030\005 \001(\005\"\346\001\n#CDOTAUserMs",
      "g_CreateLinearProjectile\022\033\n\006origin\030\001 \001(\013" +
      "2\013.CMsgVector\022\037\n\010velocity\030\002 \001(\0132\r.CMsgVe" +
      "ctor2D\022\017\n\007latency\030\003 \001(\005\022\020\n\010entindex\030\004 \001(" +
      "\005\022\026\n\016particle_index\030\005 \001(\004\022\016\n\006handle\030\006 \001(" +
      "\005\022#\n\014acceleration\030\007 \001(\0132\r.CMsgVector2D\022\021" +
      "\n\tmax_speed\030\010 \001(\002\"6\n$CDOTAUserMsg_Destro" +
      "yLinearProjectile\022\016\n\006handle\030\001 \001(\005\"O\n%CDO" +
      "TAUserMsg_DodgeTrackingProjectiles\022\020\n\010en" +
      "tindex\030\001 \002(\005\022\024\n\014attacks_only\030\002 \001(\010\"_\n!CD" +
      "OTAUserMsg_SpectatorPlayerClick\022\020\n\010entin",
      "dex\030\001 \002(\005\022\022\n\norder_type\030\002 \001(\005\022\024\n\014target_" +
      "index\030\003 \001(\005\"\321\001\n&CDOTAUserMsg_SpectatorPl" +
      "ayerUnitOrders\022\020\n\010entindex\030\001 \001(\005\022\022\n\norde" +
      "r_type\030\002 \001(\005\022\r\n\005units\030\003 \003(\005\022\024\n\014target_in" +
      "dex\030\004 \001(\005\022\025\n\rability_index\030\005 \001(\005\022\035\n\010posi" +
      "tion\030\006 \001(\0132\013.CMsgVector\022\r\n\005queue\030\007 \001(\010\022\027" +
      "\n\017sequence_number\030\010 \001(\005\"s\n\035CDOTAUserMsg_" +
      "NevermoreRequiem\022\025\n\rentity_handle\030\001 \001(\005\022" +
      "\r\n\005lines\030\002 \001(\005\022\033\n\006origin\030\003 \001(\0132\013.CMsgVec" +
      "tor\022\017\n\007reverse\030\004 \001(\010\".\n\033CDOTAUserMsg_Inv",
      "alidCommand\022\017\n\007message\030\001 \001(\t\")\n\025CDOTAUse" +
      "rMsg_HudError\022\020\n\010order_id\030\001 \001(\005\"c\n\033CDOTA" +
      "UserMsg_SharedCooldown\022\020\n\010entindex\030\001 \001(\005" +
      "\022\014\n\004name\030\002 \001(\t\022\020\n\010cooldown\030\003 \001(\002\022\022\n\nname" +
      "_index\030\004 \001(\005\"/\n\037CDOTAUserMsg_SetNextAuto" +
      "buyItem\022\014\n\004name\030\001 \001(\t\"X\n\033CDOTAUserMsg_Ha" +
      "lloweenDrops\022\021\n\titem_defs\030\001 \003(\r\022\022\n\nplaye" +
      "r_ids\030\002 \003(\r\022\022\n\nprize_list\030\003 \001(\r\"\223\003\n\035CDOT" +
      "AUserMsg_PredictionResult\022\022\n\naccount_id\030" +
      "\001 \001(\r\022\020\n\010match_id\030\002 \001(\004\022\017\n\007correct\030\003 \001(\010",
      "\022>\n\013predictions\030\004 \003(\0132).CDOTAUserMsg_Pre" +
      "dictionResult.Prediction\032\372\001\n\nPrediction\022" +
      "\020\n\010item_def\030\001 \001(\r\022\023\n\013num_correct\030\002 \001(\r\022\021" +
      "\n\tnum_fails\030\003 \001(\r\022X\n\006result\030\004 \001(\01621.CDOT" +
      "AUserMsg_PredictionResult.Prediction.ERe" +
      "sult:\025k_eResult_ItemGranted\022\031\n\021granted_i" +
      "tem_defs\030\006 \003(\r\"=\n\007EResult\022\031\n\025k_eResult_I" +
      "temGranted\020\001\022\027\n\023k_eResult_Destroyed\020\002\"\376\001" +
      "\n\034CDOTAResponseQuerySerialized\0221\n\005facts\030" +
      "\001 \003(\0132\".CDOTAResponseQuerySerialized.Fac",
      "t\032\252\001\n\004Fact\022\013\n\003key\030\001 \002(\005\022F\n\007valtype\030\002 \002(\016" +
      "2,.CDOTAResponseQuerySerialized.Fact.Val" +
      "ueType:\007NUMERIC\022\023\n\013val_numeric\030\003 \001(\002\022\022\n\n" +
      "val_string\030\004 \001(\t\"$\n\tValueType\022\013\n\007NUMERIC" +
      "\020\001\022\n\n\006STRING\020\002\"\220\001\n\030CDOTASpeechMatchOnCli" +
      "ent\022\017\n\007concept\030\001 \001(\005\022\026\n\016recipient_type\030\002" +
      " \001(\005\0224\n\rresponsequery\030\003 \001(\0132\035.CDOTARespo" +
      "nseQuerySerialized\022\025\n\nrandomseed\030\004 \001(\017:\001" +
      "0\"\350\006\n\026CDOTAUserMsg_UnitEvent\0228\n\010msg_type" +
      "\030\001 \002(\0162\024.EDotaEntityMessages:\020DOTA_UNIT_",
      "SPEECH\022\024\n\014entity_index\030\002 \002(\005\022.\n\006speech\030\003" +
      " \001(\0132\036.CDOTAUserMsg_UnitEvent.Speech\0227\n\013" +
      "speech_mute\030\004 \001(\0132\".CDOTAUserMsg_UnitEve" +
      "nt.SpeechMute\0227\n\013add_gesture\030\005 \001(\0132\".CDO" +
      "TAUserMsg_UnitEvent.AddGesture\022=\n\016remove" +
      "_gesture\030\006 \001(\0132%.CDOTAUserMsg_UnitEvent." +
      "RemoveGesture\0229\n\014blood_impact\030\007 \001(\0132#.CD" +
      "OTAUserMsg_UnitEvent.BloodImpact\0229\n\014fade" +
      "_gesture\030\010 \001(\0132#.CDOTAUserMsg_UnitEvent." +
      "FadeGesture\0229\n\026speech_match_on_client\030\t ",
      "\001(\0132\031.CDOTASpeechMatchOnClient\032k\n\006Speech" +
      "\022\017\n\007concept\030\001 \001(\005\022\020\n\010response\030\002 \001(\t\022\026\n\016r" +
      "ecipient_type\030\003 \001(\005\022\r\n\005level\030\004 \001(\005\022\027\n\010mu" +
      "teable\030\005 \001(\010:\005false\032 \n\nSpeechMute\022\022\n\005del" +
      "ay\030\001 \001(\002:\0030.5\032W\n\nAddGesture\022\020\n\010activity\030" +
      "\001 \001(\005\022\014\n\004slot\030\002 \001(\005\022\022\n\007fade_in\030\003 \001(\002:\0010\022" +
      "\025\n\010fade_out\030\004 \001(\002:\0030.1\032!\n\rRemoveGesture\022" +
      "\020\n\010activity\030\001 \001(\005\032@\n\013BloodImpact\022\r\n\005scal" +
      "e\030\001 \001(\005\022\020\n\010x_normal\030\002 \001(\005\022\020\n\010y_normal\030\003 " +
      "\001(\005\032\037\n\013FadeGesture\022\020\n\010activity\030\001 \001(\005\"0\n\032",
      "CDOTAUserMsg_ItemPurchased\022\022\n\nitem_index" +
      "\030\001 \001(\005\"j\n\026CDOTAUserMsg_ItemFound\022\016\n\006play" +
      "er\030\001 \001(\005\022\017\n\007quality\030\002 \001(\005\022\016\n\006rarity\030\003 \001(" +
      "\005\022\016\n\006method\030\004 \001(\005\022\017\n\007itemdef\030\005 \001(\005\"\240\023\n\034C" +
      "DOTAUserMsg_ParticleManager\022H\n\004type\030\001 \001(" +
      "\0162\026.DOTA_PARTICLE_MESSAGE:\"DOTA_PARTICLE" +
      "_MANAGER_EVENT_CREATE\022\r\n\005index\030\002 \002(\r\022R\n\026" +
      "release_particle_index\030\003 \001(\01322.CDOTAUser" +
      "Msg_ParticleManager.ReleaseParticleIndex" +
      "\022E\n\017create_particle\030\004 \001(\0132,.CDOTAUserMsg",
      "_ParticleManager.CreateParticle\022G\n\020destr" +
      "oy_particle\030\005 \001(\0132-.CDOTAUserMsg_Particl" +
      "eManager.DestroyParticle\022Z\n\032destroy_part" +
      "icle_involving\030\006 \001(\01326.CDOTAUserMsg_Part" +
      "icleManager.DestroyParticleInvolving\022E\n\017" +
      "update_particle\030\007 \001(\0132,.CDOTAUserMsg_Par" +
      "ticleManager.UpdateParticle\022L\n\023update_pa" +
      "rticle_fwd\030\010 \001(\0132/.CDOTAUserMsg_Particle" +
      "Manager.UpdateParticleFwd\022R\n\026update_part" +
      "icle_orient\030\t \001(\01322.CDOTAUserMsg_Particl",
      "eManager.UpdateParticleOrient\022V\n\030update_" +
      "particle_fallback\030\n \001(\01324.CDOTAUserMsg_P" +
      "articleManager.UpdateParticleFallback\022R\n" +
      "\026update_particle_offset\030\013 \001(\01322.CDOTAUse" +
      "rMsg_ParticleManager.UpdateParticleOffse" +
      "t\022L\n\023update_particle_ent\030\014 \001(\0132/.CDOTAUs" +
      "erMsg_ParticleManager.UpdateParticleEnt\022" +
      "[\n\033update_particle_should_draw\030\016 \001(\01326.C" +
      "DOTAUserMsg_ParticleManager.UpdatePartic" +
      "leShouldDraw\022Y\n\032update_particle_set_froz",
      "en\030\017 \001(\01325.CDOTAUserMsg_ParticleManager." +
      "UpdateParticleSetFrozen\022c\n\037change_contro" +
      "l_point_attachment\030\020 \001(\0132:.CDOTAUserMsg_" +
      "ParticleManager.ChangeControlPointAttach" +
      "ment\022R\n\026update_entity_position\030\021 \001(\01322.C" +
      "DOTAUserMsg_ParticleManager.UpdateEntity" +
      "Position\032\026\n\024ReleaseParticleIndex\032~\n\016Crea" +
      "teParticle\022\033\n\023particle_name_index\030\001 \001(\006\022" +
      "\023\n\013attach_type\030\002 \001(\005\022\025\n\rentity_handle\030\003 " +
      "\001(\005\022#\n\033entity_handle_for_modifiers\030\004 \001(\005",
      "\032.\n\017DestroyParticle\022\033\n\023destroy_immediate" +
      "ly\030\001 \001(\010\032N\n\030DestroyParticleInvolving\022\033\n\023" +
      "destroy_immediately\030\001 \001(\010\022\025\n\rentity_hand" +
      "le\030\003 \001(\005\032F\n\016UpdateParticle\022\025\n\rcontrol_po" +
      "int\030\001 \001(\005\022\035\n\010position\030\002 \001(\0132\013.CMsgVector" +
      "\032H\n\021UpdateParticleFwd\022\025\n\rcontrol_point\030\001" +
      " \001(\005\022\034\n\007forward\030\002 \001(\0132\013.CMsgVector\032\200\001\n\024U" +
      "pdateParticleOrient\022\025\n\rcontrol_point\030\001 \001" +
      "(\005\022\034\n\007forward\030\002 \001(\0132\013.CMsgVector\022\032\n\005righ" +
      "t\030\003 \001(\0132\013.CMsgVector\022\027\n\002up\030\004 \001(\0132\013.CMsgV",
      "ector\032N\n\026UpdateParticleFallback\022\025\n\rcontr" +
      "ol_point\030\001 \001(\005\022\035\n\010position\030\002 \001(\0132\013.CMsgV" +
      "ector\032Q\n\024UpdateParticleOffset\022\025\n\rcontrol" +
      "_point\030\001 \001(\005\022\"\n\rorigin_offset\030\002 \001(\0132\013.CM" +
      "sgVector\032\255\001\n\021UpdateParticleEnt\022\025\n\rcontro" +
      "l_point\030\001 \001(\005\022\025\n\rentity_handle\030\002 \001(\005\022\023\n\013" +
      "attach_type\030\003 \001(\005\022\022\n\nattachment\030\004 \001(\005\022&\n" +
      "\021fallback_position\030\005 \001(\0132\013.CMsgVector\022\031\n" +
      "\021include_wearables\030\006 \001(\010\032-\n\027UpdatePartic" +
      "leSetFrozen\022\022\n\nset_frozen\030\001 \001(\010\032/\n\030Updat",
      "eParticleShouldDraw\022\023\n\013should_draw\030\001 \001(\010" +
      "\032e\n\034ChangeControlPointAttachment\022\026\n\016atta" +
      "chment_old\030\001 \001(\005\022\026\n\016attachment_new\030\002 \001(\005" +
      "\022\025\n\rentity_handle\030\003 \001(\005\032L\n\024UpdateEntityP" +
      "osition\022\025\n\rentity_handle\030\001 \001(\005\022\035\n\010positi" +
      "on\030\002 \001(\0132\013.CMsgVector\"\305\001\n\032CDOTAUserMsg_O" +
      "verheadEvent\022?\n\014message_type\030\001 \001(\0162\024.DOT" +
      "A_OVERHEAD_ALERT:\023OVERHEAD_ALERT_GOLD\022\r\n" +
      "\005value\030\002 \001(\005\022\036\n\026target_player_entindex\030\003" +
      " \001(\005\022\027\n\017target_entindex\030\004 \001(\005\022\036\n\026source_",
      "player_entindex\030\005 \001(\005\">\n\034CDOTAUserMsg_Tu" +
      "torialTipInfo\022\014\n\004name\030\001 \001(\t\022\020\n\010progress\030" +
      "\002 \001(\005\"]\n\033CDOTAUserMsg_TutorialFinish\022\017\n\007" +
      "heading\030\001 \001(\t\022\016\n\006emblem\030\002 \001(\t\022\014\n\004body\030\003 " +
      "\001(\t\022\017\n\007success\030\004 \001(\010\"&\n$CDOTAUserMsg_Tut" +
      "orialMinimapPosition\"_\n\037CDOTAUserMsg_Sen" +
      "dGenericToolTip\022\r\n\005title\030\001 \001(\t\022\014\n\004text\030\002" +
      " \001(\t\022\020\n\010entindex\030\003 \001(\005\022\r\n\005close\030\004 \001(\010\"S\n" +
      "\026CDOTAUserMsg_WorldLine\022\021\n\tplayer_id\030\001 \001" +
      "(\005\022&\n\tworldline\030\002 \001(\0132\023.CDOTAMsg_WorldLi",
      "ne\"\223\001\n\026CDOTAUserMsg_ChatWheel\022;\n\014chat_me" +
      "ssage\030\001 \001(\0162\026.EDOTAChatWheelMessage:\rk_E" +
      "DOTA_CW_Ok\022\021\n\tplayer_id\030\002 \001(\r\022\022\n\naccount" +
      "_id\030\003 \001(\r\022\025\n\rparam_hero_id\030\004 \001(\r\"]\n\035CDOT" +
      "AUserMsg_ReceivedXmasGift\022\021\n\tplayer_id\030\001" +
      " \001(\005\022\021\n\titem_name\030\002 \001(\t\022\026\n\016inventory_slo" +
      "t\030\003 \001(\005\"\244\001\n\027CDOTAUserMsg_ShowSurvey\022\021\n\ts" +
      "urvey_id\030\001 \001(\005\022\020\n\010match_id\030\002 \001(\r\022\026\n\016resp" +
      "onse_style\030\003 \001(\t\022\030\n\020teammate_hero_id\030\004 \001" +
      "(\r\022\025\n\rteammate_name\030\005 \001(\t\022\033\n\023teammate_ac",
      "count_id\030\006 \001(\r\"5\n CDOTAUserMsg_UpdateSha" +
      "redContent\022\021\n\tslot_type\030\001 \001(\005\"!\n\037CDOTAUs" +
      "erMsg_TutorialRequestExp\".\n\031CDOTAUserMsg" +
      "_TutorialFade\022\021\n\ttgt_alpha\030\001 \001(\005\"x\n CDOT" +
      "AUserMsg_TutorialPingMinimap\022\021\n\tplayer_i" +
      "d\030\001 \001(\r\022\r\n\005pos_x\030\002 \001(\002\022\r\n\005pos_y\030\003 \001(\002\022\r\n" +
      "\005pos_z\030\004 \001(\002\022\024\n\014entity_index\030\005 \001(\005\"3\n\"CD" +
      "OTAUserMsg_GamerulesStateChanged\022\r\n\005stat" +
      "e\030\001 \001(\r\"E\n\035CDOTAUserMsg_AddQuestLogEntry" +
      "\022\020\n\010npc_name\030\001 \001(\t\022\022\n\nnpc_dialog\030\002 \001(\t\"[",
      "\n\032CDOTAUserMsg_SendStatPopup\022\021\n\tplayer_i" +
      "d\030\001 \001(\005\022*\n\tstatpopup\030\002 \001(\0132\027.CDOTAMsg_Se" +
      "ndStatPopup\"C\n\034CDOTAUserMsg_SendRoshanPo" +
      "pup\022\021\n\treclaimed\030\001 \001(\010\022\020\n\010gametime\030\002 \001(\005" +
      "\"L\n\032CDOTAUserMsg_SendFinalGold\022\025\n\rreliab" +
      "le_gold\030\001 \003(\r\022\027\n\017unreliable_gold\030\002 \003(\r\"K" +
      "\n\026CDOTAUserMsg_CustomMsg\022\017\n\007message\030\001 \001(" +
      "\t\022\021\n\tplayer_id\030\002 \001(\005\022\r\n\005value\030\003 \001(\005\"X\n\031C" +
      "DOTAUserMsg_CoachHUDPing\022\021\n\tplayer_id\030\001 " +
      "\001(\r\022(\n\010hud_ping\030\002 \001(\0132\026.CDOTAMsg_CoachHU",
      "DPing\" \n\036CDOTAUserMsg_ClientLoadGridNav\"" +
      "\202\002\n\032CDOTAUserMsg_TE_Projectile\022\017\n\007hSourc" +
      "e\030\001 \001(\005\022\017\n\007hTarget\030\002 \001(\005\022\021\n\tmoveSpeed\030\003 " +
      "\001(\005\022\030\n\020sourceAttachment\030\004 \001(\005\022\034\n\024particl" +
      "eSystemHandle\030\005 \001(\003\022\021\n\tdodgeable\030\006 \001(\010\022\020" +
      "\n\010isAttack\030\007 \001(\010\022\020\n\010isEvaded\030\010 \001(\010\022\022\n\nex" +
      "pireTime\030\t \001(\002\022\025\n\rmaximpacttime\030\n \001(\002\022\025\n" +
      "\rcolorgemcolor\030\013 \001(\007\"\205\002\n\035CDOTAUserMsg_TE" +
      "_ProjectileLoc\022\037\n\nvSourceLoc\030\001 \001(\0132\013.CMs" +
      "gVector\022\017\n\007hTarget\030\002 \001(\005\022\021\n\tmoveSpeed\030\003 ",
      "\001(\005\022\034\n\024particleSystemHandle\030\004 \001(\003\022\021\n\tdod" +
      "geable\030\005 \001(\010\022\020\n\010isAttack\030\006 \001(\010\022\020\n\010isEvad" +
      "ed\030\010 \001(\010\022\022\n\nexpireTime\030\t \001(\002\022\037\n\nvTargetL" +
      "oc\030\n \001(\0132\013.CMsgVector\022\025\n\rcolorgemcolor\030\013" +
      " \001(\007\"b\n\037CDOTAUserMsg_TE_DotaBloodImpact\022" +
      "\016\n\006entity\030\001 \001(\005\022\r\n\005scale\030\002 \001(\002\022\017\n\007xnorma" +
      "l\030\003 \001(\002\022\017\n\007ynormal\030\004 \001(\002\"\313\001\n\030CDOTAUserMs" +
      "g_AbilityPing\022\021\n\tplayer_id\030\001 \001(\r\022\022\n\nabil" +
      "ity_id\030\002 \001(\r\0229\n\004type\030\003 \001(\0162\027.DOTA_ABILIT" +
      "Y_PING_TYPE:\022ABILITY_PING_READY\022\030\n\020coold",
      "own_seconds\030\004 \001(\r\022\r\n\005level\030\005 \001(\r\022\017\n\007pass" +
      "ive\030\006 \001(\010\022\023\n\013mana_needed\030\007 \001(\r\"\221\001\n\035CDOTA" +
      "UserMsg_TE_UnitAnimation\022\016\n\006entity\030\001 \001(\005" +
      "\022\027\n\017sequenceVariant\030\002 \001(\005\022\024\n\014playbackrat" +
      "e\030\003 \001(\002\022\021\n\tcastpoint\030\004 \001(\002\022\014\n\004type\030\005 \001(\005" +
      "\022\020\n\010activity\030\006 \001(\005\"@\n CDOTAUserMsg_TE_Un" +
      "itAnimationEnd\022\016\n\006entity\030\001 \001(\005\022\014\n\004snap\030\002" +
      " \001(\010\"\221\001\n\035CDOTAUserMsg_ShowGenericPopup\022\016" +
      "\n\006header\030\001 \002(\t\022\014\n\004body\030\002 \002(\t\022\016\n\006param1\030\003" +
      " \001(\t\022\016\n\006param2\030\004 \001(\t\022\023\n\013tint_screen\030\005 \001(",
      "\010\022\035\n\025show_no_other_dialogs\030\006 \001(\010\"`\n\026CDOT" +
      "AUserMsg_VoteStart\022\r\n\005title\030\001 \001(\t\022\020\n\010dur" +
      "ation\030\002 \001(\002\022\024\n\014choice_count\030\003 \001(\005\022\017\n\007cho" +
      "ices\030\004 \003(\t\"0\n\027CDOTAUserMsg_VoteUpdate\022\025\n" +
      "\rchoice_counts\030\001 \003(\005\"/\n\024CDOTAUserMsg_Vot" +
      "eEnd\022\027\n\017selected_choice\030\001 \001(\005\"\214\001\n\037CDOTAU" +
      "serMsg_BoosterStatePlayer\022\021\n\tplayer_id\030\001" +
      " \001(\r\022\r\n\005bonus\030\002 \001(\002\022\023\n\013event_bonus\030\003 \001(\002" +
      "\022\025\n\rbonus_item_id\030\004 \001(\r\022\033\n\023event_bonus_i" +
      "tem_id\030\005 \001(\r\"V\n\031CDOTAUserMsg_BoosterStat",
      "e\0229\n\017boosted_players\030\001 \003(\0132 .CDOTAUserMs" +
      "g_BoosterStatePlayer\")\n\026CDOTAUserMsg_Pla" +
      "yerMMR\022\017\n\003mmr\030\001 \003(\021B\002\020\001\"Y\n\031CDOTAUserMsg_" +
      "AbilitySteal\022\021\n\tplayer_id\030\001 \001(\r\022\022\n\nabili" +
      "ty_id\030\002 \001(\r\022\025\n\rability_level\030\003 \001(\r\"f\n\034CD" +
      "OTAUserMsg_StatsHeroLookup\022\021\n\tplayer_id\030" +
      "\001 \001(\005\022\017\n\007hero_id\030\002 \001(\005\022\021\n\thero_name\030\003 \001(" +
      "\t\022\017\n\007persona\030\004 \001(\t\"\372\001\n\"CDOTAUserMsg_Stat" +
      "sHeroPositionInfo\022\030\n\020average_position\030\001 " +
      "\001(\002\022J\n\020position_details\030\002 \003(\01320.CDOTAUse",
      "rMsg_StatsHeroPositionInfo.PositionPair\032" +
      "n\n\014PositionPair\022F\n\021position_category\030\001 \001" +
      "(\0162\027.DOTA_POSITION_CATEGORY:\022DOTA_POSITI" +
      "ON_NONE\022\026\n\016position_count\030\002 \001(\r\"\217\003\n#CDOT" +
      "AUserMsg_StatsHeroMinuteDetails\022\021\n\tlast_" +
      "hits\030\001 \001(\r\022\022\n\nhero_kills\030\002 \001(\r\022\023\n\013hero_d" +
      "amage\030\003 \001(\r\022\024\n\014tower_damage\030\004 \001(\r\022:\n\rpos" +
      "ition_info\030\005 \001(\0132#.CDOTAUserMsg_StatsHer" +
      "oPositionInfo\022\020\n\010total_xp\030\006 \001(\r\022\021\n\tnet_w" +
      "orth\030\007 \001(\r\022\034\n\024harvested_creep_gold\030\010 \001(\r",
      "\022\024\n\014claimed_farm\030\t \001(\r\022\024\n\014wards_placed\030\n" +
      " \001(\r\022\027\n\017runes_collected\030\013 \001(\r\022\020\n\010tps_use" +
      "d\030\014 \001(\r\022\022\n\nmana_spent\030\r \003(\r\022\027\n\017damage_ab" +
      "sorbed\030\016 \003(\r\022\023\n\013damage_done\030\017 \003(\r\"\347\003\n#CD" +
      "OTAUserMsg_StatsTeamMinuteDetails\022:\n\014pla" +
      "yer_stats\030\001 \003(\0132$.CDOTAUserMsg_StatsHero" +
      "MinuteDetails\022\023\n\013tower_kills\030\002 \001(\r\022\025\n\rba" +
      "rrack_kills\030\003 \001(\r\022!\n\031available_lane_cree" +
      "p_gold\030\004 \001(\r\022\032\n\022balance_kill_value\030\005 \001(\r" +
      "\022\033\n\023balance_tower_value\030\006 \001(\r\022\036\n\026balance",
      "_barracks_value\030\007 \001(\r\022\032\n\022balance_gold_va" +
      "lue\030\010 \001(\r\022\030\n\020balance_xp_value\030\t \001(\r\022R\n\020l" +
      "ane_performance\030\n \003(\01328.CDOTAUserMsg_Sta" +
      "tsTeamMinuteDetails.LocationPerformance\032" +
      "R\n\023LocationPerformance\022\031\n\021location_categ" +
      "ory\030\001 \001(\r\022\021\n\tstat_type\030\002 \001(\r\022\r\n\005value\030\003 " +
      "\001(\r\"\254\001\n!CDOTAUserMsg_StatsPlayerKillShar" +
      "e\022\021\n\tplayer_id\030\001 \001(\005\022\032\n\022kill_share_perce" +
      "nt\030\002 \001(\002\022\024\n\014player_loc_x\030\003 \001(\002\022\024\n\014player" +
      "_loc_y\030\004 \001(\002\022\026\n\016health_percent\030\005 \001(\002\022\024\n\014",
      "mana_percent\030\006 \001(\002\"\304\001\n\035CDOTAUserMsg_Stat" +
      "sKillDetails\022\021\n\tvictim_id\030\001 \001(\r\0227\n\013kill_" +
      "shares\030\002 \003(\0132\".CDOTAUserMsg_StatsPlayerK" +
      "illShare\022\026\n\016damage_to_kill\030\003 \001(\r\022\030\n\020effe" +
      "ctive_health\030\004 \001(\r\022\022\n\ndeath_time\030\005 \001(\002\022\021" +
      "\n\tkiller_id\030\006 \001(\r\"\213\006\n\036CDOTAUserMsg_Stats" +
      "MatchDetails\0222\n\013hero_lookup\030\001 \003(\0132\035.CDOT" +
      "AUserMsg_StatsHeroLookup\022;\n\rradiant_stat" +
      "s\030\002 \003(\0132$.CDOTAUserMsg_StatsTeamMinuteDe" +
      "tails\0228\n\ndire_stats\030\003 \003(\0132$.CDOTAUserMsg",
      "_StatsTeamMinuteDetails\0225\n\rradiant_kills" +
      "\030\004 \003(\0132\036.CDOTAUserMsg_StatsKillDetails\0222" +
      "\n\ndire_kills\030\005 \003(\0132\036.CDOTAUserMsg_StatsK" +
      "illDetails\022U\n\rfight_details\030\006 \003(\0132>.CDOT" +
      "AUserMsg_StatsMatchDetails.CDOTAUserMsg_" +
      "StatsFightDetails\032p\n\"CDOTAUserMsg_StatsF" +
      "ightTeamDetails\022\024\n\014participants\030\001 \003(\r\022\016\n" +
      "\006deaths\030\002 \003(\r\022\022\n\ngold_delta\030\003 \001(\r\022\020\n\010xp_" +
      "delta\030\004 \001(\r\032\211\002\n\036CDOTAUserMsg_StatsFightD" +
      "etails\022\022\n\nstart_time\030\001 \001(\002\022\020\n\010end_time\030\002",
      " \001(\002\022a\n\025radiant_fight_details\030\003 \001(\0132B.CD" +
      "OTAUserMsg_StatsMatchDetails.CDOTAUserMs" +
      "g_StatsFightTeamDetails\022^\n\022dire_fight_de" +
      "tails\030\004 \001(\0132B.CDOTAUserMsg_StatsMatchDet" +
      "ails.CDOTAUserMsg_StatsFightTeamDetails\"" +
      "4\n\026CDOTAUserMsg_MiniTaunt\022\032\n\022taunting_pl" +
      "ayer_id\030\001 \001(\r\"0\n\031CDOTAUserMsg_SpeechBubb" +
      "le\022\023\n\013destroy_all\030\001 \001(\010\"g\n CDOTAUserMsg_" +
      "CustomHeaderMessage\022\021\n\tplayer_id\030\001 \001(\r\022\020" +
      "\n\010duration\030\002 \001(\002\022\017\n\007message\030\003 \001(\t\022\r\n\005val",
      "ue\030\004 \001(\005\"v\n\023CMsgHeroAbilityStat\0227\n\tstat_" +
      "type\030\001 \001(\0162\016.EHeroStatType:\024k_EHeroStatT" +
      "ype_None\022\021\n\tint_value\030\002 \001(\005\022\023\n\013float_val" +
      "ue\030\003 \001(\002\"d\n\034CMsgCombatAnalyzerPlayerStat" +
      "\022\022\n\naccount_id\030\001 \001(\r\0220\n\022hero_ability_sta" +
      "ts\030\002 \003(\0132\024.CMsgHeroAbilityStat\"`\n\027CMsgCo" +
      "mbatAnalyzerStats\022\020\n\010match_id\030\001 \001(\004\0223\n\014p" +
      "layer_stats\030\002 \003(\0132\035.CMsgCombatAnalyzerPl" +
      "ayerStat\"W\n\026CDOTAUserMsg_BeastChat\022\014\n\004te" +
      "am\030\001 \001(\r\022\016\n\006format\030\002 \001(\t\022\017\n\007message\030\003 \001(",
      "\t\022\016\n\006target\030\004 \001(\t\"a\n$CDOTAUserMsg_Custom" +
      "HudElement_Create\022\022\n\nelement_id\030\001 \001(\t\022\027\n" +
      "\017layout_filename\030\002 \001(\t\022\014\n\004data\030\003 \001(\014\"`\n$" +
      "CDOTAUserMsg_CustomHudElement_Modify\022\022\n\n" +
      "element_id\030\001 \001(\t\022\026\n\016modify_visible\030\002 \001(\010" +
      "\022\014\n\004data\030\003 \001(\014\";\n%CDOTAUserMsg_CustomHud" +
      "Element_Destroy\022\022\n\nelement_id\030\001 \001(\t\"F\n\"C" +
      "DOTAUserMsg_CompendiumStatePlayer\022\021\n\tpla" +
      "yer_id\030\001 \001(\r\022\r\n\005level\030\002 \001(\r\"_\n\034CDOTAUser" +
      "Msg_CompendiumState\022?\n\022compendium_player",
      "s\030\001 \003(\0132#.CDOTAUserMsg_CompendiumStatePl" +
      "ayer\"\334\001\n\036CDOTAUserMsg_ProjectionAbility\022" +
      "\022\n\nability_id\030\001 \001(\r\022\030\n\020caster_ent_index\030" +
      "\002 \001(\005\022\023\n\013caster_team\030\003 \001(\005\022\023\n\013channel_en" +
      "d\030\004 \001(\010\022\033\n\006origin\030\005 \001(\0132\013.CMsgVector\022\031\n\021" +
      "track_caster_only\030\006 \001(\010\022\020\n\010end_time\030\007 \001(" +
      "\002\022\030\n\020victim_ent_index\030\010 \001(\005\"a\n\034CDOTAUser" +
      "Msg_ProjectionEvent\0223\n\010event_id\030\001 \001(\0162\021." +
      "EProjectionEvent:\016ePE_FirstBlood\022\014\n\004team" +
      "\030\002 \001(\r\"B\n\024CDOTAUserMsg_XPAlert\022\021\n\tplayer",
      "_id\030\001 \001(\r\022\027\n\017target_entindex\030\002 \001(\r\"\254\001\n\030C" +
      "DOTAUserMsg_QuestStatus\022\021\n\tplayer_id\030\001 \002" +
      "(\r\022\020\n\010quest_id\030\002 \001(\r\022\024\n\014challenge_id\030\003 \001" +
      "(\r\022\020\n\010progress\030\004 \001(\r\022\014\n\004goal\030\005 \001(\r\022\r\n\005qu" +
      "ery\030\006 \001(\r\022\025\n\rfail_gametime\030\007 \001(\002\022\017\n\007item" +
      "_id\030\010 \001(\r\"\"\n CDOTAUserMsg_UpdateQuestPro" +
      "gress\"\204\n\n\026CMsgDOTACombatLogEntry\022:\n\004type" +
      "\030\001 \001(\0162\025.DOTA_COMBATLOG_TYPES:\025DOTA_COMB" +
      "ATLOG_DAMAGE\022\023\n\013target_name\030\002 \001(\r\022\032\n\022tar" +
      "get_source_name\030\003 \001(\r\022\025\n\rattacker_name\030\004",
      " \001(\r\022\032\n\022damage_source_name\030\005 \001(\r\022\026\n\016infl" +
      "ictor_name\030\006 \001(\r\022\034\n\024is_attacker_illusion" +
      "\030\007 \001(\010\022\030\n\020is_attacker_hero\030\010 \001(\010\022\032\n\022is_t" +
      "arget_illusion\030\t \001(\010\022\026\n\016is_target_hero\030\n" +
      " \001(\010\022\032\n\022is_visible_radiant\030\013 \001(\010\022\027\n\017is_v" +
      "isible_dire\030\014 \001(\010\022\r\n\005value\030\r \001(\r\022\016\n\006heal" +
      "th\030\016 \001(\005\022\021\n\ttimestamp\030\017 \001(\002\022\025\n\rstun_dura" +
      "tion\030\020 \001(\002\022\025\n\rslow_duration\030\021 \001(\002\022\034\n\024is_" +
      "ability_toggle_on\030\022 \001(\010\022\035\n\025is_ability_to" +
      "ggle_off\030\023 \001(\010\022\025\n\rability_level\030\024 \001(\r\022\022\n",
      "\nlocation_x\030\025 \001(\002\022\022\n\nlocation_y\030\026 \001(\002\022\023\n" +
      "\013gold_reason\030\027 \001(\r\022\025\n\rtimestamp_raw\030\030 \001(" +
      "\002\022\031\n\021modifier_duration\030\031 \001(\002\022\021\n\txp_reaso" +
      "n\030\032 \001(\r\022\021\n\tlast_hits\030\033 \001(\r\022\025\n\rattacker_t" +
      "eam\030\034 \001(\r\022\023\n\013target_team\030\035 \001(\r\022\030\n\020obs_wa" +
      "rds_placed\030\036 \001(\r\022\026\n\016assist_player0\030\037 \001(\r" +
      "\022\026\n\016assist_player1\030  \001(\r\022\026\n\016assist_playe" +
      "r2\030! \001(\r\022\026\n\016assist_player3\030\" \001(\r\022\023\n\013stac" +
      "k_count\030# \001(\r\022\027\n\017hidden_modifier\030$ \001(\010\022\032" +
      "\n\022is_target_building\030% \001(\010\022\031\n\021neutral_ca",
      "mp_type\030& \001(\r\022\021\n\trune_type\030\' \001(\r\022\026\n\016assi" +
      "st_players\030( \003(\r\022\024\n\014is_heal_save\030) \001(\010\022\033" +
      "\n\023is_ultimate_ability\030* \001(\010\022\033\n\023attacker_" +
      "hero_level\030+ \001(\r\022\031\n\021target_hero_level\030, " +
      "\001(\r\022\013\n\003xpm\030- \001(\r\022\013\n\003gpm\030. \001(\r\022\026\n\016event_l" +
      "ocation\030/ \001(\r\022\026\n\016target_is_self\0300 \001(\010\022\023\n" +
      "\013damage_type\0301 \001(\r\022\035\n\025invisibility_modif" +
      "ier\0302 \001(\010\022\027\n\017damage_category\0303 \001(\r\022\020\n\010ne" +
      "tworth\0304 \001(\r*\355\007\n\024DOTA_COMBATLOG_TYPES\022\031\n" +
      "\025DOTA_COMBATLOG_DAMAGE\020\000\022\027\n\023DOTA_COMBATL",
      "OG_HEAL\020\001\022\037\n\033DOTA_COMBATLOG_MODIFIER_ADD" +
      "\020\002\022\"\n\036DOTA_COMBATLOG_MODIFIER_REMOVE\020\003\022\030" +
      "\n\024DOTA_COMBATLOG_DEATH\020\004\022\032\n\026DOTA_COMBATL" +
      "OG_ABILITY\020\005\022\027\n\023DOTA_COMBATLOG_ITEM\020\006\022\033\n" +
      "\027DOTA_COMBATLOG_LOCATION\020\007\022\027\n\023DOTA_COMBA" +
      "TLOG_GOLD\020\010\022\035\n\031DOTA_COMBATLOG_GAME_STATE" +
      "\020\t\022\025\n\021DOTA_COMBATLOG_XP\020\n\022\033\n\027DOTA_COMBAT" +
      "LOG_PURCHASE\020\013\022\032\n\026DOTA_COMBATLOG_BUYBACK" +
      "\020\014\022\"\n\036DOTA_COMBATLOG_ABILITY_TRIGGER\020\r\022\036" +
      "\n\032DOTA_COMBATLOG_PLAYERSTATS\020\016\022\034\n\030DOTA_C",
      "OMBATLOG_MULTIKILL\020\017\022\035\n\031DOTA_COMBATLOG_K" +
      "ILLSTREAK\020\020\022%\n!DOTA_COMBATLOG_TEAM_BUILD" +
      "ING_KILL\020\021\022\036\n\032DOTA_COMBATLOG_FIRST_BLOOD" +
      "\020\022\022#\n\037DOTA_COMBATLOG_MODIFIER_REFRESH\020\023\022" +
      "%\n!DOTA_COMBATLOG_NEUTRAL_CAMP_STACK\020\024\022\036" +
      "\n\032DOTA_COMBATLOG_PICKUP_RUNE\020\025\022%\n!DOTA_C" +
      "OMBATLOG_REVEALED_INVISIBLE\020\026\022\035\n\031DOTA_CO" +
      "MBATLOG_HERO_SAVED\020\027\022 \n\034DOTA_COMBATLOG_M" +
      "ANA_RESTORED\020\030\022\037\n\033DOTA_COMBATLOG_HERO_LE" +
      "VELUP\020\031\022#\n\037DOTA_COMBATLOG_BOTTLE_HEAL_AL",
      "LY\020\032\022 \n\034DOTA_COMBATLOG_ENDGAME_STATS\020\033\022$" +
      "\n DOTA_COMBATLOG_INTERRUPT_CHANNEL\020\034\022\036\n\032" +
      "DOTA_COMBATLOG_ALLIED_GOLD\020\035\022\036\n\032DOTA_COM" +
      "BATLOG_AEGIS_TAKEN\020\036*\224\032\n\021DOTA_CHAT_MESSA" +
      "GE\022!\n\024CHAT_MESSAGE_INVALID\020\377\377\377\377\377\377\377\377\377\001\022\032\n" +
      "\026CHAT_MESSAGE_HERO_KILL\020\000\022\032\n\026CHAT_MESSAG" +
      "E_HERO_DENY\020\001\022\036\n\032CHAT_MESSAGE_BARRACKS_K" +
      "ILL\020\002\022\033\n\027CHAT_MESSAGE_TOWER_KILL\020\003\022\033\n\027CH" +
      "AT_MESSAGE_TOWER_DENY\020\004\022\033\n\027CHAT_MESSAGE_" +
      "FIRSTBLOOD\020\005\022\034\n\030CHAT_MESSAGE_STREAK_KILL",
      "\020\006\022\030\n\024CHAT_MESSAGE_BUYBACK\020\007\022\026\n\022CHAT_MES" +
      "SAGE_AEGIS\020\010\022\034\n\030CHAT_MESSAGE_ROSHAN_KILL" +
      "\020\t\022\035\n\031CHAT_MESSAGE_COURIER_LOST\020\n\022\"\n\036CHA" +
      "T_MESSAGE_COURIER_RESPAWNED\020\013\022\033\n\027CHAT_ME" +
      "SSAGE_GLYPH_USED\020\014\022\036\n\032CHAT_MESSAGE_ITEM_" +
      "PURCHASE\020\r\022\030\n\024CHAT_MESSAGE_CONNECT\020\016\022\033\n\027" +
      "CHAT_MESSAGE_DISCONNECT\020\017\022.\n*CHAT_MESSAG" +
      "E_DISCONNECT_WAIT_FOR_RECONNECT\020\020\022*\n&CHA" +
      "T_MESSAGE_DISCONNECT_TIME_REMAINING\020\021\0221\n" +
      "-CHAT_MESSAGE_DISCONNECT_TIME_REMAINING_",
      "PLURAL\020\022\022\032\n\026CHAT_MESSAGE_RECONNECT\020\023\022\034\n\030" +
      "CHAT_MESSAGE_PLAYER_LEFT\020\024\022\036\n\032CHAT_MESSA" +
      "GE_SAFE_TO_LEAVE\020\025\022\034\n\030CHAT_MESSAGE_RUNE_" +
      "PICKUP\020\026\022\034\n\030CHAT_MESSAGE_RUNE_BOTTLE\020\027\022\031" +
      "\n\025CHAT_MESSAGE_INTHEBAG\020\030\022\033\n\027CHAT_MESSAG" +
      "E_SECRETSHOP\020\031\022#\n\037CHAT_MESSAGE_ITEM_AUTO" +
      "PURCHASED\020\032\022\037\n\033CHAT_MESSAGE_ITEMS_COMBIN" +
      "ED\020\033\022\035\n\031CHAT_MESSAGE_SUPER_CREEPS\020\034\022%\n!C" +
      "HAT_MESSAGE_CANT_USE_ACTION_ITEM\020\035\022\"\n\036CH" +
      "AT_MESSAGE_CHARGES_EXHAUSTED\020\036\022\032\n\026CHAT_M",
      "ESSAGE_CANTPAUSE\020\037\022\035\n\031CHAT_MESSAGE_NOPAU" +
      "SESLEFT\020 \022\035\n\031CHAT_MESSAGE_CANTPAUSEYET\020!" +
      "\022\027\n\023CHAT_MESSAGE_PAUSED\020\"\022\"\n\036CHAT_MESSAG" +
      "E_UNPAUSE_COUNTDOWN\020#\022\031\n\025CHAT_MESSAGE_UN" +
      "PAUSED\020$\022\036\n\032CHAT_MESSAGE_AUTO_UNPAUSED\020%" +
      "\022\032\n\026CHAT_MESSAGE_YOUPAUSED\020&\022 \n\034CHAT_MES" +
      "SAGE_CANTUNPAUSETEAM\020\'\022\"\n\036CHAT_MESSAGE_V" +
      "OICE_TEXT_BANNED\020)\022.\n*CHAT_MESSAGE_SPECT" +
      "ATORS_WATCHING_THIS_GAME\020*\022 \n\034CHAT_MESSA" +
      "GE_REPORT_REMINDER\020+\022\032\n\026CHAT_MESSAGE_ECO",
      "N_ITEM\020,\022\026\n\022CHAT_MESSAGE_TAUNT\020-\022\027\n\023CHAT" +
      "_MESSAGE_RANDOM\020.\022\030\n\024CHAT_MESSAGE_RD_TUR" +
      "N\020/\022 \n\034CHAT_MESSAGE_DROP_RATE_BONUS\0201\022!\n" +
      "\035CHAT_MESSAGE_NO_BATTLE_POINTS\0202\022\035\n\031CHAT" +
      "_MESSAGE_DENIED_AEGIS\0203\022\036\n\032CHAT_MESSAGE_" +
      "INFORMATIONAL\0204\022\035\n\031CHAT_MESSAGE_AEGIS_ST" +
      "OLEN\0205\022\035\n\031CHAT_MESSAGE_ROSHAN_CANDY\0206\022\034\n" +
      "\030CHAT_MESSAGE_ITEM_GIFTED\0207\022\'\n#CHAT_MESS" +
      "AGE_HERO_KILL_WITH_GREEVIL\0208\022(\n$CHAT_MES" +
      "SAGE_HOLDOUT_TOWER_DESTROYED\0209\022\'\n#CHAT_M",
      "ESSAGE_HOLDOUT_WALL_DESTROYED\020:\022&\n\"CHAT_" +
      "MESSAGE_HOLDOUT_WALL_FINISHED\020;\022)\n%CHAT_" +
      "MESSAGE_PLAYER_LEFT_LIMITED_HERO\020>\0221\n-CH" +
      "AT_MESSAGE_ABANDON_LIMITED_HERO_EXPLANAT" +
      "ION\020?\022(\n$CHAT_MESSAGE_DISCONNECT_LIMITED" +
      "_HERO\020@\0223\n/CHAT_MESSAGE_LOW_PRIORITY_COM" +
      "PLETED_EXPLANATION\020A\022,\n(CHAT_MESSAGE_REC" +
      "RUITMENT_DROP_RATE_BONUS\020B\0221\n-CHAT_MESSA" +
      "GE_FROSTIVUS_SHINING_BOOSTER_ACTIVE\020C\022 \n" +
      "\034CHAT_MESSAGE_PLAYER_LEFT_AFK\020I\0222\n.CHAT_",
      "MESSAGE_PLAYER_LEFT_DISCONNECTED_TOO_LON" +
      "G\020J\022!\n\035CHAT_MESSAGE_PLAYER_ABANDONED\020K\022%" +
      "\n!CHAT_MESSAGE_PLAYER_ABANDONED_AFK\020L\0227\n" +
      "3CHAT_MESSAGE_PLAYER_ABANDONED_DISCONNEC" +
      "TED_TOO_LONG\020M\022#\n\037CHAT_MESSAGE_WILL_NOT_" +
      "BE_SCORED\020N\022*\n&CHAT_MESSAGE_WILL_NOT_BE_" +
      "SCORED_RANKED\020O\022+\n\'CHAT_MESSAGE_WILL_NOT" +
      "_BE_SCORED_NETWORK\020P\0222\n.CHAT_MESSAGE_WIL" +
      "L_NOT_BE_SCORED_NETWORK_RANKED\020Q\022)\n%CHAT" +
      "_MESSAGE_CAN_QUIT_WITHOUT_ABANDON\020R\022:\n6C",
      "HAT_MESSAGE_RANKED_GAME_STILL_SCORED_LEA" +
      "VERS_GET_LOSS\020S\0228\n4CHAT_MESSAGE_ABANDON_" +
      "RANKED_BEFORE_FIRST_BLOOD_PARTY\020T\022!\n\035CHA" +
      "T_MESSAGE_COMPENDIUM_LEVEL\020U\022*\n&CHAT_MES" +
      "SAGE_VICTORY_PREDICTION_STREAK\020V\022\"\n\036CHAT" +
      "_MESSAGE_ASSASSIN_ANNOUNCE\020W\022!\n\035CHAT_MES" +
      "SAGE_ASSASSIN_SUCCESS\020X\022 \n\034CHAT_MESSAGE_" +
      "ASSASSIN_DENIED\020Y\0227\n3CHAT_MESSAGE_VICTOR" +
      "Y_PREDICTION_SINGLE_USER_CONFIRM\020Z\022\034\n\030CH" +
      "AT_MESSAGE_EFFIGY_KILL\020[\022+\n\'CHAT_MESSAGE",
      "_VOICE_TEXT_BANNED_OVERFLOW\020\\\022\"\n\036CHAT_ME" +
      "SSAGE_YEAR_BEAST_KILLED\020]\022 \n\034CHAT_MESSAG" +
      "E_PAUSE_COUNTDOWN\020^\022\036\n\032CHAT_MESSAGE_COIN" +
      "S_WAGERED\020_\022#\n\037CHAT_MESSAGE_HERO_NOMINAT" +
      "ED_BAN\020`\022\034\n\030CHAT_MESSAGE_HERO_BANNED\020a\022\037" +
      "\n\033CHAT_MESSAGE_HERO_BAN_COUNT\020b\022\036\n\032CHAT_" +
      "MESSAGE_RIVER_PAINTED\020c\022\032\n\026CHAT_MESSAGE_" +
      "SCAN_USED\020d*\262\001\n\035DOTA_NO_BATTLE_POINTS_RE" +
      "ASONS\022%\n!NO_BATTLE_POINTS_WRONG_LOBBY_TY" +
      "PE\020\001\022\"\n\036NO_BATTLE_POINTS_PRACTICE_BOTS\020\002",
      "\022#\n\037NO_BATTLE_POINTS_CHEATS_ENABLED\020\003\022!\n" +
      "\035NO_BATTLE_POINTS_LOW_PRIORITY\020\004*\225\001\n\027DOT" +
      "A_REPLAY_STATE_EVENT\022&\n\"DOTA_REPLAY_STAT" +
      "E_EVENT_GAME_START\020\001\022)\n%DOTA_REPLAY_STAT" +
      "E_EVENT_STARTING_HORN\020\002\022\'\n#DOTA_REPLAY_S" +
      "TATE_EVENT_FIRST_BLOOD\020\003*\250\001\n\027DOTA_CHAT_I" +
      "NFORMATIONAL\022!\n\035INFO_COOP_BATTLE_POINTS_" +
      "RULES\020\001\022#\n\037INFO_FROSTIVUS_ABANDON_REMIND" +
      "ER\020\002\022\030\n\024INFO_RANKED_REMINDER\020\003\022+\n\'INFO_C" +
      "OOP_LOW_PRIORITY_PASSIVE_REMINDER\020\004*\226\001\n\026",
      "DOTA_ABILITY_PING_TYPE\022\026\n\022ABILITY_PING_R" +
      "EADY\020\001\022\025\n\021ABILITY_PING_MANA\020\002\022\031\n\025ABILITY" +
      "_PING_COOLDOWN\020\003\022\026\n\022ABILITY_PING_ENEMY\020\004" +
      "\022\032\n\026ABILITY_PING_UNLEARNED\020\005*\345\001\n\023EDotaEn" +
      "tityMessages\022\024\n\020DOTA_UNIT_SPEECH\020\000\022\031\n\025DO" +
      "TA_UNIT_SPEECH_MUTE\020\001\022\031\n\025DOTA_UNIT_ADD_G" +
      "ESTURE\020\002\022\034\n\030DOTA_UNIT_REMOVE_GESTURE\020\003\022!" +
      "\n\035DOTA_UNIT_REMOVE_ALL_GESTURES\020\004\022\032\n\026DOT" +
      "A_UNIT_FADE_GESTURE\020\006\022%\n!DOTA_UNIT_SPEEC" +
      "H_CLIENTSIDE_RULES\020\007*\323\005\n\025DOTA_PARTICLE_M",
      "ESSAGE\022&\n\"DOTA_PARTICLE_MANAGER_EVENT_CR" +
      "EATE\020\000\022&\n\"DOTA_PARTICLE_MANAGER_EVENT_UP" +
      "DATE\020\001\022.\n*DOTA_PARTICLE_MANAGER_EVENT_UP" +
      "DATE_FORWARD\020\002\0222\n.DOTA_PARTICLE_MANAGER_" +
      "EVENT_UPDATE_ORIENTATION\020\003\022/\n+DOTA_PARTI" +
      "CLE_MANAGER_EVENT_UPDATE_FALLBACK\020\004\022*\n&D" +
      "OTA_PARTICLE_MANAGER_EVENT_UPDATE_ENT\020\005\022" +
      "-\n)DOTA_PARTICLE_MANAGER_EVENT_UPDATE_OF" +
      "FSET\020\006\022\'\n#DOTA_PARTICLE_MANAGER_EVENT_DE" +
      "STROY\020\007\0221\n-DOTA_PARTICLE_MANAGER_EVENT_D",
      "ESTROY_INVOLVING\020\010\022\'\n#DOTA_PARTICLE_MANA" +
      "GER_EVENT_RELEASE\020\t\022\'\n#DOTA_PARTICLE_MAN" +
      "AGER_EVENT_LATENCY\020\n\022+\n\'DOTA_PARTICLE_MA" +
      "NAGER_EVENT_SHOULD_DRAW\020\013\022&\n\"DOTA_PARTIC" +
      "LE_MANAGER_EVENT_FROZEN\020\014\022?\n;DOTA_PARTIC" +
      "LE_MANAGER_EVENT_CHANGE_CONTROL_POINT_AT" +
      "TACHMENT\020\r\0226\n2DOTA_PARTICLE_MANAGER_EVEN" +
      "T_UPDATE_ENTITY_POSITION\020\016*\220\004\n\023DOTA_OVER" +
      "HEAD_ALERT\022\027\n\023OVERHEAD_ALERT_GOLD\020\000\022\027\n\023O" +
      "VERHEAD_ALERT_DENY\020\001\022\033\n\027OVERHEAD_ALERT_C",
      "RITICAL\020\002\022\025\n\021OVERHEAD_ALERT_XP\020\003\022%\n!OVER" +
      "HEAD_ALERT_BONUS_SPELL_DAMAGE\020\004\022\027\n\023OVERH" +
      "EAD_ALERT_MISS\020\005\022\031\n\025OVERHEAD_ALERT_DAMAG" +
      "E\020\006\022\030\n\024OVERHEAD_ALERT_EVADE\020\007\022\030\n\024OVERHEA" +
      "D_ALERT_BLOCK\020\010\022&\n\"OVERHEAD_ALERT_BONUS_" +
      "POISON_DAMAGE\020\t\022\027\n\023OVERHEAD_ALERT_HEAL\020\n" +
      "\022\033\n\027OVERHEAD_ALERT_MANA_ADD\020\013\022\034\n\030OVERHEA" +
      "D_ALERT_MANA_LOSS\020\014\022!\n\035OVERHEAD_ALERT_LA" +
      "ST_HIT_EARLY\020\r\022!\n\035OVERHEAD_ALERT_LAST_HI" +
      "T_CLOSE\020\016\022 \n\034OVERHEAD_ALERT_LAST_HIT_MIS",
      "S\020\017\022 \n\034OVERHEAD_ALERT_MAGICAL_BLOCK\020\020*\201\004" +
      "\n\026DOTA_POSITION_CATEGORY\022\026\n\022DOTA_POSITIO" +
      "N_NONE\020\000\022\035\n\031DOTA_POSITION_BOTTOM_LANE\020\001\022" +
      "\032\n\026DOTA_POSITION_MID_LANE\020\002\022\032\n\026DOTA_POSI" +
      "TION_TOP_LANE\020\003\022 \n\034DOTA_POSITION_RADIANT" +
      "_JUNGLE\020\004\022\035\n\031DOTA_POSITION_DIRE_JUNGLE\020\005" +
      "\022\"\n\036DOTA_POSITION_RADIANT_ANCIENTS\020\006\022\037\n\033" +
      "DOTA_POSITION_DIRE_ANCIENTS\020\007\022%\n!DOTA_PO" +
      "SITION_RADIANT_SECRET_SHOP\020\010\022\"\n\036DOTA_POS" +
      "ITION_DIRE_SECRET_SHOP\020\t\022\027\n\023DOTA_POSITIO",
      "N_RIVER\020\n\022\034\n\030DOTA_POSITION_ROSHAN_PIT\020\013\022" +
      "\036\n\032DOTA_POSITION_RADIANT_BASE\020\014\022\033\n\027DOTA_" +
      "POSITION_DIRE_BASE\020\r\022\032\n\026DOTA_POSITION_FO" +
      "UNTAIN\020\016\022\027\n\023DOTA_POSITION_OTHER\020\017*\346\001\n\030DO" +
      "TA_ABILITY_TARGET_TYPE\022\034\n\030DOTA_ABILITY_T" +
      "ARGET_NONE\020\000\022\034\n\030DOTA_ABILITY_TARGET_SELF" +
      "\020\001\022!\n\035DOTA_ABILITY_TARGET_ALLY_HERO\020\002\022\"\n" +
      "\036DOTA_ABILITY_TARGET_ALLY_CREEP\020\003\022\"\n\036DOT" +
      "A_ABILITY_TARGET_ENEMY_HERO\020\004\022#\n\037DOTA_AB" +
      "ILITY_TARGET_ENEMY_CREEP\020\005*\230\010\n\rEHeroStat",
      "Type\022\030\n\024k_EHeroStatType_None\020\000\022#\n\036k_EHer" +
      "oStatType_AxeTotalDamage\020\320\017\022\'\n\"k_EHeroSt" +
      "atType_BattleHungerDamage\020\321\017\022\'\n\"k_EHeroS" +
      "tatType_CounterHelixDamage\020\322\017\022\'\n\"k_EHero" +
      "StatType_CullingBladeDamage\020\323\017\022,\n\'k_EHer" +
      "oStatType_BerserkersCallCastCount\020\324\017\0223\n." +
      "k_EHeroStatType_BerserkersCallHeroesHitA" +
      "verage\020\325\017\0220\n+k_EHeroStatType_BerserkersC" +
      "allOtherUnitsHit\020\326\017\0223\n.k_EHeroStatType_B" +
      "erserkersCallHeroAttacksTaken\020\327\017\0224\n/k_EH",
      "eroStatType_BerserkersCallOtherAttacksTa" +
      "ken\020\330\017\022*\n%k_EHeroStatType_BattleHungerCa" +
      "stCount\020\331\017\0222\n-k_EHeroStatType_BattleHung" +
      "erPotentialDuration\020\332\017\0220\n+k_EHeroStatTyp" +
      "e_BattleHungerAverageDuration\020\333\017\022*\n%k_EH" +
      "eroStatType_CounterHelixProcCount\020\334\017\022.\n)" +
      "k_EHeroStatType_CounterHelixHeroProcCoun" +
      "t\020\335\017\0221\n,k_EHeroStatType_CounterHelixHero" +
      "esHitAverage\020\336\017\0223\n.k_EHeroStatType_Count" +
      "erHelixOtherUnitsHitCount\020\337\017\022*\n%k_EHeroS",
      "tatType_CullingBladeCastCount\020\340\017\022*\n%k_EH" +
      "eroStatType_CullingBladeKillCount\020\341\017\0224\n/" +
      "k_EHeroStatType_CullingBladeAverageHealt" +
      "hCulled\020\342\017\0227\n2k_EHeroStatType_CullingBla" +
      "deAverageDamageAvailable\020\343\017\0220\n+k_EHeroSt" +
      "atType_CullingBladeHeroBuffAverage\020\344\017*\251\004" +
      "\n\027EPlayerVoiceListenState\022\016\n\nkPVLS_None\020" +
      "\000\022\032\n\026kPVLS_DeniedChatBanned\020\001\022\027\n\023kPVLS_D" +
      "eniedPartner\020\002\022&\n\"kPVLS_DeniedHLTVTalker" +
      "NotSpectator\020\003\022$\n kPVLS_DeniedHLTVNoTalk",
      "erPlayerID\020\004\022(\n$kPVLS_DeniedHLTVTalkerNo" +
      "tBroadcaster\020\005\022\035\n\031kPVLS_DeniedTeamSpecta" +
      "tor\020\006\022\027\n\023kPVLS_DeniedStudent\020\010\022\020\n\014kPVLS_" +
      "Denied\020@\022&\n\"kPVLS_AllowHLTVTalkerIsBroad" +
      "caster\020A\022\034\n\030kPVLS_AllowCoBroadcaster\020B\022\026" +
      "\n\022kPVLS_AllowAllChat\020C\022\035\n\031kPVLS_AllowStu" +
      "dentToCoach\020D\022\034\n\030kPVLS_AllowFellowStuden" +
      "t\020E\022\034\n\030kPVLS_AllowTalkerIsCoach\020F\022\034\n\030kPV" +
      "LS_AllowCoachHearTeam\020G\022\027\n\023kPVLS_AllowSa" +
      "meTeam\020H\022\027\n\023kPVLS_AllowShowcase\020I*&\n\020EPr",
      "ojectionEvent\022\022\n\016ePE_FirstBlood\020\000B=\n$ska" +
      "distats.clarity.wire.common.protoB\020DotaU" +
      "serMessagesH\001\200\001\000"
    };
    com.google.protobuf.Descriptors.FileDescriptor.InternalDescriptorAssigner assigner =
        new com.google.protobuf.Descriptors.FileDescriptor.    InternalDescriptorAssigner() {
          public com.google.protobuf.ExtensionRegistry assignDescriptors(
              com.google.protobuf.Descriptors.FileDescriptor root) {
            descriptor = root;
            return null;
          }
        };
    com.google.protobuf.Descriptors.FileDescriptor
      .internalBuildGeneratedFileFrom(descriptorData,
        new com.google.protobuf.Descriptors.FileDescriptor[] {
          skadistats.clarity.wire.common.proto.NetworkBaseTypes.getDescriptor(),
          skadistats.clarity.wire.common.proto.DotaCommonMessages.getDescriptor(),
        }, assigner);
    internal_static_CDOTAUserMsg_AIDebugLine_descriptor =
      getDescriptor().getMessageTypes().get(0);
    internal_static_CDOTAUserMsg_AIDebugLine_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessage.FieldAccessorTable(
        internal_static_CDOTAUserMsg_AIDebugLine_descriptor,
        new java.lang.String[] { "Message", "Ping", "Loss", });
    internal_static_CDOTAUserMsg_Ping_descriptor =
      getDescriptor().getMessageTypes().get(1);
    internal_static_CDOTAUserMsg_Ping_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessage.FieldAccessorTable(
        internal_static_CDOTAUserMsg_Ping_descriptor,
        new java.lang.String[] { "Message", });
    internal_static_CDOTAUserMsg_SwapVerify_descriptor =
      getDescriptor().getMessageTypes().get(2);
    internal_static_CDOTAUserMsg_SwapVerify_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessage.FieldAccessorTable(
        internal_static_CDOTAUserMsg_SwapVerify_descriptor,
        new java.lang.String[] { "PlayerId", });
    internal_static_CDOTAUserMsg_ChatEvent_descriptor =
      getDescriptor().getMessageTypes().get(3);
    internal_static_CDOTAUserMsg_ChatEvent_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessage.FieldAccessorTable(
        internal_static_CDOTAUserMsg_ChatEvent_descriptor,
        new java.lang.String[] { "Type", "Value", "Playerid1", "Playerid2", "Playerid3", "Playerid4", "Playerid5", "Playerid6", "Value2", "Value3", });
    internal_static_CDOTAUserMsg_CombatLogShowDeath_descriptor =
      getDescriptor().getMessageTypes().get(4);
    internal_static_CDOTAUserMsg_CombatLogShowDeath_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessage.FieldAccessorTable(
        internal_static_CDOTAUserMsg_CombatLogShowDeath_descriptor,
        new java.lang.String[] { });
    internal_static_CDOTAUserMsg_BotChat_descriptor =
      getDescriptor().getMessageTypes().get(5);
    internal_static_CDOTAUserMsg_BotChat_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessage.FieldAccessorTable(
        internal_static_CDOTAUserMsg_BotChat_descriptor,
        new java.lang.String[] { "PlayerId", "Format", "Message", "Target", });
    internal_static_CDOTAUserMsg_CombatHeroPositions_descriptor =
      getDescriptor().getMessageTypes().get(6);
    internal_static_CDOTAUserMsg_CombatHeroPositions_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessage.FieldAccessorTable(
        internal_static_CDOTAUserMsg_CombatHeroPositions_descriptor,
        new java.lang.String[] { "Index", "Time", "WorldPos", "Health", });
    internal_static_CDOTAUserMsg_MiniKillCamInfo_descriptor =
      getDescriptor().getMessageTypes().get(7);
    internal_static_CDOTAUserMsg_MiniKillCamInfo_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessage.FieldAccessorTable(
        internal_static_CDOTAUserMsg_MiniKillCamInfo_descriptor,
        new java.lang.String[] { "Attackers", });
    internal_static_CDOTAUserMsg_MiniKillCamInfo_Attacker_descriptor =
      internal_static_CDOTAUserMsg_MiniKillCamInfo_descriptor.getNestedTypes().get(0);
    internal_static_CDOTAUserMsg_MiniKillCamInfo_Attacker_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessage.FieldAccessorTable(
        internal_static_CDOTAUserMsg_MiniKillCamInfo_Attacker_descriptor,
        new java.lang.String[] { "Attacker", "TotalDamage", "Abilities", });
    internal_static_CDOTAUserMsg_MiniKillCamInfo_Attacker_Ability_descriptor =
      internal_static_CDOTAUserMsg_MiniKillCamInfo_Attacker_descriptor.getNestedTypes().get(0);
    internal_static_CDOTAUserMsg_MiniKillCamInfo_Attacker_Ability_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessage.FieldAccessorTable(
        internal_static_CDOTAUserMsg_MiniKillCamInfo_Attacker_Ability_descriptor,
        new java.lang.String[] { "Ability", "Damage", });
    internal_static_CDOTAUserMsg_GlobalLightColor_descriptor =
      getDescriptor().getMessageTypes().get(8);
    internal_static_CDOTAUserMsg_GlobalLightColor_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessage.FieldAccessorTable(
        internal_static_CDOTAUserMsg_GlobalLightColor_descriptor,
        new java.lang.String[] { "Color", "Duration", });
    internal_static_CDOTAUserMsg_GlobalLightDirection_descriptor =
      getDescriptor().getMessageTypes().get(9);
    internal_static_CDOTAUserMsg_GlobalLightDirection_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessage.FieldAccessorTable(
        internal_static_CDOTAUserMsg_GlobalLightDirection_descriptor,
        new java.lang.String[] { "Direction", "Duration", });
    internal_static_CDOTAUserMsg_LocationPing_descriptor =
      getDescriptor().getMessageTypes().get(10);
    internal_static_CDOTAUserMsg_LocationPing_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessage.FieldAccessorTable(
        internal_static_CDOTAUserMsg_LocationPing_descriptor,
        new java.lang.String[] { "PlayerId", "LocationPing", });
    internal_static_CDOTAUserMsg_ItemAlert_descriptor =
      getDescriptor().getMessageTypes().get(11);
    internal_static_CDOTAUserMsg_ItemAlert_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessage.FieldAccessorTable(
        internal_static_CDOTAUserMsg_ItemAlert_descriptor,
        new java.lang.String[] { "PlayerId", "ItemAlert", });
    internal_static_CDOTAUserMsg_EnemyItemAlert_descriptor =
      getDescriptor().getMessageTypes().get(12);
    internal_static_CDOTAUserMsg_EnemyItemAlert_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessage.FieldAccessorTable(
        internal_static_CDOTAUserMsg_EnemyItemAlert_descriptor,
        new java.lang.String[] { "PlayerId", "TargetPlayerId", "Itemid", "RuneType", });
    internal_static_CDOTAUserMsg_ModifierAlert_descriptor =
      getDescriptor().getMessageTypes().get(13);
    internal_static_CDOTAUserMsg_ModifierAlert_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessage.FieldAccessorTable(
        internal_static_CDOTAUserMsg_ModifierAlert_descriptor,
        new java.lang.String[] { "PlayerId", "ClassName", "StackCount", "IsDebuff", "TargetEntindex", });
    internal_static_CDOTAUserMsg_HPManaAlert_descriptor =
      getDescriptor().getMessageTypes().get(14);
    internal_static_CDOTAUserMsg_HPManaAlert_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessage.FieldAccessorTable(
        internal_static_CDOTAUserMsg_HPManaAlert_descriptor,
        new java.lang.String[] { "PlayerId", "TargetEntindex", });
    internal_static_CDOTAUserMsg_GlyphAlert_descriptor =
      getDescriptor().getMessageTypes().get(15);
    internal_static_CDOTAUserMsg_GlyphAlert_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessage.FieldAccessorTable(
        internal_static_CDOTAUserMsg_GlyphAlert_descriptor,
        new java.lang.String[] { "PlayerId", "Negative", });
    internal_static_CDOTAUserMsg_WillPurchaseAlert_descriptor =
      getDescriptor().getMessageTypes().get(16);
    internal_static_CDOTAUserMsg_WillPurchaseAlert_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessage.FieldAccessorTable(
        internal_static_CDOTAUserMsg_WillPurchaseAlert_descriptor,
        new java.lang.String[] { "Itemid", "PlayerId", "GoldRemaining", });
    internal_static_CDOTAUserMsg_BuyBackStateAlert_descriptor =
      getDescriptor().getMessageTypes().get(17);
    internal_static_CDOTAUserMsg_BuyBackStateAlert_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessage.FieldAccessorTable(
        internal_static_CDOTAUserMsg_BuyBackStateAlert_descriptor,
        new java.lang.String[] { "PlayerId", });
    internal_static_CDOTAUserMsg_QuickBuyAlert_descriptor =
      getDescriptor().getMessageTypes().get(18);
    internal_static_CDOTAUserMsg_QuickBuyAlert_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessage.FieldAccessorTable(
        internal_static_CDOTAUserMsg_QuickBuyAlert_descriptor,
        new java.lang.String[] { "PlayerId", "Itemid", "GoldRequired", });
    internal_static_CDOTAUserMsg_CourierKilledAlert_descriptor =
      getDescriptor().getMessageTypes().get(19);
    internal_static_CDOTAUserMsg_CourierKilledAlert_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessage.FieldAccessorTable(
        internal_static_CDOTAUserMsg_CourierKilledAlert_descriptor,
        new java.lang.String[] { "Team", "GoldValue", "EntityHandle", "Timestamp", });
    internal_static_CDOTAUserMsg_MinimapEvent_descriptor =
      getDescriptor().getMessageTypes().get(20);
    internal_static_CDOTAUserMsg_MinimapEvent_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessage.FieldAccessorTable(
        internal_static_CDOTAUserMsg_MinimapEvent_descriptor,
        new java.lang.String[] { "EventType", "EntityHandle", "X", "Y", "Duration", });
    internal_static_CDOTAUserMsg_MapLine_descriptor =
      getDescriptor().getMessageTypes().get(21);
    internal_static_CDOTAUserMsg_MapLine_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessage.FieldAccessorTable(
        internal_static_CDOTAUserMsg_MapLine_descriptor,
        new java.lang.String[] { "PlayerId", "Mapline", });
    internal_static_CDOTAUserMsg_MinimapDebugPoint_descriptor =
      getDescriptor().getMessageTypes().get(22);
    internal_static_CDOTAUserMsg_MinimapDebugPoint_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessage.FieldAccessorTable(
        internal_static_CDOTAUserMsg_MinimapDebugPoint_descriptor,
        new java.lang.String[] { "Location", "Color", "Size", "Duration", "Index", });
    internal_static_CDOTAUserMsg_CreateLinearProjectile_descriptor =
      getDescriptor().getMessageTypes().get(23);
    internal_static_CDOTAUserMsg_CreateLinearProjectile_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessage.FieldAccessorTable(
        internal_static_CDOTAUserMsg_CreateLinearProjectile_descriptor,
        new java.lang.String[] { "Origin", "Velocity", "Latency", "Entindex", "ParticleIndex", "Handle", "Acceleration", "MaxSpeed", });
    internal_static_CDOTAUserMsg_DestroyLinearProjectile_descriptor =
      getDescriptor().getMessageTypes().get(24);
    internal_static_CDOTAUserMsg_DestroyLinearProjectile_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessage.FieldAccessorTable(
        internal_static_CDOTAUserMsg_DestroyLinearProjectile_descriptor,
        new java.lang.String[] { "Handle", });
    internal_static_CDOTAUserMsg_DodgeTrackingProjectiles_descriptor =
      getDescriptor().getMessageTypes().get(25);
    internal_static_CDOTAUserMsg_DodgeTrackingProjectiles_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessage.FieldAccessorTable(
        internal_static_CDOTAUserMsg_DodgeTrackingProjectiles_descriptor,
        new java.lang.String[] { "Entindex", "AttacksOnly", });
    internal_static_CDOTAUserMsg_SpectatorPlayerClick_descriptor =
      getDescriptor().getMessageTypes().get(26);
    internal_static_CDOTAUserMsg_SpectatorPlayerClick_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessage.FieldAccessorTable(
        internal_static_CDOTAUserMsg_SpectatorPlayerClick_descriptor,
        new java.lang.String[] { "Entindex", "OrderType", "TargetIndex", });
    internal_static_CDOTAUserMsg_SpectatorPlayerUnitOrders_descriptor =
      getDescriptor().getMessageTypes().get(27);
    internal_static_CDOTAUserMsg_SpectatorPlayerUnitOrders_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessage.FieldAccessorTable(
        internal_static_CDOTAUserMsg_SpectatorPlayerUnitOrders_descriptor,
        new java.lang.String[] { "Entindex", "OrderType", "Units", "TargetIndex", "AbilityIndex", "Position", "Queue", "SequenceNumber", });
    internal_static_CDOTAUserMsg_NevermoreRequiem_descriptor =
      getDescriptor().getMessageTypes().get(28);
    internal_static_CDOTAUserMsg_NevermoreRequiem_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessage.FieldAccessorTable(
        internal_static_CDOTAUserMsg_NevermoreRequiem_descriptor,
        new java.lang.String[] { "EntityHandle", "Lines", "Origin", "Reverse", });
    internal_static_CDOTAUserMsg_InvalidCommand_descriptor =
      getDescriptor().getMessageTypes().get(29);
    internal_static_CDOTAUserMsg_InvalidCommand_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessage.FieldAccessorTable(
        internal_static_CDOTAUserMsg_InvalidCommand_descriptor,
        new java.lang.String[] { "Message", });
    internal_static_CDOTAUserMsg_HudError_descriptor =
      getDescriptor().getMessageTypes().get(30);
    internal_static_CDOTAUserMsg_HudError_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessage.FieldAccessorTable(
        internal_static_CDOTAUserMsg_HudError_descriptor,
        new java.lang.String[] { "OrderId", });
    internal_static_CDOTAUserMsg_SharedCooldown_descriptor =
      getDescriptor().getMessageTypes().get(31);
    internal_static_CDOTAUserMsg_SharedCooldown_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessage.FieldAccessorTable(
        internal_static_CDOTAUserMsg_SharedCooldown_descriptor,
        new java.lang.String[] { "Entindex", "Name", "Cooldown", "NameIndex", });
    internal_static_CDOTAUserMsg_SetNextAutobuyItem_descriptor =
      getDescriptor().getMessageTypes().get(32);
    internal_static_CDOTAUserMsg_SetNextAutobuyItem_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessage.FieldAccessorTable(
        internal_static_CDOTAUserMsg_SetNextAutobuyItem_descriptor,
        new java.lang.String[] { "Name", });
    internal_static_CDOTAUserMsg_HalloweenDrops_descriptor =
      getDescriptor().getMessageTypes().get(33);
    internal_static_CDOTAUserMsg_HalloweenDrops_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessage.FieldAccessorTable(
        internal_static_CDOTAUserMsg_HalloweenDrops_descriptor,
        new java.lang.String[] { "ItemDefs", "PlayerIds", "PrizeList", });
    internal_static_CDOTAUserMsg_PredictionResult_descriptor =
      getDescriptor().getMessageTypes().get(34);
    internal_static_CDOTAUserMsg_PredictionResult_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessage.FieldAccessorTable(
        internal_static_CDOTAUserMsg_PredictionResult_descriptor,
        new java.lang.String[] { "AccountId", "MatchId", "Correct", "Predictions", });
    internal_static_CDOTAUserMsg_PredictionResult_Prediction_descriptor =
      internal_static_CDOTAUserMsg_PredictionResult_descriptor.getNestedTypes().get(0);
    internal_static_CDOTAUserMsg_PredictionResult_Prediction_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessage.FieldAccessorTable(
        internal_static_CDOTAUserMsg_PredictionResult_Prediction_descriptor,
        new java.lang.String[] { "ItemDef", "NumCorrect", "NumFails", "Result", "GrantedItemDefs", });
    internal_static_CDOTAResponseQuerySerialized_descriptor =
      getDescriptor().getMessageTypes().get(35);
    internal_static_CDOTAResponseQuerySerialized_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessage.FieldAccessorTable(
        internal_static_CDOTAResponseQuerySerialized_descriptor,
        new java.lang.String[] { "Facts", });
    internal_static_CDOTAResponseQuerySerialized_Fact_descriptor =
      internal_static_CDOTAResponseQuerySerialized_descriptor.getNestedTypes().get(0);
    internal_static_CDOTAResponseQuerySerialized_Fact_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessage.FieldAccessorTable(
        internal_static_CDOTAResponseQuerySerialized_Fact_descriptor,
        new java.lang.String[] { "Key", "Valtype", "ValNumeric", "ValString", });
    internal_static_CDOTASpeechMatchOnClient_descriptor =
      getDescriptor().getMessageTypes().get(36);
    internal_static_CDOTASpeechMatchOnClient_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessage.FieldAccessorTable(
        internal_static_CDOTASpeechMatchOnClient_descriptor,
        new java.lang.String[] { "Concept", "RecipientType", "Responsequery", "Randomseed", });
    internal_static_CDOTAUserMsg_UnitEvent_descriptor =
      getDescriptor().getMessageTypes().get(37);
    internal_static_CDOTAUserMsg_UnitEvent_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessage.FieldAccessorTable(
        internal_static_CDOTAUserMsg_UnitEvent_descriptor,
        new java.lang.String[] { "MsgType", "EntityIndex", "Speech", "SpeechMute", "AddGesture", "RemoveGesture", "BloodImpact", "FadeGesture", "SpeechMatchOnClient", });
    internal_static_CDOTAUserMsg_UnitEvent_Speech_descriptor =
      internal_static_CDOTAUserMsg_UnitEvent_descriptor.getNestedTypes().get(0);
    internal_static_CDOTAUserMsg_UnitEvent_Speech_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessage.FieldAccessorTable(
        internal_static_CDOTAUserMsg_UnitEvent_Speech_descriptor,
        new java.lang.String[] { "Concept", "Response", "RecipientType", "Level", "Muteable", });
    internal_static_CDOTAUserMsg_UnitEvent_SpeechMute_descriptor =
      internal_static_CDOTAUserMsg_UnitEvent_descriptor.getNestedTypes().get(1);
    internal_static_CDOTAUserMsg_UnitEvent_SpeechMute_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessage.FieldAccessorTable(
        internal_static_CDOTAUserMsg_UnitEvent_SpeechMute_descriptor,
        new java.lang.String[] { "Delay", });
    internal_static_CDOTAUserMsg_UnitEvent_AddGesture_descriptor =
      internal_static_CDOTAUserMsg_UnitEvent_descriptor.getNestedTypes().get(2);
    internal_static_CDOTAUserMsg_UnitEvent_AddGesture_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessage.FieldAccessorTable(
        internal_static_CDOTAUserMsg_UnitEvent_AddGesture_descriptor,
        new java.lang.String[] { "Activity", "Slot", "FadeIn", "FadeOut", });
    internal_static_CDOTAUserMsg_UnitEvent_RemoveGesture_descriptor =
      internal_static_CDOTAUserMsg_UnitEvent_descriptor.getNestedTypes().get(3);
    internal_static_CDOTAUserMsg_UnitEvent_RemoveGesture_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessage.FieldAccessorTable(
        internal_static_CDOTAUserMsg_UnitEvent_RemoveGesture_descriptor,
        new java.lang.String[] { "Activity", });
    internal_static_CDOTAUserMsg_UnitEvent_BloodImpact_descriptor =
      internal_static_CDOTAUserMsg_UnitEvent_descriptor.getNestedTypes().get(4);
    internal_static_CDOTAUserMsg_UnitEvent_BloodImpact_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessage.FieldAccessorTable(
        internal_static_CDOTAUserMsg_UnitEvent_BloodImpact_descriptor,
        new java.lang.String[] { "Scale", "XNormal", "YNormal", });
    internal_static_CDOTAUserMsg_UnitEvent_FadeGesture_descriptor =
      internal_static_CDOTAUserMsg_UnitEvent_descriptor.getNestedTypes().get(5);
    internal_static_CDOTAUserMsg_UnitEvent_FadeGesture_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessage.FieldAccessorTable(
        internal_static_CDOTAUserMsg_UnitEvent_FadeGesture_descriptor,
        new java.lang.String[] { "Activity", });
    internal_static_CDOTAUserMsg_ItemPurchased_descriptor =
      getDescriptor().getMessageTypes().get(38);
    internal_static_CDOTAUserMsg_ItemPurchased_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessage.FieldAccessorTable(
        internal_static_CDOTAUserMsg_ItemPurchased_descriptor,
        new java.lang.String[] { "ItemIndex", });
    internal_static_CDOTAUserMsg_ItemFound_descriptor =
      getDescriptor().getMessageTypes().get(39);
    internal_static_CDOTAUserMsg_ItemFound_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessage.FieldAccessorTable(
        internal_static_CDOTAUserMsg_ItemFound_descriptor,
        new java.lang.String[] { "Player", "Quality", "Rarity", "Method", "Itemdef", });
    internal_static_CDOTAUserMsg_ParticleManager_descriptor =
      getDescriptor().getMessageTypes().get(40);
    internal_static_CDOTAUserMsg_ParticleManager_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessage.FieldAccessorTable(
        internal_static_CDOTAUserMsg_ParticleManager_descriptor,
        new java.lang.String[] { "Type", "Index", "ReleaseParticleIndex", "CreateParticle", "DestroyParticle", "DestroyParticleInvolving", "UpdateParticle", "UpdateParticleFwd", "UpdateParticleOrient", "UpdateParticleFallback", "UpdateParticleOffset", "UpdateParticleEnt", "UpdateParticleShouldDraw", "UpdateParticleSetFrozen", "ChangeControlPointAttachment", "UpdateEntityPosition", });
    internal_static_CDOTAUserMsg_ParticleManager_ReleaseParticleIndex_descriptor =
      internal_static_CDOTAUserMsg_ParticleManager_descriptor.getNestedTypes().get(0);
    internal_static_CDOTAUserMsg_ParticleManager_ReleaseParticleIndex_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessage.FieldAccessorTable(
        internal_static_CDOTAUserMsg_ParticleManager_ReleaseParticleIndex_descriptor,
        new java.lang.String[] { });
    internal_static_CDOTAUserMsg_ParticleManager_CreateParticle_descriptor =
      internal_static_CDOTAUserMsg_ParticleManager_descriptor.getNestedTypes().get(1);
    internal_static_CDOTAUserMsg_ParticleManager_CreateParticle_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessage.FieldAccessorTable(
        internal_static_CDOTAUserMsg_ParticleManager_CreateParticle_descriptor,
        new java.lang.String[] { "ParticleNameIndex", "AttachType", "EntityHandle", "EntityHandleForModifiers", });
    internal_static_CDOTAUserMsg_ParticleManager_DestroyParticle_descriptor =
      internal_static_CDOTAUserMsg_ParticleManager_descriptor.getNestedTypes().get(2);
    internal_static_CDOTAUserMsg_ParticleManager_DestroyParticle_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessage.FieldAccessorTable(
        internal_static_CDOTAUserMsg_ParticleManager_DestroyParticle_descriptor,
        new java.lang.String[] { "DestroyImmediately", });
    internal_static_CDOTAUserMsg_ParticleManager_DestroyParticleInvolving_descriptor =
      internal_static_CDOTAUserMsg_ParticleManager_descriptor.getNestedTypes().get(3);
    internal_static_CDOTAUserMsg_ParticleManager_DestroyParticleInvolving_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessage.FieldAccessorTable(
        internal_static_CDOTAUserMsg_ParticleManager_DestroyParticleInvolving_descriptor,
        new java.lang.String[] { "DestroyImmediately", "EntityHandle", });
    internal_static_CDOTAUserMsg_ParticleManager_UpdateParticle_descriptor =
      internal_static_CDOTAUserMsg_ParticleManager_descriptor.getNestedTypes().get(4);
    internal_static_CDOTAUserMsg_ParticleManager_UpdateParticle_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessage.FieldAccessorTable(
        internal_static_CDOTAUserMsg_ParticleManager_UpdateParticle_descriptor,
        new java.lang.String[] { "ControlPoint", "Position", });
    internal_static_CDOTAUserMsg_ParticleManager_UpdateParticleFwd_descriptor =
      internal_static_CDOTAUserMsg_ParticleManager_descriptor.getNestedTypes().get(5);
    internal_static_CDOTAUserMsg_ParticleManager_UpdateParticleFwd_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessage.FieldAccessorTable(
        internal_static_CDOTAUserMsg_ParticleManager_UpdateParticleFwd_descriptor,
        new java.lang.String[] { "ControlPoint", "Forward", });
    internal_static_CDOTAUserMsg_ParticleManager_UpdateParticleOrient_descriptor =
      internal_static_CDOTAUserMsg_ParticleManager_descriptor.getNestedTypes().get(6);
    internal_static_CDOTAUserMsg_ParticleManager_UpdateParticleOrient_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessage.FieldAccessorTable(
        internal_static_CDOTAUserMsg_ParticleManager_UpdateParticleOrient_descriptor,
        new java.lang.String[] { "ControlPoint", "Forward", "Right", "Up", });
    internal_static_CDOTAUserMsg_ParticleManager_UpdateParticleFallback_descriptor =
      internal_static_CDOTAUserMsg_ParticleManager_descriptor.getNestedTypes().get(7);
    internal_static_CDOTAUserMsg_ParticleManager_UpdateParticleFallback_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessage.FieldAccessorTable(
        internal_static_CDOTAUserMsg_ParticleManager_UpdateParticleFallback_descriptor,
        new java.lang.String[] { "ControlPoint", "Position", });
    internal_static_CDOTAUserMsg_ParticleManager_UpdateParticleOffset_descriptor =
      internal_static_CDOTAUserMsg_ParticleManager_descriptor.getNestedTypes().get(8);
    internal_static_CDOTAUserMsg_ParticleManager_UpdateParticleOffset_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessage.FieldAccessorTable(
        internal_static_CDOTAUserMsg_ParticleManager_UpdateParticleOffset_descriptor,
        new java.lang.String[] { "ControlPoint", "OriginOffset", });
    internal_static_CDOTAUserMsg_ParticleManager_UpdateParticleEnt_descriptor =
      internal_static_CDOTAUserMsg_ParticleManager_descriptor.getNestedTypes().get(9);
    internal_static_CDOTAUserMsg_ParticleManager_UpdateParticleEnt_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessage.FieldAccessorTable(
        internal_static_CDOTAUserMsg_ParticleManager_UpdateParticleEnt_descriptor,
        new java.lang.String[] { "ControlPoint", "EntityHandle", "AttachType", "Attachment", "FallbackPosition", "IncludeWearables", });
    internal_static_CDOTAUserMsg_ParticleManager_UpdateParticleSetFrozen_descriptor =
      internal_static_CDOTAUserMsg_ParticleManager_descriptor.getNestedTypes().get(10);
    internal_static_CDOTAUserMsg_ParticleManager_UpdateParticleSetFrozen_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessage.FieldAccessorTable(
        internal_static_CDOTAUserMsg_ParticleManager_UpdateParticleSetFrozen_descriptor,
        new java.lang.String[] { "SetFrozen", });
    internal_static_CDOTAUserMsg_ParticleManager_UpdateParticleShouldDraw_descriptor =
      internal_static_CDOTAUserMsg_ParticleManager_descriptor.getNestedTypes().get(11);
    internal_static_CDOTAUserMsg_ParticleManager_UpdateParticleShouldDraw_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessage.FieldAccessorTable(
        internal_static_CDOTAUserMsg_ParticleManager_UpdateParticleShouldDraw_descriptor,
        new java.lang.String[] { "ShouldDraw", });
    internal_static_CDOTAUserMsg_ParticleManager_ChangeControlPointAttachment_descriptor =
      internal_static_CDOTAUserMsg_ParticleManager_descriptor.getNestedTypes().get(12);
    internal_static_CDOTAUserMsg_ParticleManager_ChangeControlPointAttachment_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessage.FieldAccessorTable(
        internal_static_CDOTAUserMsg_ParticleManager_ChangeControlPointAttachment_descriptor,
        new java.lang.String[] { "AttachmentOld", "AttachmentNew", "EntityHandle", });
    internal_static_CDOTAUserMsg_ParticleManager_UpdateEntityPosition_descriptor =
      internal_static_CDOTAUserMsg_ParticleManager_descriptor.getNestedTypes().get(13);
    internal_static_CDOTAUserMsg_ParticleManager_UpdateEntityPosition_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessage.FieldAccessorTable(
        internal_static_CDOTAUserMsg_ParticleManager_UpdateEntityPosition_descriptor,
        new java.lang.String[] { "EntityHandle", "Position", });
    internal_static_CDOTAUserMsg_OverheadEvent_descriptor =
      getDescriptor().getMessageTypes().get(41);
    internal_static_CDOTAUserMsg_OverheadEvent_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessage.FieldAccessorTable(
        internal_static_CDOTAUserMsg_OverheadEvent_descriptor,
        new java.lang.String[] { "MessageType", "Value", "TargetPlayerEntindex", "TargetEntindex", "SourcePlayerEntindex", });
    internal_static_CDOTAUserMsg_TutorialTipInfo_descriptor =
      getDescriptor().getMessageTypes().get(42);
    internal_static_CDOTAUserMsg_TutorialTipInfo_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessage.FieldAccessorTable(
        internal_static_CDOTAUserMsg_TutorialTipInfo_descriptor,
        new java.lang.String[] { "Name", "Progress", });
    internal_static_CDOTAUserMsg_TutorialFinish_descriptor =
      getDescriptor().getMessageTypes().get(43);
    internal_static_CDOTAUserMsg_TutorialFinish_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessage.FieldAccessorTable(
        internal_static_CDOTAUserMsg_TutorialFinish_descriptor,
        new java.lang.String[] { "Heading", "Emblem", "Body", "Success", });
    internal_static_CDOTAUserMsg_TutorialMinimapPosition_descriptor =
      getDescriptor().getMessageTypes().get(44);
    internal_static_CDOTAUserMsg_TutorialMinimapPosition_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessage.FieldAccessorTable(
        internal_static_CDOTAUserMsg_TutorialMinimapPosition_descriptor,
        new java.lang.String[] { });
    internal_static_CDOTAUserMsg_SendGenericToolTip_descriptor =
      getDescriptor().getMessageTypes().get(45);
    internal_static_CDOTAUserMsg_SendGenericToolTip_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessage.FieldAccessorTable(
        internal_static_CDOTAUserMsg_SendGenericToolTip_descriptor,
        new java.lang.String[] { "Title", "Text", "Entindex", "Close", });
    internal_static_CDOTAUserMsg_WorldLine_descriptor =
      getDescriptor().getMessageTypes().get(46);
    internal_static_CDOTAUserMsg_WorldLine_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessage.FieldAccessorTable(
        internal_static_CDOTAUserMsg_WorldLine_descriptor,
        new java.lang.String[] { "PlayerId", "Worldline", });
    internal_static_CDOTAUserMsg_ChatWheel_descriptor =
      getDescriptor().getMessageTypes().get(47);
    internal_static_CDOTAUserMsg_ChatWheel_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessage.FieldAccessorTable(
        internal_static_CDOTAUserMsg_ChatWheel_descriptor,
        new java.lang.String[] { "ChatMessage", "PlayerId", "AccountId", "ParamHeroId", });
    internal_static_CDOTAUserMsg_ReceivedXmasGift_descriptor =
      getDescriptor().getMessageTypes().get(48);
    internal_static_CDOTAUserMsg_ReceivedXmasGift_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessage.FieldAccessorTable(
        internal_static_CDOTAUserMsg_ReceivedXmasGift_descriptor,
        new java.lang.String[] { "PlayerId", "ItemName", "InventorySlot", });
    internal_static_CDOTAUserMsg_ShowSurvey_descriptor =
      getDescriptor().getMessageTypes().get(49);
    internal_static_CDOTAUserMsg_ShowSurvey_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessage.FieldAccessorTable(
        internal_static_CDOTAUserMsg_ShowSurvey_descriptor,
        new java.lang.String[] { "SurveyId", "MatchId", "ResponseStyle", "TeammateHeroId", "TeammateName", "TeammateAccountId", });
    internal_static_CDOTAUserMsg_UpdateSharedContent_descriptor =
      getDescriptor().getMessageTypes().get(50);
    internal_static_CDOTAUserMsg_UpdateSharedContent_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessage.FieldAccessorTable(
        internal_static_CDOTAUserMsg_UpdateSharedContent_descriptor,
        new java.lang.String[] { "SlotType", });
    internal_static_CDOTAUserMsg_TutorialRequestExp_descriptor =
      getDescriptor().getMessageTypes().get(51);
    internal_static_CDOTAUserMsg_TutorialRequestExp_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessage.FieldAccessorTable(
        internal_static_CDOTAUserMsg_TutorialRequestExp_descriptor,
        new java.lang.String[] { });
    internal_static_CDOTAUserMsg_TutorialFade_descriptor =
      getDescriptor().getMessageTypes().get(52);
    internal_static_CDOTAUserMsg_TutorialFade_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessage.FieldAccessorTable(
        internal_static_CDOTAUserMsg_TutorialFade_descriptor,
        new java.lang.String[] { "TgtAlpha", });
    internal_static_CDOTAUserMsg_TutorialPingMinimap_descriptor =
      getDescriptor().getMessageTypes().get(53);
    internal_static_CDOTAUserMsg_TutorialPingMinimap_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessage.FieldAccessorTable(
        internal_static_CDOTAUserMsg_TutorialPingMinimap_descriptor,
        new java.lang.String[] { "PlayerId", "PosX", "PosY", "PosZ", "EntityIndex", });
    internal_static_CDOTAUserMsg_GamerulesStateChanged_descriptor =
      getDescriptor().getMessageTypes().get(54);
    internal_static_CDOTAUserMsg_GamerulesStateChanged_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessage.FieldAccessorTable(
        internal_static_CDOTAUserMsg_GamerulesStateChanged_descriptor,
        new java.lang.String[] { "State", });
    internal_static_CDOTAUserMsg_AddQuestLogEntry_descriptor =
      getDescriptor().getMessageTypes().get(55);
    internal_static_CDOTAUserMsg_AddQuestLogEntry_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessage.FieldAccessorTable(
        internal_static_CDOTAUserMsg_AddQuestLogEntry_descriptor,
        new java.lang.String[] { "NpcName", "NpcDialog", });
    internal_static_CDOTAUserMsg_SendStatPopup_descriptor =
      getDescriptor().getMessageTypes().get(56);
    internal_static_CDOTAUserMsg_SendStatPopup_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessage.FieldAccessorTable(
        internal_static_CDOTAUserMsg_SendStatPopup_descriptor,
        new java.lang.String[] { "PlayerId", "Statpopup", });
    internal_static_CDOTAUserMsg_SendRoshanPopup_descriptor =
      getDescriptor().getMessageTypes().get(57);
    internal_static_CDOTAUserMsg_SendRoshanPopup_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessage.FieldAccessorTable(
        internal_static_CDOTAUserMsg_SendRoshanPopup_descriptor,
        new java.lang.String[] { "Reclaimed", "Gametime", });
    internal_static_CDOTAUserMsg_SendFinalGold_descriptor =
      getDescriptor().getMessageTypes().get(58);
    internal_static_CDOTAUserMsg_SendFinalGold_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessage.FieldAccessorTable(
        internal_static_CDOTAUserMsg_SendFinalGold_descriptor,
        new java.lang.String[] { "ReliableGold", "UnreliableGold", });
    internal_static_CDOTAUserMsg_CustomMsg_descriptor =
      getDescriptor().getMessageTypes().get(59);
    internal_static_CDOTAUserMsg_CustomMsg_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessage.FieldAccessorTable(
        internal_static_CDOTAUserMsg_CustomMsg_descriptor,
        new java.lang.String[] { "Message", "PlayerId", "Value", });
    internal_static_CDOTAUserMsg_CoachHUDPing_descriptor =
      getDescriptor().getMessageTypes().get(60);
    internal_static_CDOTAUserMsg_CoachHUDPing_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessage.FieldAccessorTable(
        internal_static_CDOTAUserMsg_CoachHUDPing_descriptor,
        new java.lang.String[] { "PlayerId", "HudPing", });
    internal_static_CDOTAUserMsg_ClientLoadGridNav_descriptor =
      getDescriptor().getMessageTypes().get(61);
    internal_static_CDOTAUserMsg_ClientLoadGridNav_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessage.FieldAccessorTable(
        internal_static_CDOTAUserMsg_ClientLoadGridNav_descriptor,
        new java.lang.String[] { });
    internal_static_CDOTAUserMsg_TE_Projectile_descriptor =
      getDescriptor().getMessageTypes().get(62);
    internal_static_CDOTAUserMsg_TE_Projectile_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessage.FieldAccessorTable(
        internal_static_CDOTAUserMsg_TE_Projectile_descriptor,
        new java.lang.String[] { "HSource", "HTarget", "MoveSpeed", "SourceAttachment", "ParticleSystemHandle", "Dodgeable", "IsAttack", "IsEvaded", "ExpireTime", "Maximpacttime", "Colorgemcolor", });
    internal_static_CDOTAUserMsg_TE_ProjectileLoc_descriptor =
      getDescriptor().getMessageTypes().get(63);
    internal_static_CDOTAUserMsg_TE_ProjectileLoc_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessage.FieldAccessorTable(
        internal_static_CDOTAUserMsg_TE_ProjectileLoc_descriptor,
        new java.lang.String[] { "VSourceLoc", "HTarget", "MoveSpeed", "ParticleSystemHandle", "Dodgeable", "IsAttack", "IsEvaded", "ExpireTime", "VTargetLoc", "Colorgemcolor", });
    internal_static_CDOTAUserMsg_TE_DotaBloodImpact_descriptor =
      getDescriptor().getMessageTypes().get(64);
    internal_static_CDOTAUserMsg_TE_DotaBloodImpact_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessage.FieldAccessorTable(
        internal_static_CDOTAUserMsg_TE_DotaBloodImpact_descriptor,
        new java.lang.String[] { "Entity", "Scale", "Xnormal", "Ynormal", });
    internal_static_CDOTAUserMsg_AbilityPing_descriptor =
      getDescriptor().getMessageTypes().get(65);
    internal_static_CDOTAUserMsg_AbilityPing_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessage.FieldAccessorTable(
        internal_static_CDOTAUserMsg_AbilityPing_descriptor,
        new java.lang.String[] { "PlayerId", "AbilityId", "Type", "CooldownSeconds", "Level", "Passive", "ManaNeeded", });
    internal_static_CDOTAUserMsg_TE_UnitAnimation_descriptor =
      getDescriptor().getMessageTypes().get(66);
    internal_static_CDOTAUserMsg_TE_UnitAnimation_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessage.FieldAccessorTable(
        internal_static_CDOTAUserMsg_TE_UnitAnimation_descriptor,
        new java.lang.String[] { "Entity", "SequenceVariant", "Playbackrate", "Castpoint", "Type", "Activity", });
    internal_static_CDOTAUserMsg_TE_UnitAnimationEnd_descriptor =
      getDescriptor().getMessageTypes().get(67);
    internal_static_CDOTAUserMsg_TE_UnitAnimationEnd_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessage.FieldAccessorTable(
        internal_static_CDOTAUserMsg_TE_UnitAnimationEnd_descriptor,
        new java.lang.String[] { "Entity", "Snap", });
    internal_static_CDOTAUserMsg_ShowGenericPopup_descriptor =
      getDescriptor().getMessageTypes().get(68);
    internal_static_CDOTAUserMsg_ShowGenericPopup_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessage.FieldAccessorTable(
        internal_static_CDOTAUserMsg_ShowGenericPopup_descriptor,
        new java.lang.String[] { "Header", "Body", "Param1", "Param2", "TintScreen", "ShowNoOtherDialogs", });
    internal_static_CDOTAUserMsg_VoteStart_descriptor =
      getDescriptor().getMessageTypes().get(69);
    internal_static_CDOTAUserMsg_VoteStart_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessage.FieldAccessorTable(
        internal_static_CDOTAUserMsg_VoteStart_descriptor,
        new java.lang.String[] { "Title", "Duration", "ChoiceCount", "Choices", });
    internal_static_CDOTAUserMsg_VoteUpdate_descriptor =
      getDescriptor().getMessageTypes().get(70);
    internal_static_CDOTAUserMsg_VoteUpdate_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessage.FieldAccessorTable(
        internal_static_CDOTAUserMsg_VoteUpdate_descriptor,
        new java.lang.String[] { "ChoiceCounts", });
    internal_static_CDOTAUserMsg_VoteEnd_descriptor =
      getDescriptor().getMessageTypes().get(71);
    internal_static_CDOTAUserMsg_VoteEnd_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessage.FieldAccessorTable(
        internal_static_CDOTAUserMsg_VoteEnd_descriptor,
        new java.lang.String[] { "SelectedChoice", });
    internal_static_CDOTAUserMsg_BoosterStatePlayer_descriptor =
      getDescriptor().getMessageTypes().get(72);
    internal_static_CDOTAUserMsg_BoosterStatePlayer_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessage.FieldAccessorTable(
        internal_static_CDOTAUserMsg_BoosterStatePlayer_descriptor,
        new java.lang.String[] { "PlayerId", "Bonus", "EventBonus", "BonusItemId", "EventBonusItemId", });
    internal_static_CDOTAUserMsg_BoosterState_descriptor =
      getDescriptor().getMessageTypes().get(73);
    internal_static_CDOTAUserMsg_BoosterState_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessage.FieldAccessorTable(
        internal_static_CDOTAUserMsg_BoosterState_descriptor,
        new java.lang.String[] { "BoostedPlayers", });
    internal_static_CDOTAUserMsg_PlayerMMR_descriptor =
      getDescriptor().getMessageTypes().get(74);
    internal_static_CDOTAUserMsg_PlayerMMR_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessage.FieldAccessorTable(
        internal_static_CDOTAUserMsg_PlayerMMR_descriptor,
        new java.lang.String[] { "Mmr", });
    internal_static_CDOTAUserMsg_AbilitySteal_descriptor =
      getDescriptor().getMessageTypes().get(75);
    internal_static_CDOTAUserMsg_AbilitySteal_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessage.FieldAccessorTable(
        internal_static_CDOTAUserMsg_AbilitySteal_descriptor,
        new java.lang.String[] { "PlayerId", "AbilityId", "AbilityLevel", });
    internal_static_CDOTAUserMsg_StatsHeroLookup_descriptor =
      getDescriptor().getMessageTypes().get(76);
    internal_static_CDOTAUserMsg_StatsHeroLookup_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessage.FieldAccessorTable(
        internal_static_CDOTAUserMsg_StatsHeroLookup_descriptor,
        new java.lang.String[] { "PlayerId", "HeroId", "HeroName", "Persona", });
    internal_static_CDOTAUserMsg_StatsHeroPositionInfo_descriptor =
      getDescriptor().getMessageTypes().get(77);
    internal_static_CDOTAUserMsg_StatsHeroPositionInfo_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessage.FieldAccessorTable(
        internal_static_CDOTAUserMsg_StatsHeroPositionInfo_descriptor,
        new java.lang.String[] { "AveragePosition", "PositionDetails", });
    internal_static_CDOTAUserMsg_StatsHeroPositionInfo_PositionPair_descriptor =
      internal_static_CDOTAUserMsg_StatsHeroPositionInfo_descriptor.getNestedTypes().get(0);
    internal_static_CDOTAUserMsg_StatsHeroPositionInfo_PositionPair_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessage.FieldAccessorTable(
        internal_static_CDOTAUserMsg_StatsHeroPositionInfo_PositionPair_descriptor,
        new java.lang.String[] { "PositionCategory", "PositionCount", });
    internal_static_CDOTAUserMsg_StatsHeroMinuteDetails_descriptor =
      getDescriptor().getMessageTypes().get(78);
    internal_static_CDOTAUserMsg_StatsHeroMinuteDetails_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessage.FieldAccessorTable(
        internal_static_CDOTAUserMsg_StatsHeroMinuteDetails_descriptor,
        new java.lang.String[] { "LastHits", "HeroKills", "HeroDamage", "TowerDamage", "PositionInfo", "TotalXp", "NetWorth", "HarvestedCreepGold", "ClaimedFarm", "WardsPlaced", "RunesCollected", "TpsUsed", "ManaSpent", "DamageAbsorbed", "DamageDone", });
    internal_static_CDOTAUserMsg_StatsTeamMinuteDetails_descriptor =
      getDescriptor().getMessageTypes().get(79);
    internal_static_CDOTAUserMsg_StatsTeamMinuteDetails_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessage.FieldAccessorTable(
        internal_static_CDOTAUserMsg_StatsTeamMinuteDetails_descriptor,
        new java.lang.String[] { "PlayerStats", "TowerKills", "BarrackKills", "AvailableLaneCreepGold", "BalanceKillValue", "BalanceTowerValue", "BalanceBarracksValue", "BalanceGoldValue", "BalanceXpValue", "LanePerformance", });
    internal_static_CDOTAUserMsg_StatsTeamMinuteDetails_LocationPerformance_descriptor =
      internal_static_CDOTAUserMsg_StatsTeamMinuteDetails_descriptor.getNestedTypes().get(0);
    internal_static_CDOTAUserMsg_StatsTeamMinuteDetails_LocationPerformance_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessage.FieldAccessorTable(
        internal_static_CDOTAUserMsg_StatsTeamMinuteDetails_LocationPerformance_descriptor,
        new java.lang.String[] { "LocationCategory", "StatType", "Value", });
    internal_static_CDOTAUserMsg_StatsPlayerKillShare_descriptor =
      getDescriptor().getMessageTypes().get(80);
    internal_static_CDOTAUserMsg_StatsPlayerKillShare_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessage.FieldAccessorTable(
        internal_static_CDOTAUserMsg_StatsPlayerKillShare_descriptor,
        new java.lang.String[] { "PlayerId", "KillSharePercent", "PlayerLocX", "PlayerLocY", "HealthPercent", "ManaPercent", });
    internal_static_CDOTAUserMsg_StatsKillDetails_descriptor =
      getDescriptor().getMessageTypes().get(81);
    internal_static_CDOTAUserMsg_StatsKillDetails_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessage.FieldAccessorTable(
        internal_static_CDOTAUserMsg_StatsKillDetails_descriptor,
        new java.lang.String[] { "VictimId", "KillShares", "DamageToKill", "EffectiveHealth", "DeathTime", "KillerId", });
    internal_static_CDOTAUserMsg_StatsMatchDetails_descriptor =
      getDescriptor().getMessageTypes().get(82);
    internal_static_CDOTAUserMsg_StatsMatchDetails_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessage.FieldAccessorTable(
        internal_static_CDOTAUserMsg_StatsMatchDetails_descriptor,
        new java.lang.String[] { "HeroLookup", "RadiantStats", "DireStats", "RadiantKills", "DireKills", "FightDetails", });
    internal_static_CDOTAUserMsg_StatsMatchDetails_CDOTAUserMsg_StatsFightTeamDetails_descriptor =
      internal_static_CDOTAUserMsg_StatsMatchDetails_descriptor.getNestedTypes().get(0);
    internal_static_CDOTAUserMsg_StatsMatchDetails_CDOTAUserMsg_StatsFightTeamDetails_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessage.FieldAccessorTable(
        internal_static_CDOTAUserMsg_StatsMatchDetails_CDOTAUserMsg_StatsFightTeamDetails_descriptor,
        new java.lang.String[] { "Participants", "Deaths", "GoldDelta", "XpDelta", });
    internal_static_CDOTAUserMsg_StatsMatchDetails_CDOTAUserMsg_StatsFightDetails_descriptor =
      internal_static_CDOTAUserMsg_StatsMatchDetails_descriptor.getNestedTypes().get(1);
    internal_static_CDOTAUserMsg_StatsMatchDetails_CDOTAUserMsg_StatsFightDetails_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessage.FieldAccessorTable(
        internal_static_CDOTAUserMsg_StatsMatchDetails_CDOTAUserMsg_StatsFightDetails_descriptor,
        new java.lang.String[] { "StartTime", "EndTime", "RadiantFightDetails", "DireFightDetails", });
    internal_static_CDOTAUserMsg_MiniTaunt_descriptor =
      getDescriptor().getMessageTypes().get(83);
    internal_static_CDOTAUserMsg_MiniTaunt_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessage.FieldAccessorTable(
        internal_static_CDOTAUserMsg_MiniTaunt_descriptor,
        new java.lang.String[] { "TauntingPlayerId", });
    internal_static_CDOTAUserMsg_SpeechBubble_descriptor =
      getDescriptor().getMessageTypes().get(84);
    internal_static_CDOTAUserMsg_SpeechBubble_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessage.FieldAccessorTable(
        internal_static_CDOTAUserMsg_SpeechBubble_descriptor,
        new java.lang.String[] { "DestroyAll", });
    internal_static_CDOTAUserMsg_CustomHeaderMessage_descriptor =
      getDescriptor().getMessageTypes().get(85);
    internal_static_CDOTAUserMsg_CustomHeaderMessage_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessage.FieldAccessorTable(
        internal_static_CDOTAUserMsg_CustomHeaderMessage_descriptor,
        new java.lang.String[] { "PlayerId", "Duration", "Message", "Value", });
    internal_static_CMsgHeroAbilityStat_descriptor =
      getDescriptor().getMessageTypes().get(86);
    internal_static_CMsgHeroAbilityStat_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessage.FieldAccessorTable(
        internal_static_CMsgHeroAbilityStat_descriptor,
        new java.lang.String[] { "StatType", "IntValue", "FloatValue", });
    internal_static_CMsgCombatAnalyzerPlayerStat_descriptor =
      getDescriptor().getMessageTypes().get(87);
    internal_static_CMsgCombatAnalyzerPlayerStat_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessage.FieldAccessorTable(
        internal_static_CMsgCombatAnalyzerPlayerStat_descriptor,
        new java.lang.String[] { "AccountId", "HeroAbilityStats", });
    internal_static_CMsgCombatAnalyzerStats_descriptor =
      getDescriptor().getMessageTypes().get(88);
    internal_static_CMsgCombatAnalyzerStats_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessage.FieldAccessorTable(
        internal_static_CMsgCombatAnalyzerStats_descriptor,
        new java.lang.String[] { "MatchId", "PlayerStats", });
    internal_static_CDOTAUserMsg_BeastChat_descriptor =
      getDescriptor().getMessageTypes().get(89);
    internal_static_CDOTAUserMsg_BeastChat_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessage.FieldAccessorTable(
        internal_static_CDOTAUserMsg_BeastChat_descriptor,
        new java.lang.String[] { "Team", "Format", "Message", "Target", });
    internal_static_CDOTAUserMsg_CustomHudElement_Create_descriptor =
      getDescriptor().getMessageTypes().get(90);
    internal_static_CDOTAUserMsg_CustomHudElement_Create_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessage.FieldAccessorTable(
        internal_static_CDOTAUserMsg_CustomHudElement_Create_descriptor,
        new java.lang.String[] { "ElementId", "LayoutFilename", "Data", });
    internal_static_CDOTAUserMsg_CustomHudElement_Modify_descriptor =
      getDescriptor().getMessageTypes().get(91);
    internal_static_CDOTAUserMsg_CustomHudElement_Modify_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessage.FieldAccessorTable(
        internal_static_CDOTAUserMsg_CustomHudElement_Modify_descriptor,
        new java.lang.String[] { "ElementId", "ModifyVisible", "Data", });
    internal_static_CDOTAUserMsg_CustomHudElement_Destroy_descriptor =
      getDescriptor().getMessageTypes().get(92);
    internal_static_CDOTAUserMsg_CustomHudElement_Destroy_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessage.FieldAccessorTable(
        internal_static_CDOTAUserMsg_CustomHudElement_Destroy_descriptor,
        new java.lang.String[] { "ElementId", });
    internal_static_CDOTAUserMsg_CompendiumStatePlayer_descriptor =
      getDescriptor().getMessageTypes().get(93);
    internal_static_CDOTAUserMsg_CompendiumStatePlayer_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessage.FieldAccessorTable(
        internal_static_CDOTAUserMsg_CompendiumStatePlayer_descriptor,
        new java.lang.String[] { "PlayerId", "Level", });
    internal_static_CDOTAUserMsg_CompendiumState_descriptor =
      getDescriptor().getMessageTypes().get(94);
    internal_static_CDOTAUserMsg_CompendiumState_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessage.FieldAccessorTable(
        internal_static_CDOTAUserMsg_CompendiumState_descriptor,
        new java.lang.String[] { "CompendiumPlayers", });
    internal_static_CDOTAUserMsg_ProjectionAbility_descriptor =
      getDescriptor().getMessageTypes().get(95);
    internal_static_CDOTAUserMsg_ProjectionAbility_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessage.FieldAccessorTable(
        internal_static_CDOTAUserMsg_ProjectionAbility_descriptor,
        new java.lang.String[] { "AbilityId", "CasterEntIndex", "CasterTeam", "ChannelEnd", "Origin", "TrackCasterOnly", "EndTime", "VictimEntIndex", });
    internal_static_CDOTAUserMsg_ProjectionEvent_descriptor =
      getDescriptor().getMessageTypes().get(96);
    internal_static_CDOTAUserMsg_ProjectionEvent_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessage.FieldAccessorTable(
        internal_static_CDOTAUserMsg_ProjectionEvent_descriptor,
        new java.lang.String[] { "EventId", "Team", });
    internal_static_CDOTAUserMsg_XPAlert_descriptor =
      getDescriptor().getMessageTypes().get(97);
    internal_static_CDOTAUserMsg_XPAlert_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessage.FieldAccessorTable(
        internal_static_CDOTAUserMsg_XPAlert_descriptor,
        new java.lang.String[] { "PlayerId", "TargetEntindex", });
    internal_static_CDOTAUserMsg_QuestStatus_descriptor =
      getDescriptor().getMessageTypes().get(98);
    internal_static_CDOTAUserMsg_QuestStatus_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessage.FieldAccessorTable(
        internal_static_CDOTAUserMsg_QuestStatus_descriptor,
        new java.lang.String[] { "PlayerId", "QuestId", "ChallengeId", "Progress", "Goal", "Query", "FailGametime", "ItemId", });
    internal_static_CDOTAUserMsg_UpdateQuestProgress_descriptor =
      getDescriptor().getMessageTypes().get(99);
    internal_static_CDOTAUserMsg_UpdateQuestProgress_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessage.FieldAccessorTable(
        internal_static_CDOTAUserMsg_UpdateQuestProgress_descriptor,
        new java.lang.String[] { });
    internal_static_CMsgDOTACombatLogEntry_descriptor =
      getDescriptor().getMessageTypes().get(100);
    internal_static_CMsgDOTACombatLogEntry_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessage.FieldAccessorTable(
        internal_static_CMsgDOTACombatLogEntry_descriptor,
        new java.lang.String[] { "Type", "TargetName", "TargetSourceName", "AttackerName", "DamageSourceName", "InflictorName", "IsAttackerIllusion", "IsAttackerHero", "IsTargetIllusion", "IsTargetHero", "IsVisibleRadiant", "IsVisibleDire", "Value", "Health", "Timestamp", "StunDuration", "SlowDuration", "IsAbilityToggleOn", "IsAbilityToggleOff", "AbilityLevel", "LocationX", "LocationY", "GoldReason", "TimestampRaw", "ModifierDuration", "XpReason", "LastHits", "AttackerTeam", "TargetTeam", "ObsWardsPlaced", "AssistPlayer0", "AssistPlayer1", "AssistPlayer2", "AssistPlayer3", "StackCount", "HiddenModifier", "IsTargetBuilding", "NeutralCampType", "RuneType", "AssistPlayers", "IsHealSave", "IsUltimateAbility", "AttackerHeroLevel", "TargetHeroLevel", "Xpm", "Gpm", "EventLocation", "TargetIsSelf", "DamageType", "InvisibilityModifier", "DamageCategory", "Networth", });
    skadistats.clarity.wire.common.proto.NetworkBaseTypes.getDescriptor();
    skadistats.clarity.wire.common.proto.DotaCommonMessages.getDescriptor();
  }

  // @@protoc_insertion_point(outer_class_scope)
}
