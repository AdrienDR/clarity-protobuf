// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: s2_dota_match_metadata.proto

package skadistats.clarity.wire.s2.proto;

public final class S2DotaMatchMetadata {
  private S2DotaMatchMetadata() {}
  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistry registry) {
  }
  public interface CDOTAMatchMetadataFileOrBuilder extends
      // @@protoc_insertion_point(interface_extends:CDOTAMatchMetadataFile)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>required int32 version = 1;</code>
     */
    boolean hasVersion();
    /**
     * <code>required int32 version = 1;</code>
     */
    int getVersion();

    /**
     * <code>required uint64 match_id = 2;</code>
     */
    boolean hasMatchId();
    /**
     * <code>required uint64 match_id = 2;</code>
     */
    long getMatchId();

    /**
     * <code>optional .CDOTAMatchMetadata metadata = 3;</code>
     */
    boolean hasMetadata();
    /**
     * <code>optional .CDOTAMatchMetadata metadata = 3;</code>
     */
    skadistats.clarity.wire.s2.proto.S2DotaMatchMetadata.CDOTAMatchMetadata getMetadata();
    /**
     * <code>optional .CDOTAMatchMetadata metadata = 3;</code>
     */
    skadistats.clarity.wire.s2.proto.S2DotaMatchMetadata.CDOTAMatchMetadataOrBuilder getMetadataOrBuilder();

    /**
     * <code>optional bytes private_metadata = 4;</code>
     */
    boolean hasPrivateMetadata();
    /**
     * <code>optional bytes private_metadata = 4;</code>
     */
    com.google.protobuf.ByteString getPrivateMetadata();
  }
  /**
   * Protobuf type {@code CDOTAMatchMetadataFile}
   */
  public static final class CDOTAMatchMetadataFile extends
      com.google.protobuf.GeneratedMessage implements
      // @@protoc_insertion_point(message_implements:CDOTAMatchMetadataFile)
      CDOTAMatchMetadataFileOrBuilder {
    // Use CDOTAMatchMetadataFile.newBuilder() to construct.
    private CDOTAMatchMetadataFile(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private CDOTAMatchMetadataFile(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final CDOTAMatchMetadataFile defaultInstance;
    public static CDOTAMatchMetadataFile getDefaultInstance() {
      return defaultInstance;
    }

    public CDOTAMatchMetadataFile getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private CDOTAMatchMetadataFile(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 8: {
              bitField0_ |= 0x00000001;
              version_ = input.readInt32();
              break;
            }
            case 16: {
              bitField0_ |= 0x00000002;
              matchId_ = input.readUInt64();
              break;
            }
            case 26: {
              skadistats.clarity.wire.s2.proto.S2DotaMatchMetadata.CDOTAMatchMetadata.Builder subBuilder = null;
              if (((bitField0_ & 0x00000004) == 0x00000004)) {
                subBuilder = metadata_.toBuilder();
              }
              metadata_ = input.readMessage(skadistats.clarity.wire.s2.proto.S2DotaMatchMetadata.CDOTAMatchMetadata.PARSER, extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(metadata_);
                metadata_ = subBuilder.buildPartial();
              }
              bitField0_ |= 0x00000004;
              break;
            }
            case 34: {
              bitField0_ |= 0x00000008;
              privateMetadata_ = input.readBytes();
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return skadistats.clarity.wire.s2.proto.S2DotaMatchMetadata.internal_static_CDOTAMatchMetadataFile_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return skadistats.clarity.wire.s2.proto.S2DotaMatchMetadata.internal_static_CDOTAMatchMetadataFile_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              skadistats.clarity.wire.s2.proto.S2DotaMatchMetadata.CDOTAMatchMetadataFile.class, skadistats.clarity.wire.s2.proto.S2DotaMatchMetadata.CDOTAMatchMetadataFile.Builder.class);
    }

    public static com.google.protobuf.Parser<CDOTAMatchMetadataFile> PARSER =
        new com.google.protobuf.AbstractParser<CDOTAMatchMetadataFile>() {
      public CDOTAMatchMetadataFile parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new CDOTAMatchMetadataFile(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<CDOTAMatchMetadataFile> getParserForType() {
      return PARSER;
    }

    private int bitField0_;
    public static final int VERSION_FIELD_NUMBER = 1;
    private int version_;
    /**
     * <code>required int32 version = 1;</code>
     */
    public boolean hasVersion() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>required int32 version = 1;</code>
     */
    public int getVersion() {
      return version_;
    }

    public static final int MATCH_ID_FIELD_NUMBER = 2;
    private long matchId_;
    /**
     * <code>required uint64 match_id = 2;</code>
     */
    public boolean hasMatchId() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>required uint64 match_id = 2;</code>
     */
    public long getMatchId() {
      return matchId_;
    }

    public static final int METADATA_FIELD_NUMBER = 3;
    private skadistats.clarity.wire.s2.proto.S2DotaMatchMetadata.CDOTAMatchMetadata metadata_;
    /**
     * <code>optional .CDOTAMatchMetadata metadata = 3;</code>
     */
    public boolean hasMetadata() {
      return ((bitField0_ & 0x00000004) == 0x00000004);
    }
    /**
     * <code>optional .CDOTAMatchMetadata metadata = 3;</code>
     */
    public skadistats.clarity.wire.s2.proto.S2DotaMatchMetadata.CDOTAMatchMetadata getMetadata() {
      return metadata_;
    }
    /**
     * <code>optional .CDOTAMatchMetadata metadata = 3;</code>
     */
    public skadistats.clarity.wire.s2.proto.S2DotaMatchMetadata.CDOTAMatchMetadataOrBuilder getMetadataOrBuilder() {
      return metadata_;
    }

    public static final int PRIVATE_METADATA_FIELD_NUMBER = 4;
    private com.google.protobuf.ByteString privateMetadata_;
    /**
     * <code>optional bytes private_metadata = 4;</code>
     */
    public boolean hasPrivateMetadata() {
      return ((bitField0_ & 0x00000008) == 0x00000008);
    }
    /**
     * <code>optional bytes private_metadata = 4;</code>
     */
    public com.google.protobuf.ByteString getPrivateMetadata() {
      return privateMetadata_;
    }

    private void initFields() {
      version_ = 0;
      matchId_ = 0L;
      metadata_ = skadistats.clarity.wire.s2.proto.S2DotaMatchMetadata.CDOTAMatchMetadata.getDefaultInstance();
      privateMetadata_ = com.google.protobuf.ByteString.EMPTY;
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      if (!hasVersion()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasMatchId()) {
        memoizedIsInitialized = 0;
        return false;
      }
      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeInt32(1, version_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeUInt64(2, matchId_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        output.writeMessage(3, metadata_);
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        output.writeBytes(4, privateMetadata_);
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(1, version_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt64Size(2, matchId_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(3, metadata_);
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(4, privateMetadata_);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static skadistats.clarity.wire.s2.proto.S2DotaMatchMetadata.CDOTAMatchMetadataFile parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static skadistats.clarity.wire.s2.proto.S2DotaMatchMetadata.CDOTAMatchMetadataFile parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static skadistats.clarity.wire.s2.proto.S2DotaMatchMetadata.CDOTAMatchMetadataFile parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static skadistats.clarity.wire.s2.proto.S2DotaMatchMetadata.CDOTAMatchMetadataFile parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static skadistats.clarity.wire.s2.proto.S2DotaMatchMetadata.CDOTAMatchMetadataFile parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static skadistats.clarity.wire.s2.proto.S2DotaMatchMetadata.CDOTAMatchMetadataFile parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static skadistats.clarity.wire.s2.proto.S2DotaMatchMetadata.CDOTAMatchMetadataFile parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static skadistats.clarity.wire.s2.proto.S2DotaMatchMetadata.CDOTAMatchMetadataFile parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static skadistats.clarity.wire.s2.proto.S2DotaMatchMetadata.CDOTAMatchMetadataFile parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static skadistats.clarity.wire.s2.proto.S2DotaMatchMetadata.CDOTAMatchMetadataFile parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(skadistats.clarity.wire.s2.proto.S2DotaMatchMetadata.CDOTAMatchMetadataFile prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code CDOTAMatchMetadataFile}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:CDOTAMatchMetadataFile)
        skadistats.clarity.wire.s2.proto.S2DotaMatchMetadata.CDOTAMatchMetadataFileOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return skadistats.clarity.wire.s2.proto.S2DotaMatchMetadata.internal_static_CDOTAMatchMetadataFile_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return skadistats.clarity.wire.s2.proto.S2DotaMatchMetadata.internal_static_CDOTAMatchMetadataFile_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                skadistats.clarity.wire.s2.proto.S2DotaMatchMetadata.CDOTAMatchMetadataFile.class, skadistats.clarity.wire.s2.proto.S2DotaMatchMetadata.CDOTAMatchMetadataFile.Builder.class);
      }

      // Construct using skadistats.clarity.wire.s2.proto.S2DotaMatchMetadata.CDOTAMatchMetadataFile.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
          getMetadataFieldBuilder();
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        version_ = 0;
        bitField0_ = (bitField0_ & ~0x00000001);
        matchId_ = 0L;
        bitField0_ = (bitField0_ & ~0x00000002);
        if (metadataBuilder_ == null) {
          metadata_ = skadistats.clarity.wire.s2.proto.S2DotaMatchMetadata.CDOTAMatchMetadata.getDefaultInstance();
        } else {
          metadataBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000004);
        privateMetadata_ = com.google.protobuf.ByteString.EMPTY;
        bitField0_ = (bitField0_ & ~0x00000008);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return skadistats.clarity.wire.s2.proto.S2DotaMatchMetadata.internal_static_CDOTAMatchMetadataFile_descriptor;
      }

      public skadistats.clarity.wire.s2.proto.S2DotaMatchMetadata.CDOTAMatchMetadataFile getDefaultInstanceForType() {
        return skadistats.clarity.wire.s2.proto.S2DotaMatchMetadata.CDOTAMatchMetadataFile.getDefaultInstance();
      }

      public skadistats.clarity.wire.s2.proto.S2DotaMatchMetadata.CDOTAMatchMetadataFile build() {
        skadistats.clarity.wire.s2.proto.S2DotaMatchMetadata.CDOTAMatchMetadataFile result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public skadistats.clarity.wire.s2.proto.S2DotaMatchMetadata.CDOTAMatchMetadataFile buildPartial() {
        skadistats.clarity.wire.s2.proto.S2DotaMatchMetadata.CDOTAMatchMetadataFile result = new skadistats.clarity.wire.s2.proto.S2DotaMatchMetadata.CDOTAMatchMetadataFile(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.version_ = version_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.matchId_ = matchId_;
        if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
          to_bitField0_ |= 0x00000004;
        }
        if (metadataBuilder_ == null) {
          result.metadata_ = metadata_;
        } else {
          result.metadata_ = metadataBuilder_.build();
        }
        if (((from_bitField0_ & 0x00000008) == 0x00000008)) {
          to_bitField0_ |= 0x00000008;
        }
        result.privateMetadata_ = privateMetadata_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof skadistats.clarity.wire.s2.proto.S2DotaMatchMetadata.CDOTAMatchMetadataFile) {
          return mergeFrom((skadistats.clarity.wire.s2.proto.S2DotaMatchMetadata.CDOTAMatchMetadataFile)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(skadistats.clarity.wire.s2.proto.S2DotaMatchMetadata.CDOTAMatchMetadataFile other) {
        if (other == skadistats.clarity.wire.s2.proto.S2DotaMatchMetadata.CDOTAMatchMetadataFile.getDefaultInstance()) return this;
        if (other.hasVersion()) {
          setVersion(other.getVersion());
        }
        if (other.hasMatchId()) {
          setMatchId(other.getMatchId());
        }
        if (other.hasMetadata()) {
          mergeMetadata(other.getMetadata());
        }
        if (other.hasPrivateMetadata()) {
          setPrivateMetadata(other.getPrivateMetadata());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        if (!hasVersion()) {
          
          return false;
        }
        if (!hasMatchId()) {
          
          return false;
        }
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        skadistats.clarity.wire.s2.proto.S2DotaMatchMetadata.CDOTAMatchMetadataFile parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (skadistats.clarity.wire.s2.proto.S2DotaMatchMetadata.CDOTAMatchMetadataFile) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private int version_ ;
      /**
       * <code>required int32 version = 1;</code>
       */
      public boolean hasVersion() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>required int32 version = 1;</code>
       */
      public int getVersion() {
        return version_;
      }
      /**
       * <code>required int32 version = 1;</code>
       */
      public Builder setVersion(int value) {
        bitField0_ |= 0x00000001;
        version_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required int32 version = 1;</code>
       */
      public Builder clearVersion() {
        bitField0_ = (bitField0_ & ~0x00000001);
        version_ = 0;
        onChanged();
        return this;
      }

      private long matchId_ ;
      /**
       * <code>required uint64 match_id = 2;</code>
       */
      public boolean hasMatchId() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>required uint64 match_id = 2;</code>
       */
      public long getMatchId() {
        return matchId_;
      }
      /**
       * <code>required uint64 match_id = 2;</code>
       */
      public Builder setMatchId(long value) {
        bitField0_ |= 0x00000002;
        matchId_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required uint64 match_id = 2;</code>
       */
      public Builder clearMatchId() {
        bitField0_ = (bitField0_ & ~0x00000002);
        matchId_ = 0L;
        onChanged();
        return this;
      }

      private skadistats.clarity.wire.s2.proto.S2DotaMatchMetadata.CDOTAMatchMetadata metadata_ = skadistats.clarity.wire.s2.proto.S2DotaMatchMetadata.CDOTAMatchMetadata.getDefaultInstance();
      private com.google.protobuf.SingleFieldBuilder<
          skadistats.clarity.wire.s2.proto.S2DotaMatchMetadata.CDOTAMatchMetadata, skadistats.clarity.wire.s2.proto.S2DotaMatchMetadata.CDOTAMatchMetadata.Builder, skadistats.clarity.wire.s2.proto.S2DotaMatchMetadata.CDOTAMatchMetadataOrBuilder> metadataBuilder_;
      /**
       * <code>optional .CDOTAMatchMetadata metadata = 3;</code>
       */
      public boolean hasMetadata() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }
      /**
       * <code>optional .CDOTAMatchMetadata metadata = 3;</code>
       */
      public skadistats.clarity.wire.s2.proto.S2DotaMatchMetadata.CDOTAMatchMetadata getMetadata() {
        if (metadataBuilder_ == null) {
          return metadata_;
        } else {
          return metadataBuilder_.getMessage();
        }
      }
      /**
       * <code>optional .CDOTAMatchMetadata metadata = 3;</code>
       */
      public Builder setMetadata(skadistats.clarity.wire.s2.proto.S2DotaMatchMetadata.CDOTAMatchMetadata value) {
        if (metadataBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          metadata_ = value;
          onChanged();
        } else {
          metadataBuilder_.setMessage(value);
        }
        bitField0_ |= 0x00000004;
        return this;
      }
      /**
       * <code>optional .CDOTAMatchMetadata metadata = 3;</code>
       */
      public Builder setMetadata(
          skadistats.clarity.wire.s2.proto.S2DotaMatchMetadata.CDOTAMatchMetadata.Builder builderForValue) {
        if (metadataBuilder_ == null) {
          metadata_ = builderForValue.build();
          onChanged();
        } else {
          metadataBuilder_.setMessage(builderForValue.build());
        }
        bitField0_ |= 0x00000004;
        return this;
      }
      /**
       * <code>optional .CDOTAMatchMetadata metadata = 3;</code>
       */
      public Builder mergeMetadata(skadistats.clarity.wire.s2.proto.S2DotaMatchMetadata.CDOTAMatchMetadata value) {
        if (metadataBuilder_ == null) {
          if (((bitField0_ & 0x00000004) == 0x00000004) &&
              metadata_ != skadistats.clarity.wire.s2.proto.S2DotaMatchMetadata.CDOTAMatchMetadata.getDefaultInstance()) {
            metadata_ =
              skadistats.clarity.wire.s2.proto.S2DotaMatchMetadata.CDOTAMatchMetadata.newBuilder(metadata_).mergeFrom(value).buildPartial();
          } else {
            metadata_ = value;
          }
          onChanged();
        } else {
          metadataBuilder_.mergeFrom(value);
        }
        bitField0_ |= 0x00000004;
        return this;
      }
      /**
       * <code>optional .CDOTAMatchMetadata metadata = 3;</code>
       */
      public Builder clearMetadata() {
        if (metadataBuilder_ == null) {
          metadata_ = skadistats.clarity.wire.s2.proto.S2DotaMatchMetadata.CDOTAMatchMetadata.getDefaultInstance();
          onChanged();
        } else {
          metadataBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000004);
        return this;
      }
      /**
       * <code>optional .CDOTAMatchMetadata metadata = 3;</code>
       */
      public skadistats.clarity.wire.s2.proto.S2DotaMatchMetadata.CDOTAMatchMetadata.Builder getMetadataBuilder() {
        bitField0_ |= 0x00000004;
        onChanged();
        return getMetadataFieldBuilder().getBuilder();
      }
      /**
       * <code>optional .CDOTAMatchMetadata metadata = 3;</code>
       */
      public skadistats.clarity.wire.s2.proto.S2DotaMatchMetadata.CDOTAMatchMetadataOrBuilder getMetadataOrBuilder() {
        if (metadataBuilder_ != null) {
          return metadataBuilder_.getMessageOrBuilder();
        } else {
          return metadata_;
        }
      }
      /**
       * <code>optional .CDOTAMatchMetadata metadata = 3;</code>
       */
      private com.google.protobuf.SingleFieldBuilder<
          skadistats.clarity.wire.s2.proto.S2DotaMatchMetadata.CDOTAMatchMetadata, skadistats.clarity.wire.s2.proto.S2DotaMatchMetadata.CDOTAMatchMetadata.Builder, skadistats.clarity.wire.s2.proto.S2DotaMatchMetadata.CDOTAMatchMetadataOrBuilder> 
          getMetadataFieldBuilder() {
        if (metadataBuilder_ == null) {
          metadataBuilder_ = new com.google.protobuf.SingleFieldBuilder<
              skadistats.clarity.wire.s2.proto.S2DotaMatchMetadata.CDOTAMatchMetadata, skadistats.clarity.wire.s2.proto.S2DotaMatchMetadata.CDOTAMatchMetadata.Builder, skadistats.clarity.wire.s2.proto.S2DotaMatchMetadata.CDOTAMatchMetadataOrBuilder>(
                  getMetadata(),
                  getParentForChildren(),
                  isClean());
          metadata_ = null;
        }
        return metadataBuilder_;
      }

      private com.google.protobuf.ByteString privateMetadata_ = com.google.protobuf.ByteString.EMPTY;
      /**
       * <code>optional bytes private_metadata = 4;</code>
       */
      public boolean hasPrivateMetadata() {
        return ((bitField0_ & 0x00000008) == 0x00000008);
      }
      /**
       * <code>optional bytes private_metadata = 4;</code>
       */
      public com.google.protobuf.ByteString getPrivateMetadata() {
        return privateMetadata_;
      }
      /**
       * <code>optional bytes private_metadata = 4;</code>
       */
      public Builder setPrivateMetadata(com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000008;
        privateMetadata_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional bytes private_metadata = 4;</code>
       */
      public Builder clearPrivateMetadata() {
        bitField0_ = (bitField0_ & ~0x00000008);
        privateMetadata_ = getDefaultInstance().getPrivateMetadata();
        onChanged();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:CDOTAMatchMetadataFile)
    }

    static {
      defaultInstance = new CDOTAMatchMetadataFile(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:CDOTAMatchMetadataFile)
  }

  public interface CDOTAMatchMetadataOrBuilder extends
      // @@protoc_insertion_point(interface_extends:CDOTAMatchMetadata)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>repeated .CDOTAMatchMetadata.Team teams = 1;</code>
     */
    java.util.List<skadistats.clarity.wire.s2.proto.S2DotaMatchMetadata.CDOTAMatchMetadata.Team> 
        getTeamsList();
    /**
     * <code>repeated .CDOTAMatchMetadata.Team teams = 1;</code>
     */
    skadistats.clarity.wire.s2.proto.S2DotaMatchMetadata.CDOTAMatchMetadata.Team getTeams(int index);
    /**
     * <code>repeated .CDOTAMatchMetadata.Team teams = 1;</code>
     */
    int getTeamsCount();
    /**
     * <code>repeated .CDOTAMatchMetadata.Team teams = 1;</code>
     */
    java.util.List<? extends skadistats.clarity.wire.s2.proto.S2DotaMatchMetadata.CDOTAMatchMetadata.TeamOrBuilder> 
        getTeamsOrBuilderList();
    /**
     * <code>repeated .CDOTAMatchMetadata.Team teams = 1;</code>
     */
    skadistats.clarity.wire.s2.proto.S2DotaMatchMetadata.CDOTAMatchMetadata.TeamOrBuilder getTeamsOrBuilder(
        int index);

    /**
     * <code>repeated .CLobbyTimedRewardDetails item_rewards = 2;</code>
     */
    java.util.List<skadistats.clarity.wire.s2.proto.S2DotaMatchMetadata.CLobbyTimedRewardDetails> 
        getItemRewardsList();
    /**
     * <code>repeated .CLobbyTimedRewardDetails item_rewards = 2;</code>
     */
    skadistats.clarity.wire.s2.proto.S2DotaMatchMetadata.CLobbyTimedRewardDetails getItemRewards(int index);
    /**
     * <code>repeated .CLobbyTimedRewardDetails item_rewards = 2;</code>
     */
    int getItemRewardsCount();
    /**
     * <code>repeated .CLobbyTimedRewardDetails item_rewards = 2;</code>
     */
    java.util.List<? extends skadistats.clarity.wire.s2.proto.S2DotaMatchMetadata.CLobbyTimedRewardDetailsOrBuilder> 
        getItemRewardsOrBuilderList();
    /**
     * <code>repeated .CLobbyTimedRewardDetails item_rewards = 2;</code>
     */
    skadistats.clarity.wire.s2.proto.S2DotaMatchMetadata.CLobbyTimedRewardDetailsOrBuilder getItemRewardsOrBuilder(
        int index);
  }
  /**
   * Protobuf type {@code CDOTAMatchMetadata}
   */
  public static final class CDOTAMatchMetadata extends
      com.google.protobuf.GeneratedMessage implements
      // @@protoc_insertion_point(message_implements:CDOTAMatchMetadata)
      CDOTAMatchMetadataOrBuilder {
    // Use CDOTAMatchMetadata.newBuilder() to construct.
    private CDOTAMatchMetadata(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private CDOTAMatchMetadata(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final CDOTAMatchMetadata defaultInstance;
    public static CDOTAMatchMetadata getDefaultInstance() {
      return defaultInstance;
    }

    public CDOTAMatchMetadata getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private CDOTAMatchMetadata(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 10: {
              if (!((mutable_bitField0_ & 0x00000001) == 0x00000001)) {
                teams_ = new java.util.ArrayList<skadistats.clarity.wire.s2.proto.S2DotaMatchMetadata.CDOTAMatchMetadata.Team>();
                mutable_bitField0_ |= 0x00000001;
              }
              teams_.add(input.readMessage(skadistats.clarity.wire.s2.proto.S2DotaMatchMetadata.CDOTAMatchMetadata.Team.PARSER, extensionRegistry));
              break;
            }
            case 18: {
              if (!((mutable_bitField0_ & 0x00000002) == 0x00000002)) {
                itemRewards_ = new java.util.ArrayList<skadistats.clarity.wire.s2.proto.S2DotaMatchMetadata.CLobbyTimedRewardDetails>();
                mutable_bitField0_ |= 0x00000002;
              }
              itemRewards_.add(input.readMessage(skadistats.clarity.wire.s2.proto.S2DotaMatchMetadata.CLobbyTimedRewardDetails.PARSER, extensionRegistry));
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        if (((mutable_bitField0_ & 0x00000001) == 0x00000001)) {
          teams_ = java.util.Collections.unmodifiableList(teams_);
        }
        if (((mutable_bitField0_ & 0x00000002) == 0x00000002)) {
          itemRewards_ = java.util.Collections.unmodifiableList(itemRewards_);
        }
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return skadistats.clarity.wire.s2.proto.S2DotaMatchMetadata.internal_static_CDOTAMatchMetadata_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return skadistats.clarity.wire.s2.proto.S2DotaMatchMetadata.internal_static_CDOTAMatchMetadata_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              skadistats.clarity.wire.s2.proto.S2DotaMatchMetadata.CDOTAMatchMetadata.class, skadistats.clarity.wire.s2.proto.S2DotaMatchMetadata.CDOTAMatchMetadata.Builder.class);
    }

    public static com.google.protobuf.Parser<CDOTAMatchMetadata> PARSER =
        new com.google.protobuf.AbstractParser<CDOTAMatchMetadata>() {
      public CDOTAMatchMetadata parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new CDOTAMatchMetadata(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<CDOTAMatchMetadata> getParserForType() {
      return PARSER;
    }

    public interface TeamOrBuilder extends
        // @@protoc_insertion_point(interface_extends:CDOTAMatchMetadata.Team)
        com.google.protobuf.MessageOrBuilder {

      /**
       * <code>optional uint32 dota_team = 1;</code>
       */
      boolean hasDotaTeam();
      /**
       * <code>optional uint32 dota_team = 1;</code>
       */
      int getDotaTeam();

      /**
       * <code>repeated .CDOTAMatchMetadata.Team.Player players = 2;</code>
       */
      java.util.List<skadistats.clarity.wire.s2.proto.S2DotaMatchMetadata.CDOTAMatchMetadata.Team.Player> 
          getPlayersList();
      /**
       * <code>repeated .CDOTAMatchMetadata.Team.Player players = 2;</code>
       */
      skadistats.clarity.wire.s2.proto.S2DotaMatchMetadata.CDOTAMatchMetadata.Team.Player getPlayers(int index);
      /**
       * <code>repeated .CDOTAMatchMetadata.Team.Player players = 2;</code>
       */
      int getPlayersCount();
      /**
       * <code>repeated .CDOTAMatchMetadata.Team.Player players = 2;</code>
       */
      java.util.List<? extends skadistats.clarity.wire.s2.proto.S2DotaMatchMetadata.CDOTAMatchMetadata.Team.PlayerOrBuilder> 
          getPlayersOrBuilderList();
      /**
       * <code>repeated .CDOTAMatchMetadata.Team.Player players = 2;</code>
       */
      skadistats.clarity.wire.s2.proto.S2DotaMatchMetadata.CDOTAMatchMetadata.Team.PlayerOrBuilder getPlayersOrBuilder(
          int index);

      /**
       * <code>repeated float graph_experience = 3;</code>
       */
      java.util.List<java.lang.Float> getGraphExperienceList();
      /**
       * <code>repeated float graph_experience = 3;</code>
       */
      int getGraphExperienceCount();
      /**
       * <code>repeated float graph_experience = 3;</code>
       */
      float getGraphExperience(int index);

      /**
       * <code>repeated float graph_gold_earned = 4;</code>
       */
      java.util.List<java.lang.Float> getGraphGoldEarnedList();
      /**
       * <code>repeated float graph_gold_earned = 4;</code>
       */
      int getGraphGoldEarnedCount();
      /**
       * <code>repeated float graph_gold_earned = 4;</code>
       */
      float getGraphGoldEarned(int index);

      /**
       * <code>repeated float graph_net_worth = 5;</code>
       */
      java.util.List<java.lang.Float> getGraphNetWorthList();
      /**
       * <code>repeated float graph_net_worth = 5;</code>
       */
      int getGraphNetWorthCount();
      /**
       * <code>repeated float graph_net_worth = 5;</code>
       */
      float getGraphNetWorth(int index);

      /**
       * <code>optional bool cm_first_pick = 6;</code>
       */
      boolean hasCmFirstPick();
      /**
       * <code>optional bool cm_first_pick = 6;</code>
       */
      boolean getCmFirstPick();

      /**
       * <code>optional uint32 cm_captain_player_id = 7;</code>
       */
      boolean hasCmCaptainPlayerId();
      /**
       * <code>optional uint32 cm_captain_player_id = 7;</code>
       */
      int getCmCaptainPlayerId();

      /**
       * <code>repeated uint32 cm_bans = 8;</code>
       */
      java.util.List<java.lang.Integer> getCmBansList();
      /**
       * <code>repeated uint32 cm_bans = 8;</code>
       */
      int getCmBansCount();
      /**
       * <code>repeated uint32 cm_bans = 8;</code>
       */
      int getCmBans(int index);

      /**
       * <code>repeated uint32 cm_picks = 9;</code>
       */
      java.util.List<java.lang.Integer> getCmPicksList();
      /**
       * <code>repeated uint32 cm_picks = 9;</code>
       */
      int getCmPicksCount();
      /**
       * <code>repeated uint32 cm_picks = 9;</code>
       */
      int getCmPicks(int index);

      /**
       * <code>optional uint32 cm_penalty = 10;</code>
       */
      boolean hasCmPenalty();
      /**
       * <code>optional uint32 cm_penalty = 10;</code>
       */
      int getCmPenalty();
    }
    /**
     * Protobuf type {@code CDOTAMatchMetadata.Team}
     */
    public static final class Team extends
        com.google.protobuf.GeneratedMessage implements
        // @@protoc_insertion_point(message_implements:CDOTAMatchMetadata.Team)
        TeamOrBuilder {
      // Use Team.newBuilder() to construct.
      private Team(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
        super(builder);
        this.unknownFields = builder.getUnknownFields();
      }
      private Team(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

      private static final Team defaultInstance;
      public static Team getDefaultInstance() {
        return defaultInstance;
      }

      public Team getDefaultInstanceForType() {
        return defaultInstance;
      }

      private final com.google.protobuf.UnknownFieldSet unknownFields;
      @java.lang.Override
      public final com.google.protobuf.UnknownFieldSet
          getUnknownFields() {
        return this.unknownFields;
      }
      private Team(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        initFields();
        int mutable_bitField0_ = 0;
        com.google.protobuf.UnknownFieldSet.Builder unknownFields =
            com.google.protobuf.UnknownFieldSet.newBuilder();
        try {
          boolean done = false;
          while (!done) {
            int tag = input.readTag();
            switch (tag) {
              case 0:
                done = true;
                break;
              default: {
                if (!parseUnknownField(input, unknownFields,
                                       extensionRegistry, tag)) {
                  done = true;
                }
                break;
              }
              case 8: {
                bitField0_ |= 0x00000001;
                dotaTeam_ = input.readUInt32();
                break;
              }
              case 18: {
                if (!((mutable_bitField0_ & 0x00000002) == 0x00000002)) {
                  players_ = new java.util.ArrayList<skadistats.clarity.wire.s2.proto.S2DotaMatchMetadata.CDOTAMatchMetadata.Team.Player>();
                  mutable_bitField0_ |= 0x00000002;
                }
                players_.add(input.readMessage(skadistats.clarity.wire.s2.proto.S2DotaMatchMetadata.CDOTAMatchMetadata.Team.Player.PARSER, extensionRegistry));
                break;
              }
              case 29: {
                if (!((mutable_bitField0_ & 0x00000004) == 0x00000004)) {
                  graphExperience_ = new java.util.ArrayList<java.lang.Float>();
                  mutable_bitField0_ |= 0x00000004;
                }
                graphExperience_.add(input.readFloat());
                break;
              }
              case 26: {
                int length = input.readRawVarint32();
                int limit = input.pushLimit(length);
                if (!((mutable_bitField0_ & 0x00000004) == 0x00000004) && input.getBytesUntilLimit() > 0) {
                  graphExperience_ = new java.util.ArrayList<java.lang.Float>();
                  mutable_bitField0_ |= 0x00000004;
                }
                while (input.getBytesUntilLimit() > 0) {
                  graphExperience_.add(input.readFloat());
                }
                input.popLimit(limit);
                break;
              }
              case 37: {
                if (!((mutable_bitField0_ & 0x00000008) == 0x00000008)) {
                  graphGoldEarned_ = new java.util.ArrayList<java.lang.Float>();
                  mutable_bitField0_ |= 0x00000008;
                }
                graphGoldEarned_.add(input.readFloat());
                break;
              }
              case 34: {
                int length = input.readRawVarint32();
                int limit = input.pushLimit(length);
                if (!((mutable_bitField0_ & 0x00000008) == 0x00000008) && input.getBytesUntilLimit() > 0) {
                  graphGoldEarned_ = new java.util.ArrayList<java.lang.Float>();
                  mutable_bitField0_ |= 0x00000008;
                }
                while (input.getBytesUntilLimit() > 0) {
                  graphGoldEarned_.add(input.readFloat());
                }
                input.popLimit(limit);
                break;
              }
              case 45: {
                if (!((mutable_bitField0_ & 0x00000010) == 0x00000010)) {
                  graphNetWorth_ = new java.util.ArrayList<java.lang.Float>();
                  mutable_bitField0_ |= 0x00000010;
                }
                graphNetWorth_.add(input.readFloat());
                break;
              }
              case 42: {
                int length = input.readRawVarint32();
                int limit = input.pushLimit(length);
                if (!((mutable_bitField0_ & 0x00000010) == 0x00000010) && input.getBytesUntilLimit() > 0) {
                  graphNetWorth_ = new java.util.ArrayList<java.lang.Float>();
                  mutable_bitField0_ |= 0x00000010;
                }
                while (input.getBytesUntilLimit() > 0) {
                  graphNetWorth_.add(input.readFloat());
                }
                input.popLimit(limit);
                break;
              }
              case 48: {
                bitField0_ |= 0x00000002;
                cmFirstPick_ = input.readBool();
                break;
              }
              case 56: {
                bitField0_ |= 0x00000004;
                cmCaptainPlayerId_ = input.readUInt32();
                break;
              }
              case 64: {
                if (!((mutable_bitField0_ & 0x00000080) == 0x00000080)) {
                  cmBans_ = new java.util.ArrayList<java.lang.Integer>();
                  mutable_bitField0_ |= 0x00000080;
                }
                cmBans_.add(input.readUInt32());
                break;
              }
              case 66: {
                int length = input.readRawVarint32();
                int limit = input.pushLimit(length);
                if (!((mutable_bitField0_ & 0x00000080) == 0x00000080) && input.getBytesUntilLimit() > 0) {
                  cmBans_ = new java.util.ArrayList<java.lang.Integer>();
                  mutable_bitField0_ |= 0x00000080;
                }
                while (input.getBytesUntilLimit() > 0) {
                  cmBans_.add(input.readUInt32());
                }
                input.popLimit(limit);
                break;
              }
              case 72: {
                if (!((mutable_bitField0_ & 0x00000100) == 0x00000100)) {
                  cmPicks_ = new java.util.ArrayList<java.lang.Integer>();
                  mutable_bitField0_ |= 0x00000100;
                }
                cmPicks_.add(input.readUInt32());
                break;
              }
              case 74: {
                int length = input.readRawVarint32();
                int limit = input.pushLimit(length);
                if (!((mutable_bitField0_ & 0x00000100) == 0x00000100) && input.getBytesUntilLimit() > 0) {
                  cmPicks_ = new java.util.ArrayList<java.lang.Integer>();
                  mutable_bitField0_ |= 0x00000100;
                }
                while (input.getBytesUntilLimit() > 0) {
                  cmPicks_.add(input.readUInt32());
                }
                input.popLimit(limit);
                break;
              }
              case 80: {
                bitField0_ |= 0x00000008;
                cmPenalty_ = input.readUInt32();
                break;
              }
            }
          }
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.setUnfinishedMessage(this);
        } catch (java.io.IOException e) {
          throw new com.google.protobuf.InvalidProtocolBufferException(
              e.getMessage()).setUnfinishedMessage(this);
        } finally {
          if (((mutable_bitField0_ & 0x00000002) == 0x00000002)) {
            players_ = java.util.Collections.unmodifiableList(players_);
          }
          if (((mutable_bitField0_ & 0x00000004) == 0x00000004)) {
            graphExperience_ = java.util.Collections.unmodifiableList(graphExperience_);
          }
          if (((mutable_bitField0_ & 0x00000008) == 0x00000008)) {
            graphGoldEarned_ = java.util.Collections.unmodifiableList(graphGoldEarned_);
          }
          if (((mutable_bitField0_ & 0x00000010) == 0x00000010)) {
            graphNetWorth_ = java.util.Collections.unmodifiableList(graphNetWorth_);
          }
          if (((mutable_bitField0_ & 0x00000080) == 0x00000080)) {
            cmBans_ = java.util.Collections.unmodifiableList(cmBans_);
          }
          if (((mutable_bitField0_ & 0x00000100) == 0x00000100)) {
            cmPicks_ = java.util.Collections.unmodifiableList(cmPicks_);
          }
          this.unknownFields = unknownFields.build();
          makeExtensionsImmutable();
        }
      }
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return skadistats.clarity.wire.s2.proto.S2DotaMatchMetadata.internal_static_CDOTAMatchMetadata_Team_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return skadistats.clarity.wire.s2.proto.S2DotaMatchMetadata.internal_static_CDOTAMatchMetadata_Team_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                skadistats.clarity.wire.s2.proto.S2DotaMatchMetadata.CDOTAMatchMetadata.Team.class, skadistats.clarity.wire.s2.proto.S2DotaMatchMetadata.CDOTAMatchMetadata.Team.Builder.class);
      }

      public static com.google.protobuf.Parser<Team> PARSER =
          new com.google.protobuf.AbstractParser<Team>() {
        public Team parsePartialFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws com.google.protobuf.InvalidProtocolBufferException {
          return new Team(input, extensionRegistry);
        }
      };

      @java.lang.Override
      public com.google.protobuf.Parser<Team> getParserForType() {
        return PARSER;
      }

      public interface PlayerKillOrBuilder extends
          // @@protoc_insertion_point(interface_extends:CDOTAMatchMetadata.Team.PlayerKill)
          com.google.protobuf.MessageOrBuilder {

        /**
         * <code>optional uint32 victim_slot = 1;</code>
         */
        boolean hasVictimSlot();
        /**
         * <code>optional uint32 victim_slot = 1;</code>
         */
        int getVictimSlot();

        /**
         * <code>optional uint32 count = 2;</code>
         */
        boolean hasCount();
        /**
         * <code>optional uint32 count = 2;</code>
         */
        int getCount();
      }
      /**
       * Protobuf type {@code CDOTAMatchMetadata.Team.PlayerKill}
       */
      public static final class PlayerKill extends
          com.google.protobuf.GeneratedMessage implements
          // @@protoc_insertion_point(message_implements:CDOTAMatchMetadata.Team.PlayerKill)
          PlayerKillOrBuilder {
        // Use PlayerKill.newBuilder() to construct.
        private PlayerKill(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
          super(builder);
          this.unknownFields = builder.getUnknownFields();
        }
        private PlayerKill(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

        private static final PlayerKill defaultInstance;
        public static PlayerKill getDefaultInstance() {
          return defaultInstance;
        }

        public PlayerKill getDefaultInstanceForType() {
          return defaultInstance;
        }

        private final com.google.protobuf.UnknownFieldSet unknownFields;
        @java.lang.Override
        public final com.google.protobuf.UnknownFieldSet
            getUnknownFields() {
          return this.unknownFields;
        }
        private PlayerKill(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws com.google.protobuf.InvalidProtocolBufferException {
          initFields();
          int mutable_bitField0_ = 0;
          com.google.protobuf.UnknownFieldSet.Builder unknownFields =
              com.google.protobuf.UnknownFieldSet.newBuilder();
          try {
            boolean done = false;
            while (!done) {
              int tag = input.readTag();
              switch (tag) {
                case 0:
                  done = true;
                  break;
                default: {
                  if (!parseUnknownField(input, unknownFields,
                                         extensionRegistry, tag)) {
                    done = true;
                  }
                  break;
                }
                case 8: {
                  bitField0_ |= 0x00000001;
                  victimSlot_ = input.readUInt32();
                  break;
                }
                case 16: {
                  bitField0_ |= 0x00000002;
                  count_ = input.readUInt32();
                  break;
                }
              }
            }
          } catch (com.google.protobuf.InvalidProtocolBufferException e) {
            throw e.setUnfinishedMessage(this);
          } catch (java.io.IOException e) {
            throw new com.google.protobuf.InvalidProtocolBufferException(
                e.getMessage()).setUnfinishedMessage(this);
          } finally {
            this.unknownFields = unknownFields.build();
            makeExtensionsImmutable();
          }
        }
        public static final com.google.protobuf.Descriptors.Descriptor
            getDescriptor() {
          return skadistats.clarity.wire.s2.proto.S2DotaMatchMetadata.internal_static_CDOTAMatchMetadata_Team_PlayerKill_descriptor;
        }

        protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
            internalGetFieldAccessorTable() {
          return skadistats.clarity.wire.s2.proto.S2DotaMatchMetadata.internal_static_CDOTAMatchMetadata_Team_PlayerKill_fieldAccessorTable
              .ensureFieldAccessorsInitialized(
                  skadistats.clarity.wire.s2.proto.S2DotaMatchMetadata.CDOTAMatchMetadata.Team.PlayerKill.class, skadistats.clarity.wire.s2.proto.S2DotaMatchMetadata.CDOTAMatchMetadata.Team.PlayerKill.Builder.class);
        }

        public static com.google.protobuf.Parser<PlayerKill> PARSER =
            new com.google.protobuf.AbstractParser<PlayerKill>() {
          public PlayerKill parsePartialFrom(
              com.google.protobuf.CodedInputStream input,
              com.google.protobuf.ExtensionRegistryLite extensionRegistry)
              throws com.google.protobuf.InvalidProtocolBufferException {
            return new PlayerKill(input, extensionRegistry);
          }
        };

        @java.lang.Override
        public com.google.protobuf.Parser<PlayerKill> getParserForType() {
          return PARSER;
        }

        private int bitField0_;
        public static final int VICTIM_SLOT_FIELD_NUMBER = 1;
        private int victimSlot_;
        /**
         * <code>optional uint32 victim_slot = 1;</code>
         */
        public boolean hasVictimSlot() {
          return ((bitField0_ & 0x00000001) == 0x00000001);
        }
        /**
         * <code>optional uint32 victim_slot = 1;</code>
         */
        public int getVictimSlot() {
          return victimSlot_;
        }

        public static final int COUNT_FIELD_NUMBER = 2;
        private int count_;
        /**
         * <code>optional uint32 count = 2;</code>
         */
        public boolean hasCount() {
          return ((bitField0_ & 0x00000002) == 0x00000002);
        }
        /**
         * <code>optional uint32 count = 2;</code>
         */
        public int getCount() {
          return count_;
        }

        private void initFields() {
          victimSlot_ = 0;
          count_ = 0;
        }
        private byte memoizedIsInitialized = -1;
        public final boolean isInitialized() {
          byte isInitialized = memoizedIsInitialized;
          if (isInitialized == 1) return true;
          if (isInitialized == 0) return false;

          memoizedIsInitialized = 1;
          return true;
        }

        public void writeTo(com.google.protobuf.CodedOutputStream output)
                            throws java.io.IOException {
          getSerializedSize();
          if (((bitField0_ & 0x00000001) == 0x00000001)) {
            output.writeUInt32(1, victimSlot_);
          }
          if (((bitField0_ & 0x00000002) == 0x00000002)) {
            output.writeUInt32(2, count_);
          }
          getUnknownFields().writeTo(output);
        }

        private int memoizedSerializedSize = -1;
        public int getSerializedSize() {
          int size = memoizedSerializedSize;
          if (size != -1) return size;

          size = 0;
          if (((bitField0_ & 0x00000001) == 0x00000001)) {
            size += com.google.protobuf.CodedOutputStream
              .computeUInt32Size(1, victimSlot_);
          }
          if (((bitField0_ & 0x00000002) == 0x00000002)) {
            size += com.google.protobuf.CodedOutputStream
              .computeUInt32Size(2, count_);
          }
          size += getUnknownFields().getSerializedSize();
          memoizedSerializedSize = size;
          return size;
        }

        private static final long serialVersionUID = 0L;
        @java.lang.Override
        protected java.lang.Object writeReplace()
            throws java.io.ObjectStreamException {
          return super.writeReplace();
        }

        public static skadistats.clarity.wire.s2.proto.S2DotaMatchMetadata.CDOTAMatchMetadata.Team.PlayerKill parseFrom(
            com.google.protobuf.ByteString data)
            throws com.google.protobuf.InvalidProtocolBufferException {
          return PARSER.parseFrom(data);
        }
        public static skadistats.clarity.wire.s2.proto.S2DotaMatchMetadata.CDOTAMatchMetadata.Team.PlayerKill parseFrom(
            com.google.protobuf.ByteString data,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws com.google.protobuf.InvalidProtocolBufferException {
          return PARSER.parseFrom(data, extensionRegistry);
        }
        public static skadistats.clarity.wire.s2.proto.S2DotaMatchMetadata.CDOTAMatchMetadata.Team.PlayerKill parseFrom(byte[] data)
            throws com.google.protobuf.InvalidProtocolBufferException {
          return PARSER.parseFrom(data);
        }
        public static skadistats.clarity.wire.s2.proto.S2DotaMatchMetadata.CDOTAMatchMetadata.Team.PlayerKill parseFrom(
            byte[] data,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws com.google.protobuf.InvalidProtocolBufferException {
          return PARSER.parseFrom(data, extensionRegistry);
        }
        public static skadistats.clarity.wire.s2.proto.S2DotaMatchMetadata.CDOTAMatchMetadata.Team.PlayerKill parseFrom(java.io.InputStream input)
            throws java.io.IOException {
          return PARSER.parseFrom(input);
        }
        public static skadistats.clarity.wire.s2.proto.S2DotaMatchMetadata.CDOTAMatchMetadata.Team.PlayerKill parseFrom(
            java.io.InputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws java.io.IOException {
          return PARSER.parseFrom(input, extensionRegistry);
        }
        public static skadistats.clarity.wire.s2.proto.S2DotaMatchMetadata.CDOTAMatchMetadata.Team.PlayerKill parseDelimitedFrom(java.io.InputStream input)
            throws java.io.IOException {
          return PARSER.parseDelimitedFrom(input);
        }
        public static skadistats.clarity.wire.s2.proto.S2DotaMatchMetadata.CDOTAMatchMetadata.Team.PlayerKill parseDelimitedFrom(
            java.io.InputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws java.io.IOException {
          return PARSER.parseDelimitedFrom(input, extensionRegistry);
        }
        public static skadistats.clarity.wire.s2.proto.S2DotaMatchMetadata.CDOTAMatchMetadata.Team.PlayerKill parseFrom(
            com.google.protobuf.CodedInputStream input)
            throws java.io.IOException {
          return PARSER.parseFrom(input);
        }
        public static skadistats.clarity.wire.s2.proto.S2DotaMatchMetadata.CDOTAMatchMetadata.Team.PlayerKill parseFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws java.io.IOException {
          return PARSER.parseFrom(input, extensionRegistry);
        }

        public static Builder newBuilder() { return Builder.create(); }
        public Builder newBuilderForType() { return newBuilder(); }
        public static Builder newBuilder(skadistats.clarity.wire.s2.proto.S2DotaMatchMetadata.CDOTAMatchMetadata.Team.PlayerKill prototype) {
          return newBuilder().mergeFrom(prototype);
        }
        public Builder toBuilder() { return newBuilder(this); }

        @java.lang.Override
        protected Builder newBuilderForType(
            com.google.protobuf.GeneratedMessage.BuilderParent parent) {
          Builder builder = new Builder(parent);
          return builder;
        }
        /**
         * Protobuf type {@code CDOTAMatchMetadata.Team.PlayerKill}
         */
        public static final class Builder extends
            com.google.protobuf.GeneratedMessage.Builder<Builder> implements
            // @@protoc_insertion_point(builder_implements:CDOTAMatchMetadata.Team.PlayerKill)
            skadistats.clarity.wire.s2.proto.S2DotaMatchMetadata.CDOTAMatchMetadata.Team.PlayerKillOrBuilder {
          public static final com.google.protobuf.Descriptors.Descriptor
              getDescriptor() {
            return skadistats.clarity.wire.s2.proto.S2DotaMatchMetadata.internal_static_CDOTAMatchMetadata_Team_PlayerKill_descriptor;
          }

          protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
              internalGetFieldAccessorTable() {
            return skadistats.clarity.wire.s2.proto.S2DotaMatchMetadata.internal_static_CDOTAMatchMetadata_Team_PlayerKill_fieldAccessorTable
                .ensureFieldAccessorsInitialized(
                    skadistats.clarity.wire.s2.proto.S2DotaMatchMetadata.CDOTAMatchMetadata.Team.PlayerKill.class, skadistats.clarity.wire.s2.proto.S2DotaMatchMetadata.CDOTAMatchMetadata.Team.PlayerKill.Builder.class);
          }

          // Construct using skadistats.clarity.wire.s2.proto.S2DotaMatchMetadata.CDOTAMatchMetadata.Team.PlayerKill.newBuilder()
          private Builder() {
            maybeForceBuilderInitialization();
          }

          private Builder(
              com.google.protobuf.GeneratedMessage.BuilderParent parent) {
            super(parent);
            maybeForceBuilderInitialization();
          }
          private void maybeForceBuilderInitialization() {
            if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
            }
          }
          private static Builder create() {
            return new Builder();
          }

          public Builder clear() {
            super.clear();
            victimSlot_ = 0;
            bitField0_ = (bitField0_ & ~0x00000001);
            count_ = 0;
            bitField0_ = (bitField0_ & ~0x00000002);
            return this;
          }

          public Builder clone() {
            return create().mergeFrom(buildPartial());
          }

          public com.google.protobuf.Descriptors.Descriptor
              getDescriptorForType() {
            return skadistats.clarity.wire.s2.proto.S2DotaMatchMetadata.internal_static_CDOTAMatchMetadata_Team_PlayerKill_descriptor;
          }

          public skadistats.clarity.wire.s2.proto.S2DotaMatchMetadata.CDOTAMatchMetadata.Team.PlayerKill getDefaultInstanceForType() {
            return skadistats.clarity.wire.s2.proto.S2DotaMatchMetadata.CDOTAMatchMetadata.Team.PlayerKill.getDefaultInstance();
          }

          public skadistats.clarity.wire.s2.proto.S2DotaMatchMetadata.CDOTAMatchMetadata.Team.PlayerKill build() {
            skadistats.clarity.wire.s2.proto.S2DotaMatchMetadata.CDOTAMatchMetadata.Team.PlayerKill result = buildPartial();
            if (!result.isInitialized()) {
              throw newUninitializedMessageException(result);
            }
            return result;
          }

          public skadistats.clarity.wire.s2.proto.S2DotaMatchMetadata.CDOTAMatchMetadata.Team.PlayerKill buildPartial() {
            skadistats.clarity.wire.s2.proto.S2DotaMatchMetadata.CDOTAMatchMetadata.Team.PlayerKill result = new skadistats.clarity.wire.s2.proto.S2DotaMatchMetadata.CDOTAMatchMetadata.Team.PlayerKill(this);
            int from_bitField0_ = bitField0_;
            int to_bitField0_ = 0;
            if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
              to_bitField0_ |= 0x00000001;
            }
            result.victimSlot_ = victimSlot_;
            if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
              to_bitField0_ |= 0x00000002;
            }
            result.count_ = count_;
            result.bitField0_ = to_bitField0_;
            onBuilt();
            return result;
          }

          public Builder mergeFrom(com.google.protobuf.Message other) {
            if (other instanceof skadistats.clarity.wire.s2.proto.S2DotaMatchMetadata.CDOTAMatchMetadata.Team.PlayerKill) {
              return mergeFrom((skadistats.clarity.wire.s2.proto.S2DotaMatchMetadata.CDOTAMatchMetadata.Team.PlayerKill)other);
            } else {
              super.mergeFrom(other);
              return this;
            }
          }

          public Builder mergeFrom(skadistats.clarity.wire.s2.proto.S2DotaMatchMetadata.CDOTAMatchMetadata.Team.PlayerKill other) {
            if (other == skadistats.clarity.wire.s2.proto.S2DotaMatchMetadata.CDOTAMatchMetadata.Team.PlayerKill.getDefaultInstance()) return this;
            if (other.hasVictimSlot()) {
              setVictimSlot(other.getVictimSlot());
            }
            if (other.hasCount()) {
              setCount(other.getCount());
            }
            this.mergeUnknownFields(other.getUnknownFields());
            return this;
          }

          public final boolean isInitialized() {
            return true;
          }

          public Builder mergeFrom(
              com.google.protobuf.CodedInputStream input,
              com.google.protobuf.ExtensionRegistryLite extensionRegistry)
              throws java.io.IOException {
            skadistats.clarity.wire.s2.proto.S2DotaMatchMetadata.CDOTAMatchMetadata.Team.PlayerKill parsedMessage = null;
            try {
              parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
            } catch (com.google.protobuf.InvalidProtocolBufferException e) {
              parsedMessage = (skadistats.clarity.wire.s2.proto.S2DotaMatchMetadata.CDOTAMatchMetadata.Team.PlayerKill) e.getUnfinishedMessage();
              throw e;
            } finally {
              if (parsedMessage != null) {
                mergeFrom(parsedMessage);
              }
            }
            return this;
          }
          private int bitField0_;

          private int victimSlot_ ;
          /**
           * <code>optional uint32 victim_slot = 1;</code>
           */
          public boolean hasVictimSlot() {
            return ((bitField0_ & 0x00000001) == 0x00000001);
          }
          /**
           * <code>optional uint32 victim_slot = 1;</code>
           */
          public int getVictimSlot() {
            return victimSlot_;
          }
          /**
           * <code>optional uint32 victim_slot = 1;</code>
           */
          public Builder setVictimSlot(int value) {
            bitField0_ |= 0x00000001;
            victimSlot_ = value;
            onChanged();
            return this;
          }
          /**
           * <code>optional uint32 victim_slot = 1;</code>
           */
          public Builder clearVictimSlot() {
            bitField0_ = (bitField0_ & ~0x00000001);
            victimSlot_ = 0;
            onChanged();
            return this;
          }

          private int count_ ;
          /**
           * <code>optional uint32 count = 2;</code>
           */
          public boolean hasCount() {
            return ((bitField0_ & 0x00000002) == 0x00000002);
          }
          /**
           * <code>optional uint32 count = 2;</code>
           */
          public int getCount() {
            return count_;
          }
          /**
           * <code>optional uint32 count = 2;</code>
           */
          public Builder setCount(int value) {
            bitField0_ |= 0x00000002;
            count_ = value;
            onChanged();
            return this;
          }
          /**
           * <code>optional uint32 count = 2;</code>
           */
          public Builder clearCount() {
            bitField0_ = (bitField0_ & ~0x00000002);
            count_ = 0;
            onChanged();
            return this;
          }

          // @@protoc_insertion_point(builder_scope:CDOTAMatchMetadata.Team.PlayerKill)
        }

        static {
          defaultInstance = new PlayerKill(true);
          defaultInstance.initFields();
        }

        // @@protoc_insertion_point(class_scope:CDOTAMatchMetadata.Team.PlayerKill)
      }

      public interface PlayerOrBuilder extends
          // @@protoc_insertion_point(interface_extends:CDOTAMatchMetadata.Team.Player)
          com.google.protobuf.MessageOrBuilder {

        /**
         * <code>optional uint32 account_id = 1;</code>
         */
        boolean hasAccountId();
        /**
         * <code>optional uint32 account_id = 1;</code>
         */
        int getAccountId();

        /**
         * <code>repeated uint32 ability_upgrades = 2;</code>
         */
        java.util.List<java.lang.Integer> getAbilityUpgradesList();
        /**
         * <code>repeated uint32 ability_upgrades = 2;</code>
         */
        int getAbilityUpgradesCount();
        /**
         * <code>repeated uint32 ability_upgrades = 2;</code>
         */
        int getAbilityUpgrades(int index);

        /**
         * <code>optional uint32 player_slot = 3;</code>
         */
        boolean hasPlayerSlot();
        /**
         * <code>optional uint32 player_slot = 3;</code>
         */
        int getPlayerSlot();

        /**
         * <code>repeated .CSOEconItem equipped_econ_items = 4;</code>
         */
        java.util.List<skadistats.clarity.wire.s2.proto.S2BaseGcMessages.CSOEconItem> 
            getEquippedEconItemsList();
        /**
         * <code>repeated .CSOEconItem equipped_econ_items = 4;</code>
         */
        skadistats.clarity.wire.s2.proto.S2BaseGcMessages.CSOEconItem getEquippedEconItems(int index);
        /**
         * <code>repeated .CSOEconItem equipped_econ_items = 4;</code>
         */
        int getEquippedEconItemsCount();
        /**
         * <code>repeated .CSOEconItem equipped_econ_items = 4;</code>
         */
        java.util.List<? extends skadistats.clarity.wire.s2.proto.S2BaseGcMessages.CSOEconItemOrBuilder> 
            getEquippedEconItemsOrBuilderList();
        /**
         * <code>repeated .CSOEconItem equipped_econ_items = 4;</code>
         */
        skadistats.clarity.wire.s2.proto.S2BaseGcMessages.CSOEconItemOrBuilder getEquippedEconItemsOrBuilder(
            int index);

        /**
         * <code>repeated .CDOTAMatchMetadata.Team.PlayerKill kills = 5;</code>
         */
        java.util.List<skadistats.clarity.wire.s2.proto.S2DotaMatchMetadata.CDOTAMatchMetadata.Team.PlayerKill> 
            getKillsList();
        /**
         * <code>repeated .CDOTAMatchMetadata.Team.PlayerKill kills = 5;</code>
         */
        skadistats.clarity.wire.s2.proto.S2DotaMatchMetadata.CDOTAMatchMetadata.Team.PlayerKill getKills(int index);
        /**
         * <code>repeated .CDOTAMatchMetadata.Team.PlayerKill kills = 5;</code>
         */
        int getKillsCount();
        /**
         * <code>repeated .CDOTAMatchMetadata.Team.PlayerKill kills = 5;</code>
         */
        java.util.List<? extends skadistats.clarity.wire.s2.proto.S2DotaMatchMetadata.CDOTAMatchMetadata.Team.PlayerKillOrBuilder> 
            getKillsOrBuilderList();
        /**
         * <code>repeated .CDOTAMatchMetadata.Team.PlayerKill kills = 5;</code>
         */
        skadistats.clarity.wire.s2.proto.S2DotaMatchMetadata.CDOTAMatchMetadata.Team.PlayerKillOrBuilder getKillsOrBuilder(
            int index);
      }
      /**
       * Protobuf type {@code CDOTAMatchMetadata.Team.Player}
       */
      public static final class Player extends
          com.google.protobuf.GeneratedMessage implements
          // @@protoc_insertion_point(message_implements:CDOTAMatchMetadata.Team.Player)
          PlayerOrBuilder {
        // Use Player.newBuilder() to construct.
        private Player(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
          super(builder);
          this.unknownFields = builder.getUnknownFields();
        }
        private Player(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

        private static final Player defaultInstance;
        public static Player getDefaultInstance() {
          return defaultInstance;
        }

        public Player getDefaultInstanceForType() {
          return defaultInstance;
        }

        private final com.google.protobuf.UnknownFieldSet unknownFields;
        @java.lang.Override
        public final com.google.protobuf.UnknownFieldSet
            getUnknownFields() {
          return this.unknownFields;
        }
        private Player(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws com.google.protobuf.InvalidProtocolBufferException {
          initFields();
          int mutable_bitField0_ = 0;
          com.google.protobuf.UnknownFieldSet.Builder unknownFields =
              com.google.protobuf.UnknownFieldSet.newBuilder();
          try {
            boolean done = false;
            while (!done) {
              int tag = input.readTag();
              switch (tag) {
                case 0:
                  done = true;
                  break;
                default: {
                  if (!parseUnknownField(input, unknownFields,
                                         extensionRegistry, tag)) {
                    done = true;
                  }
                  break;
                }
                case 8: {
                  bitField0_ |= 0x00000001;
                  accountId_ = input.readUInt32();
                  break;
                }
                case 16: {
                  if (!((mutable_bitField0_ & 0x00000002) == 0x00000002)) {
                    abilityUpgrades_ = new java.util.ArrayList<java.lang.Integer>();
                    mutable_bitField0_ |= 0x00000002;
                  }
                  abilityUpgrades_.add(input.readUInt32());
                  break;
                }
                case 18: {
                  int length = input.readRawVarint32();
                  int limit = input.pushLimit(length);
                  if (!((mutable_bitField0_ & 0x00000002) == 0x00000002) && input.getBytesUntilLimit() > 0) {
                    abilityUpgrades_ = new java.util.ArrayList<java.lang.Integer>();
                    mutable_bitField0_ |= 0x00000002;
                  }
                  while (input.getBytesUntilLimit() > 0) {
                    abilityUpgrades_.add(input.readUInt32());
                  }
                  input.popLimit(limit);
                  break;
                }
                case 24: {
                  bitField0_ |= 0x00000002;
                  playerSlot_ = input.readUInt32();
                  break;
                }
                case 34: {
                  if (!((mutable_bitField0_ & 0x00000008) == 0x00000008)) {
                    equippedEconItems_ = new java.util.ArrayList<skadistats.clarity.wire.s2.proto.S2BaseGcMessages.CSOEconItem>();
                    mutable_bitField0_ |= 0x00000008;
                  }
                  equippedEconItems_.add(input.readMessage(skadistats.clarity.wire.s2.proto.S2BaseGcMessages.CSOEconItem.PARSER, extensionRegistry));
                  break;
                }
                case 42: {
                  if (!((mutable_bitField0_ & 0x00000010) == 0x00000010)) {
                    kills_ = new java.util.ArrayList<skadistats.clarity.wire.s2.proto.S2DotaMatchMetadata.CDOTAMatchMetadata.Team.PlayerKill>();
                    mutable_bitField0_ |= 0x00000010;
                  }
                  kills_.add(input.readMessage(skadistats.clarity.wire.s2.proto.S2DotaMatchMetadata.CDOTAMatchMetadata.Team.PlayerKill.PARSER, extensionRegistry));
                  break;
                }
              }
            }
          } catch (com.google.protobuf.InvalidProtocolBufferException e) {
            throw e.setUnfinishedMessage(this);
          } catch (java.io.IOException e) {
            throw new com.google.protobuf.InvalidProtocolBufferException(
                e.getMessage()).setUnfinishedMessage(this);
          } finally {
            if (((mutable_bitField0_ & 0x00000002) == 0x00000002)) {
              abilityUpgrades_ = java.util.Collections.unmodifiableList(abilityUpgrades_);
            }
            if (((mutable_bitField0_ & 0x00000008) == 0x00000008)) {
              equippedEconItems_ = java.util.Collections.unmodifiableList(equippedEconItems_);
            }
            if (((mutable_bitField0_ & 0x00000010) == 0x00000010)) {
              kills_ = java.util.Collections.unmodifiableList(kills_);
            }
            this.unknownFields = unknownFields.build();
            makeExtensionsImmutable();
          }
        }
        public static final com.google.protobuf.Descriptors.Descriptor
            getDescriptor() {
          return skadistats.clarity.wire.s2.proto.S2DotaMatchMetadata.internal_static_CDOTAMatchMetadata_Team_Player_descriptor;
        }

        protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
            internalGetFieldAccessorTable() {
          return skadistats.clarity.wire.s2.proto.S2DotaMatchMetadata.internal_static_CDOTAMatchMetadata_Team_Player_fieldAccessorTable
              .ensureFieldAccessorsInitialized(
                  skadistats.clarity.wire.s2.proto.S2DotaMatchMetadata.CDOTAMatchMetadata.Team.Player.class, skadistats.clarity.wire.s2.proto.S2DotaMatchMetadata.CDOTAMatchMetadata.Team.Player.Builder.class);
        }

        public static com.google.protobuf.Parser<Player> PARSER =
            new com.google.protobuf.AbstractParser<Player>() {
          public Player parsePartialFrom(
              com.google.protobuf.CodedInputStream input,
              com.google.protobuf.ExtensionRegistryLite extensionRegistry)
              throws com.google.protobuf.InvalidProtocolBufferException {
            return new Player(input, extensionRegistry);
          }
        };

        @java.lang.Override
        public com.google.protobuf.Parser<Player> getParserForType() {
          return PARSER;
        }

        private int bitField0_;
        public static final int ACCOUNT_ID_FIELD_NUMBER = 1;
        private int accountId_;
        /**
         * <code>optional uint32 account_id = 1;</code>
         */
        public boolean hasAccountId() {
          return ((bitField0_ & 0x00000001) == 0x00000001);
        }
        /**
         * <code>optional uint32 account_id = 1;</code>
         */
        public int getAccountId() {
          return accountId_;
        }

        public static final int ABILITY_UPGRADES_FIELD_NUMBER = 2;
        private java.util.List<java.lang.Integer> abilityUpgrades_;
        /**
         * <code>repeated uint32 ability_upgrades = 2;</code>
         */
        public java.util.List<java.lang.Integer>
            getAbilityUpgradesList() {
          return abilityUpgrades_;
        }
        /**
         * <code>repeated uint32 ability_upgrades = 2;</code>
         */
        public int getAbilityUpgradesCount() {
          return abilityUpgrades_.size();
        }
        /**
         * <code>repeated uint32 ability_upgrades = 2;</code>
         */
        public int getAbilityUpgrades(int index) {
          return abilityUpgrades_.get(index);
        }

        public static final int PLAYER_SLOT_FIELD_NUMBER = 3;
        private int playerSlot_;
        /**
         * <code>optional uint32 player_slot = 3;</code>
         */
        public boolean hasPlayerSlot() {
          return ((bitField0_ & 0x00000002) == 0x00000002);
        }
        /**
         * <code>optional uint32 player_slot = 3;</code>
         */
        public int getPlayerSlot() {
          return playerSlot_;
        }

        public static final int EQUIPPED_ECON_ITEMS_FIELD_NUMBER = 4;
        private java.util.List<skadistats.clarity.wire.s2.proto.S2BaseGcMessages.CSOEconItem> equippedEconItems_;
        /**
         * <code>repeated .CSOEconItem equipped_econ_items = 4;</code>
         */
        public java.util.List<skadistats.clarity.wire.s2.proto.S2BaseGcMessages.CSOEconItem> getEquippedEconItemsList() {
          return equippedEconItems_;
        }
        /**
         * <code>repeated .CSOEconItem equipped_econ_items = 4;</code>
         */
        public java.util.List<? extends skadistats.clarity.wire.s2.proto.S2BaseGcMessages.CSOEconItemOrBuilder> 
            getEquippedEconItemsOrBuilderList() {
          return equippedEconItems_;
        }
        /**
         * <code>repeated .CSOEconItem equipped_econ_items = 4;</code>
         */
        public int getEquippedEconItemsCount() {
          return equippedEconItems_.size();
        }
        /**
         * <code>repeated .CSOEconItem equipped_econ_items = 4;</code>
         */
        public skadistats.clarity.wire.s2.proto.S2BaseGcMessages.CSOEconItem getEquippedEconItems(int index) {
          return equippedEconItems_.get(index);
        }
        /**
         * <code>repeated .CSOEconItem equipped_econ_items = 4;</code>
         */
        public skadistats.clarity.wire.s2.proto.S2BaseGcMessages.CSOEconItemOrBuilder getEquippedEconItemsOrBuilder(
            int index) {
          return equippedEconItems_.get(index);
        }

        public static final int KILLS_FIELD_NUMBER = 5;
        private java.util.List<skadistats.clarity.wire.s2.proto.S2DotaMatchMetadata.CDOTAMatchMetadata.Team.PlayerKill> kills_;
        /**
         * <code>repeated .CDOTAMatchMetadata.Team.PlayerKill kills = 5;</code>
         */
        public java.util.List<skadistats.clarity.wire.s2.proto.S2DotaMatchMetadata.CDOTAMatchMetadata.Team.PlayerKill> getKillsList() {
          return kills_;
        }
        /**
         * <code>repeated .CDOTAMatchMetadata.Team.PlayerKill kills = 5;</code>
         */
        public java.util.List<? extends skadistats.clarity.wire.s2.proto.S2DotaMatchMetadata.CDOTAMatchMetadata.Team.PlayerKillOrBuilder> 
            getKillsOrBuilderList() {
          return kills_;
        }
        /**
         * <code>repeated .CDOTAMatchMetadata.Team.PlayerKill kills = 5;</code>
         */
        public int getKillsCount() {
          return kills_.size();
        }
        /**
         * <code>repeated .CDOTAMatchMetadata.Team.PlayerKill kills = 5;</code>
         */
        public skadistats.clarity.wire.s2.proto.S2DotaMatchMetadata.CDOTAMatchMetadata.Team.PlayerKill getKills(int index) {
          return kills_.get(index);
        }
        /**
         * <code>repeated .CDOTAMatchMetadata.Team.PlayerKill kills = 5;</code>
         */
        public skadistats.clarity.wire.s2.proto.S2DotaMatchMetadata.CDOTAMatchMetadata.Team.PlayerKillOrBuilder getKillsOrBuilder(
            int index) {
          return kills_.get(index);
        }

        private void initFields() {
          accountId_ = 0;
          abilityUpgrades_ = java.util.Collections.emptyList();
          playerSlot_ = 0;
          equippedEconItems_ = java.util.Collections.emptyList();
          kills_ = java.util.Collections.emptyList();
        }
        private byte memoizedIsInitialized = -1;
        public final boolean isInitialized() {
          byte isInitialized = memoizedIsInitialized;
          if (isInitialized == 1) return true;
          if (isInitialized == 0) return false;

          memoizedIsInitialized = 1;
          return true;
        }

        public void writeTo(com.google.protobuf.CodedOutputStream output)
                            throws java.io.IOException {
          getSerializedSize();
          if (((bitField0_ & 0x00000001) == 0x00000001)) {
            output.writeUInt32(1, accountId_);
          }
          for (int i = 0; i < abilityUpgrades_.size(); i++) {
            output.writeUInt32(2, abilityUpgrades_.get(i));
          }
          if (((bitField0_ & 0x00000002) == 0x00000002)) {
            output.writeUInt32(3, playerSlot_);
          }
          for (int i = 0; i < equippedEconItems_.size(); i++) {
            output.writeMessage(4, equippedEconItems_.get(i));
          }
          for (int i = 0; i < kills_.size(); i++) {
            output.writeMessage(5, kills_.get(i));
          }
          getUnknownFields().writeTo(output);
        }

        private int memoizedSerializedSize = -1;
        public int getSerializedSize() {
          int size = memoizedSerializedSize;
          if (size != -1) return size;

          size = 0;
          if (((bitField0_ & 0x00000001) == 0x00000001)) {
            size += com.google.protobuf.CodedOutputStream
              .computeUInt32Size(1, accountId_);
          }
          {
            int dataSize = 0;
            for (int i = 0; i < abilityUpgrades_.size(); i++) {
              dataSize += com.google.protobuf.CodedOutputStream
                .computeUInt32SizeNoTag(abilityUpgrades_.get(i));
            }
            size += dataSize;
            size += 1 * getAbilityUpgradesList().size();
          }
          if (((bitField0_ & 0x00000002) == 0x00000002)) {
            size += com.google.protobuf.CodedOutputStream
              .computeUInt32Size(3, playerSlot_);
          }
          for (int i = 0; i < equippedEconItems_.size(); i++) {
            size += com.google.protobuf.CodedOutputStream
              .computeMessageSize(4, equippedEconItems_.get(i));
          }
          for (int i = 0; i < kills_.size(); i++) {
            size += com.google.protobuf.CodedOutputStream
              .computeMessageSize(5, kills_.get(i));
          }
          size += getUnknownFields().getSerializedSize();
          memoizedSerializedSize = size;
          return size;
        }

        private static final long serialVersionUID = 0L;
        @java.lang.Override
        protected java.lang.Object writeReplace()
            throws java.io.ObjectStreamException {
          return super.writeReplace();
        }

        public static skadistats.clarity.wire.s2.proto.S2DotaMatchMetadata.CDOTAMatchMetadata.Team.Player parseFrom(
            com.google.protobuf.ByteString data)
            throws com.google.protobuf.InvalidProtocolBufferException {
          return PARSER.parseFrom(data);
        }
        public static skadistats.clarity.wire.s2.proto.S2DotaMatchMetadata.CDOTAMatchMetadata.Team.Player parseFrom(
            com.google.protobuf.ByteString data,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws com.google.protobuf.InvalidProtocolBufferException {
          return PARSER.parseFrom(data, extensionRegistry);
        }
        public static skadistats.clarity.wire.s2.proto.S2DotaMatchMetadata.CDOTAMatchMetadata.Team.Player parseFrom(byte[] data)
            throws com.google.protobuf.InvalidProtocolBufferException {
          return PARSER.parseFrom(data);
        }
        public static skadistats.clarity.wire.s2.proto.S2DotaMatchMetadata.CDOTAMatchMetadata.Team.Player parseFrom(
            byte[] data,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws com.google.protobuf.InvalidProtocolBufferException {
          return PARSER.parseFrom(data, extensionRegistry);
        }
        public static skadistats.clarity.wire.s2.proto.S2DotaMatchMetadata.CDOTAMatchMetadata.Team.Player parseFrom(java.io.InputStream input)
            throws java.io.IOException {
          return PARSER.parseFrom(input);
        }
        public static skadistats.clarity.wire.s2.proto.S2DotaMatchMetadata.CDOTAMatchMetadata.Team.Player parseFrom(
            java.io.InputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws java.io.IOException {
          return PARSER.parseFrom(input, extensionRegistry);
        }
        public static skadistats.clarity.wire.s2.proto.S2DotaMatchMetadata.CDOTAMatchMetadata.Team.Player parseDelimitedFrom(java.io.InputStream input)
            throws java.io.IOException {
          return PARSER.parseDelimitedFrom(input);
        }
        public static skadistats.clarity.wire.s2.proto.S2DotaMatchMetadata.CDOTAMatchMetadata.Team.Player parseDelimitedFrom(
            java.io.InputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws java.io.IOException {
          return PARSER.parseDelimitedFrom(input, extensionRegistry);
        }
        public static skadistats.clarity.wire.s2.proto.S2DotaMatchMetadata.CDOTAMatchMetadata.Team.Player parseFrom(
            com.google.protobuf.CodedInputStream input)
            throws java.io.IOException {
          return PARSER.parseFrom(input);
        }
        public static skadistats.clarity.wire.s2.proto.S2DotaMatchMetadata.CDOTAMatchMetadata.Team.Player parseFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws java.io.IOException {
          return PARSER.parseFrom(input, extensionRegistry);
        }

        public static Builder newBuilder() { return Builder.create(); }
        public Builder newBuilderForType() { return newBuilder(); }
        public static Builder newBuilder(skadistats.clarity.wire.s2.proto.S2DotaMatchMetadata.CDOTAMatchMetadata.Team.Player prototype) {
          return newBuilder().mergeFrom(prototype);
        }
        public Builder toBuilder() { return newBuilder(this); }

        @java.lang.Override
        protected Builder newBuilderForType(
            com.google.protobuf.GeneratedMessage.BuilderParent parent) {
          Builder builder = new Builder(parent);
          return builder;
        }
        /**
         * Protobuf type {@code CDOTAMatchMetadata.Team.Player}
         */
        public static final class Builder extends
            com.google.protobuf.GeneratedMessage.Builder<Builder> implements
            // @@protoc_insertion_point(builder_implements:CDOTAMatchMetadata.Team.Player)
            skadistats.clarity.wire.s2.proto.S2DotaMatchMetadata.CDOTAMatchMetadata.Team.PlayerOrBuilder {
          public static final com.google.protobuf.Descriptors.Descriptor
              getDescriptor() {
            return skadistats.clarity.wire.s2.proto.S2DotaMatchMetadata.internal_static_CDOTAMatchMetadata_Team_Player_descriptor;
          }

          protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
              internalGetFieldAccessorTable() {
            return skadistats.clarity.wire.s2.proto.S2DotaMatchMetadata.internal_static_CDOTAMatchMetadata_Team_Player_fieldAccessorTable
                .ensureFieldAccessorsInitialized(
                    skadistats.clarity.wire.s2.proto.S2DotaMatchMetadata.CDOTAMatchMetadata.Team.Player.class, skadistats.clarity.wire.s2.proto.S2DotaMatchMetadata.CDOTAMatchMetadata.Team.Player.Builder.class);
          }

          // Construct using skadistats.clarity.wire.s2.proto.S2DotaMatchMetadata.CDOTAMatchMetadata.Team.Player.newBuilder()
          private Builder() {
            maybeForceBuilderInitialization();
          }

          private Builder(
              com.google.protobuf.GeneratedMessage.BuilderParent parent) {
            super(parent);
            maybeForceBuilderInitialization();
          }
          private void maybeForceBuilderInitialization() {
            if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
              getEquippedEconItemsFieldBuilder();
              getKillsFieldBuilder();
            }
          }
          private static Builder create() {
            return new Builder();
          }

          public Builder clear() {
            super.clear();
            accountId_ = 0;
            bitField0_ = (bitField0_ & ~0x00000001);
            abilityUpgrades_ = java.util.Collections.emptyList();
            bitField0_ = (bitField0_ & ~0x00000002);
            playerSlot_ = 0;
            bitField0_ = (bitField0_ & ~0x00000004);
            if (equippedEconItemsBuilder_ == null) {
              equippedEconItems_ = java.util.Collections.emptyList();
              bitField0_ = (bitField0_ & ~0x00000008);
            } else {
              equippedEconItemsBuilder_.clear();
            }
            if (killsBuilder_ == null) {
              kills_ = java.util.Collections.emptyList();
              bitField0_ = (bitField0_ & ~0x00000010);
            } else {
              killsBuilder_.clear();
            }
            return this;
          }

          public Builder clone() {
            return create().mergeFrom(buildPartial());
          }

          public com.google.protobuf.Descriptors.Descriptor
              getDescriptorForType() {
            return skadistats.clarity.wire.s2.proto.S2DotaMatchMetadata.internal_static_CDOTAMatchMetadata_Team_Player_descriptor;
          }

          public skadistats.clarity.wire.s2.proto.S2DotaMatchMetadata.CDOTAMatchMetadata.Team.Player getDefaultInstanceForType() {
            return skadistats.clarity.wire.s2.proto.S2DotaMatchMetadata.CDOTAMatchMetadata.Team.Player.getDefaultInstance();
          }

          public skadistats.clarity.wire.s2.proto.S2DotaMatchMetadata.CDOTAMatchMetadata.Team.Player build() {
            skadistats.clarity.wire.s2.proto.S2DotaMatchMetadata.CDOTAMatchMetadata.Team.Player result = buildPartial();
            if (!result.isInitialized()) {
              throw newUninitializedMessageException(result);
            }
            return result;
          }

          public skadistats.clarity.wire.s2.proto.S2DotaMatchMetadata.CDOTAMatchMetadata.Team.Player buildPartial() {
            skadistats.clarity.wire.s2.proto.S2DotaMatchMetadata.CDOTAMatchMetadata.Team.Player result = new skadistats.clarity.wire.s2.proto.S2DotaMatchMetadata.CDOTAMatchMetadata.Team.Player(this);
            int from_bitField0_ = bitField0_;
            int to_bitField0_ = 0;
            if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
              to_bitField0_ |= 0x00000001;
            }
            result.accountId_ = accountId_;
            if (((bitField0_ & 0x00000002) == 0x00000002)) {
              abilityUpgrades_ = java.util.Collections.unmodifiableList(abilityUpgrades_);
              bitField0_ = (bitField0_ & ~0x00000002);
            }
            result.abilityUpgrades_ = abilityUpgrades_;
            if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
              to_bitField0_ |= 0x00000002;
            }
            result.playerSlot_ = playerSlot_;
            if (equippedEconItemsBuilder_ == null) {
              if (((bitField0_ & 0x00000008) == 0x00000008)) {
                equippedEconItems_ = java.util.Collections.unmodifiableList(equippedEconItems_);
                bitField0_ = (bitField0_ & ~0x00000008);
              }
              result.equippedEconItems_ = equippedEconItems_;
            } else {
              result.equippedEconItems_ = equippedEconItemsBuilder_.build();
            }
            if (killsBuilder_ == null) {
              if (((bitField0_ & 0x00000010) == 0x00000010)) {
                kills_ = java.util.Collections.unmodifiableList(kills_);
                bitField0_ = (bitField0_ & ~0x00000010);
              }
              result.kills_ = kills_;
            } else {
              result.kills_ = killsBuilder_.build();
            }
            result.bitField0_ = to_bitField0_;
            onBuilt();
            return result;
          }

          public Builder mergeFrom(com.google.protobuf.Message other) {
            if (other instanceof skadistats.clarity.wire.s2.proto.S2DotaMatchMetadata.CDOTAMatchMetadata.Team.Player) {
              return mergeFrom((skadistats.clarity.wire.s2.proto.S2DotaMatchMetadata.CDOTAMatchMetadata.Team.Player)other);
            } else {
              super.mergeFrom(other);
              return this;
            }
          }

          public Builder mergeFrom(skadistats.clarity.wire.s2.proto.S2DotaMatchMetadata.CDOTAMatchMetadata.Team.Player other) {
            if (other == skadistats.clarity.wire.s2.proto.S2DotaMatchMetadata.CDOTAMatchMetadata.Team.Player.getDefaultInstance()) return this;
            if (other.hasAccountId()) {
              setAccountId(other.getAccountId());
            }
            if (!other.abilityUpgrades_.isEmpty()) {
              if (abilityUpgrades_.isEmpty()) {
                abilityUpgrades_ = other.abilityUpgrades_;
                bitField0_ = (bitField0_ & ~0x00000002);
              } else {
                ensureAbilityUpgradesIsMutable();
                abilityUpgrades_.addAll(other.abilityUpgrades_);
              }
              onChanged();
            }
            if (other.hasPlayerSlot()) {
              setPlayerSlot(other.getPlayerSlot());
            }
            if (equippedEconItemsBuilder_ == null) {
              if (!other.equippedEconItems_.isEmpty()) {
                if (equippedEconItems_.isEmpty()) {
                  equippedEconItems_ = other.equippedEconItems_;
                  bitField0_ = (bitField0_ & ~0x00000008);
                } else {
                  ensureEquippedEconItemsIsMutable();
                  equippedEconItems_.addAll(other.equippedEconItems_);
                }
                onChanged();
              }
            } else {
              if (!other.equippedEconItems_.isEmpty()) {
                if (equippedEconItemsBuilder_.isEmpty()) {
                  equippedEconItemsBuilder_.dispose();
                  equippedEconItemsBuilder_ = null;
                  equippedEconItems_ = other.equippedEconItems_;
                  bitField0_ = (bitField0_ & ~0x00000008);
                  equippedEconItemsBuilder_ = 
                    com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders ?
                       getEquippedEconItemsFieldBuilder() : null;
                } else {
                  equippedEconItemsBuilder_.addAllMessages(other.equippedEconItems_);
                }
              }
            }
            if (killsBuilder_ == null) {
              if (!other.kills_.isEmpty()) {
                if (kills_.isEmpty()) {
                  kills_ = other.kills_;
                  bitField0_ = (bitField0_ & ~0x00000010);
                } else {
                  ensureKillsIsMutable();
                  kills_.addAll(other.kills_);
                }
                onChanged();
              }
            } else {
              if (!other.kills_.isEmpty()) {
                if (killsBuilder_.isEmpty()) {
                  killsBuilder_.dispose();
                  killsBuilder_ = null;
                  kills_ = other.kills_;
                  bitField0_ = (bitField0_ & ~0x00000010);
                  killsBuilder_ = 
                    com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders ?
                       getKillsFieldBuilder() : null;
                } else {
                  killsBuilder_.addAllMessages(other.kills_);
                }
              }
            }
            this.mergeUnknownFields(other.getUnknownFields());
            return this;
          }

          public final boolean isInitialized() {
            return true;
          }

          public Builder mergeFrom(
              com.google.protobuf.CodedInputStream input,
              com.google.protobuf.ExtensionRegistryLite extensionRegistry)
              throws java.io.IOException {
            skadistats.clarity.wire.s2.proto.S2DotaMatchMetadata.CDOTAMatchMetadata.Team.Player parsedMessage = null;
            try {
              parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
            } catch (com.google.protobuf.InvalidProtocolBufferException e) {
              parsedMessage = (skadistats.clarity.wire.s2.proto.S2DotaMatchMetadata.CDOTAMatchMetadata.Team.Player) e.getUnfinishedMessage();
              throw e;
            } finally {
              if (parsedMessage != null) {
                mergeFrom(parsedMessage);
              }
            }
            return this;
          }
          private int bitField0_;

          private int accountId_ ;
          /**
           * <code>optional uint32 account_id = 1;</code>
           */
          public boolean hasAccountId() {
            return ((bitField0_ & 0x00000001) == 0x00000001);
          }
          /**
           * <code>optional uint32 account_id = 1;</code>
           */
          public int getAccountId() {
            return accountId_;
          }
          /**
           * <code>optional uint32 account_id = 1;</code>
           */
          public Builder setAccountId(int value) {
            bitField0_ |= 0x00000001;
            accountId_ = value;
            onChanged();
            return this;
          }
          /**
           * <code>optional uint32 account_id = 1;</code>
           */
          public Builder clearAccountId() {
            bitField0_ = (bitField0_ & ~0x00000001);
            accountId_ = 0;
            onChanged();
            return this;
          }

          private java.util.List<java.lang.Integer> abilityUpgrades_ = java.util.Collections.emptyList();
          private void ensureAbilityUpgradesIsMutable() {
            if (!((bitField0_ & 0x00000002) == 0x00000002)) {
              abilityUpgrades_ = new java.util.ArrayList<java.lang.Integer>(abilityUpgrades_);
              bitField0_ |= 0x00000002;
             }
          }
          /**
           * <code>repeated uint32 ability_upgrades = 2;</code>
           */
          public java.util.List<java.lang.Integer>
              getAbilityUpgradesList() {
            return java.util.Collections.unmodifiableList(abilityUpgrades_);
          }
          /**
           * <code>repeated uint32 ability_upgrades = 2;</code>
           */
          public int getAbilityUpgradesCount() {
            return abilityUpgrades_.size();
          }
          /**
           * <code>repeated uint32 ability_upgrades = 2;</code>
           */
          public int getAbilityUpgrades(int index) {
            return abilityUpgrades_.get(index);
          }
          /**
           * <code>repeated uint32 ability_upgrades = 2;</code>
           */
          public Builder setAbilityUpgrades(
              int index, int value) {
            ensureAbilityUpgradesIsMutable();
            abilityUpgrades_.set(index, value);
            onChanged();
            return this;
          }
          /**
           * <code>repeated uint32 ability_upgrades = 2;</code>
           */
          public Builder addAbilityUpgrades(int value) {
            ensureAbilityUpgradesIsMutable();
            abilityUpgrades_.add(value);
            onChanged();
            return this;
          }
          /**
           * <code>repeated uint32 ability_upgrades = 2;</code>
           */
          public Builder addAllAbilityUpgrades(
              java.lang.Iterable<? extends java.lang.Integer> values) {
            ensureAbilityUpgradesIsMutable();
            com.google.protobuf.AbstractMessageLite.Builder.addAll(
                values, abilityUpgrades_);
            onChanged();
            return this;
          }
          /**
           * <code>repeated uint32 ability_upgrades = 2;</code>
           */
          public Builder clearAbilityUpgrades() {
            abilityUpgrades_ = java.util.Collections.emptyList();
            bitField0_ = (bitField0_ & ~0x00000002);
            onChanged();
            return this;
          }

          private int playerSlot_ ;
          /**
           * <code>optional uint32 player_slot = 3;</code>
           */
          public boolean hasPlayerSlot() {
            return ((bitField0_ & 0x00000004) == 0x00000004);
          }
          /**
           * <code>optional uint32 player_slot = 3;</code>
           */
          public int getPlayerSlot() {
            return playerSlot_;
          }
          /**
           * <code>optional uint32 player_slot = 3;</code>
           */
          public Builder setPlayerSlot(int value) {
            bitField0_ |= 0x00000004;
            playerSlot_ = value;
            onChanged();
            return this;
          }
          /**
           * <code>optional uint32 player_slot = 3;</code>
           */
          public Builder clearPlayerSlot() {
            bitField0_ = (bitField0_ & ~0x00000004);
            playerSlot_ = 0;
            onChanged();
            return this;
          }

          private java.util.List<skadistats.clarity.wire.s2.proto.S2BaseGcMessages.CSOEconItem> equippedEconItems_ =
            java.util.Collections.emptyList();
          private void ensureEquippedEconItemsIsMutable() {
            if (!((bitField0_ & 0x00000008) == 0x00000008)) {
              equippedEconItems_ = new java.util.ArrayList<skadistats.clarity.wire.s2.proto.S2BaseGcMessages.CSOEconItem>(equippedEconItems_);
              bitField0_ |= 0x00000008;
             }
          }

          private com.google.protobuf.RepeatedFieldBuilder<
              skadistats.clarity.wire.s2.proto.S2BaseGcMessages.CSOEconItem, skadistats.clarity.wire.s2.proto.S2BaseGcMessages.CSOEconItem.Builder, skadistats.clarity.wire.s2.proto.S2BaseGcMessages.CSOEconItemOrBuilder> equippedEconItemsBuilder_;

          /**
           * <code>repeated .CSOEconItem equipped_econ_items = 4;</code>
           */
          public java.util.List<skadistats.clarity.wire.s2.proto.S2BaseGcMessages.CSOEconItem> getEquippedEconItemsList() {
            if (equippedEconItemsBuilder_ == null) {
              return java.util.Collections.unmodifiableList(equippedEconItems_);
            } else {
              return equippedEconItemsBuilder_.getMessageList();
            }
          }
          /**
           * <code>repeated .CSOEconItem equipped_econ_items = 4;</code>
           */
          public int getEquippedEconItemsCount() {
            if (equippedEconItemsBuilder_ == null) {
              return equippedEconItems_.size();
            } else {
              return equippedEconItemsBuilder_.getCount();
            }
          }
          /**
           * <code>repeated .CSOEconItem equipped_econ_items = 4;</code>
           */
          public skadistats.clarity.wire.s2.proto.S2BaseGcMessages.CSOEconItem getEquippedEconItems(int index) {
            if (equippedEconItemsBuilder_ == null) {
              return equippedEconItems_.get(index);
            } else {
              return equippedEconItemsBuilder_.getMessage(index);
            }
          }
          /**
           * <code>repeated .CSOEconItem equipped_econ_items = 4;</code>
           */
          public Builder setEquippedEconItems(
              int index, skadistats.clarity.wire.s2.proto.S2BaseGcMessages.CSOEconItem value) {
            if (equippedEconItemsBuilder_ == null) {
              if (value == null) {
                throw new NullPointerException();
              }
              ensureEquippedEconItemsIsMutable();
              equippedEconItems_.set(index, value);
              onChanged();
            } else {
              equippedEconItemsBuilder_.setMessage(index, value);
            }
            return this;
          }
          /**
           * <code>repeated .CSOEconItem equipped_econ_items = 4;</code>
           */
          public Builder setEquippedEconItems(
              int index, skadistats.clarity.wire.s2.proto.S2BaseGcMessages.CSOEconItem.Builder builderForValue) {
            if (equippedEconItemsBuilder_ == null) {
              ensureEquippedEconItemsIsMutable();
              equippedEconItems_.set(index, builderForValue.build());
              onChanged();
            } else {
              equippedEconItemsBuilder_.setMessage(index, builderForValue.build());
            }
            return this;
          }
          /**
           * <code>repeated .CSOEconItem equipped_econ_items = 4;</code>
           */
          public Builder addEquippedEconItems(skadistats.clarity.wire.s2.proto.S2BaseGcMessages.CSOEconItem value) {
            if (equippedEconItemsBuilder_ == null) {
              if (value == null) {
                throw new NullPointerException();
              }
              ensureEquippedEconItemsIsMutable();
              equippedEconItems_.add(value);
              onChanged();
            } else {
              equippedEconItemsBuilder_.addMessage(value);
            }
            return this;
          }
          /**
           * <code>repeated .CSOEconItem equipped_econ_items = 4;</code>
           */
          public Builder addEquippedEconItems(
              int index, skadistats.clarity.wire.s2.proto.S2BaseGcMessages.CSOEconItem value) {
            if (equippedEconItemsBuilder_ == null) {
              if (value == null) {
                throw new NullPointerException();
              }
              ensureEquippedEconItemsIsMutable();
              equippedEconItems_.add(index, value);
              onChanged();
            } else {
              equippedEconItemsBuilder_.addMessage(index, value);
            }
            return this;
          }
          /**
           * <code>repeated .CSOEconItem equipped_econ_items = 4;</code>
           */
          public Builder addEquippedEconItems(
              skadistats.clarity.wire.s2.proto.S2BaseGcMessages.CSOEconItem.Builder builderForValue) {
            if (equippedEconItemsBuilder_ == null) {
              ensureEquippedEconItemsIsMutable();
              equippedEconItems_.add(builderForValue.build());
              onChanged();
            } else {
              equippedEconItemsBuilder_.addMessage(builderForValue.build());
            }
            return this;
          }
          /**
           * <code>repeated .CSOEconItem equipped_econ_items = 4;</code>
           */
          public Builder addEquippedEconItems(
              int index, skadistats.clarity.wire.s2.proto.S2BaseGcMessages.CSOEconItem.Builder builderForValue) {
            if (equippedEconItemsBuilder_ == null) {
              ensureEquippedEconItemsIsMutable();
              equippedEconItems_.add(index, builderForValue.build());
              onChanged();
            } else {
              equippedEconItemsBuilder_.addMessage(index, builderForValue.build());
            }
            return this;
          }
          /**
           * <code>repeated .CSOEconItem equipped_econ_items = 4;</code>
           */
          public Builder addAllEquippedEconItems(
              java.lang.Iterable<? extends skadistats.clarity.wire.s2.proto.S2BaseGcMessages.CSOEconItem> values) {
            if (equippedEconItemsBuilder_ == null) {
              ensureEquippedEconItemsIsMutable();
              com.google.protobuf.AbstractMessageLite.Builder.addAll(
                  values, equippedEconItems_);
              onChanged();
            } else {
              equippedEconItemsBuilder_.addAllMessages(values);
            }
            return this;
          }
          /**
           * <code>repeated .CSOEconItem equipped_econ_items = 4;</code>
           */
          public Builder clearEquippedEconItems() {
            if (equippedEconItemsBuilder_ == null) {
              equippedEconItems_ = java.util.Collections.emptyList();
              bitField0_ = (bitField0_ & ~0x00000008);
              onChanged();
            } else {
              equippedEconItemsBuilder_.clear();
            }
            return this;
          }
          /**
           * <code>repeated .CSOEconItem equipped_econ_items = 4;</code>
           */
          public Builder removeEquippedEconItems(int index) {
            if (equippedEconItemsBuilder_ == null) {
              ensureEquippedEconItemsIsMutable();
              equippedEconItems_.remove(index);
              onChanged();
            } else {
              equippedEconItemsBuilder_.remove(index);
            }
            return this;
          }
          /**
           * <code>repeated .CSOEconItem equipped_econ_items = 4;</code>
           */
          public skadistats.clarity.wire.s2.proto.S2BaseGcMessages.CSOEconItem.Builder getEquippedEconItemsBuilder(
              int index) {
            return getEquippedEconItemsFieldBuilder().getBuilder(index);
          }
          /**
           * <code>repeated .CSOEconItem equipped_econ_items = 4;</code>
           */
          public skadistats.clarity.wire.s2.proto.S2BaseGcMessages.CSOEconItemOrBuilder getEquippedEconItemsOrBuilder(
              int index) {
            if (equippedEconItemsBuilder_ == null) {
              return equippedEconItems_.get(index);  } else {
              return equippedEconItemsBuilder_.getMessageOrBuilder(index);
            }
          }
          /**
           * <code>repeated .CSOEconItem equipped_econ_items = 4;</code>
           */
          public java.util.List<? extends skadistats.clarity.wire.s2.proto.S2BaseGcMessages.CSOEconItemOrBuilder> 
               getEquippedEconItemsOrBuilderList() {
            if (equippedEconItemsBuilder_ != null) {
              return equippedEconItemsBuilder_.getMessageOrBuilderList();
            } else {
              return java.util.Collections.unmodifiableList(equippedEconItems_);
            }
          }
          /**
           * <code>repeated .CSOEconItem equipped_econ_items = 4;</code>
           */
          public skadistats.clarity.wire.s2.proto.S2BaseGcMessages.CSOEconItem.Builder addEquippedEconItemsBuilder() {
            return getEquippedEconItemsFieldBuilder().addBuilder(
                skadistats.clarity.wire.s2.proto.S2BaseGcMessages.CSOEconItem.getDefaultInstance());
          }
          /**
           * <code>repeated .CSOEconItem equipped_econ_items = 4;</code>
           */
          public skadistats.clarity.wire.s2.proto.S2BaseGcMessages.CSOEconItem.Builder addEquippedEconItemsBuilder(
              int index) {
            return getEquippedEconItemsFieldBuilder().addBuilder(
                index, skadistats.clarity.wire.s2.proto.S2BaseGcMessages.CSOEconItem.getDefaultInstance());
          }
          /**
           * <code>repeated .CSOEconItem equipped_econ_items = 4;</code>
           */
          public java.util.List<skadistats.clarity.wire.s2.proto.S2BaseGcMessages.CSOEconItem.Builder> 
               getEquippedEconItemsBuilderList() {
            return getEquippedEconItemsFieldBuilder().getBuilderList();
          }
          private com.google.protobuf.RepeatedFieldBuilder<
              skadistats.clarity.wire.s2.proto.S2BaseGcMessages.CSOEconItem, skadistats.clarity.wire.s2.proto.S2BaseGcMessages.CSOEconItem.Builder, skadistats.clarity.wire.s2.proto.S2BaseGcMessages.CSOEconItemOrBuilder> 
              getEquippedEconItemsFieldBuilder() {
            if (equippedEconItemsBuilder_ == null) {
              equippedEconItemsBuilder_ = new com.google.protobuf.RepeatedFieldBuilder<
                  skadistats.clarity.wire.s2.proto.S2BaseGcMessages.CSOEconItem, skadistats.clarity.wire.s2.proto.S2BaseGcMessages.CSOEconItem.Builder, skadistats.clarity.wire.s2.proto.S2BaseGcMessages.CSOEconItemOrBuilder>(
                      equippedEconItems_,
                      ((bitField0_ & 0x00000008) == 0x00000008),
                      getParentForChildren(),
                      isClean());
              equippedEconItems_ = null;
            }
            return equippedEconItemsBuilder_;
          }

          private java.util.List<skadistats.clarity.wire.s2.proto.S2DotaMatchMetadata.CDOTAMatchMetadata.Team.PlayerKill> kills_ =
            java.util.Collections.emptyList();
          private void ensureKillsIsMutable() {
            if (!((bitField0_ & 0x00000010) == 0x00000010)) {
              kills_ = new java.util.ArrayList<skadistats.clarity.wire.s2.proto.S2DotaMatchMetadata.CDOTAMatchMetadata.Team.PlayerKill>(kills_);
              bitField0_ |= 0x00000010;
             }
          }

          private com.google.protobuf.RepeatedFieldBuilder<
              skadistats.clarity.wire.s2.proto.S2DotaMatchMetadata.CDOTAMatchMetadata.Team.PlayerKill, skadistats.clarity.wire.s2.proto.S2DotaMatchMetadata.CDOTAMatchMetadata.Team.PlayerKill.Builder, skadistats.clarity.wire.s2.proto.S2DotaMatchMetadata.CDOTAMatchMetadata.Team.PlayerKillOrBuilder> killsBuilder_;

          /**
           * <code>repeated .CDOTAMatchMetadata.Team.PlayerKill kills = 5;</code>
           */
          public java.util.List<skadistats.clarity.wire.s2.proto.S2DotaMatchMetadata.CDOTAMatchMetadata.Team.PlayerKill> getKillsList() {
            if (killsBuilder_ == null) {
              return java.util.Collections.unmodifiableList(kills_);
            } else {
              return killsBuilder_.getMessageList();
            }
          }
          /**
           * <code>repeated .CDOTAMatchMetadata.Team.PlayerKill kills = 5;</code>
           */
          public int getKillsCount() {
            if (killsBuilder_ == null) {
              return kills_.size();
            } else {
              return killsBuilder_.getCount();
            }
          }
          /**
           * <code>repeated .CDOTAMatchMetadata.Team.PlayerKill kills = 5;</code>
           */
          public skadistats.clarity.wire.s2.proto.S2DotaMatchMetadata.CDOTAMatchMetadata.Team.PlayerKill getKills(int index) {
            if (killsBuilder_ == null) {
              return kills_.get(index);
            } else {
              return killsBuilder_.getMessage(index);
            }
          }
          /**
           * <code>repeated .CDOTAMatchMetadata.Team.PlayerKill kills = 5;</code>
           */
          public Builder setKills(
              int index, skadistats.clarity.wire.s2.proto.S2DotaMatchMetadata.CDOTAMatchMetadata.Team.PlayerKill value) {
            if (killsBuilder_ == null) {
              if (value == null) {
                throw new NullPointerException();
              }
              ensureKillsIsMutable();
              kills_.set(index, value);
              onChanged();
            } else {
              killsBuilder_.setMessage(index, value);
            }
            return this;
          }
          /**
           * <code>repeated .CDOTAMatchMetadata.Team.PlayerKill kills = 5;</code>
           */
          public Builder setKills(
              int index, skadistats.clarity.wire.s2.proto.S2DotaMatchMetadata.CDOTAMatchMetadata.Team.PlayerKill.Builder builderForValue) {
            if (killsBuilder_ == null) {
              ensureKillsIsMutable();
              kills_.set(index, builderForValue.build());
              onChanged();
            } else {
              killsBuilder_.setMessage(index, builderForValue.build());
            }
            return this;
          }
          /**
           * <code>repeated .CDOTAMatchMetadata.Team.PlayerKill kills = 5;</code>
           */
          public Builder addKills(skadistats.clarity.wire.s2.proto.S2DotaMatchMetadata.CDOTAMatchMetadata.Team.PlayerKill value) {
            if (killsBuilder_ == null) {
              if (value == null) {
                throw new NullPointerException();
              }
              ensureKillsIsMutable();
              kills_.add(value);
              onChanged();
            } else {
              killsBuilder_.addMessage(value);
            }
            return this;
          }
          /**
           * <code>repeated .CDOTAMatchMetadata.Team.PlayerKill kills = 5;</code>
           */
          public Builder addKills(
              int index, skadistats.clarity.wire.s2.proto.S2DotaMatchMetadata.CDOTAMatchMetadata.Team.PlayerKill value) {
            if (killsBuilder_ == null) {
              if (value == null) {
                throw new NullPointerException();
              }
              ensureKillsIsMutable();
              kills_.add(index, value);
              onChanged();
            } else {
              killsBuilder_.addMessage(index, value);
            }
            return this;
          }
          /**
           * <code>repeated .CDOTAMatchMetadata.Team.PlayerKill kills = 5;</code>
           */
          public Builder addKills(
              skadistats.clarity.wire.s2.proto.S2DotaMatchMetadata.CDOTAMatchMetadata.Team.PlayerKill.Builder builderForValue) {
            if (killsBuilder_ == null) {
              ensureKillsIsMutable();
              kills_.add(builderForValue.build());
              onChanged();
            } else {
              killsBuilder_.addMessage(builderForValue.build());
            }
            return this;
          }
          /**
           * <code>repeated .CDOTAMatchMetadata.Team.PlayerKill kills = 5;</code>
           */
          public Builder addKills(
              int index, skadistats.clarity.wire.s2.proto.S2DotaMatchMetadata.CDOTAMatchMetadata.Team.PlayerKill.Builder builderForValue) {
            if (killsBuilder_ == null) {
              ensureKillsIsMutable();
              kills_.add(index, builderForValue.build());
              onChanged();
            } else {
              killsBuilder_.addMessage(index, builderForValue.build());
            }
            return this;
          }
          /**
           * <code>repeated .CDOTAMatchMetadata.Team.PlayerKill kills = 5;</code>
           */
          public Builder addAllKills(
              java.lang.Iterable<? extends skadistats.clarity.wire.s2.proto.S2DotaMatchMetadata.CDOTAMatchMetadata.Team.PlayerKill> values) {
            if (killsBuilder_ == null) {
              ensureKillsIsMutable();
              com.google.protobuf.AbstractMessageLite.Builder.addAll(
                  values, kills_);
              onChanged();
            } else {
              killsBuilder_.addAllMessages(values);
            }
            return this;
          }
          /**
           * <code>repeated .CDOTAMatchMetadata.Team.PlayerKill kills = 5;</code>
           */
          public Builder clearKills() {
            if (killsBuilder_ == null) {
              kills_ = java.util.Collections.emptyList();
              bitField0_ = (bitField0_ & ~0x00000010);
              onChanged();
            } else {
              killsBuilder_.clear();
            }
            return this;
          }
          /**
           * <code>repeated .CDOTAMatchMetadata.Team.PlayerKill kills = 5;</code>
           */
          public Builder removeKills(int index) {
            if (killsBuilder_ == null) {
              ensureKillsIsMutable();
              kills_.remove(index);
              onChanged();
            } else {
              killsBuilder_.remove(index);
            }
            return this;
          }
          /**
           * <code>repeated .CDOTAMatchMetadata.Team.PlayerKill kills = 5;</code>
           */
          public skadistats.clarity.wire.s2.proto.S2DotaMatchMetadata.CDOTAMatchMetadata.Team.PlayerKill.Builder getKillsBuilder(
              int index) {
            return getKillsFieldBuilder().getBuilder(index);
          }
          /**
           * <code>repeated .CDOTAMatchMetadata.Team.PlayerKill kills = 5;</code>
           */
          public skadistats.clarity.wire.s2.proto.S2DotaMatchMetadata.CDOTAMatchMetadata.Team.PlayerKillOrBuilder getKillsOrBuilder(
              int index) {
            if (killsBuilder_ == null) {
              return kills_.get(index);  } else {
              return killsBuilder_.getMessageOrBuilder(index);
            }
          }
          /**
           * <code>repeated .CDOTAMatchMetadata.Team.PlayerKill kills = 5;</code>
           */
          public java.util.List<? extends skadistats.clarity.wire.s2.proto.S2DotaMatchMetadata.CDOTAMatchMetadata.Team.PlayerKillOrBuilder> 
               getKillsOrBuilderList() {
            if (killsBuilder_ != null) {
              return killsBuilder_.getMessageOrBuilderList();
            } else {
              return java.util.Collections.unmodifiableList(kills_);
            }
          }
          /**
           * <code>repeated .CDOTAMatchMetadata.Team.PlayerKill kills = 5;</code>
           */
          public skadistats.clarity.wire.s2.proto.S2DotaMatchMetadata.CDOTAMatchMetadata.Team.PlayerKill.Builder addKillsBuilder() {
            return getKillsFieldBuilder().addBuilder(
                skadistats.clarity.wire.s2.proto.S2DotaMatchMetadata.CDOTAMatchMetadata.Team.PlayerKill.getDefaultInstance());
          }
          /**
           * <code>repeated .CDOTAMatchMetadata.Team.PlayerKill kills = 5;</code>
           */
          public skadistats.clarity.wire.s2.proto.S2DotaMatchMetadata.CDOTAMatchMetadata.Team.PlayerKill.Builder addKillsBuilder(
              int index) {
            return getKillsFieldBuilder().addBuilder(
                index, skadistats.clarity.wire.s2.proto.S2DotaMatchMetadata.CDOTAMatchMetadata.Team.PlayerKill.getDefaultInstance());
          }
          /**
           * <code>repeated .CDOTAMatchMetadata.Team.PlayerKill kills = 5;</code>
           */
          public java.util.List<skadistats.clarity.wire.s2.proto.S2DotaMatchMetadata.CDOTAMatchMetadata.Team.PlayerKill.Builder> 
               getKillsBuilderList() {
            return getKillsFieldBuilder().getBuilderList();
          }
          private com.google.protobuf.RepeatedFieldBuilder<
              skadistats.clarity.wire.s2.proto.S2DotaMatchMetadata.CDOTAMatchMetadata.Team.PlayerKill, skadistats.clarity.wire.s2.proto.S2DotaMatchMetadata.CDOTAMatchMetadata.Team.PlayerKill.Builder, skadistats.clarity.wire.s2.proto.S2DotaMatchMetadata.CDOTAMatchMetadata.Team.PlayerKillOrBuilder> 
              getKillsFieldBuilder() {
            if (killsBuilder_ == null) {
              killsBuilder_ = new com.google.protobuf.RepeatedFieldBuilder<
                  skadistats.clarity.wire.s2.proto.S2DotaMatchMetadata.CDOTAMatchMetadata.Team.PlayerKill, skadistats.clarity.wire.s2.proto.S2DotaMatchMetadata.CDOTAMatchMetadata.Team.PlayerKill.Builder, skadistats.clarity.wire.s2.proto.S2DotaMatchMetadata.CDOTAMatchMetadata.Team.PlayerKillOrBuilder>(
                      kills_,
                      ((bitField0_ & 0x00000010) == 0x00000010),
                      getParentForChildren(),
                      isClean());
              kills_ = null;
            }
            return killsBuilder_;
          }

          // @@protoc_insertion_point(builder_scope:CDOTAMatchMetadata.Team.Player)
        }

        static {
          defaultInstance = new Player(true);
          defaultInstance.initFields();
        }

        // @@protoc_insertion_point(class_scope:CDOTAMatchMetadata.Team.Player)
      }

      private int bitField0_;
      public static final int DOTA_TEAM_FIELD_NUMBER = 1;
      private int dotaTeam_;
      /**
       * <code>optional uint32 dota_team = 1;</code>
       */
      public boolean hasDotaTeam() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>optional uint32 dota_team = 1;</code>
       */
      public int getDotaTeam() {
        return dotaTeam_;
      }

      public static final int PLAYERS_FIELD_NUMBER = 2;
      private java.util.List<skadistats.clarity.wire.s2.proto.S2DotaMatchMetadata.CDOTAMatchMetadata.Team.Player> players_;
      /**
       * <code>repeated .CDOTAMatchMetadata.Team.Player players = 2;</code>
       */
      public java.util.List<skadistats.clarity.wire.s2.proto.S2DotaMatchMetadata.CDOTAMatchMetadata.Team.Player> getPlayersList() {
        return players_;
      }
      /**
       * <code>repeated .CDOTAMatchMetadata.Team.Player players = 2;</code>
       */
      public java.util.List<? extends skadistats.clarity.wire.s2.proto.S2DotaMatchMetadata.CDOTAMatchMetadata.Team.PlayerOrBuilder> 
          getPlayersOrBuilderList() {
        return players_;
      }
      /**
       * <code>repeated .CDOTAMatchMetadata.Team.Player players = 2;</code>
       */
      public int getPlayersCount() {
        return players_.size();
      }
      /**
       * <code>repeated .CDOTAMatchMetadata.Team.Player players = 2;</code>
       */
      public skadistats.clarity.wire.s2.proto.S2DotaMatchMetadata.CDOTAMatchMetadata.Team.Player getPlayers(int index) {
        return players_.get(index);
      }
      /**
       * <code>repeated .CDOTAMatchMetadata.Team.Player players = 2;</code>
       */
      public skadistats.clarity.wire.s2.proto.S2DotaMatchMetadata.CDOTAMatchMetadata.Team.PlayerOrBuilder getPlayersOrBuilder(
          int index) {
        return players_.get(index);
      }

      public static final int GRAPH_EXPERIENCE_FIELD_NUMBER = 3;
      private java.util.List<java.lang.Float> graphExperience_;
      /**
       * <code>repeated float graph_experience = 3;</code>
       */
      public java.util.List<java.lang.Float>
          getGraphExperienceList() {
        return graphExperience_;
      }
      /**
       * <code>repeated float graph_experience = 3;</code>
       */
      public int getGraphExperienceCount() {
        return graphExperience_.size();
      }
      /**
       * <code>repeated float graph_experience = 3;</code>
       */
      public float getGraphExperience(int index) {
        return graphExperience_.get(index);
      }

      public static final int GRAPH_GOLD_EARNED_FIELD_NUMBER = 4;
      private java.util.List<java.lang.Float> graphGoldEarned_;
      /**
       * <code>repeated float graph_gold_earned = 4;</code>
       */
      public java.util.List<java.lang.Float>
          getGraphGoldEarnedList() {
        return graphGoldEarned_;
      }
      /**
       * <code>repeated float graph_gold_earned = 4;</code>
       */
      public int getGraphGoldEarnedCount() {
        return graphGoldEarned_.size();
      }
      /**
       * <code>repeated float graph_gold_earned = 4;</code>
       */
      public float getGraphGoldEarned(int index) {
        return graphGoldEarned_.get(index);
      }

      public static final int GRAPH_NET_WORTH_FIELD_NUMBER = 5;
      private java.util.List<java.lang.Float> graphNetWorth_;
      /**
       * <code>repeated float graph_net_worth = 5;</code>
       */
      public java.util.List<java.lang.Float>
          getGraphNetWorthList() {
        return graphNetWorth_;
      }
      /**
       * <code>repeated float graph_net_worth = 5;</code>
       */
      public int getGraphNetWorthCount() {
        return graphNetWorth_.size();
      }
      /**
       * <code>repeated float graph_net_worth = 5;</code>
       */
      public float getGraphNetWorth(int index) {
        return graphNetWorth_.get(index);
      }

      public static final int CM_FIRST_PICK_FIELD_NUMBER = 6;
      private boolean cmFirstPick_;
      /**
       * <code>optional bool cm_first_pick = 6;</code>
       */
      public boolean hasCmFirstPick() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>optional bool cm_first_pick = 6;</code>
       */
      public boolean getCmFirstPick() {
        return cmFirstPick_;
      }

      public static final int CM_CAPTAIN_PLAYER_ID_FIELD_NUMBER = 7;
      private int cmCaptainPlayerId_;
      /**
       * <code>optional uint32 cm_captain_player_id = 7;</code>
       */
      public boolean hasCmCaptainPlayerId() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }
      /**
       * <code>optional uint32 cm_captain_player_id = 7;</code>
       */
      public int getCmCaptainPlayerId() {
        return cmCaptainPlayerId_;
      }

      public static final int CM_BANS_FIELD_NUMBER = 8;
      private java.util.List<java.lang.Integer> cmBans_;
      /**
       * <code>repeated uint32 cm_bans = 8;</code>
       */
      public java.util.List<java.lang.Integer>
          getCmBansList() {
        return cmBans_;
      }
      /**
       * <code>repeated uint32 cm_bans = 8;</code>
       */
      public int getCmBansCount() {
        return cmBans_.size();
      }
      /**
       * <code>repeated uint32 cm_bans = 8;</code>
       */
      public int getCmBans(int index) {
        return cmBans_.get(index);
      }

      public static final int CM_PICKS_FIELD_NUMBER = 9;
      private java.util.List<java.lang.Integer> cmPicks_;
      /**
       * <code>repeated uint32 cm_picks = 9;</code>
       */
      public java.util.List<java.lang.Integer>
          getCmPicksList() {
        return cmPicks_;
      }
      /**
       * <code>repeated uint32 cm_picks = 9;</code>
       */
      public int getCmPicksCount() {
        return cmPicks_.size();
      }
      /**
       * <code>repeated uint32 cm_picks = 9;</code>
       */
      public int getCmPicks(int index) {
        return cmPicks_.get(index);
      }

      public static final int CM_PENALTY_FIELD_NUMBER = 10;
      private int cmPenalty_;
      /**
       * <code>optional uint32 cm_penalty = 10;</code>
       */
      public boolean hasCmPenalty() {
        return ((bitField0_ & 0x00000008) == 0x00000008);
      }
      /**
       * <code>optional uint32 cm_penalty = 10;</code>
       */
      public int getCmPenalty() {
        return cmPenalty_;
      }

      private void initFields() {
        dotaTeam_ = 0;
        players_ = java.util.Collections.emptyList();
        graphExperience_ = java.util.Collections.emptyList();
        graphGoldEarned_ = java.util.Collections.emptyList();
        graphNetWorth_ = java.util.Collections.emptyList();
        cmFirstPick_ = false;
        cmCaptainPlayerId_ = 0;
        cmBans_ = java.util.Collections.emptyList();
        cmPicks_ = java.util.Collections.emptyList();
        cmPenalty_ = 0;
      }
      private byte memoizedIsInitialized = -1;
      public final boolean isInitialized() {
        byte isInitialized = memoizedIsInitialized;
        if (isInitialized == 1) return true;
        if (isInitialized == 0) return false;

        memoizedIsInitialized = 1;
        return true;
      }

      public void writeTo(com.google.protobuf.CodedOutputStream output)
                          throws java.io.IOException {
        getSerializedSize();
        if (((bitField0_ & 0x00000001) == 0x00000001)) {
          output.writeUInt32(1, dotaTeam_);
        }
        for (int i = 0; i < players_.size(); i++) {
          output.writeMessage(2, players_.get(i));
        }
        for (int i = 0; i < graphExperience_.size(); i++) {
          output.writeFloat(3, graphExperience_.get(i));
        }
        for (int i = 0; i < graphGoldEarned_.size(); i++) {
          output.writeFloat(4, graphGoldEarned_.get(i));
        }
        for (int i = 0; i < graphNetWorth_.size(); i++) {
          output.writeFloat(5, graphNetWorth_.get(i));
        }
        if (((bitField0_ & 0x00000002) == 0x00000002)) {
          output.writeBool(6, cmFirstPick_);
        }
        if (((bitField0_ & 0x00000004) == 0x00000004)) {
          output.writeUInt32(7, cmCaptainPlayerId_);
        }
        for (int i = 0; i < cmBans_.size(); i++) {
          output.writeUInt32(8, cmBans_.get(i));
        }
        for (int i = 0; i < cmPicks_.size(); i++) {
          output.writeUInt32(9, cmPicks_.get(i));
        }
        if (((bitField0_ & 0x00000008) == 0x00000008)) {
          output.writeUInt32(10, cmPenalty_);
        }
        getUnknownFields().writeTo(output);
      }

      private int memoizedSerializedSize = -1;
      public int getSerializedSize() {
        int size = memoizedSerializedSize;
        if (size != -1) return size;

        size = 0;
        if (((bitField0_ & 0x00000001) == 0x00000001)) {
          size += com.google.protobuf.CodedOutputStream
            .computeUInt32Size(1, dotaTeam_);
        }
        for (int i = 0; i < players_.size(); i++) {
          size += com.google.protobuf.CodedOutputStream
            .computeMessageSize(2, players_.get(i));
        }
        {
          int dataSize = 0;
          dataSize = 4 * getGraphExperienceList().size();
          size += dataSize;
          size += 1 * getGraphExperienceList().size();
        }
        {
          int dataSize = 0;
          dataSize = 4 * getGraphGoldEarnedList().size();
          size += dataSize;
          size += 1 * getGraphGoldEarnedList().size();
        }
        {
          int dataSize = 0;
          dataSize = 4 * getGraphNetWorthList().size();
          size += dataSize;
          size += 1 * getGraphNetWorthList().size();
        }
        if (((bitField0_ & 0x00000002) == 0x00000002)) {
          size += com.google.protobuf.CodedOutputStream
            .computeBoolSize(6, cmFirstPick_);
        }
        if (((bitField0_ & 0x00000004) == 0x00000004)) {
          size += com.google.protobuf.CodedOutputStream
            .computeUInt32Size(7, cmCaptainPlayerId_);
        }
        {
          int dataSize = 0;
          for (int i = 0; i < cmBans_.size(); i++) {
            dataSize += com.google.protobuf.CodedOutputStream
              .computeUInt32SizeNoTag(cmBans_.get(i));
          }
          size += dataSize;
          size += 1 * getCmBansList().size();
        }
        {
          int dataSize = 0;
          for (int i = 0; i < cmPicks_.size(); i++) {
            dataSize += com.google.protobuf.CodedOutputStream
              .computeUInt32SizeNoTag(cmPicks_.get(i));
          }
          size += dataSize;
          size += 1 * getCmPicksList().size();
        }
        if (((bitField0_ & 0x00000008) == 0x00000008)) {
          size += com.google.protobuf.CodedOutputStream
            .computeUInt32Size(10, cmPenalty_);
        }
        size += getUnknownFields().getSerializedSize();
        memoizedSerializedSize = size;
        return size;
      }

      private static final long serialVersionUID = 0L;
      @java.lang.Override
      protected java.lang.Object writeReplace()
          throws java.io.ObjectStreamException {
        return super.writeReplace();
      }

      public static skadistats.clarity.wire.s2.proto.S2DotaMatchMetadata.CDOTAMatchMetadata.Team parseFrom(
          com.google.protobuf.ByteString data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static skadistats.clarity.wire.s2.proto.S2DotaMatchMetadata.CDOTAMatchMetadata.Team parseFrom(
          com.google.protobuf.ByteString data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static skadistats.clarity.wire.s2.proto.S2DotaMatchMetadata.CDOTAMatchMetadata.Team parseFrom(byte[] data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static skadistats.clarity.wire.s2.proto.S2DotaMatchMetadata.CDOTAMatchMetadata.Team parseFrom(
          byte[] data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static skadistats.clarity.wire.s2.proto.S2DotaMatchMetadata.CDOTAMatchMetadata.Team parseFrom(java.io.InputStream input)
          throws java.io.IOException {
        return PARSER.parseFrom(input);
      }
      public static skadistats.clarity.wire.s2.proto.S2DotaMatchMetadata.CDOTAMatchMetadata.Team parseFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return PARSER.parseFrom(input, extensionRegistry);
      }
      public static skadistats.clarity.wire.s2.proto.S2DotaMatchMetadata.CDOTAMatchMetadata.Team parseDelimitedFrom(java.io.InputStream input)
          throws java.io.IOException {
        return PARSER.parseDelimitedFrom(input);
      }
      public static skadistats.clarity.wire.s2.proto.S2DotaMatchMetadata.CDOTAMatchMetadata.Team parseDelimitedFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return PARSER.parseDelimitedFrom(input, extensionRegistry);
      }
      public static skadistats.clarity.wire.s2.proto.S2DotaMatchMetadata.CDOTAMatchMetadata.Team parseFrom(
          com.google.protobuf.CodedInputStream input)
          throws java.io.IOException {
        return PARSER.parseFrom(input);
      }
      public static skadistats.clarity.wire.s2.proto.S2DotaMatchMetadata.CDOTAMatchMetadata.Team parseFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return PARSER.parseFrom(input, extensionRegistry);
      }

      public static Builder newBuilder() { return Builder.create(); }
      public Builder newBuilderForType() { return newBuilder(); }
      public static Builder newBuilder(skadistats.clarity.wire.s2.proto.S2DotaMatchMetadata.CDOTAMatchMetadata.Team prototype) {
        return newBuilder().mergeFrom(prototype);
      }
      public Builder toBuilder() { return newBuilder(this); }

      @java.lang.Override
      protected Builder newBuilderForType(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        Builder builder = new Builder(parent);
        return builder;
      }
      /**
       * Protobuf type {@code CDOTAMatchMetadata.Team}
       */
      public static final class Builder extends
          com.google.protobuf.GeneratedMessage.Builder<Builder> implements
          // @@protoc_insertion_point(builder_implements:CDOTAMatchMetadata.Team)
          skadistats.clarity.wire.s2.proto.S2DotaMatchMetadata.CDOTAMatchMetadata.TeamOrBuilder {
        public static final com.google.protobuf.Descriptors.Descriptor
            getDescriptor() {
          return skadistats.clarity.wire.s2.proto.S2DotaMatchMetadata.internal_static_CDOTAMatchMetadata_Team_descriptor;
        }

        protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
            internalGetFieldAccessorTable() {
          return skadistats.clarity.wire.s2.proto.S2DotaMatchMetadata.internal_static_CDOTAMatchMetadata_Team_fieldAccessorTable
              .ensureFieldAccessorsInitialized(
                  skadistats.clarity.wire.s2.proto.S2DotaMatchMetadata.CDOTAMatchMetadata.Team.class, skadistats.clarity.wire.s2.proto.S2DotaMatchMetadata.CDOTAMatchMetadata.Team.Builder.class);
        }

        // Construct using skadistats.clarity.wire.s2.proto.S2DotaMatchMetadata.CDOTAMatchMetadata.Team.newBuilder()
        private Builder() {
          maybeForceBuilderInitialization();
        }

        private Builder(
            com.google.protobuf.GeneratedMessage.BuilderParent parent) {
          super(parent);
          maybeForceBuilderInitialization();
        }
        private void maybeForceBuilderInitialization() {
          if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
            getPlayersFieldBuilder();
          }
        }
        private static Builder create() {
          return new Builder();
        }

        public Builder clear() {
          super.clear();
          dotaTeam_ = 0;
          bitField0_ = (bitField0_ & ~0x00000001);
          if (playersBuilder_ == null) {
            players_ = java.util.Collections.emptyList();
            bitField0_ = (bitField0_ & ~0x00000002);
          } else {
            playersBuilder_.clear();
          }
          graphExperience_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000004);
          graphGoldEarned_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000008);
          graphNetWorth_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000010);
          cmFirstPick_ = false;
          bitField0_ = (bitField0_ & ~0x00000020);
          cmCaptainPlayerId_ = 0;
          bitField0_ = (bitField0_ & ~0x00000040);
          cmBans_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000080);
          cmPicks_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000100);
          cmPenalty_ = 0;
          bitField0_ = (bitField0_ & ~0x00000200);
          return this;
        }

        public Builder clone() {
          return create().mergeFrom(buildPartial());
        }

        public com.google.protobuf.Descriptors.Descriptor
            getDescriptorForType() {
          return skadistats.clarity.wire.s2.proto.S2DotaMatchMetadata.internal_static_CDOTAMatchMetadata_Team_descriptor;
        }

        public skadistats.clarity.wire.s2.proto.S2DotaMatchMetadata.CDOTAMatchMetadata.Team getDefaultInstanceForType() {
          return skadistats.clarity.wire.s2.proto.S2DotaMatchMetadata.CDOTAMatchMetadata.Team.getDefaultInstance();
        }

        public skadistats.clarity.wire.s2.proto.S2DotaMatchMetadata.CDOTAMatchMetadata.Team build() {
          skadistats.clarity.wire.s2.proto.S2DotaMatchMetadata.CDOTAMatchMetadata.Team result = buildPartial();
          if (!result.isInitialized()) {
            throw newUninitializedMessageException(result);
          }
          return result;
        }

        public skadistats.clarity.wire.s2.proto.S2DotaMatchMetadata.CDOTAMatchMetadata.Team buildPartial() {
          skadistats.clarity.wire.s2.proto.S2DotaMatchMetadata.CDOTAMatchMetadata.Team result = new skadistats.clarity.wire.s2.proto.S2DotaMatchMetadata.CDOTAMatchMetadata.Team(this);
          int from_bitField0_ = bitField0_;
          int to_bitField0_ = 0;
          if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
            to_bitField0_ |= 0x00000001;
          }
          result.dotaTeam_ = dotaTeam_;
          if (playersBuilder_ == null) {
            if (((bitField0_ & 0x00000002) == 0x00000002)) {
              players_ = java.util.Collections.unmodifiableList(players_);
              bitField0_ = (bitField0_ & ~0x00000002);
            }
            result.players_ = players_;
          } else {
            result.players_ = playersBuilder_.build();
          }
          if (((bitField0_ & 0x00000004) == 0x00000004)) {
            graphExperience_ = java.util.Collections.unmodifiableList(graphExperience_);
            bitField0_ = (bitField0_ & ~0x00000004);
          }
          result.graphExperience_ = graphExperience_;
          if (((bitField0_ & 0x00000008) == 0x00000008)) {
            graphGoldEarned_ = java.util.Collections.unmodifiableList(graphGoldEarned_);
            bitField0_ = (bitField0_ & ~0x00000008);
          }
          result.graphGoldEarned_ = graphGoldEarned_;
          if (((bitField0_ & 0x00000010) == 0x00000010)) {
            graphNetWorth_ = java.util.Collections.unmodifiableList(graphNetWorth_);
            bitField0_ = (bitField0_ & ~0x00000010);
          }
          result.graphNetWorth_ = graphNetWorth_;
          if (((from_bitField0_ & 0x00000020) == 0x00000020)) {
            to_bitField0_ |= 0x00000002;
          }
          result.cmFirstPick_ = cmFirstPick_;
          if (((from_bitField0_ & 0x00000040) == 0x00000040)) {
            to_bitField0_ |= 0x00000004;
          }
          result.cmCaptainPlayerId_ = cmCaptainPlayerId_;
          if (((bitField0_ & 0x00000080) == 0x00000080)) {
            cmBans_ = java.util.Collections.unmodifiableList(cmBans_);
            bitField0_ = (bitField0_ & ~0x00000080);
          }
          result.cmBans_ = cmBans_;
          if (((bitField0_ & 0x00000100) == 0x00000100)) {
            cmPicks_ = java.util.Collections.unmodifiableList(cmPicks_);
            bitField0_ = (bitField0_ & ~0x00000100);
          }
          result.cmPicks_ = cmPicks_;
          if (((from_bitField0_ & 0x00000200) == 0x00000200)) {
            to_bitField0_ |= 0x00000008;
          }
          result.cmPenalty_ = cmPenalty_;
          result.bitField0_ = to_bitField0_;
          onBuilt();
          return result;
        }

        public Builder mergeFrom(com.google.protobuf.Message other) {
          if (other instanceof skadistats.clarity.wire.s2.proto.S2DotaMatchMetadata.CDOTAMatchMetadata.Team) {
            return mergeFrom((skadistats.clarity.wire.s2.proto.S2DotaMatchMetadata.CDOTAMatchMetadata.Team)other);
          } else {
            super.mergeFrom(other);
            return this;
          }
        }

        public Builder mergeFrom(skadistats.clarity.wire.s2.proto.S2DotaMatchMetadata.CDOTAMatchMetadata.Team other) {
          if (other == skadistats.clarity.wire.s2.proto.S2DotaMatchMetadata.CDOTAMatchMetadata.Team.getDefaultInstance()) return this;
          if (other.hasDotaTeam()) {
            setDotaTeam(other.getDotaTeam());
          }
          if (playersBuilder_ == null) {
            if (!other.players_.isEmpty()) {
              if (players_.isEmpty()) {
                players_ = other.players_;
                bitField0_ = (bitField0_ & ~0x00000002);
              } else {
                ensurePlayersIsMutable();
                players_.addAll(other.players_);
              }
              onChanged();
            }
          } else {
            if (!other.players_.isEmpty()) {
              if (playersBuilder_.isEmpty()) {
                playersBuilder_.dispose();
                playersBuilder_ = null;
                players_ = other.players_;
                bitField0_ = (bitField0_ & ~0x00000002);
                playersBuilder_ = 
                  com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders ?
                     getPlayersFieldBuilder() : null;
              } else {
                playersBuilder_.addAllMessages(other.players_);
              }
            }
          }
          if (!other.graphExperience_.isEmpty()) {
            if (graphExperience_.isEmpty()) {
              graphExperience_ = other.graphExperience_;
              bitField0_ = (bitField0_ & ~0x00000004);
            } else {
              ensureGraphExperienceIsMutable();
              graphExperience_.addAll(other.graphExperience_);
            }
            onChanged();
          }
          if (!other.graphGoldEarned_.isEmpty()) {
            if (graphGoldEarned_.isEmpty()) {
              graphGoldEarned_ = other.graphGoldEarned_;
              bitField0_ = (bitField0_ & ~0x00000008);
            } else {
              ensureGraphGoldEarnedIsMutable();
              graphGoldEarned_.addAll(other.graphGoldEarned_);
            }
            onChanged();
          }
          if (!other.graphNetWorth_.isEmpty()) {
            if (graphNetWorth_.isEmpty()) {
              graphNetWorth_ = other.graphNetWorth_;
              bitField0_ = (bitField0_ & ~0x00000010);
            } else {
              ensureGraphNetWorthIsMutable();
              graphNetWorth_.addAll(other.graphNetWorth_);
            }
            onChanged();
          }
          if (other.hasCmFirstPick()) {
            setCmFirstPick(other.getCmFirstPick());
          }
          if (other.hasCmCaptainPlayerId()) {
            setCmCaptainPlayerId(other.getCmCaptainPlayerId());
          }
          if (!other.cmBans_.isEmpty()) {
            if (cmBans_.isEmpty()) {
              cmBans_ = other.cmBans_;
              bitField0_ = (bitField0_ & ~0x00000080);
            } else {
              ensureCmBansIsMutable();
              cmBans_.addAll(other.cmBans_);
            }
            onChanged();
          }
          if (!other.cmPicks_.isEmpty()) {
            if (cmPicks_.isEmpty()) {
              cmPicks_ = other.cmPicks_;
              bitField0_ = (bitField0_ & ~0x00000100);
            } else {
              ensureCmPicksIsMutable();
              cmPicks_.addAll(other.cmPicks_);
            }
            onChanged();
          }
          if (other.hasCmPenalty()) {
            setCmPenalty(other.getCmPenalty());
          }
          this.mergeUnknownFields(other.getUnknownFields());
          return this;
        }

        public final boolean isInitialized() {
          return true;
        }

        public Builder mergeFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws java.io.IOException {
          skadistats.clarity.wire.s2.proto.S2DotaMatchMetadata.CDOTAMatchMetadata.Team parsedMessage = null;
          try {
            parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
          } catch (com.google.protobuf.InvalidProtocolBufferException e) {
            parsedMessage = (skadistats.clarity.wire.s2.proto.S2DotaMatchMetadata.CDOTAMatchMetadata.Team) e.getUnfinishedMessage();
            throw e;
          } finally {
            if (parsedMessage != null) {
              mergeFrom(parsedMessage);
            }
          }
          return this;
        }
        private int bitField0_;

        private int dotaTeam_ ;
        /**
         * <code>optional uint32 dota_team = 1;</code>
         */
        public boolean hasDotaTeam() {
          return ((bitField0_ & 0x00000001) == 0x00000001);
        }
        /**
         * <code>optional uint32 dota_team = 1;</code>
         */
        public int getDotaTeam() {
          return dotaTeam_;
        }
        /**
         * <code>optional uint32 dota_team = 1;</code>
         */
        public Builder setDotaTeam(int value) {
          bitField0_ |= 0x00000001;
          dotaTeam_ = value;
          onChanged();
          return this;
        }
        /**
         * <code>optional uint32 dota_team = 1;</code>
         */
        public Builder clearDotaTeam() {
          bitField0_ = (bitField0_ & ~0x00000001);
          dotaTeam_ = 0;
          onChanged();
          return this;
        }

        private java.util.List<skadistats.clarity.wire.s2.proto.S2DotaMatchMetadata.CDOTAMatchMetadata.Team.Player> players_ =
          java.util.Collections.emptyList();
        private void ensurePlayersIsMutable() {
          if (!((bitField0_ & 0x00000002) == 0x00000002)) {
            players_ = new java.util.ArrayList<skadistats.clarity.wire.s2.proto.S2DotaMatchMetadata.CDOTAMatchMetadata.Team.Player>(players_);
            bitField0_ |= 0x00000002;
           }
        }

        private com.google.protobuf.RepeatedFieldBuilder<
            skadistats.clarity.wire.s2.proto.S2DotaMatchMetadata.CDOTAMatchMetadata.Team.Player, skadistats.clarity.wire.s2.proto.S2DotaMatchMetadata.CDOTAMatchMetadata.Team.Player.Builder, skadistats.clarity.wire.s2.proto.S2DotaMatchMetadata.CDOTAMatchMetadata.Team.PlayerOrBuilder> playersBuilder_;

        /**
         * <code>repeated .CDOTAMatchMetadata.Team.Player players = 2;</code>
         */
        public java.util.List<skadistats.clarity.wire.s2.proto.S2DotaMatchMetadata.CDOTAMatchMetadata.Team.Player> getPlayersList() {
          if (playersBuilder_ == null) {
            return java.util.Collections.unmodifiableList(players_);
          } else {
            return playersBuilder_.getMessageList();
          }
        }
        /**
         * <code>repeated .CDOTAMatchMetadata.Team.Player players = 2;</code>
         */
        public int getPlayersCount() {
          if (playersBuilder_ == null) {
            return players_.size();
          } else {
            return playersBuilder_.getCount();
          }
        }
        /**
         * <code>repeated .CDOTAMatchMetadata.Team.Player players = 2;</code>
         */
        public skadistats.clarity.wire.s2.proto.S2DotaMatchMetadata.CDOTAMatchMetadata.Team.Player getPlayers(int index) {
          if (playersBuilder_ == null) {
            return players_.get(index);
          } else {
            return playersBuilder_.getMessage(index);
          }
        }
        /**
         * <code>repeated .CDOTAMatchMetadata.Team.Player players = 2;</code>
         */
        public Builder setPlayers(
            int index, skadistats.clarity.wire.s2.proto.S2DotaMatchMetadata.CDOTAMatchMetadata.Team.Player value) {
          if (playersBuilder_ == null) {
            if (value == null) {
              throw new NullPointerException();
            }
            ensurePlayersIsMutable();
            players_.set(index, value);
            onChanged();
          } else {
            playersBuilder_.setMessage(index, value);
          }
          return this;
        }
        /**
         * <code>repeated .CDOTAMatchMetadata.Team.Player players = 2;</code>
         */
        public Builder setPlayers(
            int index, skadistats.clarity.wire.s2.proto.S2DotaMatchMetadata.CDOTAMatchMetadata.Team.Player.Builder builderForValue) {
          if (playersBuilder_ == null) {
            ensurePlayersIsMutable();
            players_.set(index, builderForValue.build());
            onChanged();
          } else {
            playersBuilder_.setMessage(index, builderForValue.build());
          }
          return this;
        }
        /**
         * <code>repeated .CDOTAMatchMetadata.Team.Player players = 2;</code>
         */
        public Builder addPlayers(skadistats.clarity.wire.s2.proto.S2DotaMatchMetadata.CDOTAMatchMetadata.Team.Player value) {
          if (playersBuilder_ == null) {
            if (value == null) {
              throw new NullPointerException();
            }
            ensurePlayersIsMutable();
            players_.add(value);
            onChanged();
          } else {
            playersBuilder_.addMessage(value);
          }
          return this;
        }
        /**
         * <code>repeated .CDOTAMatchMetadata.Team.Player players = 2;</code>
         */
        public Builder addPlayers(
            int index, skadistats.clarity.wire.s2.proto.S2DotaMatchMetadata.CDOTAMatchMetadata.Team.Player value) {
          if (playersBuilder_ == null) {
            if (value == null) {
              throw new NullPointerException();
            }
            ensurePlayersIsMutable();
            players_.add(index, value);
            onChanged();
          } else {
            playersBuilder_.addMessage(index, value);
          }
          return this;
        }
        /**
         * <code>repeated .CDOTAMatchMetadata.Team.Player players = 2;</code>
         */
        public Builder addPlayers(
            skadistats.clarity.wire.s2.proto.S2DotaMatchMetadata.CDOTAMatchMetadata.Team.Player.Builder builderForValue) {
          if (playersBuilder_ == null) {
            ensurePlayersIsMutable();
            players_.add(builderForValue.build());
            onChanged();
          } else {
            playersBuilder_.addMessage(builderForValue.build());
          }
          return this;
        }
        /**
         * <code>repeated .CDOTAMatchMetadata.Team.Player players = 2;</code>
         */
        public Builder addPlayers(
            int index, skadistats.clarity.wire.s2.proto.S2DotaMatchMetadata.CDOTAMatchMetadata.Team.Player.Builder builderForValue) {
          if (playersBuilder_ == null) {
            ensurePlayersIsMutable();
            players_.add(index, builderForValue.build());
            onChanged();
          } else {
            playersBuilder_.addMessage(index, builderForValue.build());
          }
          return this;
        }
        /**
         * <code>repeated .CDOTAMatchMetadata.Team.Player players = 2;</code>
         */
        public Builder addAllPlayers(
            java.lang.Iterable<? extends skadistats.clarity.wire.s2.proto.S2DotaMatchMetadata.CDOTAMatchMetadata.Team.Player> values) {
          if (playersBuilder_ == null) {
            ensurePlayersIsMutable();
            com.google.protobuf.AbstractMessageLite.Builder.addAll(
                values, players_);
            onChanged();
          } else {
            playersBuilder_.addAllMessages(values);
          }
          return this;
        }
        /**
         * <code>repeated .CDOTAMatchMetadata.Team.Player players = 2;</code>
         */
        public Builder clearPlayers() {
          if (playersBuilder_ == null) {
            players_ = java.util.Collections.emptyList();
            bitField0_ = (bitField0_ & ~0x00000002);
            onChanged();
          } else {
            playersBuilder_.clear();
          }
          return this;
        }
        /**
         * <code>repeated .CDOTAMatchMetadata.Team.Player players = 2;</code>
         */
        public Builder removePlayers(int index) {
          if (playersBuilder_ == null) {
            ensurePlayersIsMutable();
            players_.remove(index);
            onChanged();
          } else {
            playersBuilder_.remove(index);
          }
          return this;
        }
        /**
         * <code>repeated .CDOTAMatchMetadata.Team.Player players = 2;</code>
         */
        public skadistats.clarity.wire.s2.proto.S2DotaMatchMetadata.CDOTAMatchMetadata.Team.Player.Builder getPlayersBuilder(
            int index) {
          return getPlayersFieldBuilder().getBuilder(index);
        }
        /**
         * <code>repeated .CDOTAMatchMetadata.Team.Player players = 2;</code>
         */
        public skadistats.clarity.wire.s2.proto.S2DotaMatchMetadata.CDOTAMatchMetadata.Team.PlayerOrBuilder getPlayersOrBuilder(
            int index) {
          if (playersBuilder_ == null) {
            return players_.get(index);  } else {
            return playersBuilder_.getMessageOrBuilder(index);
          }
        }
        /**
         * <code>repeated .CDOTAMatchMetadata.Team.Player players = 2;</code>
         */
        public java.util.List<? extends skadistats.clarity.wire.s2.proto.S2DotaMatchMetadata.CDOTAMatchMetadata.Team.PlayerOrBuilder> 
             getPlayersOrBuilderList() {
          if (playersBuilder_ != null) {
            return playersBuilder_.getMessageOrBuilderList();
          } else {
            return java.util.Collections.unmodifiableList(players_);
          }
        }
        /**
         * <code>repeated .CDOTAMatchMetadata.Team.Player players = 2;</code>
         */
        public skadistats.clarity.wire.s2.proto.S2DotaMatchMetadata.CDOTAMatchMetadata.Team.Player.Builder addPlayersBuilder() {
          return getPlayersFieldBuilder().addBuilder(
              skadistats.clarity.wire.s2.proto.S2DotaMatchMetadata.CDOTAMatchMetadata.Team.Player.getDefaultInstance());
        }
        /**
         * <code>repeated .CDOTAMatchMetadata.Team.Player players = 2;</code>
         */
        public skadistats.clarity.wire.s2.proto.S2DotaMatchMetadata.CDOTAMatchMetadata.Team.Player.Builder addPlayersBuilder(
            int index) {
          return getPlayersFieldBuilder().addBuilder(
              index, skadistats.clarity.wire.s2.proto.S2DotaMatchMetadata.CDOTAMatchMetadata.Team.Player.getDefaultInstance());
        }
        /**
         * <code>repeated .CDOTAMatchMetadata.Team.Player players = 2;</code>
         */
        public java.util.List<skadistats.clarity.wire.s2.proto.S2DotaMatchMetadata.CDOTAMatchMetadata.Team.Player.Builder> 
             getPlayersBuilderList() {
          return getPlayersFieldBuilder().getBuilderList();
        }
        private com.google.protobuf.RepeatedFieldBuilder<
            skadistats.clarity.wire.s2.proto.S2DotaMatchMetadata.CDOTAMatchMetadata.Team.Player, skadistats.clarity.wire.s2.proto.S2DotaMatchMetadata.CDOTAMatchMetadata.Team.Player.Builder, skadistats.clarity.wire.s2.proto.S2DotaMatchMetadata.CDOTAMatchMetadata.Team.PlayerOrBuilder> 
            getPlayersFieldBuilder() {
          if (playersBuilder_ == null) {
            playersBuilder_ = new com.google.protobuf.RepeatedFieldBuilder<
                skadistats.clarity.wire.s2.proto.S2DotaMatchMetadata.CDOTAMatchMetadata.Team.Player, skadistats.clarity.wire.s2.proto.S2DotaMatchMetadata.CDOTAMatchMetadata.Team.Player.Builder, skadistats.clarity.wire.s2.proto.S2DotaMatchMetadata.CDOTAMatchMetadata.Team.PlayerOrBuilder>(
                    players_,
                    ((bitField0_ & 0x00000002) == 0x00000002),
                    getParentForChildren(),
                    isClean());
            players_ = null;
          }
          return playersBuilder_;
        }

        private java.util.List<java.lang.Float> graphExperience_ = java.util.Collections.emptyList();
        private void ensureGraphExperienceIsMutable() {
          if (!((bitField0_ & 0x00000004) == 0x00000004)) {
            graphExperience_ = new java.util.ArrayList<java.lang.Float>(graphExperience_);
            bitField0_ |= 0x00000004;
           }
        }
        /**
         * <code>repeated float graph_experience = 3;</code>
         */
        public java.util.List<java.lang.Float>
            getGraphExperienceList() {
          return java.util.Collections.unmodifiableList(graphExperience_);
        }
        /**
         * <code>repeated float graph_experience = 3;</code>
         */
        public int getGraphExperienceCount() {
          return graphExperience_.size();
        }
        /**
         * <code>repeated float graph_experience = 3;</code>
         */
        public float getGraphExperience(int index) {
          return graphExperience_.get(index);
        }
        /**
         * <code>repeated float graph_experience = 3;</code>
         */
        public Builder setGraphExperience(
            int index, float value) {
          ensureGraphExperienceIsMutable();
          graphExperience_.set(index, value);
          onChanged();
          return this;
        }
        /**
         * <code>repeated float graph_experience = 3;</code>
         */
        public Builder addGraphExperience(float value) {
          ensureGraphExperienceIsMutable();
          graphExperience_.add(value);
          onChanged();
          return this;
        }
        /**
         * <code>repeated float graph_experience = 3;</code>
         */
        public Builder addAllGraphExperience(
            java.lang.Iterable<? extends java.lang.Float> values) {
          ensureGraphExperienceIsMutable();
          com.google.protobuf.AbstractMessageLite.Builder.addAll(
              values, graphExperience_);
          onChanged();
          return this;
        }
        /**
         * <code>repeated float graph_experience = 3;</code>
         */
        public Builder clearGraphExperience() {
          graphExperience_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000004);
          onChanged();
          return this;
        }

        private java.util.List<java.lang.Float> graphGoldEarned_ = java.util.Collections.emptyList();
        private void ensureGraphGoldEarnedIsMutable() {
          if (!((bitField0_ & 0x00000008) == 0x00000008)) {
            graphGoldEarned_ = new java.util.ArrayList<java.lang.Float>(graphGoldEarned_);
            bitField0_ |= 0x00000008;
           }
        }
        /**
         * <code>repeated float graph_gold_earned = 4;</code>
         */
        public java.util.List<java.lang.Float>
            getGraphGoldEarnedList() {
          return java.util.Collections.unmodifiableList(graphGoldEarned_);
        }
        /**
         * <code>repeated float graph_gold_earned = 4;</code>
         */
        public int getGraphGoldEarnedCount() {
          return graphGoldEarned_.size();
        }
        /**
         * <code>repeated float graph_gold_earned = 4;</code>
         */
        public float getGraphGoldEarned(int index) {
          return graphGoldEarned_.get(index);
        }
        /**
         * <code>repeated float graph_gold_earned = 4;</code>
         */
        public Builder setGraphGoldEarned(
            int index, float value) {
          ensureGraphGoldEarnedIsMutable();
          graphGoldEarned_.set(index, value);
          onChanged();
          return this;
        }
        /**
         * <code>repeated float graph_gold_earned = 4;</code>
         */
        public Builder addGraphGoldEarned(float value) {
          ensureGraphGoldEarnedIsMutable();
          graphGoldEarned_.add(value);
          onChanged();
          return this;
        }
        /**
         * <code>repeated float graph_gold_earned = 4;</code>
         */
        public Builder addAllGraphGoldEarned(
            java.lang.Iterable<? extends java.lang.Float> values) {
          ensureGraphGoldEarnedIsMutable();
          com.google.protobuf.AbstractMessageLite.Builder.addAll(
              values, graphGoldEarned_);
          onChanged();
          return this;
        }
        /**
         * <code>repeated float graph_gold_earned = 4;</code>
         */
        public Builder clearGraphGoldEarned() {
          graphGoldEarned_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000008);
          onChanged();
          return this;
        }

        private java.util.List<java.lang.Float> graphNetWorth_ = java.util.Collections.emptyList();
        private void ensureGraphNetWorthIsMutable() {
          if (!((bitField0_ & 0x00000010) == 0x00000010)) {
            graphNetWorth_ = new java.util.ArrayList<java.lang.Float>(graphNetWorth_);
            bitField0_ |= 0x00000010;
           }
        }
        /**
         * <code>repeated float graph_net_worth = 5;</code>
         */
        public java.util.List<java.lang.Float>
            getGraphNetWorthList() {
          return java.util.Collections.unmodifiableList(graphNetWorth_);
        }
        /**
         * <code>repeated float graph_net_worth = 5;</code>
         */
        public int getGraphNetWorthCount() {
          return graphNetWorth_.size();
        }
        /**
         * <code>repeated float graph_net_worth = 5;</code>
         */
        public float getGraphNetWorth(int index) {
          return graphNetWorth_.get(index);
        }
        /**
         * <code>repeated float graph_net_worth = 5;</code>
         */
        public Builder setGraphNetWorth(
            int index, float value) {
          ensureGraphNetWorthIsMutable();
          graphNetWorth_.set(index, value);
          onChanged();
          return this;
        }
        /**
         * <code>repeated float graph_net_worth = 5;</code>
         */
        public Builder addGraphNetWorth(float value) {
          ensureGraphNetWorthIsMutable();
          graphNetWorth_.add(value);
          onChanged();
          return this;
        }
        /**
         * <code>repeated float graph_net_worth = 5;</code>
         */
        public Builder addAllGraphNetWorth(
            java.lang.Iterable<? extends java.lang.Float> values) {
          ensureGraphNetWorthIsMutable();
          com.google.protobuf.AbstractMessageLite.Builder.addAll(
              values, graphNetWorth_);
          onChanged();
          return this;
        }
        /**
         * <code>repeated float graph_net_worth = 5;</code>
         */
        public Builder clearGraphNetWorth() {
          graphNetWorth_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000010);
          onChanged();
          return this;
        }

        private boolean cmFirstPick_ ;
        /**
         * <code>optional bool cm_first_pick = 6;</code>
         */
        public boolean hasCmFirstPick() {
          return ((bitField0_ & 0x00000020) == 0x00000020);
        }
        /**
         * <code>optional bool cm_first_pick = 6;</code>
         */
        public boolean getCmFirstPick() {
          return cmFirstPick_;
        }
        /**
         * <code>optional bool cm_first_pick = 6;</code>
         */
        public Builder setCmFirstPick(boolean value) {
          bitField0_ |= 0x00000020;
          cmFirstPick_ = value;
          onChanged();
          return this;
        }
        /**
         * <code>optional bool cm_first_pick = 6;</code>
         */
        public Builder clearCmFirstPick() {
          bitField0_ = (bitField0_ & ~0x00000020);
          cmFirstPick_ = false;
          onChanged();
          return this;
        }

        private int cmCaptainPlayerId_ ;
        /**
         * <code>optional uint32 cm_captain_player_id = 7;</code>
         */
        public boolean hasCmCaptainPlayerId() {
          return ((bitField0_ & 0x00000040) == 0x00000040);
        }
        /**
         * <code>optional uint32 cm_captain_player_id = 7;</code>
         */
        public int getCmCaptainPlayerId() {
          return cmCaptainPlayerId_;
        }
        /**
         * <code>optional uint32 cm_captain_player_id = 7;</code>
         */
        public Builder setCmCaptainPlayerId(int value) {
          bitField0_ |= 0x00000040;
          cmCaptainPlayerId_ = value;
          onChanged();
          return this;
        }
        /**
         * <code>optional uint32 cm_captain_player_id = 7;</code>
         */
        public Builder clearCmCaptainPlayerId() {
          bitField0_ = (bitField0_ & ~0x00000040);
          cmCaptainPlayerId_ = 0;
          onChanged();
          return this;
        }

        private java.util.List<java.lang.Integer> cmBans_ = java.util.Collections.emptyList();
        private void ensureCmBansIsMutable() {
          if (!((bitField0_ & 0x00000080) == 0x00000080)) {
            cmBans_ = new java.util.ArrayList<java.lang.Integer>(cmBans_);
            bitField0_ |= 0x00000080;
           }
        }
        /**
         * <code>repeated uint32 cm_bans = 8;</code>
         */
        public java.util.List<java.lang.Integer>
            getCmBansList() {
          return java.util.Collections.unmodifiableList(cmBans_);
        }
        /**
         * <code>repeated uint32 cm_bans = 8;</code>
         */
        public int getCmBansCount() {
          return cmBans_.size();
        }
        /**
         * <code>repeated uint32 cm_bans = 8;</code>
         */
        public int getCmBans(int index) {
          return cmBans_.get(index);
        }
        /**
         * <code>repeated uint32 cm_bans = 8;</code>
         */
        public Builder setCmBans(
            int index, int value) {
          ensureCmBansIsMutable();
          cmBans_.set(index, value);
          onChanged();
          return this;
        }
        /**
         * <code>repeated uint32 cm_bans = 8;</code>
         */
        public Builder addCmBans(int value) {
          ensureCmBansIsMutable();
          cmBans_.add(value);
          onChanged();
          return this;
        }
        /**
         * <code>repeated uint32 cm_bans = 8;</code>
         */
        public Builder addAllCmBans(
            java.lang.Iterable<? extends java.lang.Integer> values) {
          ensureCmBansIsMutable();
          com.google.protobuf.AbstractMessageLite.Builder.addAll(
              values, cmBans_);
          onChanged();
          return this;
        }
        /**
         * <code>repeated uint32 cm_bans = 8;</code>
         */
        public Builder clearCmBans() {
          cmBans_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000080);
          onChanged();
          return this;
        }

        private java.util.List<java.lang.Integer> cmPicks_ = java.util.Collections.emptyList();
        private void ensureCmPicksIsMutable() {
          if (!((bitField0_ & 0x00000100) == 0x00000100)) {
            cmPicks_ = new java.util.ArrayList<java.lang.Integer>(cmPicks_);
            bitField0_ |= 0x00000100;
           }
        }
        /**
         * <code>repeated uint32 cm_picks = 9;</code>
         */
        public java.util.List<java.lang.Integer>
            getCmPicksList() {
          return java.util.Collections.unmodifiableList(cmPicks_);
        }
        /**
         * <code>repeated uint32 cm_picks = 9;</code>
         */
        public int getCmPicksCount() {
          return cmPicks_.size();
        }
        /**
         * <code>repeated uint32 cm_picks = 9;</code>
         */
        public int getCmPicks(int index) {
          return cmPicks_.get(index);
        }
        /**
         * <code>repeated uint32 cm_picks = 9;</code>
         */
        public Builder setCmPicks(
            int index, int value) {
          ensureCmPicksIsMutable();
          cmPicks_.set(index, value);
          onChanged();
          return this;
        }
        /**
         * <code>repeated uint32 cm_picks = 9;</code>
         */
        public Builder addCmPicks(int value) {
          ensureCmPicksIsMutable();
          cmPicks_.add(value);
          onChanged();
          return this;
        }
        /**
         * <code>repeated uint32 cm_picks = 9;</code>
         */
        public Builder addAllCmPicks(
            java.lang.Iterable<? extends java.lang.Integer> values) {
          ensureCmPicksIsMutable();
          com.google.protobuf.AbstractMessageLite.Builder.addAll(
              values, cmPicks_);
          onChanged();
          return this;
        }
        /**
         * <code>repeated uint32 cm_picks = 9;</code>
         */
        public Builder clearCmPicks() {
          cmPicks_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000100);
          onChanged();
          return this;
        }

        private int cmPenalty_ ;
        /**
         * <code>optional uint32 cm_penalty = 10;</code>
         */
        public boolean hasCmPenalty() {
          return ((bitField0_ & 0x00000200) == 0x00000200);
        }
        /**
         * <code>optional uint32 cm_penalty = 10;</code>
         */
        public int getCmPenalty() {
          return cmPenalty_;
        }
        /**
         * <code>optional uint32 cm_penalty = 10;</code>
         */
        public Builder setCmPenalty(int value) {
          bitField0_ |= 0x00000200;
          cmPenalty_ = value;
          onChanged();
          return this;
        }
        /**
         * <code>optional uint32 cm_penalty = 10;</code>
         */
        public Builder clearCmPenalty() {
          bitField0_ = (bitField0_ & ~0x00000200);
          cmPenalty_ = 0;
          onChanged();
          return this;
        }

        // @@protoc_insertion_point(builder_scope:CDOTAMatchMetadata.Team)
      }

      static {
        defaultInstance = new Team(true);
        defaultInstance.initFields();
      }

      // @@protoc_insertion_point(class_scope:CDOTAMatchMetadata.Team)
    }

    public static final int TEAMS_FIELD_NUMBER = 1;
    private java.util.List<skadistats.clarity.wire.s2.proto.S2DotaMatchMetadata.CDOTAMatchMetadata.Team> teams_;
    /**
     * <code>repeated .CDOTAMatchMetadata.Team teams = 1;</code>
     */
    public java.util.List<skadistats.clarity.wire.s2.proto.S2DotaMatchMetadata.CDOTAMatchMetadata.Team> getTeamsList() {
      return teams_;
    }
    /**
     * <code>repeated .CDOTAMatchMetadata.Team teams = 1;</code>
     */
    public java.util.List<? extends skadistats.clarity.wire.s2.proto.S2DotaMatchMetadata.CDOTAMatchMetadata.TeamOrBuilder> 
        getTeamsOrBuilderList() {
      return teams_;
    }
    /**
     * <code>repeated .CDOTAMatchMetadata.Team teams = 1;</code>
     */
    public int getTeamsCount() {
      return teams_.size();
    }
    /**
     * <code>repeated .CDOTAMatchMetadata.Team teams = 1;</code>
     */
    public skadistats.clarity.wire.s2.proto.S2DotaMatchMetadata.CDOTAMatchMetadata.Team getTeams(int index) {
      return teams_.get(index);
    }
    /**
     * <code>repeated .CDOTAMatchMetadata.Team teams = 1;</code>
     */
    public skadistats.clarity.wire.s2.proto.S2DotaMatchMetadata.CDOTAMatchMetadata.TeamOrBuilder getTeamsOrBuilder(
        int index) {
      return teams_.get(index);
    }

    public static final int ITEM_REWARDS_FIELD_NUMBER = 2;
    private java.util.List<skadistats.clarity.wire.s2.proto.S2DotaMatchMetadata.CLobbyTimedRewardDetails> itemRewards_;
    /**
     * <code>repeated .CLobbyTimedRewardDetails item_rewards = 2;</code>
     */
    public java.util.List<skadistats.clarity.wire.s2.proto.S2DotaMatchMetadata.CLobbyTimedRewardDetails> getItemRewardsList() {
      return itemRewards_;
    }
    /**
     * <code>repeated .CLobbyTimedRewardDetails item_rewards = 2;</code>
     */
    public java.util.List<? extends skadistats.clarity.wire.s2.proto.S2DotaMatchMetadata.CLobbyTimedRewardDetailsOrBuilder> 
        getItemRewardsOrBuilderList() {
      return itemRewards_;
    }
    /**
     * <code>repeated .CLobbyTimedRewardDetails item_rewards = 2;</code>
     */
    public int getItemRewardsCount() {
      return itemRewards_.size();
    }
    /**
     * <code>repeated .CLobbyTimedRewardDetails item_rewards = 2;</code>
     */
    public skadistats.clarity.wire.s2.proto.S2DotaMatchMetadata.CLobbyTimedRewardDetails getItemRewards(int index) {
      return itemRewards_.get(index);
    }
    /**
     * <code>repeated .CLobbyTimedRewardDetails item_rewards = 2;</code>
     */
    public skadistats.clarity.wire.s2.proto.S2DotaMatchMetadata.CLobbyTimedRewardDetailsOrBuilder getItemRewardsOrBuilder(
        int index) {
      return itemRewards_.get(index);
    }

    private void initFields() {
      teams_ = java.util.Collections.emptyList();
      itemRewards_ = java.util.Collections.emptyList();
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      for (int i = 0; i < teams_.size(); i++) {
        output.writeMessage(1, teams_.get(i));
      }
      for (int i = 0; i < itemRewards_.size(); i++) {
        output.writeMessage(2, itemRewards_.get(i));
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      for (int i = 0; i < teams_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(1, teams_.get(i));
      }
      for (int i = 0; i < itemRewards_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(2, itemRewards_.get(i));
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static skadistats.clarity.wire.s2.proto.S2DotaMatchMetadata.CDOTAMatchMetadata parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static skadistats.clarity.wire.s2.proto.S2DotaMatchMetadata.CDOTAMatchMetadata parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static skadistats.clarity.wire.s2.proto.S2DotaMatchMetadata.CDOTAMatchMetadata parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static skadistats.clarity.wire.s2.proto.S2DotaMatchMetadata.CDOTAMatchMetadata parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static skadistats.clarity.wire.s2.proto.S2DotaMatchMetadata.CDOTAMatchMetadata parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static skadistats.clarity.wire.s2.proto.S2DotaMatchMetadata.CDOTAMatchMetadata parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static skadistats.clarity.wire.s2.proto.S2DotaMatchMetadata.CDOTAMatchMetadata parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static skadistats.clarity.wire.s2.proto.S2DotaMatchMetadata.CDOTAMatchMetadata parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static skadistats.clarity.wire.s2.proto.S2DotaMatchMetadata.CDOTAMatchMetadata parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static skadistats.clarity.wire.s2.proto.S2DotaMatchMetadata.CDOTAMatchMetadata parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(skadistats.clarity.wire.s2.proto.S2DotaMatchMetadata.CDOTAMatchMetadata prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code CDOTAMatchMetadata}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:CDOTAMatchMetadata)
        skadistats.clarity.wire.s2.proto.S2DotaMatchMetadata.CDOTAMatchMetadataOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return skadistats.clarity.wire.s2.proto.S2DotaMatchMetadata.internal_static_CDOTAMatchMetadata_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return skadistats.clarity.wire.s2.proto.S2DotaMatchMetadata.internal_static_CDOTAMatchMetadata_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                skadistats.clarity.wire.s2.proto.S2DotaMatchMetadata.CDOTAMatchMetadata.class, skadistats.clarity.wire.s2.proto.S2DotaMatchMetadata.CDOTAMatchMetadata.Builder.class);
      }

      // Construct using skadistats.clarity.wire.s2.proto.S2DotaMatchMetadata.CDOTAMatchMetadata.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
          getTeamsFieldBuilder();
          getItemRewardsFieldBuilder();
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        if (teamsBuilder_ == null) {
          teams_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000001);
        } else {
          teamsBuilder_.clear();
        }
        if (itemRewardsBuilder_ == null) {
          itemRewards_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000002);
        } else {
          itemRewardsBuilder_.clear();
        }
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return skadistats.clarity.wire.s2.proto.S2DotaMatchMetadata.internal_static_CDOTAMatchMetadata_descriptor;
      }

      public skadistats.clarity.wire.s2.proto.S2DotaMatchMetadata.CDOTAMatchMetadata getDefaultInstanceForType() {
        return skadistats.clarity.wire.s2.proto.S2DotaMatchMetadata.CDOTAMatchMetadata.getDefaultInstance();
      }

      public skadistats.clarity.wire.s2.proto.S2DotaMatchMetadata.CDOTAMatchMetadata build() {
        skadistats.clarity.wire.s2.proto.S2DotaMatchMetadata.CDOTAMatchMetadata result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public skadistats.clarity.wire.s2.proto.S2DotaMatchMetadata.CDOTAMatchMetadata buildPartial() {
        skadistats.clarity.wire.s2.proto.S2DotaMatchMetadata.CDOTAMatchMetadata result = new skadistats.clarity.wire.s2.proto.S2DotaMatchMetadata.CDOTAMatchMetadata(this);
        int from_bitField0_ = bitField0_;
        if (teamsBuilder_ == null) {
          if (((bitField0_ & 0x00000001) == 0x00000001)) {
            teams_ = java.util.Collections.unmodifiableList(teams_);
            bitField0_ = (bitField0_ & ~0x00000001);
          }
          result.teams_ = teams_;
        } else {
          result.teams_ = teamsBuilder_.build();
        }
        if (itemRewardsBuilder_ == null) {
          if (((bitField0_ & 0x00000002) == 0x00000002)) {
            itemRewards_ = java.util.Collections.unmodifiableList(itemRewards_);
            bitField0_ = (bitField0_ & ~0x00000002);
          }
          result.itemRewards_ = itemRewards_;
        } else {
          result.itemRewards_ = itemRewardsBuilder_.build();
        }
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof skadistats.clarity.wire.s2.proto.S2DotaMatchMetadata.CDOTAMatchMetadata) {
          return mergeFrom((skadistats.clarity.wire.s2.proto.S2DotaMatchMetadata.CDOTAMatchMetadata)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(skadistats.clarity.wire.s2.proto.S2DotaMatchMetadata.CDOTAMatchMetadata other) {
        if (other == skadistats.clarity.wire.s2.proto.S2DotaMatchMetadata.CDOTAMatchMetadata.getDefaultInstance()) return this;
        if (teamsBuilder_ == null) {
          if (!other.teams_.isEmpty()) {
            if (teams_.isEmpty()) {
              teams_ = other.teams_;
              bitField0_ = (bitField0_ & ~0x00000001);
            } else {
              ensureTeamsIsMutable();
              teams_.addAll(other.teams_);
            }
            onChanged();
          }
        } else {
          if (!other.teams_.isEmpty()) {
            if (teamsBuilder_.isEmpty()) {
              teamsBuilder_.dispose();
              teamsBuilder_ = null;
              teams_ = other.teams_;
              bitField0_ = (bitField0_ & ~0x00000001);
              teamsBuilder_ = 
                com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders ?
                   getTeamsFieldBuilder() : null;
            } else {
              teamsBuilder_.addAllMessages(other.teams_);
            }
          }
        }
        if (itemRewardsBuilder_ == null) {
          if (!other.itemRewards_.isEmpty()) {
            if (itemRewards_.isEmpty()) {
              itemRewards_ = other.itemRewards_;
              bitField0_ = (bitField0_ & ~0x00000002);
            } else {
              ensureItemRewardsIsMutable();
              itemRewards_.addAll(other.itemRewards_);
            }
            onChanged();
          }
        } else {
          if (!other.itemRewards_.isEmpty()) {
            if (itemRewardsBuilder_.isEmpty()) {
              itemRewardsBuilder_.dispose();
              itemRewardsBuilder_ = null;
              itemRewards_ = other.itemRewards_;
              bitField0_ = (bitField0_ & ~0x00000002);
              itemRewardsBuilder_ = 
                com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders ?
                   getItemRewardsFieldBuilder() : null;
            } else {
              itemRewardsBuilder_.addAllMessages(other.itemRewards_);
            }
          }
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        skadistats.clarity.wire.s2.proto.S2DotaMatchMetadata.CDOTAMatchMetadata parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (skadistats.clarity.wire.s2.proto.S2DotaMatchMetadata.CDOTAMatchMetadata) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private java.util.List<skadistats.clarity.wire.s2.proto.S2DotaMatchMetadata.CDOTAMatchMetadata.Team> teams_ =
        java.util.Collections.emptyList();
      private void ensureTeamsIsMutable() {
        if (!((bitField0_ & 0x00000001) == 0x00000001)) {
          teams_ = new java.util.ArrayList<skadistats.clarity.wire.s2.proto.S2DotaMatchMetadata.CDOTAMatchMetadata.Team>(teams_);
          bitField0_ |= 0x00000001;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilder<
          skadistats.clarity.wire.s2.proto.S2DotaMatchMetadata.CDOTAMatchMetadata.Team, skadistats.clarity.wire.s2.proto.S2DotaMatchMetadata.CDOTAMatchMetadata.Team.Builder, skadistats.clarity.wire.s2.proto.S2DotaMatchMetadata.CDOTAMatchMetadata.TeamOrBuilder> teamsBuilder_;

      /**
       * <code>repeated .CDOTAMatchMetadata.Team teams = 1;</code>
       */
      public java.util.List<skadistats.clarity.wire.s2.proto.S2DotaMatchMetadata.CDOTAMatchMetadata.Team> getTeamsList() {
        if (teamsBuilder_ == null) {
          return java.util.Collections.unmodifiableList(teams_);
        } else {
          return teamsBuilder_.getMessageList();
        }
      }
      /**
       * <code>repeated .CDOTAMatchMetadata.Team teams = 1;</code>
       */
      public int getTeamsCount() {
        if (teamsBuilder_ == null) {
          return teams_.size();
        } else {
          return teamsBuilder_.getCount();
        }
      }
      /**
       * <code>repeated .CDOTAMatchMetadata.Team teams = 1;</code>
       */
      public skadistats.clarity.wire.s2.proto.S2DotaMatchMetadata.CDOTAMatchMetadata.Team getTeams(int index) {
        if (teamsBuilder_ == null) {
          return teams_.get(index);
        } else {
          return teamsBuilder_.getMessage(index);
        }
      }
      /**
       * <code>repeated .CDOTAMatchMetadata.Team teams = 1;</code>
       */
      public Builder setTeams(
          int index, skadistats.clarity.wire.s2.proto.S2DotaMatchMetadata.CDOTAMatchMetadata.Team value) {
        if (teamsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureTeamsIsMutable();
          teams_.set(index, value);
          onChanged();
        } else {
          teamsBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .CDOTAMatchMetadata.Team teams = 1;</code>
       */
      public Builder setTeams(
          int index, skadistats.clarity.wire.s2.proto.S2DotaMatchMetadata.CDOTAMatchMetadata.Team.Builder builderForValue) {
        if (teamsBuilder_ == null) {
          ensureTeamsIsMutable();
          teams_.set(index, builderForValue.build());
          onChanged();
        } else {
          teamsBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .CDOTAMatchMetadata.Team teams = 1;</code>
       */
      public Builder addTeams(skadistats.clarity.wire.s2.proto.S2DotaMatchMetadata.CDOTAMatchMetadata.Team value) {
        if (teamsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureTeamsIsMutable();
          teams_.add(value);
          onChanged();
        } else {
          teamsBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <code>repeated .CDOTAMatchMetadata.Team teams = 1;</code>
       */
      public Builder addTeams(
          int index, skadistats.clarity.wire.s2.proto.S2DotaMatchMetadata.CDOTAMatchMetadata.Team value) {
        if (teamsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureTeamsIsMutable();
          teams_.add(index, value);
          onChanged();
        } else {
          teamsBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .CDOTAMatchMetadata.Team teams = 1;</code>
       */
      public Builder addTeams(
          skadistats.clarity.wire.s2.proto.S2DotaMatchMetadata.CDOTAMatchMetadata.Team.Builder builderForValue) {
        if (teamsBuilder_ == null) {
          ensureTeamsIsMutable();
          teams_.add(builderForValue.build());
          onChanged();
        } else {
          teamsBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .CDOTAMatchMetadata.Team teams = 1;</code>
       */
      public Builder addTeams(
          int index, skadistats.clarity.wire.s2.proto.S2DotaMatchMetadata.CDOTAMatchMetadata.Team.Builder builderForValue) {
        if (teamsBuilder_ == null) {
          ensureTeamsIsMutable();
          teams_.add(index, builderForValue.build());
          onChanged();
        } else {
          teamsBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .CDOTAMatchMetadata.Team teams = 1;</code>
       */
      public Builder addAllTeams(
          java.lang.Iterable<? extends skadistats.clarity.wire.s2.proto.S2DotaMatchMetadata.CDOTAMatchMetadata.Team> values) {
        if (teamsBuilder_ == null) {
          ensureTeamsIsMutable();
          com.google.protobuf.AbstractMessageLite.Builder.addAll(
              values, teams_);
          onChanged();
        } else {
          teamsBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <code>repeated .CDOTAMatchMetadata.Team teams = 1;</code>
       */
      public Builder clearTeams() {
        if (teamsBuilder_ == null) {
          teams_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000001);
          onChanged();
        } else {
          teamsBuilder_.clear();
        }
        return this;
      }
      /**
       * <code>repeated .CDOTAMatchMetadata.Team teams = 1;</code>
       */
      public Builder removeTeams(int index) {
        if (teamsBuilder_ == null) {
          ensureTeamsIsMutable();
          teams_.remove(index);
          onChanged();
        } else {
          teamsBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <code>repeated .CDOTAMatchMetadata.Team teams = 1;</code>
       */
      public skadistats.clarity.wire.s2.proto.S2DotaMatchMetadata.CDOTAMatchMetadata.Team.Builder getTeamsBuilder(
          int index) {
        return getTeamsFieldBuilder().getBuilder(index);
      }
      /**
       * <code>repeated .CDOTAMatchMetadata.Team teams = 1;</code>
       */
      public skadistats.clarity.wire.s2.proto.S2DotaMatchMetadata.CDOTAMatchMetadata.TeamOrBuilder getTeamsOrBuilder(
          int index) {
        if (teamsBuilder_ == null) {
          return teams_.get(index);  } else {
          return teamsBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <code>repeated .CDOTAMatchMetadata.Team teams = 1;</code>
       */
      public java.util.List<? extends skadistats.clarity.wire.s2.proto.S2DotaMatchMetadata.CDOTAMatchMetadata.TeamOrBuilder> 
           getTeamsOrBuilderList() {
        if (teamsBuilder_ != null) {
          return teamsBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(teams_);
        }
      }
      /**
       * <code>repeated .CDOTAMatchMetadata.Team teams = 1;</code>
       */
      public skadistats.clarity.wire.s2.proto.S2DotaMatchMetadata.CDOTAMatchMetadata.Team.Builder addTeamsBuilder() {
        return getTeamsFieldBuilder().addBuilder(
            skadistats.clarity.wire.s2.proto.S2DotaMatchMetadata.CDOTAMatchMetadata.Team.getDefaultInstance());
      }
      /**
       * <code>repeated .CDOTAMatchMetadata.Team teams = 1;</code>
       */
      public skadistats.clarity.wire.s2.proto.S2DotaMatchMetadata.CDOTAMatchMetadata.Team.Builder addTeamsBuilder(
          int index) {
        return getTeamsFieldBuilder().addBuilder(
            index, skadistats.clarity.wire.s2.proto.S2DotaMatchMetadata.CDOTAMatchMetadata.Team.getDefaultInstance());
      }
      /**
       * <code>repeated .CDOTAMatchMetadata.Team teams = 1;</code>
       */
      public java.util.List<skadistats.clarity.wire.s2.proto.S2DotaMatchMetadata.CDOTAMatchMetadata.Team.Builder> 
           getTeamsBuilderList() {
        return getTeamsFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilder<
          skadistats.clarity.wire.s2.proto.S2DotaMatchMetadata.CDOTAMatchMetadata.Team, skadistats.clarity.wire.s2.proto.S2DotaMatchMetadata.CDOTAMatchMetadata.Team.Builder, skadistats.clarity.wire.s2.proto.S2DotaMatchMetadata.CDOTAMatchMetadata.TeamOrBuilder> 
          getTeamsFieldBuilder() {
        if (teamsBuilder_ == null) {
          teamsBuilder_ = new com.google.protobuf.RepeatedFieldBuilder<
              skadistats.clarity.wire.s2.proto.S2DotaMatchMetadata.CDOTAMatchMetadata.Team, skadistats.clarity.wire.s2.proto.S2DotaMatchMetadata.CDOTAMatchMetadata.Team.Builder, skadistats.clarity.wire.s2.proto.S2DotaMatchMetadata.CDOTAMatchMetadata.TeamOrBuilder>(
                  teams_,
                  ((bitField0_ & 0x00000001) == 0x00000001),
                  getParentForChildren(),
                  isClean());
          teams_ = null;
        }
        return teamsBuilder_;
      }

      private java.util.List<skadistats.clarity.wire.s2.proto.S2DotaMatchMetadata.CLobbyTimedRewardDetails> itemRewards_ =
        java.util.Collections.emptyList();
      private void ensureItemRewardsIsMutable() {
        if (!((bitField0_ & 0x00000002) == 0x00000002)) {
          itemRewards_ = new java.util.ArrayList<skadistats.clarity.wire.s2.proto.S2DotaMatchMetadata.CLobbyTimedRewardDetails>(itemRewards_);
          bitField0_ |= 0x00000002;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilder<
          skadistats.clarity.wire.s2.proto.S2DotaMatchMetadata.CLobbyTimedRewardDetails, skadistats.clarity.wire.s2.proto.S2DotaMatchMetadata.CLobbyTimedRewardDetails.Builder, skadistats.clarity.wire.s2.proto.S2DotaMatchMetadata.CLobbyTimedRewardDetailsOrBuilder> itemRewardsBuilder_;

      /**
       * <code>repeated .CLobbyTimedRewardDetails item_rewards = 2;</code>
       */
      public java.util.List<skadistats.clarity.wire.s2.proto.S2DotaMatchMetadata.CLobbyTimedRewardDetails> getItemRewardsList() {
        if (itemRewardsBuilder_ == null) {
          return java.util.Collections.unmodifiableList(itemRewards_);
        } else {
          return itemRewardsBuilder_.getMessageList();
        }
      }
      /**
       * <code>repeated .CLobbyTimedRewardDetails item_rewards = 2;</code>
       */
      public int getItemRewardsCount() {
        if (itemRewardsBuilder_ == null) {
          return itemRewards_.size();
        } else {
          return itemRewardsBuilder_.getCount();
        }
      }
      /**
       * <code>repeated .CLobbyTimedRewardDetails item_rewards = 2;</code>
       */
      public skadistats.clarity.wire.s2.proto.S2DotaMatchMetadata.CLobbyTimedRewardDetails getItemRewards(int index) {
        if (itemRewardsBuilder_ == null) {
          return itemRewards_.get(index);
        } else {
          return itemRewardsBuilder_.getMessage(index);
        }
      }
      /**
       * <code>repeated .CLobbyTimedRewardDetails item_rewards = 2;</code>
       */
      public Builder setItemRewards(
          int index, skadistats.clarity.wire.s2.proto.S2DotaMatchMetadata.CLobbyTimedRewardDetails value) {
        if (itemRewardsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureItemRewardsIsMutable();
          itemRewards_.set(index, value);
          onChanged();
        } else {
          itemRewardsBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .CLobbyTimedRewardDetails item_rewards = 2;</code>
       */
      public Builder setItemRewards(
          int index, skadistats.clarity.wire.s2.proto.S2DotaMatchMetadata.CLobbyTimedRewardDetails.Builder builderForValue) {
        if (itemRewardsBuilder_ == null) {
          ensureItemRewardsIsMutable();
          itemRewards_.set(index, builderForValue.build());
          onChanged();
        } else {
          itemRewardsBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .CLobbyTimedRewardDetails item_rewards = 2;</code>
       */
      public Builder addItemRewards(skadistats.clarity.wire.s2.proto.S2DotaMatchMetadata.CLobbyTimedRewardDetails value) {
        if (itemRewardsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureItemRewardsIsMutable();
          itemRewards_.add(value);
          onChanged();
        } else {
          itemRewardsBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <code>repeated .CLobbyTimedRewardDetails item_rewards = 2;</code>
       */
      public Builder addItemRewards(
          int index, skadistats.clarity.wire.s2.proto.S2DotaMatchMetadata.CLobbyTimedRewardDetails value) {
        if (itemRewardsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureItemRewardsIsMutable();
          itemRewards_.add(index, value);
          onChanged();
        } else {
          itemRewardsBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .CLobbyTimedRewardDetails item_rewards = 2;</code>
       */
      public Builder addItemRewards(
          skadistats.clarity.wire.s2.proto.S2DotaMatchMetadata.CLobbyTimedRewardDetails.Builder builderForValue) {
        if (itemRewardsBuilder_ == null) {
          ensureItemRewardsIsMutable();
          itemRewards_.add(builderForValue.build());
          onChanged();
        } else {
          itemRewardsBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .CLobbyTimedRewardDetails item_rewards = 2;</code>
       */
      public Builder addItemRewards(
          int index, skadistats.clarity.wire.s2.proto.S2DotaMatchMetadata.CLobbyTimedRewardDetails.Builder builderForValue) {
        if (itemRewardsBuilder_ == null) {
          ensureItemRewardsIsMutable();
          itemRewards_.add(index, builderForValue.build());
          onChanged();
        } else {
          itemRewardsBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .CLobbyTimedRewardDetails item_rewards = 2;</code>
       */
      public Builder addAllItemRewards(
          java.lang.Iterable<? extends skadistats.clarity.wire.s2.proto.S2DotaMatchMetadata.CLobbyTimedRewardDetails> values) {
        if (itemRewardsBuilder_ == null) {
          ensureItemRewardsIsMutable();
          com.google.protobuf.AbstractMessageLite.Builder.addAll(
              values, itemRewards_);
          onChanged();
        } else {
          itemRewardsBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <code>repeated .CLobbyTimedRewardDetails item_rewards = 2;</code>
       */
      public Builder clearItemRewards() {
        if (itemRewardsBuilder_ == null) {
          itemRewards_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000002);
          onChanged();
        } else {
          itemRewardsBuilder_.clear();
        }
        return this;
      }
      /**
       * <code>repeated .CLobbyTimedRewardDetails item_rewards = 2;</code>
       */
      public Builder removeItemRewards(int index) {
        if (itemRewardsBuilder_ == null) {
          ensureItemRewardsIsMutable();
          itemRewards_.remove(index);
          onChanged();
        } else {
          itemRewardsBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <code>repeated .CLobbyTimedRewardDetails item_rewards = 2;</code>
       */
      public skadistats.clarity.wire.s2.proto.S2DotaMatchMetadata.CLobbyTimedRewardDetails.Builder getItemRewardsBuilder(
          int index) {
        return getItemRewardsFieldBuilder().getBuilder(index);
      }
      /**
       * <code>repeated .CLobbyTimedRewardDetails item_rewards = 2;</code>
       */
      public skadistats.clarity.wire.s2.proto.S2DotaMatchMetadata.CLobbyTimedRewardDetailsOrBuilder getItemRewardsOrBuilder(
          int index) {
        if (itemRewardsBuilder_ == null) {
          return itemRewards_.get(index);  } else {
          return itemRewardsBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <code>repeated .CLobbyTimedRewardDetails item_rewards = 2;</code>
       */
      public java.util.List<? extends skadistats.clarity.wire.s2.proto.S2DotaMatchMetadata.CLobbyTimedRewardDetailsOrBuilder> 
           getItemRewardsOrBuilderList() {
        if (itemRewardsBuilder_ != null) {
          return itemRewardsBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(itemRewards_);
        }
      }
      /**
       * <code>repeated .CLobbyTimedRewardDetails item_rewards = 2;</code>
       */
      public skadistats.clarity.wire.s2.proto.S2DotaMatchMetadata.CLobbyTimedRewardDetails.Builder addItemRewardsBuilder() {
        return getItemRewardsFieldBuilder().addBuilder(
            skadistats.clarity.wire.s2.proto.S2DotaMatchMetadata.CLobbyTimedRewardDetails.getDefaultInstance());
      }
      /**
       * <code>repeated .CLobbyTimedRewardDetails item_rewards = 2;</code>
       */
      public skadistats.clarity.wire.s2.proto.S2DotaMatchMetadata.CLobbyTimedRewardDetails.Builder addItemRewardsBuilder(
          int index) {
        return getItemRewardsFieldBuilder().addBuilder(
            index, skadistats.clarity.wire.s2.proto.S2DotaMatchMetadata.CLobbyTimedRewardDetails.getDefaultInstance());
      }
      /**
       * <code>repeated .CLobbyTimedRewardDetails item_rewards = 2;</code>
       */
      public java.util.List<skadistats.clarity.wire.s2.proto.S2DotaMatchMetadata.CLobbyTimedRewardDetails.Builder> 
           getItemRewardsBuilderList() {
        return getItemRewardsFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilder<
          skadistats.clarity.wire.s2.proto.S2DotaMatchMetadata.CLobbyTimedRewardDetails, skadistats.clarity.wire.s2.proto.S2DotaMatchMetadata.CLobbyTimedRewardDetails.Builder, skadistats.clarity.wire.s2.proto.S2DotaMatchMetadata.CLobbyTimedRewardDetailsOrBuilder> 
          getItemRewardsFieldBuilder() {
        if (itemRewardsBuilder_ == null) {
          itemRewardsBuilder_ = new com.google.protobuf.RepeatedFieldBuilder<
              skadistats.clarity.wire.s2.proto.S2DotaMatchMetadata.CLobbyTimedRewardDetails, skadistats.clarity.wire.s2.proto.S2DotaMatchMetadata.CLobbyTimedRewardDetails.Builder, skadistats.clarity.wire.s2.proto.S2DotaMatchMetadata.CLobbyTimedRewardDetailsOrBuilder>(
                  itemRewards_,
                  ((bitField0_ & 0x00000002) == 0x00000002),
                  getParentForChildren(),
                  isClean());
          itemRewards_ = null;
        }
        return itemRewardsBuilder_;
      }

      // @@protoc_insertion_point(builder_scope:CDOTAMatchMetadata)
    }

    static {
      defaultInstance = new CDOTAMatchMetadata(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:CDOTAMatchMetadata)
  }

  public interface CDOTAMatchPrivateMetadataOrBuilder extends
      // @@protoc_insertion_point(interface_extends:CDOTAMatchPrivateMetadata)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>repeated .CDOTAMatchPrivateMetadata.Kill kills = 1;</code>
     */
    java.util.List<skadistats.clarity.wire.s2.proto.S2DotaMatchMetadata.CDOTAMatchPrivateMetadata.Kill> 
        getKillsList();
    /**
     * <code>repeated .CDOTAMatchPrivateMetadata.Kill kills = 1;</code>
     */
    skadistats.clarity.wire.s2.proto.S2DotaMatchMetadata.CDOTAMatchPrivateMetadata.Kill getKills(int index);
    /**
     * <code>repeated .CDOTAMatchPrivateMetadata.Kill kills = 1;</code>
     */
    int getKillsCount();
    /**
     * <code>repeated .CDOTAMatchPrivateMetadata.Kill kills = 1;</code>
     */
    java.util.List<? extends skadistats.clarity.wire.s2.proto.S2DotaMatchMetadata.CDOTAMatchPrivateMetadata.KillOrBuilder> 
        getKillsOrBuilderList();
    /**
     * <code>repeated .CDOTAMatchPrivateMetadata.Kill kills = 1;</code>
     */
    skadistats.clarity.wire.s2.proto.S2DotaMatchMetadata.CDOTAMatchPrivateMetadata.KillOrBuilder getKillsOrBuilder(
        int index);

    /**
     * <code>optional string test_string = 100;</code>
     */
    boolean hasTestString();
    /**
     * <code>optional string test_string = 100;</code>
     */
    java.lang.String getTestString();
    /**
     * <code>optional string test_string = 100;</code>
     */
    com.google.protobuf.ByteString
        getTestStringBytes();
  }
  /**
   * Protobuf type {@code CDOTAMatchPrivateMetadata}
   */
  public static final class CDOTAMatchPrivateMetadata extends
      com.google.protobuf.GeneratedMessage implements
      // @@protoc_insertion_point(message_implements:CDOTAMatchPrivateMetadata)
      CDOTAMatchPrivateMetadataOrBuilder {
    // Use CDOTAMatchPrivateMetadata.newBuilder() to construct.
    private CDOTAMatchPrivateMetadata(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private CDOTAMatchPrivateMetadata(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final CDOTAMatchPrivateMetadata defaultInstance;
    public static CDOTAMatchPrivateMetadata getDefaultInstance() {
      return defaultInstance;
    }

    public CDOTAMatchPrivateMetadata getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private CDOTAMatchPrivateMetadata(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 10: {
              if (!((mutable_bitField0_ & 0x00000001) == 0x00000001)) {
                kills_ = new java.util.ArrayList<skadistats.clarity.wire.s2.proto.S2DotaMatchMetadata.CDOTAMatchPrivateMetadata.Kill>();
                mutable_bitField0_ |= 0x00000001;
              }
              kills_.add(input.readMessage(skadistats.clarity.wire.s2.proto.S2DotaMatchMetadata.CDOTAMatchPrivateMetadata.Kill.PARSER, extensionRegistry));
              break;
            }
            case 802: {
              com.google.protobuf.ByteString bs = input.readBytes();
              bitField0_ |= 0x00000001;
              testString_ = bs;
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        if (((mutable_bitField0_ & 0x00000001) == 0x00000001)) {
          kills_ = java.util.Collections.unmodifiableList(kills_);
        }
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return skadistats.clarity.wire.s2.proto.S2DotaMatchMetadata.internal_static_CDOTAMatchPrivateMetadata_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return skadistats.clarity.wire.s2.proto.S2DotaMatchMetadata.internal_static_CDOTAMatchPrivateMetadata_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              skadistats.clarity.wire.s2.proto.S2DotaMatchMetadata.CDOTAMatchPrivateMetadata.class, skadistats.clarity.wire.s2.proto.S2DotaMatchMetadata.CDOTAMatchPrivateMetadata.Builder.class);
    }

    public static com.google.protobuf.Parser<CDOTAMatchPrivateMetadata> PARSER =
        new com.google.protobuf.AbstractParser<CDOTAMatchPrivateMetadata>() {
      public CDOTAMatchPrivateMetadata parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new CDOTAMatchPrivateMetadata(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<CDOTAMatchPrivateMetadata> getParserForType() {
      return PARSER;
    }

    public interface KillOrBuilder extends
        // @@protoc_insertion_point(interface_extends:CDOTAMatchPrivateMetadata.Kill)
        com.google.protobuf.MessageOrBuilder {

      /**
       * <code>optional int32 timestamp = 1;</code>
       */
      boolean hasTimestamp();
      /**
       * <code>optional int32 timestamp = 1;</code>
       */
      int getTimestamp();

      /**
       * <code>optional uint32 killer_hero_id = 2;</code>
       */
      boolean hasKillerHeroId();
      /**
       * <code>optional uint32 killer_hero_id = 2;</code>
       */
      int getKillerHeroId();

      /**
       * <code>optional uint32 victim_hero_id = 3;</code>
       */
      boolean hasVictimHeroId();
      /**
       * <code>optional uint32 victim_hero_id = 3;</code>
       */
      int getVictimHeroId();

      /**
       * <code>repeated uint32 assist_hero_ids = 4;</code>
       */
      java.util.List<java.lang.Integer> getAssistHeroIdsList();
      /**
       * <code>repeated uint32 assist_hero_ids = 4;</code>
       */
      int getAssistHeroIdsCount();
      /**
       * <code>repeated uint32 assist_hero_ids = 4;</code>
       */
      int getAssistHeroIds(int index);
    }
    /**
     * Protobuf type {@code CDOTAMatchPrivateMetadata.Kill}
     */
    public static final class Kill extends
        com.google.protobuf.GeneratedMessage implements
        // @@protoc_insertion_point(message_implements:CDOTAMatchPrivateMetadata.Kill)
        KillOrBuilder {
      // Use Kill.newBuilder() to construct.
      private Kill(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
        super(builder);
        this.unknownFields = builder.getUnknownFields();
      }
      private Kill(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

      private static final Kill defaultInstance;
      public static Kill getDefaultInstance() {
        return defaultInstance;
      }

      public Kill getDefaultInstanceForType() {
        return defaultInstance;
      }

      private final com.google.protobuf.UnknownFieldSet unknownFields;
      @java.lang.Override
      public final com.google.protobuf.UnknownFieldSet
          getUnknownFields() {
        return this.unknownFields;
      }
      private Kill(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        initFields();
        int mutable_bitField0_ = 0;
        com.google.protobuf.UnknownFieldSet.Builder unknownFields =
            com.google.protobuf.UnknownFieldSet.newBuilder();
        try {
          boolean done = false;
          while (!done) {
            int tag = input.readTag();
            switch (tag) {
              case 0:
                done = true;
                break;
              default: {
                if (!parseUnknownField(input, unknownFields,
                                       extensionRegistry, tag)) {
                  done = true;
                }
                break;
              }
              case 8: {
                bitField0_ |= 0x00000001;
                timestamp_ = input.readInt32();
                break;
              }
              case 16: {
                bitField0_ |= 0x00000002;
                killerHeroId_ = input.readUInt32();
                break;
              }
              case 24: {
                bitField0_ |= 0x00000004;
                victimHeroId_ = input.readUInt32();
                break;
              }
              case 32: {
                if (!((mutable_bitField0_ & 0x00000008) == 0x00000008)) {
                  assistHeroIds_ = new java.util.ArrayList<java.lang.Integer>();
                  mutable_bitField0_ |= 0x00000008;
                }
                assistHeroIds_.add(input.readUInt32());
                break;
              }
              case 34: {
                int length = input.readRawVarint32();
                int limit = input.pushLimit(length);
                if (!((mutable_bitField0_ & 0x00000008) == 0x00000008) && input.getBytesUntilLimit() > 0) {
                  assistHeroIds_ = new java.util.ArrayList<java.lang.Integer>();
                  mutable_bitField0_ |= 0x00000008;
                }
                while (input.getBytesUntilLimit() > 0) {
                  assistHeroIds_.add(input.readUInt32());
                }
                input.popLimit(limit);
                break;
              }
            }
          }
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.setUnfinishedMessage(this);
        } catch (java.io.IOException e) {
          throw new com.google.protobuf.InvalidProtocolBufferException(
              e.getMessage()).setUnfinishedMessage(this);
        } finally {
          if (((mutable_bitField0_ & 0x00000008) == 0x00000008)) {
            assistHeroIds_ = java.util.Collections.unmodifiableList(assistHeroIds_);
          }
          this.unknownFields = unknownFields.build();
          makeExtensionsImmutable();
        }
      }
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return skadistats.clarity.wire.s2.proto.S2DotaMatchMetadata.internal_static_CDOTAMatchPrivateMetadata_Kill_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return skadistats.clarity.wire.s2.proto.S2DotaMatchMetadata.internal_static_CDOTAMatchPrivateMetadata_Kill_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                skadistats.clarity.wire.s2.proto.S2DotaMatchMetadata.CDOTAMatchPrivateMetadata.Kill.class, skadistats.clarity.wire.s2.proto.S2DotaMatchMetadata.CDOTAMatchPrivateMetadata.Kill.Builder.class);
      }

      public static com.google.protobuf.Parser<Kill> PARSER =
          new com.google.protobuf.AbstractParser<Kill>() {
        public Kill parsePartialFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws com.google.protobuf.InvalidProtocolBufferException {
          return new Kill(input, extensionRegistry);
        }
      };

      @java.lang.Override
      public com.google.protobuf.Parser<Kill> getParserForType() {
        return PARSER;
      }

      private int bitField0_;
      public static final int TIMESTAMP_FIELD_NUMBER = 1;
      private int timestamp_;
      /**
       * <code>optional int32 timestamp = 1;</code>
       */
      public boolean hasTimestamp() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>optional int32 timestamp = 1;</code>
       */
      public int getTimestamp() {
        return timestamp_;
      }

      public static final int KILLER_HERO_ID_FIELD_NUMBER = 2;
      private int killerHeroId_;
      /**
       * <code>optional uint32 killer_hero_id = 2;</code>
       */
      public boolean hasKillerHeroId() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>optional uint32 killer_hero_id = 2;</code>
       */
      public int getKillerHeroId() {
        return killerHeroId_;
      }

      public static final int VICTIM_HERO_ID_FIELD_NUMBER = 3;
      private int victimHeroId_;
      /**
       * <code>optional uint32 victim_hero_id = 3;</code>
       */
      public boolean hasVictimHeroId() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }
      /**
       * <code>optional uint32 victim_hero_id = 3;</code>
       */
      public int getVictimHeroId() {
        return victimHeroId_;
      }

      public static final int ASSIST_HERO_IDS_FIELD_NUMBER = 4;
      private java.util.List<java.lang.Integer> assistHeroIds_;
      /**
       * <code>repeated uint32 assist_hero_ids = 4;</code>
       */
      public java.util.List<java.lang.Integer>
          getAssistHeroIdsList() {
        return assistHeroIds_;
      }
      /**
       * <code>repeated uint32 assist_hero_ids = 4;</code>
       */
      public int getAssistHeroIdsCount() {
        return assistHeroIds_.size();
      }
      /**
       * <code>repeated uint32 assist_hero_ids = 4;</code>
       */
      public int getAssistHeroIds(int index) {
        return assistHeroIds_.get(index);
      }

      private void initFields() {
        timestamp_ = 0;
        killerHeroId_ = 0;
        victimHeroId_ = 0;
        assistHeroIds_ = java.util.Collections.emptyList();
      }
      private byte memoizedIsInitialized = -1;
      public final boolean isInitialized() {
        byte isInitialized = memoizedIsInitialized;
        if (isInitialized == 1) return true;
        if (isInitialized == 0) return false;

        memoizedIsInitialized = 1;
        return true;
      }

      public void writeTo(com.google.protobuf.CodedOutputStream output)
                          throws java.io.IOException {
        getSerializedSize();
        if (((bitField0_ & 0x00000001) == 0x00000001)) {
          output.writeInt32(1, timestamp_);
        }
        if (((bitField0_ & 0x00000002) == 0x00000002)) {
          output.writeUInt32(2, killerHeroId_);
        }
        if (((bitField0_ & 0x00000004) == 0x00000004)) {
          output.writeUInt32(3, victimHeroId_);
        }
        for (int i = 0; i < assistHeroIds_.size(); i++) {
          output.writeUInt32(4, assistHeroIds_.get(i));
        }
        getUnknownFields().writeTo(output);
      }

      private int memoizedSerializedSize = -1;
      public int getSerializedSize() {
        int size = memoizedSerializedSize;
        if (size != -1) return size;

        size = 0;
        if (((bitField0_ & 0x00000001) == 0x00000001)) {
          size += com.google.protobuf.CodedOutputStream
            .computeInt32Size(1, timestamp_);
        }
        if (((bitField0_ & 0x00000002) == 0x00000002)) {
          size += com.google.protobuf.CodedOutputStream
            .computeUInt32Size(2, killerHeroId_);
        }
        if (((bitField0_ & 0x00000004) == 0x00000004)) {
          size += com.google.protobuf.CodedOutputStream
            .computeUInt32Size(3, victimHeroId_);
        }
        {
          int dataSize = 0;
          for (int i = 0; i < assistHeroIds_.size(); i++) {
            dataSize += com.google.protobuf.CodedOutputStream
              .computeUInt32SizeNoTag(assistHeroIds_.get(i));
          }
          size += dataSize;
          size += 1 * getAssistHeroIdsList().size();
        }
        size += getUnknownFields().getSerializedSize();
        memoizedSerializedSize = size;
        return size;
      }

      private static final long serialVersionUID = 0L;
      @java.lang.Override
      protected java.lang.Object writeReplace()
          throws java.io.ObjectStreamException {
        return super.writeReplace();
      }

      public static skadistats.clarity.wire.s2.proto.S2DotaMatchMetadata.CDOTAMatchPrivateMetadata.Kill parseFrom(
          com.google.protobuf.ByteString data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static skadistats.clarity.wire.s2.proto.S2DotaMatchMetadata.CDOTAMatchPrivateMetadata.Kill parseFrom(
          com.google.protobuf.ByteString data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static skadistats.clarity.wire.s2.proto.S2DotaMatchMetadata.CDOTAMatchPrivateMetadata.Kill parseFrom(byte[] data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static skadistats.clarity.wire.s2.proto.S2DotaMatchMetadata.CDOTAMatchPrivateMetadata.Kill parseFrom(
          byte[] data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static skadistats.clarity.wire.s2.proto.S2DotaMatchMetadata.CDOTAMatchPrivateMetadata.Kill parseFrom(java.io.InputStream input)
          throws java.io.IOException {
        return PARSER.parseFrom(input);
      }
      public static skadistats.clarity.wire.s2.proto.S2DotaMatchMetadata.CDOTAMatchPrivateMetadata.Kill parseFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return PARSER.parseFrom(input, extensionRegistry);
      }
      public static skadistats.clarity.wire.s2.proto.S2DotaMatchMetadata.CDOTAMatchPrivateMetadata.Kill parseDelimitedFrom(java.io.InputStream input)
          throws java.io.IOException {
        return PARSER.parseDelimitedFrom(input);
      }
      public static skadistats.clarity.wire.s2.proto.S2DotaMatchMetadata.CDOTAMatchPrivateMetadata.Kill parseDelimitedFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return PARSER.parseDelimitedFrom(input, extensionRegistry);
      }
      public static skadistats.clarity.wire.s2.proto.S2DotaMatchMetadata.CDOTAMatchPrivateMetadata.Kill parseFrom(
          com.google.protobuf.CodedInputStream input)
          throws java.io.IOException {
        return PARSER.parseFrom(input);
      }
      public static skadistats.clarity.wire.s2.proto.S2DotaMatchMetadata.CDOTAMatchPrivateMetadata.Kill parseFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return PARSER.parseFrom(input, extensionRegistry);
      }

      public static Builder newBuilder() { return Builder.create(); }
      public Builder newBuilderForType() { return newBuilder(); }
      public static Builder newBuilder(skadistats.clarity.wire.s2.proto.S2DotaMatchMetadata.CDOTAMatchPrivateMetadata.Kill prototype) {
        return newBuilder().mergeFrom(prototype);
      }
      public Builder toBuilder() { return newBuilder(this); }

      @java.lang.Override
      protected Builder newBuilderForType(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        Builder builder = new Builder(parent);
        return builder;
      }
      /**
       * Protobuf type {@code CDOTAMatchPrivateMetadata.Kill}
       */
      public static final class Builder extends
          com.google.protobuf.GeneratedMessage.Builder<Builder> implements
          // @@protoc_insertion_point(builder_implements:CDOTAMatchPrivateMetadata.Kill)
          skadistats.clarity.wire.s2.proto.S2DotaMatchMetadata.CDOTAMatchPrivateMetadata.KillOrBuilder {
        public static final com.google.protobuf.Descriptors.Descriptor
            getDescriptor() {
          return skadistats.clarity.wire.s2.proto.S2DotaMatchMetadata.internal_static_CDOTAMatchPrivateMetadata_Kill_descriptor;
        }

        protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
            internalGetFieldAccessorTable() {
          return skadistats.clarity.wire.s2.proto.S2DotaMatchMetadata.internal_static_CDOTAMatchPrivateMetadata_Kill_fieldAccessorTable
              .ensureFieldAccessorsInitialized(
                  skadistats.clarity.wire.s2.proto.S2DotaMatchMetadata.CDOTAMatchPrivateMetadata.Kill.class, skadistats.clarity.wire.s2.proto.S2DotaMatchMetadata.CDOTAMatchPrivateMetadata.Kill.Builder.class);
        }

        // Construct using skadistats.clarity.wire.s2.proto.S2DotaMatchMetadata.CDOTAMatchPrivateMetadata.Kill.newBuilder()
        private Builder() {
          maybeForceBuilderInitialization();
        }

        private Builder(
            com.google.protobuf.GeneratedMessage.BuilderParent parent) {
          super(parent);
          maybeForceBuilderInitialization();
        }
        private void maybeForceBuilderInitialization() {
          if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
          }
        }
        private static Builder create() {
          return new Builder();
        }

        public Builder clear() {
          super.clear();
          timestamp_ = 0;
          bitField0_ = (bitField0_ & ~0x00000001);
          killerHeroId_ = 0;
          bitField0_ = (bitField0_ & ~0x00000002);
          victimHeroId_ = 0;
          bitField0_ = (bitField0_ & ~0x00000004);
          assistHeroIds_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000008);
          return this;
        }

        public Builder clone() {
          return create().mergeFrom(buildPartial());
        }

        public com.google.protobuf.Descriptors.Descriptor
            getDescriptorForType() {
          return skadistats.clarity.wire.s2.proto.S2DotaMatchMetadata.internal_static_CDOTAMatchPrivateMetadata_Kill_descriptor;
        }

        public skadistats.clarity.wire.s2.proto.S2DotaMatchMetadata.CDOTAMatchPrivateMetadata.Kill getDefaultInstanceForType() {
          return skadistats.clarity.wire.s2.proto.S2DotaMatchMetadata.CDOTAMatchPrivateMetadata.Kill.getDefaultInstance();
        }

        public skadistats.clarity.wire.s2.proto.S2DotaMatchMetadata.CDOTAMatchPrivateMetadata.Kill build() {
          skadistats.clarity.wire.s2.proto.S2DotaMatchMetadata.CDOTAMatchPrivateMetadata.Kill result = buildPartial();
          if (!result.isInitialized()) {
            throw newUninitializedMessageException(result);
          }
          return result;
        }

        public skadistats.clarity.wire.s2.proto.S2DotaMatchMetadata.CDOTAMatchPrivateMetadata.Kill buildPartial() {
          skadistats.clarity.wire.s2.proto.S2DotaMatchMetadata.CDOTAMatchPrivateMetadata.Kill result = new skadistats.clarity.wire.s2.proto.S2DotaMatchMetadata.CDOTAMatchPrivateMetadata.Kill(this);
          int from_bitField0_ = bitField0_;
          int to_bitField0_ = 0;
          if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
            to_bitField0_ |= 0x00000001;
          }
          result.timestamp_ = timestamp_;
          if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
            to_bitField0_ |= 0x00000002;
          }
          result.killerHeroId_ = killerHeroId_;
          if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
            to_bitField0_ |= 0x00000004;
          }
          result.victimHeroId_ = victimHeroId_;
          if (((bitField0_ & 0x00000008) == 0x00000008)) {
            assistHeroIds_ = java.util.Collections.unmodifiableList(assistHeroIds_);
            bitField0_ = (bitField0_ & ~0x00000008);
          }
          result.assistHeroIds_ = assistHeroIds_;
          result.bitField0_ = to_bitField0_;
          onBuilt();
          return result;
        }

        public Builder mergeFrom(com.google.protobuf.Message other) {
          if (other instanceof skadistats.clarity.wire.s2.proto.S2DotaMatchMetadata.CDOTAMatchPrivateMetadata.Kill) {
            return mergeFrom((skadistats.clarity.wire.s2.proto.S2DotaMatchMetadata.CDOTAMatchPrivateMetadata.Kill)other);
          } else {
            super.mergeFrom(other);
            return this;
          }
        }

        public Builder mergeFrom(skadistats.clarity.wire.s2.proto.S2DotaMatchMetadata.CDOTAMatchPrivateMetadata.Kill other) {
          if (other == skadistats.clarity.wire.s2.proto.S2DotaMatchMetadata.CDOTAMatchPrivateMetadata.Kill.getDefaultInstance()) return this;
          if (other.hasTimestamp()) {
            setTimestamp(other.getTimestamp());
          }
          if (other.hasKillerHeroId()) {
            setKillerHeroId(other.getKillerHeroId());
          }
          if (other.hasVictimHeroId()) {
            setVictimHeroId(other.getVictimHeroId());
          }
          if (!other.assistHeroIds_.isEmpty()) {
            if (assistHeroIds_.isEmpty()) {
              assistHeroIds_ = other.assistHeroIds_;
              bitField0_ = (bitField0_ & ~0x00000008);
            } else {
              ensureAssistHeroIdsIsMutable();
              assistHeroIds_.addAll(other.assistHeroIds_);
            }
            onChanged();
          }
          this.mergeUnknownFields(other.getUnknownFields());
          return this;
        }

        public final boolean isInitialized() {
          return true;
        }

        public Builder mergeFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws java.io.IOException {
          skadistats.clarity.wire.s2.proto.S2DotaMatchMetadata.CDOTAMatchPrivateMetadata.Kill parsedMessage = null;
          try {
            parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
          } catch (com.google.protobuf.InvalidProtocolBufferException e) {
            parsedMessage = (skadistats.clarity.wire.s2.proto.S2DotaMatchMetadata.CDOTAMatchPrivateMetadata.Kill) e.getUnfinishedMessage();
            throw e;
          } finally {
            if (parsedMessage != null) {
              mergeFrom(parsedMessage);
            }
          }
          return this;
        }
        private int bitField0_;

        private int timestamp_ ;
        /**
         * <code>optional int32 timestamp = 1;</code>
         */
        public boolean hasTimestamp() {
          return ((bitField0_ & 0x00000001) == 0x00000001);
        }
        /**
         * <code>optional int32 timestamp = 1;</code>
         */
        public int getTimestamp() {
          return timestamp_;
        }
        /**
         * <code>optional int32 timestamp = 1;</code>
         */
        public Builder setTimestamp(int value) {
          bitField0_ |= 0x00000001;
          timestamp_ = value;
          onChanged();
          return this;
        }
        /**
         * <code>optional int32 timestamp = 1;</code>
         */
        public Builder clearTimestamp() {
          bitField0_ = (bitField0_ & ~0x00000001);
          timestamp_ = 0;
          onChanged();
          return this;
        }

        private int killerHeroId_ ;
        /**
         * <code>optional uint32 killer_hero_id = 2;</code>
         */
        public boolean hasKillerHeroId() {
          return ((bitField0_ & 0x00000002) == 0x00000002);
        }
        /**
         * <code>optional uint32 killer_hero_id = 2;</code>
         */
        public int getKillerHeroId() {
          return killerHeroId_;
        }
        /**
         * <code>optional uint32 killer_hero_id = 2;</code>
         */
        public Builder setKillerHeroId(int value) {
          bitField0_ |= 0x00000002;
          killerHeroId_ = value;
          onChanged();
          return this;
        }
        /**
         * <code>optional uint32 killer_hero_id = 2;</code>
         */
        public Builder clearKillerHeroId() {
          bitField0_ = (bitField0_ & ~0x00000002);
          killerHeroId_ = 0;
          onChanged();
          return this;
        }

        private int victimHeroId_ ;
        /**
         * <code>optional uint32 victim_hero_id = 3;</code>
         */
        public boolean hasVictimHeroId() {
          return ((bitField0_ & 0x00000004) == 0x00000004);
        }
        /**
         * <code>optional uint32 victim_hero_id = 3;</code>
         */
        public int getVictimHeroId() {
          return victimHeroId_;
        }
        /**
         * <code>optional uint32 victim_hero_id = 3;</code>
         */
        public Builder setVictimHeroId(int value) {
          bitField0_ |= 0x00000004;
          victimHeroId_ = value;
          onChanged();
          return this;
        }
        /**
         * <code>optional uint32 victim_hero_id = 3;</code>
         */
        public Builder clearVictimHeroId() {
          bitField0_ = (bitField0_ & ~0x00000004);
          victimHeroId_ = 0;
          onChanged();
          return this;
        }

        private java.util.List<java.lang.Integer> assistHeroIds_ = java.util.Collections.emptyList();
        private void ensureAssistHeroIdsIsMutable() {
          if (!((bitField0_ & 0x00000008) == 0x00000008)) {
            assistHeroIds_ = new java.util.ArrayList<java.lang.Integer>(assistHeroIds_);
            bitField0_ |= 0x00000008;
           }
        }
        /**
         * <code>repeated uint32 assist_hero_ids = 4;</code>
         */
        public java.util.List<java.lang.Integer>
            getAssistHeroIdsList() {
          return java.util.Collections.unmodifiableList(assistHeroIds_);
        }
        /**
         * <code>repeated uint32 assist_hero_ids = 4;</code>
         */
        public int getAssistHeroIdsCount() {
          return assistHeroIds_.size();
        }
        /**
         * <code>repeated uint32 assist_hero_ids = 4;</code>
         */
        public int getAssistHeroIds(int index) {
          return assistHeroIds_.get(index);
        }
        /**
         * <code>repeated uint32 assist_hero_ids = 4;</code>
         */
        public Builder setAssistHeroIds(
            int index, int value) {
          ensureAssistHeroIdsIsMutable();
          assistHeroIds_.set(index, value);
          onChanged();
          return this;
        }
        /**
         * <code>repeated uint32 assist_hero_ids = 4;</code>
         */
        public Builder addAssistHeroIds(int value) {
          ensureAssistHeroIdsIsMutable();
          assistHeroIds_.add(value);
          onChanged();
          return this;
        }
        /**
         * <code>repeated uint32 assist_hero_ids = 4;</code>
         */
        public Builder addAllAssistHeroIds(
            java.lang.Iterable<? extends java.lang.Integer> values) {
          ensureAssistHeroIdsIsMutable();
          com.google.protobuf.AbstractMessageLite.Builder.addAll(
              values, assistHeroIds_);
          onChanged();
          return this;
        }
        /**
         * <code>repeated uint32 assist_hero_ids = 4;</code>
         */
        public Builder clearAssistHeroIds() {
          assistHeroIds_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000008);
          onChanged();
          return this;
        }

        // @@protoc_insertion_point(builder_scope:CDOTAMatchPrivateMetadata.Kill)
      }

      static {
        defaultInstance = new Kill(true);
        defaultInstance.initFields();
      }

      // @@protoc_insertion_point(class_scope:CDOTAMatchPrivateMetadata.Kill)
    }

    private int bitField0_;
    public static final int KILLS_FIELD_NUMBER = 1;
    private java.util.List<skadistats.clarity.wire.s2.proto.S2DotaMatchMetadata.CDOTAMatchPrivateMetadata.Kill> kills_;
    /**
     * <code>repeated .CDOTAMatchPrivateMetadata.Kill kills = 1;</code>
     */
    public java.util.List<skadistats.clarity.wire.s2.proto.S2DotaMatchMetadata.CDOTAMatchPrivateMetadata.Kill> getKillsList() {
      return kills_;
    }
    /**
     * <code>repeated .CDOTAMatchPrivateMetadata.Kill kills = 1;</code>
     */
    public java.util.List<? extends skadistats.clarity.wire.s2.proto.S2DotaMatchMetadata.CDOTAMatchPrivateMetadata.KillOrBuilder> 
        getKillsOrBuilderList() {
      return kills_;
    }
    /**
     * <code>repeated .CDOTAMatchPrivateMetadata.Kill kills = 1;</code>
     */
    public int getKillsCount() {
      return kills_.size();
    }
    /**
     * <code>repeated .CDOTAMatchPrivateMetadata.Kill kills = 1;</code>
     */
    public skadistats.clarity.wire.s2.proto.S2DotaMatchMetadata.CDOTAMatchPrivateMetadata.Kill getKills(int index) {
      return kills_.get(index);
    }
    /**
     * <code>repeated .CDOTAMatchPrivateMetadata.Kill kills = 1;</code>
     */
    public skadistats.clarity.wire.s2.proto.S2DotaMatchMetadata.CDOTAMatchPrivateMetadata.KillOrBuilder getKillsOrBuilder(
        int index) {
      return kills_.get(index);
    }

    public static final int TEST_STRING_FIELD_NUMBER = 100;
    private java.lang.Object testString_;
    /**
     * <code>optional string test_string = 100;</code>
     */
    public boolean hasTestString() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>optional string test_string = 100;</code>
     */
    public java.lang.String getTestString() {
      java.lang.Object ref = testString_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          testString_ = s;
        }
        return s;
      }
    }
    /**
     * <code>optional string test_string = 100;</code>
     */
    public com.google.protobuf.ByteString
        getTestStringBytes() {
      java.lang.Object ref = testString_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        testString_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    private void initFields() {
      kills_ = java.util.Collections.emptyList();
      testString_ = "";
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      for (int i = 0; i < kills_.size(); i++) {
        output.writeMessage(1, kills_.get(i));
      }
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeBytes(100, getTestStringBytes());
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      for (int i = 0; i < kills_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(1, kills_.get(i));
      }
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(100, getTestStringBytes());
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static skadistats.clarity.wire.s2.proto.S2DotaMatchMetadata.CDOTAMatchPrivateMetadata parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static skadistats.clarity.wire.s2.proto.S2DotaMatchMetadata.CDOTAMatchPrivateMetadata parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static skadistats.clarity.wire.s2.proto.S2DotaMatchMetadata.CDOTAMatchPrivateMetadata parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static skadistats.clarity.wire.s2.proto.S2DotaMatchMetadata.CDOTAMatchPrivateMetadata parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static skadistats.clarity.wire.s2.proto.S2DotaMatchMetadata.CDOTAMatchPrivateMetadata parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static skadistats.clarity.wire.s2.proto.S2DotaMatchMetadata.CDOTAMatchPrivateMetadata parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static skadistats.clarity.wire.s2.proto.S2DotaMatchMetadata.CDOTAMatchPrivateMetadata parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static skadistats.clarity.wire.s2.proto.S2DotaMatchMetadata.CDOTAMatchPrivateMetadata parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static skadistats.clarity.wire.s2.proto.S2DotaMatchMetadata.CDOTAMatchPrivateMetadata parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static skadistats.clarity.wire.s2.proto.S2DotaMatchMetadata.CDOTAMatchPrivateMetadata parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(skadistats.clarity.wire.s2.proto.S2DotaMatchMetadata.CDOTAMatchPrivateMetadata prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code CDOTAMatchPrivateMetadata}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:CDOTAMatchPrivateMetadata)
        skadistats.clarity.wire.s2.proto.S2DotaMatchMetadata.CDOTAMatchPrivateMetadataOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return skadistats.clarity.wire.s2.proto.S2DotaMatchMetadata.internal_static_CDOTAMatchPrivateMetadata_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return skadistats.clarity.wire.s2.proto.S2DotaMatchMetadata.internal_static_CDOTAMatchPrivateMetadata_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                skadistats.clarity.wire.s2.proto.S2DotaMatchMetadata.CDOTAMatchPrivateMetadata.class, skadistats.clarity.wire.s2.proto.S2DotaMatchMetadata.CDOTAMatchPrivateMetadata.Builder.class);
      }

      // Construct using skadistats.clarity.wire.s2.proto.S2DotaMatchMetadata.CDOTAMatchPrivateMetadata.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
          getKillsFieldBuilder();
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        if (killsBuilder_ == null) {
          kills_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000001);
        } else {
          killsBuilder_.clear();
        }
        testString_ = "";
        bitField0_ = (bitField0_ & ~0x00000002);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return skadistats.clarity.wire.s2.proto.S2DotaMatchMetadata.internal_static_CDOTAMatchPrivateMetadata_descriptor;
      }

      public skadistats.clarity.wire.s2.proto.S2DotaMatchMetadata.CDOTAMatchPrivateMetadata getDefaultInstanceForType() {
        return skadistats.clarity.wire.s2.proto.S2DotaMatchMetadata.CDOTAMatchPrivateMetadata.getDefaultInstance();
      }

      public skadistats.clarity.wire.s2.proto.S2DotaMatchMetadata.CDOTAMatchPrivateMetadata build() {
        skadistats.clarity.wire.s2.proto.S2DotaMatchMetadata.CDOTAMatchPrivateMetadata result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public skadistats.clarity.wire.s2.proto.S2DotaMatchMetadata.CDOTAMatchPrivateMetadata buildPartial() {
        skadistats.clarity.wire.s2.proto.S2DotaMatchMetadata.CDOTAMatchPrivateMetadata result = new skadistats.clarity.wire.s2.proto.S2DotaMatchMetadata.CDOTAMatchPrivateMetadata(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (killsBuilder_ == null) {
          if (((bitField0_ & 0x00000001) == 0x00000001)) {
            kills_ = java.util.Collections.unmodifiableList(kills_);
            bitField0_ = (bitField0_ & ~0x00000001);
          }
          result.kills_ = kills_;
        } else {
          result.kills_ = killsBuilder_.build();
        }
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000001;
        }
        result.testString_ = testString_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof skadistats.clarity.wire.s2.proto.S2DotaMatchMetadata.CDOTAMatchPrivateMetadata) {
          return mergeFrom((skadistats.clarity.wire.s2.proto.S2DotaMatchMetadata.CDOTAMatchPrivateMetadata)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(skadistats.clarity.wire.s2.proto.S2DotaMatchMetadata.CDOTAMatchPrivateMetadata other) {
        if (other == skadistats.clarity.wire.s2.proto.S2DotaMatchMetadata.CDOTAMatchPrivateMetadata.getDefaultInstance()) return this;
        if (killsBuilder_ == null) {
          if (!other.kills_.isEmpty()) {
            if (kills_.isEmpty()) {
              kills_ = other.kills_;
              bitField0_ = (bitField0_ & ~0x00000001);
            } else {
              ensureKillsIsMutable();
              kills_.addAll(other.kills_);
            }
            onChanged();
          }
        } else {
          if (!other.kills_.isEmpty()) {
            if (killsBuilder_.isEmpty()) {
              killsBuilder_.dispose();
              killsBuilder_ = null;
              kills_ = other.kills_;
              bitField0_ = (bitField0_ & ~0x00000001);
              killsBuilder_ = 
                com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders ?
                   getKillsFieldBuilder() : null;
            } else {
              killsBuilder_.addAllMessages(other.kills_);
            }
          }
        }
        if (other.hasTestString()) {
          bitField0_ |= 0x00000002;
          testString_ = other.testString_;
          onChanged();
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        skadistats.clarity.wire.s2.proto.S2DotaMatchMetadata.CDOTAMatchPrivateMetadata parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (skadistats.clarity.wire.s2.proto.S2DotaMatchMetadata.CDOTAMatchPrivateMetadata) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private java.util.List<skadistats.clarity.wire.s2.proto.S2DotaMatchMetadata.CDOTAMatchPrivateMetadata.Kill> kills_ =
        java.util.Collections.emptyList();
      private void ensureKillsIsMutable() {
        if (!((bitField0_ & 0x00000001) == 0x00000001)) {
          kills_ = new java.util.ArrayList<skadistats.clarity.wire.s2.proto.S2DotaMatchMetadata.CDOTAMatchPrivateMetadata.Kill>(kills_);
          bitField0_ |= 0x00000001;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilder<
          skadistats.clarity.wire.s2.proto.S2DotaMatchMetadata.CDOTAMatchPrivateMetadata.Kill, skadistats.clarity.wire.s2.proto.S2DotaMatchMetadata.CDOTAMatchPrivateMetadata.Kill.Builder, skadistats.clarity.wire.s2.proto.S2DotaMatchMetadata.CDOTAMatchPrivateMetadata.KillOrBuilder> killsBuilder_;

      /**
       * <code>repeated .CDOTAMatchPrivateMetadata.Kill kills = 1;</code>
       */
      public java.util.List<skadistats.clarity.wire.s2.proto.S2DotaMatchMetadata.CDOTAMatchPrivateMetadata.Kill> getKillsList() {
        if (killsBuilder_ == null) {
          return java.util.Collections.unmodifiableList(kills_);
        } else {
          return killsBuilder_.getMessageList();
        }
      }
      /**
       * <code>repeated .CDOTAMatchPrivateMetadata.Kill kills = 1;</code>
       */
      public int getKillsCount() {
        if (killsBuilder_ == null) {
          return kills_.size();
        } else {
          return killsBuilder_.getCount();
        }
      }
      /**
       * <code>repeated .CDOTAMatchPrivateMetadata.Kill kills = 1;</code>
       */
      public skadistats.clarity.wire.s2.proto.S2DotaMatchMetadata.CDOTAMatchPrivateMetadata.Kill getKills(int index) {
        if (killsBuilder_ == null) {
          return kills_.get(index);
        } else {
          return killsBuilder_.getMessage(index);
        }
      }
      /**
       * <code>repeated .CDOTAMatchPrivateMetadata.Kill kills = 1;</code>
       */
      public Builder setKills(
          int index, skadistats.clarity.wire.s2.proto.S2DotaMatchMetadata.CDOTAMatchPrivateMetadata.Kill value) {
        if (killsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureKillsIsMutable();
          kills_.set(index, value);
          onChanged();
        } else {
          killsBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .CDOTAMatchPrivateMetadata.Kill kills = 1;</code>
       */
      public Builder setKills(
          int index, skadistats.clarity.wire.s2.proto.S2DotaMatchMetadata.CDOTAMatchPrivateMetadata.Kill.Builder builderForValue) {
        if (killsBuilder_ == null) {
          ensureKillsIsMutable();
          kills_.set(index, builderForValue.build());
          onChanged();
        } else {
          killsBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .CDOTAMatchPrivateMetadata.Kill kills = 1;</code>
       */
      public Builder addKills(skadistats.clarity.wire.s2.proto.S2DotaMatchMetadata.CDOTAMatchPrivateMetadata.Kill value) {
        if (killsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureKillsIsMutable();
          kills_.add(value);
          onChanged();
        } else {
          killsBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <code>repeated .CDOTAMatchPrivateMetadata.Kill kills = 1;</code>
       */
      public Builder addKills(
          int index, skadistats.clarity.wire.s2.proto.S2DotaMatchMetadata.CDOTAMatchPrivateMetadata.Kill value) {
        if (killsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureKillsIsMutable();
          kills_.add(index, value);
          onChanged();
        } else {
          killsBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .CDOTAMatchPrivateMetadata.Kill kills = 1;</code>
       */
      public Builder addKills(
          skadistats.clarity.wire.s2.proto.S2DotaMatchMetadata.CDOTAMatchPrivateMetadata.Kill.Builder builderForValue) {
        if (killsBuilder_ == null) {
          ensureKillsIsMutable();
          kills_.add(builderForValue.build());
          onChanged();
        } else {
          killsBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .CDOTAMatchPrivateMetadata.Kill kills = 1;</code>
       */
      public Builder addKills(
          int index, skadistats.clarity.wire.s2.proto.S2DotaMatchMetadata.CDOTAMatchPrivateMetadata.Kill.Builder builderForValue) {
        if (killsBuilder_ == null) {
          ensureKillsIsMutable();
          kills_.add(index, builderForValue.build());
          onChanged();
        } else {
          killsBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .CDOTAMatchPrivateMetadata.Kill kills = 1;</code>
       */
      public Builder addAllKills(
          java.lang.Iterable<? extends skadistats.clarity.wire.s2.proto.S2DotaMatchMetadata.CDOTAMatchPrivateMetadata.Kill> values) {
        if (killsBuilder_ == null) {
          ensureKillsIsMutable();
          com.google.protobuf.AbstractMessageLite.Builder.addAll(
              values, kills_);
          onChanged();
        } else {
          killsBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <code>repeated .CDOTAMatchPrivateMetadata.Kill kills = 1;</code>
       */
      public Builder clearKills() {
        if (killsBuilder_ == null) {
          kills_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000001);
          onChanged();
        } else {
          killsBuilder_.clear();
        }
        return this;
      }
      /**
       * <code>repeated .CDOTAMatchPrivateMetadata.Kill kills = 1;</code>
       */
      public Builder removeKills(int index) {
        if (killsBuilder_ == null) {
          ensureKillsIsMutable();
          kills_.remove(index);
          onChanged();
        } else {
          killsBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <code>repeated .CDOTAMatchPrivateMetadata.Kill kills = 1;</code>
       */
      public skadistats.clarity.wire.s2.proto.S2DotaMatchMetadata.CDOTAMatchPrivateMetadata.Kill.Builder getKillsBuilder(
          int index) {
        return getKillsFieldBuilder().getBuilder(index);
      }
      /**
       * <code>repeated .CDOTAMatchPrivateMetadata.Kill kills = 1;</code>
       */
      public skadistats.clarity.wire.s2.proto.S2DotaMatchMetadata.CDOTAMatchPrivateMetadata.KillOrBuilder getKillsOrBuilder(
          int index) {
        if (killsBuilder_ == null) {
          return kills_.get(index);  } else {
          return killsBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <code>repeated .CDOTAMatchPrivateMetadata.Kill kills = 1;</code>
       */
      public java.util.List<? extends skadistats.clarity.wire.s2.proto.S2DotaMatchMetadata.CDOTAMatchPrivateMetadata.KillOrBuilder> 
           getKillsOrBuilderList() {
        if (killsBuilder_ != null) {
          return killsBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(kills_);
        }
      }
      /**
       * <code>repeated .CDOTAMatchPrivateMetadata.Kill kills = 1;</code>
       */
      public skadistats.clarity.wire.s2.proto.S2DotaMatchMetadata.CDOTAMatchPrivateMetadata.Kill.Builder addKillsBuilder() {
        return getKillsFieldBuilder().addBuilder(
            skadistats.clarity.wire.s2.proto.S2DotaMatchMetadata.CDOTAMatchPrivateMetadata.Kill.getDefaultInstance());
      }
      /**
       * <code>repeated .CDOTAMatchPrivateMetadata.Kill kills = 1;</code>
       */
      public skadistats.clarity.wire.s2.proto.S2DotaMatchMetadata.CDOTAMatchPrivateMetadata.Kill.Builder addKillsBuilder(
          int index) {
        return getKillsFieldBuilder().addBuilder(
            index, skadistats.clarity.wire.s2.proto.S2DotaMatchMetadata.CDOTAMatchPrivateMetadata.Kill.getDefaultInstance());
      }
      /**
       * <code>repeated .CDOTAMatchPrivateMetadata.Kill kills = 1;</code>
       */
      public java.util.List<skadistats.clarity.wire.s2.proto.S2DotaMatchMetadata.CDOTAMatchPrivateMetadata.Kill.Builder> 
           getKillsBuilderList() {
        return getKillsFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilder<
          skadistats.clarity.wire.s2.proto.S2DotaMatchMetadata.CDOTAMatchPrivateMetadata.Kill, skadistats.clarity.wire.s2.proto.S2DotaMatchMetadata.CDOTAMatchPrivateMetadata.Kill.Builder, skadistats.clarity.wire.s2.proto.S2DotaMatchMetadata.CDOTAMatchPrivateMetadata.KillOrBuilder> 
          getKillsFieldBuilder() {
        if (killsBuilder_ == null) {
          killsBuilder_ = new com.google.protobuf.RepeatedFieldBuilder<
              skadistats.clarity.wire.s2.proto.S2DotaMatchMetadata.CDOTAMatchPrivateMetadata.Kill, skadistats.clarity.wire.s2.proto.S2DotaMatchMetadata.CDOTAMatchPrivateMetadata.Kill.Builder, skadistats.clarity.wire.s2.proto.S2DotaMatchMetadata.CDOTAMatchPrivateMetadata.KillOrBuilder>(
                  kills_,
                  ((bitField0_ & 0x00000001) == 0x00000001),
                  getParentForChildren(),
                  isClean());
          kills_ = null;
        }
        return killsBuilder_;
      }

      private java.lang.Object testString_ = "";
      /**
       * <code>optional string test_string = 100;</code>
       */
      public boolean hasTestString() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>optional string test_string = 100;</code>
       */
      public java.lang.String getTestString() {
        java.lang.Object ref = testString_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          if (bs.isValidUtf8()) {
            testString_ = s;
          }
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>optional string test_string = 100;</code>
       */
      public com.google.protobuf.ByteString
          getTestStringBytes() {
        java.lang.Object ref = testString_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          testString_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>optional string test_string = 100;</code>
       */
      public Builder setTestString(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000002;
        testString_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional string test_string = 100;</code>
       */
      public Builder clearTestString() {
        bitField0_ = (bitField0_ & ~0x00000002);
        testString_ = getDefaultInstance().getTestString();
        onChanged();
        return this;
      }
      /**
       * <code>optional string test_string = 100;</code>
       */
      public Builder setTestStringBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000002;
        testString_ = value;
        onChanged();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:CDOTAMatchPrivateMetadata)
    }

    static {
      defaultInstance = new CDOTAMatchPrivateMetadata(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:CDOTAMatchPrivateMetadata)
  }

  public interface CLobbyTimedRewardDetailsOrBuilder extends
      // @@protoc_insertion_point(interface_extends:CLobbyTimedRewardDetails)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>optional uint32 item_def_index = 2;</code>
     */
    boolean hasItemDefIndex();
    /**
     * <code>optional uint32 item_def_index = 2;</code>
     */
    int getItemDefIndex();

    /**
     * <code>optional bool is_supply_crate = 3;</code>
     */
    boolean hasIsSupplyCrate();
    /**
     * <code>optional bool is_supply_crate = 3;</code>
     */
    boolean getIsSupplyCrate();

    /**
     * <code>optional bool is_timed_drop = 4;</code>
     */
    boolean hasIsTimedDrop();
    /**
     * <code>optional bool is_timed_drop = 4;</code>
     */
    boolean getIsTimedDrop();

    /**
     * <code>optional uint32 account_id = 5;</code>
     */
    boolean hasAccountId();
    /**
     * <code>optional uint32 account_id = 5;</code>
     */
    int getAccountId();

    /**
     * <code>optional uint32 origin = 6;</code>
     */
    boolean hasOrigin();
    /**
     * <code>optional uint32 origin = 6;</code>
     */
    int getOrigin();
  }
  /**
   * Protobuf type {@code CLobbyTimedRewardDetails}
   */
  public static final class CLobbyTimedRewardDetails extends
      com.google.protobuf.GeneratedMessage implements
      // @@protoc_insertion_point(message_implements:CLobbyTimedRewardDetails)
      CLobbyTimedRewardDetailsOrBuilder {
    // Use CLobbyTimedRewardDetails.newBuilder() to construct.
    private CLobbyTimedRewardDetails(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private CLobbyTimedRewardDetails(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final CLobbyTimedRewardDetails defaultInstance;
    public static CLobbyTimedRewardDetails getDefaultInstance() {
      return defaultInstance;
    }

    public CLobbyTimedRewardDetails getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private CLobbyTimedRewardDetails(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 16: {
              bitField0_ |= 0x00000001;
              itemDefIndex_ = input.readUInt32();
              break;
            }
            case 24: {
              bitField0_ |= 0x00000002;
              isSupplyCrate_ = input.readBool();
              break;
            }
            case 32: {
              bitField0_ |= 0x00000004;
              isTimedDrop_ = input.readBool();
              break;
            }
            case 40: {
              bitField0_ |= 0x00000008;
              accountId_ = input.readUInt32();
              break;
            }
            case 48: {
              bitField0_ |= 0x00000010;
              origin_ = input.readUInt32();
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return skadistats.clarity.wire.s2.proto.S2DotaMatchMetadata.internal_static_CLobbyTimedRewardDetails_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return skadistats.clarity.wire.s2.proto.S2DotaMatchMetadata.internal_static_CLobbyTimedRewardDetails_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              skadistats.clarity.wire.s2.proto.S2DotaMatchMetadata.CLobbyTimedRewardDetails.class, skadistats.clarity.wire.s2.proto.S2DotaMatchMetadata.CLobbyTimedRewardDetails.Builder.class);
    }

    public static com.google.protobuf.Parser<CLobbyTimedRewardDetails> PARSER =
        new com.google.protobuf.AbstractParser<CLobbyTimedRewardDetails>() {
      public CLobbyTimedRewardDetails parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new CLobbyTimedRewardDetails(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<CLobbyTimedRewardDetails> getParserForType() {
      return PARSER;
    }

    private int bitField0_;
    public static final int ITEM_DEF_INDEX_FIELD_NUMBER = 2;
    private int itemDefIndex_;
    /**
     * <code>optional uint32 item_def_index = 2;</code>
     */
    public boolean hasItemDefIndex() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>optional uint32 item_def_index = 2;</code>
     */
    public int getItemDefIndex() {
      return itemDefIndex_;
    }

    public static final int IS_SUPPLY_CRATE_FIELD_NUMBER = 3;
    private boolean isSupplyCrate_;
    /**
     * <code>optional bool is_supply_crate = 3;</code>
     */
    public boolean hasIsSupplyCrate() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>optional bool is_supply_crate = 3;</code>
     */
    public boolean getIsSupplyCrate() {
      return isSupplyCrate_;
    }

    public static final int IS_TIMED_DROP_FIELD_NUMBER = 4;
    private boolean isTimedDrop_;
    /**
     * <code>optional bool is_timed_drop = 4;</code>
     */
    public boolean hasIsTimedDrop() {
      return ((bitField0_ & 0x00000004) == 0x00000004);
    }
    /**
     * <code>optional bool is_timed_drop = 4;</code>
     */
    public boolean getIsTimedDrop() {
      return isTimedDrop_;
    }

    public static final int ACCOUNT_ID_FIELD_NUMBER = 5;
    private int accountId_;
    /**
     * <code>optional uint32 account_id = 5;</code>
     */
    public boolean hasAccountId() {
      return ((bitField0_ & 0x00000008) == 0x00000008);
    }
    /**
     * <code>optional uint32 account_id = 5;</code>
     */
    public int getAccountId() {
      return accountId_;
    }

    public static final int ORIGIN_FIELD_NUMBER = 6;
    private int origin_;
    /**
     * <code>optional uint32 origin = 6;</code>
     */
    public boolean hasOrigin() {
      return ((bitField0_ & 0x00000010) == 0x00000010);
    }
    /**
     * <code>optional uint32 origin = 6;</code>
     */
    public int getOrigin() {
      return origin_;
    }

    private void initFields() {
      itemDefIndex_ = 0;
      isSupplyCrate_ = false;
      isTimedDrop_ = false;
      accountId_ = 0;
      origin_ = 0;
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeUInt32(2, itemDefIndex_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeBool(3, isSupplyCrate_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        output.writeBool(4, isTimedDrop_);
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        output.writeUInt32(5, accountId_);
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        output.writeUInt32(6, origin_);
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(2, itemDefIndex_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBoolSize(3, isSupplyCrate_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBoolSize(4, isTimedDrop_);
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(5, accountId_);
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(6, origin_);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static skadistats.clarity.wire.s2.proto.S2DotaMatchMetadata.CLobbyTimedRewardDetails parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static skadistats.clarity.wire.s2.proto.S2DotaMatchMetadata.CLobbyTimedRewardDetails parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static skadistats.clarity.wire.s2.proto.S2DotaMatchMetadata.CLobbyTimedRewardDetails parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static skadistats.clarity.wire.s2.proto.S2DotaMatchMetadata.CLobbyTimedRewardDetails parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static skadistats.clarity.wire.s2.proto.S2DotaMatchMetadata.CLobbyTimedRewardDetails parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static skadistats.clarity.wire.s2.proto.S2DotaMatchMetadata.CLobbyTimedRewardDetails parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static skadistats.clarity.wire.s2.proto.S2DotaMatchMetadata.CLobbyTimedRewardDetails parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static skadistats.clarity.wire.s2.proto.S2DotaMatchMetadata.CLobbyTimedRewardDetails parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static skadistats.clarity.wire.s2.proto.S2DotaMatchMetadata.CLobbyTimedRewardDetails parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static skadistats.clarity.wire.s2.proto.S2DotaMatchMetadata.CLobbyTimedRewardDetails parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(skadistats.clarity.wire.s2.proto.S2DotaMatchMetadata.CLobbyTimedRewardDetails prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code CLobbyTimedRewardDetails}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:CLobbyTimedRewardDetails)
        skadistats.clarity.wire.s2.proto.S2DotaMatchMetadata.CLobbyTimedRewardDetailsOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return skadistats.clarity.wire.s2.proto.S2DotaMatchMetadata.internal_static_CLobbyTimedRewardDetails_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return skadistats.clarity.wire.s2.proto.S2DotaMatchMetadata.internal_static_CLobbyTimedRewardDetails_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                skadistats.clarity.wire.s2.proto.S2DotaMatchMetadata.CLobbyTimedRewardDetails.class, skadistats.clarity.wire.s2.proto.S2DotaMatchMetadata.CLobbyTimedRewardDetails.Builder.class);
      }

      // Construct using skadistats.clarity.wire.s2.proto.S2DotaMatchMetadata.CLobbyTimedRewardDetails.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        itemDefIndex_ = 0;
        bitField0_ = (bitField0_ & ~0x00000001);
        isSupplyCrate_ = false;
        bitField0_ = (bitField0_ & ~0x00000002);
        isTimedDrop_ = false;
        bitField0_ = (bitField0_ & ~0x00000004);
        accountId_ = 0;
        bitField0_ = (bitField0_ & ~0x00000008);
        origin_ = 0;
        bitField0_ = (bitField0_ & ~0x00000010);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return skadistats.clarity.wire.s2.proto.S2DotaMatchMetadata.internal_static_CLobbyTimedRewardDetails_descriptor;
      }

      public skadistats.clarity.wire.s2.proto.S2DotaMatchMetadata.CLobbyTimedRewardDetails getDefaultInstanceForType() {
        return skadistats.clarity.wire.s2.proto.S2DotaMatchMetadata.CLobbyTimedRewardDetails.getDefaultInstance();
      }

      public skadistats.clarity.wire.s2.proto.S2DotaMatchMetadata.CLobbyTimedRewardDetails build() {
        skadistats.clarity.wire.s2.proto.S2DotaMatchMetadata.CLobbyTimedRewardDetails result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public skadistats.clarity.wire.s2.proto.S2DotaMatchMetadata.CLobbyTimedRewardDetails buildPartial() {
        skadistats.clarity.wire.s2.proto.S2DotaMatchMetadata.CLobbyTimedRewardDetails result = new skadistats.clarity.wire.s2.proto.S2DotaMatchMetadata.CLobbyTimedRewardDetails(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.itemDefIndex_ = itemDefIndex_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.isSupplyCrate_ = isSupplyCrate_;
        if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
          to_bitField0_ |= 0x00000004;
        }
        result.isTimedDrop_ = isTimedDrop_;
        if (((from_bitField0_ & 0x00000008) == 0x00000008)) {
          to_bitField0_ |= 0x00000008;
        }
        result.accountId_ = accountId_;
        if (((from_bitField0_ & 0x00000010) == 0x00000010)) {
          to_bitField0_ |= 0x00000010;
        }
        result.origin_ = origin_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof skadistats.clarity.wire.s2.proto.S2DotaMatchMetadata.CLobbyTimedRewardDetails) {
          return mergeFrom((skadistats.clarity.wire.s2.proto.S2DotaMatchMetadata.CLobbyTimedRewardDetails)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(skadistats.clarity.wire.s2.proto.S2DotaMatchMetadata.CLobbyTimedRewardDetails other) {
        if (other == skadistats.clarity.wire.s2.proto.S2DotaMatchMetadata.CLobbyTimedRewardDetails.getDefaultInstance()) return this;
        if (other.hasItemDefIndex()) {
          setItemDefIndex(other.getItemDefIndex());
        }
        if (other.hasIsSupplyCrate()) {
          setIsSupplyCrate(other.getIsSupplyCrate());
        }
        if (other.hasIsTimedDrop()) {
          setIsTimedDrop(other.getIsTimedDrop());
        }
        if (other.hasAccountId()) {
          setAccountId(other.getAccountId());
        }
        if (other.hasOrigin()) {
          setOrigin(other.getOrigin());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        skadistats.clarity.wire.s2.proto.S2DotaMatchMetadata.CLobbyTimedRewardDetails parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (skadistats.clarity.wire.s2.proto.S2DotaMatchMetadata.CLobbyTimedRewardDetails) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private int itemDefIndex_ ;
      /**
       * <code>optional uint32 item_def_index = 2;</code>
       */
      public boolean hasItemDefIndex() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>optional uint32 item_def_index = 2;</code>
       */
      public int getItemDefIndex() {
        return itemDefIndex_;
      }
      /**
       * <code>optional uint32 item_def_index = 2;</code>
       */
      public Builder setItemDefIndex(int value) {
        bitField0_ |= 0x00000001;
        itemDefIndex_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional uint32 item_def_index = 2;</code>
       */
      public Builder clearItemDefIndex() {
        bitField0_ = (bitField0_ & ~0x00000001);
        itemDefIndex_ = 0;
        onChanged();
        return this;
      }

      private boolean isSupplyCrate_ ;
      /**
       * <code>optional bool is_supply_crate = 3;</code>
       */
      public boolean hasIsSupplyCrate() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>optional bool is_supply_crate = 3;</code>
       */
      public boolean getIsSupplyCrate() {
        return isSupplyCrate_;
      }
      /**
       * <code>optional bool is_supply_crate = 3;</code>
       */
      public Builder setIsSupplyCrate(boolean value) {
        bitField0_ |= 0x00000002;
        isSupplyCrate_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional bool is_supply_crate = 3;</code>
       */
      public Builder clearIsSupplyCrate() {
        bitField0_ = (bitField0_ & ~0x00000002);
        isSupplyCrate_ = false;
        onChanged();
        return this;
      }

      private boolean isTimedDrop_ ;
      /**
       * <code>optional bool is_timed_drop = 4;</code>
       */
      public boolean hasIsTimedDrop() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }
      /**
       * <code>optional bool is_timed_drop = 4;</code>
       */
      public boolean getIsTimedDrop() {
        return isTimedDrop_;
      }
      /**
       * <code>optional bool is_timed_drop = 4;</code>
       */
      public Builder setIsTimedDrop(boolean value) {
        bitField0_ |= 0x00000004;
        isTimedDrop_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional bool is_timed_drop = 4;</code>
       */
      public Builder clearIsTimedDrop() {
        bitField0_ = (bitField0_ & ~0x00000004);
        isTimedDrop_ = false;
        onChanged();
        return this;
      }

      private int accountId_ ;
      /**
       * <code>optional uint32 account_id = 5;</code>
       */
      public boolean hasAccountId() {
        return ((bitField0_ & 0x00000008) == 0x00000008);
      }
      /**
       * <code>optional uint32 account_id = 5;</code>
       */
      public int getAccountId() {
        return accountId_;
      }
      /**
       * <code>optional uint32 account_id = 5;</code>
       */
      public Builder setAccountId(int value) {
        bitField0_ |= 0x00000008;
        accountId_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional uint32 account_id = 5;</code>
       */
      public Builder clearAccountId() {
        bitField0_ = (bitField0_ & ~0x00000008);
        accountId_ = 0;
        onChanged();
        return this;
      }

      private int origin_ ;
      /**
       * <code>optional uint32 origin = 6;</code>
       */
      public boolean hasOrigin() {
        return ((bitField0_ & 0x00000010) == 0x00000010);
      }
      /**
       * <code>optional uint32 origin = 6;</code>
       */
      public int getOrigin() {
        return origin_;
      }
      /**
       * <code>optional uint32 origin = 6;</code>
       */
      public Builder setOrigin(int value) {
        bitField0_ |= 0x00000010;
        origin_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional uint32 origin = 6;</code>
       */
      public Builder clearOrigin() {
        bitField0_ = (bitField0_ & ~0x00000010);
        origin_ = 0;
        onChanged();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:CLobbyTimedRewardDetails)
    }

    static {
      defaultInstance = new CLobbyTimedRewardDetails(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:CLobbyTimedRewardDetails)
  }

  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_CDOTAMatchMetadataFile_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_CDOTAMatchMetadataFile_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_CDOTAMatchMetadata_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_CDOTAMatchMetadata_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_CDOTAMatchMetadata_Team_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_CDOTAMatchMetadata_Team_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_CDOTAMatchMetadata_Team_PlayerKill_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_CDOTAMatchMetadata_Team_PlayerKill_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_CDOTAMatchMetadata_Team_Player_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_CDOTAMatchMetadata_Team_Player_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_CDOTAMatchPrivateMetadata_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_CDOTAMatchPrivateMetadata_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_CDOTAMatchPrivateMetadata_Kill_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_CDOTAMatchPrivateMetadata_Kill_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_CLobbyTimedRewardDetails_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_CLobbyTimedRewardDetails_fieldAccessorTable;

  public static com.google.protobuf.Descriptors.FileDescriptor
      getDescriptor() {
    return descriptor;
  }
  private static com.google.protobuf.Descriptors.FileDescriptor
      descriptor;
  static {
    java.lang.String[] descriptorData = {
      "\n\034s2_dota_match_metadata.proto\032\030s2_base_" +
      "gcmessages.proto\"|\n\026CDOTAMatchMetadataFi" +
      "le\022\017\n\007version\030\001 \002(\005\022\020\n\010match_id\030\002 \002(\004\022%\n" +
      "\010metadata\030\003 \001(\0132\023.CDOTAMatchMetadata\022\030\n\020" +
      "private_metadata\030\004 \001(\014\"\325\004\n\022CDOTAMatchMet" +
      "adata\022\'\n\005teams\030\001 \003(\0132\030.CDOTAMatchMetadat" +
      "a.Team\022/\n\014item_rewards\030\002 \003(\0132\031.CLobbyTim" +
      "edRewardDetails\032\344\003\n\004Team\022\021\n\tdota_team\030\001 " +
      "\001(\r\0220\n\007players\030\002 \003(\0132\037.CDOTAMatchMetadat" +
      "a.Team.Player\022\030\n\020graph_experience\030\003 \003(\002\022",
      "\031\n\021graph_gold_earned\030\004 \003(\002\022\027\n\017graph_net_" +
      "worth\030\005 \003(\002\022\025\n\rcm_first_pick\030\006 \001(\010\022\034\n\024cm" +
      "_captain_player_id\030\007 \001(\r\022\017\n\007cm_bans\030\010 \003(" +
      "\r\022\020\n\010cm_picks\030\t \003(\r\022\022\n\ncm_penalty\030\n \001(\r\032" +
      "0\n\nPlayerKill\022\023\n\013victim_slot\030\001 \001(\r\022\r\n\005co" +
      "unt\030\002 \001(\r\032\252\001\n\006Player\022\022\n\naccount_id\030\001 \001(\r" +
      "\022\030\n\020ability_upgrades\030\002 \003(\r\022\023\n\013player_slo" +
      "t\030\003 \001(\r\022)\n\023equipped_econ_items\030\004 \003(\0132\014.C" +
      "SOEconItem\0222\n\005kills\030\005 \003(\0132#.CDOTAMatchMe" +
      "tadata.Team.PlayerKill\"\304\001\n\031CDOTAMatchPri",
      "vateMetadata\022.\n\005kills\030\001 \003(\0132\037.CDOTAMatch" +
      "PrivateMetadata.Kill\022\023\n\013test_string\030d \001(" +
      "\t\032b\n\004Kill\022\021\n\ttimestamp\030\001 \001(\005\022\026\n\016killer_h" +
      "ero_id\030\002 \001(\r\022\026\n\016victim_hero_id\030\003 \001(\r\022\027\n\017" +
      "assist_hero_ids\030\004 \003(\r\"\206\001\n\030CLobbyTimedRew" +
      "ardDetails\022\026\n\016item_def_index\030\002 \001(\r\022\027\n\017is" +
      "_supply_crate\030\003 \001(\010\022\025\n\ris_timed_drop\030\004 \001" +
      "(\010\022\022\n\naccount_id\030\005 \001(\r\022\016\n\006origin\030\006 \001(\rB:" +
      "\n skadistats.clarity.wire.s2.protoB\023S2Do" +
      "taMatchMetadata\200\001\000"
    };
    com.google.protobuf.Descriptors.FileDescriptor.InternalDescriptorAssigner assigner =
        new com.google.protobuf.Descriptors.FileDescriptor.    InternalDescriptorAssigner() {
          public com.google.protobuf.ExtensionRegistry assignDescriptors(
              com.google.protobuf.Descriptors.FileDescriptor root) {
            descriptor = root;
            return null;
          }
        };
    com.google.protobuf.Descriptors.FileDescriptor
      .internalBuildGeneratedFileFrom(descriptorData,
        new com.google.protobuf.Descriptors.FileDescriptor[] {
          skadistats.clarity.wire.s2.proto.S2BaseGcMessages.getDescriptor(),
        }, assigner);
    internal_static_CDOTAMatchMetadataFile_descriptor =
      getDescriptor().getMessageTypes().get(0);
    internal_static_CDOTAMatchMetadataFile_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessage.FieldAccessorTable(
        internal_static_CDOTAMatchMetadataFile_descriptor,
        new java.lang.String[] { "Version", "MatchId", "Metadata", "PrivateMetadata", });
    internal_static_CDOTAMatchMetadata_descriptor =
      getDescriptor().getMessageTypes().get(1);
    internal_static_CDOTAMatchMetadata_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessage.FieldAccessorTable(
        internal_static_CDOTAMatchMetadata_descriptor,
        new java.lang.String[] { "Teams", "ItemRewards", });
    internal_static_CDOTAMatchMetadata_Team_descriptor =
      internal_static_CDOTAMatchMetadata_descriptor.getNestedTypes().get(0);
    internal_static_CDOTAMatchMetadata_Team_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessage.FieldAccessorTable(
        internal_static_CDOTAMatchMetadata_Team_descriptor,
        new java.lang.String[] { "DotaTeam", "Players", "GraphExperience", "GraphGoldEarned", "GraphNetWorth", "CmFirstPick", "CmCaptainPlayerId", "CmBans", "CmPicks", "CmPenalty", });
    internal_static_CDOTAMatchMetadata_Team_PlayerKill_descriptor =
      internal_static_CDOTAMatchMetadata_Team_descriptor.getNestedTypes().get(0);
    internal_static_CDOTAMatchMetadata_Team_PlayerKill_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessage.FieldAccessorTable(
        internal_static_CDOTAMatchMetadata_Team_PlayerKill_descriptor,
        new java.lang.String[] { "VictimSlot", "Count", });
    internal_static_CDOTAMatchMetadata_Team_Player_descriptor =
      internal_static_CDOTAMatchMetadata_Team_descriptor.getNestedTypes().get(1);
    internal_static_CDOTAMatchMetadata_Team_Player_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessage.FieldAccessorTable(
        internal_static_CDOTAMatchMetadata_Team_Player_descriptor,
        new java.lang.String[] { "AccountId", "AbilityUpgrades", "PlayerSlot", "EquippedEconItems", "Kills", });
    internal_static_CDOTAMatchPrivateMetadata_descriptor =
      getDescriptor().getMessageTypes().get(2);
    internal_static_CDOTAMatchPrivateMetadata_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessage.FieldAccessorTable(
        internal_static_CDOTAMatchPrivateMetadata_descriptor,
        new java.lang.String[] { "Kills", "TestString", });
    internal_static_CDOTAMatchPrivateMetadata_Kill_descriptor =
      internal_static_CDOTAMatchPrivateMetadata_descriptor.getNestedTypes().get(0);
    internal_static_CDOTAMatchPrivateMetadata_Kill_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessage.FieldAccessorTable(
        internal_static_CDOTAMatchPrivateMetadata_Kill_descriptor,
        new java.lang.String[] { "Timestamp", "KillerHeroId", "VictimHeroId", "AssistHeroIds", });
    internal_static_CLobbyTimedRewardDetails_descriptor =
      getDescriptor().getMessageTypes().get(3);
    internal_static_CLobbyTimedRewardDetails_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessage.FieldAccessorTable(
        internal_static_CLobbyTimedRewardDetails_descriptor,
        new java.lang.String[] { "ItemDefIndex", "IsSupplyCrate", "IsTimedDrop", "AccountId", "Origin", });
    skadistats.clarity.wire.s2.proto.S2BaseGcMessages.getDescriptor();
  }

  // @@protoc_insertion_point(outer_class_scope)
}
