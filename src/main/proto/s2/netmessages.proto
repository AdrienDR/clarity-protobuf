option java_package = "skadistats.clarity.wire.s2.proto";
option java_outer_classname = "S2NetMessages";

import "networkbasetypes.proto";

option cc_generic_services = false;

enum SVC_Messages {
	svc_ServerInfo = 40;
	svc_FlattenedSerializer = 41;
	svc_ClassInfo = 42;
	//svc_SetPause = 43;
	svc_CreateStringTable = 44;
	svc_UpdateStringTable = 45;
	svc_VoiceInit = 46;
	svc_VoiceData = 47;
    //svc_Print = 48;
    svc_Sounds = 49;
	svc_SetView = 50;
	svc_ClearAllStringTables = 51;
    //svc_CmdKeyValues = 52;
    //svc_BSPDecal = 53;
    //svc_SplitScreen = 54;
	svc_PacketEntities = 55;
    //svc_Prefetch = 56;
    //svc_Menu = 57;
    //svc_GetCvarValue = 58;
	//svc_StopSound = 59;
    //svc_PeerList = 60;
    //svc_PacketReliable = 61;
	//svc_UserMessage = 62;
	//svc_SendTable = 63;
	//svc_GameEvent = 67;
	svc_TempEntities = 68;
    //svc_GameEventList = 69;
    svc_FullFrameSplit = 70;
}

enum VoiceDataFormat_t {
	VOICEDATA_FORMAT_STEAM = 0;
	VOICEDATA_FORMAT_ENGINE = 1;
}

message CSVCMsg_ServerInfo {
	optional int32 protocol = 1;
	optional int32 server_count = 2;
	optional bool is_dedicated = 3;
	optional bool is_hltv = 4;
	optional bool is_replay = 5;
	optional int32 c_os = 6;
	optional fixed32 map_crc = 7;
	optional fixed32 client_crc = 8;
	optional fixed32 string_table_crc = 9;
	optional int32 max_clients = 10;
	optional int32 max_classes = 11;
	optional int32 player_slot = 12;
	optional float tick_interval = 13;
	optional string game_dir = 14;
	optional string map_name = 15;
	optional string sky_name = 16;
	optional string host_name = 17;
	optional string addon_name = 18;
	optional CSVCMsg_GameSessionConfiguration game_session_config = 19;
	optional bytes game_session_manifest = 20;
}

message CSVCMsg_ClassInfo {
	message class_t {
		optional int32 class_id = 1;
		optional string data_table_name = 2;
		optional string class_name = 3;
	}

	optional bool create_on_client = 1;
	repeated CSVCMsg_ClassInfo.class_t classes = 2;
}

message CSVCMsg_VoiceInit {
	optional int32 quality = 1;
	optional string codec = 2;
	optional int32 version = 3 [default = 0];
}

message CSVCMsg_Sounds {
	message sounddata_t {
		optional sint32 origin_x = 1;
		optional sint32 origin_y = 2;
		optional sint32 origin_z = 3;
		optional uint32 volume = 4;
		optional float delay_value = 5;
		optional int32 sequence_number = 6;
		optional int32 entity_index = 7;
		optional int32 channel = 8;
		optional int32 pitch = 9;
		optional int32 flags = 10;
		optional uint32 sound_num = 11;
		optional fixed32 sound_num_handle = 12;
		optional int32 speaker_entity = 13;
		optional int32 random_seed = 14;
		optional int32 sound_level = 15;
		optional bool is_sentence = 16;
		optional bool is_ambient = 17;
		optional uint32 guid = 18;
		optional fixed64 sound_resource_id = 19;
	}

	optional bool reliable_sound = 1;
	repeated CSVCMsg_Sounds.sounddata_t sounds = 2;
}

message CSVCMsg_SetView {
	optional int32 entity_index = 1;
	optional int32 slot = 2;
}

message CSVCMsg_SendTable {
	message sendprop_t {
		optional int32 type = 1;
		optional string var_name = 2;
		optional int32 flags = 3;
		optional int32 priority = 4;
		optional string dt_name = 5;
		optional int32 num_elements = 6;
		optional float low_value = 7;
		optional float high_value = 8;
		optional int32 num_bits = 9;
	}

	optional bool is_end = 1;
	optional string net_table_name = 2;
	optional bool needs_decoder = 3;
	repeated CSVCMsg_SendTable.sendprop_t props = 4;
}

message CSVCMsg_TempEntities {
	optional bool reliable = 1;
	optional int32 num_entries = 2;
	optional bytes entity_data = 3;
}

message CSVCMsg_CreateStringTable {
	optional string name = 1;
	optional int32 num_entries = 2;
	optional bool user_data_fixed_size = 3;
	optional int32 user_data_size = 4;
	optional int32 user_data_size_bits = 5;
	optional int32 flags = 6;
	optional bytes string_data = 7;
	optional int32 uncompressed_size = 8;
	optional bool data_compressed = 9;
}

message CSVCMsg_UpdateStringTable {
	optional int32 table_id = 1;
	optional int32 num_changed_entries = 2;
	optional bytes string_data = 3;
}

message CMsgVoiceAudio {
	optional VoiceDataFormat_t format = 1 [default = VOICEDATA_FORMAT_STEAM];
	optional bytes voice_data = 2;
	optional int32 sequence_bytes = 3;
	optional uint32 section_number = 4;
	optional uint32 sample_rate = 5;
	optional uint32 uncompressed_sample_offset = 6;
}

message CSVCMsg_VoiceData {
	optional CMsgVoiceAudio audio = 1;
	optional int32 client = 2;
	optional bool proximity = 3;
	optional fixed64 xuid = 4;
	optional int32 audible_mask = 5;
	optional uint32 tick = 6;
}

message CSVCMsg_FullFrameSplit {
	optional int32 tick = 1;
	optional int32 section = 2;
	optional int32 total = 3;
	optional bytes data = 4;
}

message CSVCMsg_ClearAllStringTables {
	optional string mapname = 1;
	optional uint32 map_crc = 2;
}

message ProtoFlattenedSerializerField_t {
	optional int32 var_type_sym = 1;
	optional int32 var_name_sym = 2;
	optional int32 bit_count = 3;
	optional float low_value = 4;
	optional float high_value = 5;
	optional int32 encode_flags = 6;
	optional int32 field_serializer_name_sym = 7;
	optional int32 field_serializer_version = 8;
	optional int32 send_node_sym = 9;
}

message ProtoFlattenedSerializer_t {
	optional int32 serializer_name_sym = 1;
	optional int32 serializer_version = 2;
	repeated int32 fields_index = 3;
}

message CSVCMsg_FlattenedSerializer {
	repeated ProtoFlattenedSerializer_t serializers = 1;
	repeated string symbols = 2;
	repeated ProtoFlattenedSerializerField_t fields = 3;
}

